<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PHP的?:与??</title>
      <link href="/2020/05/16/php-ternary-null-coalescing-operator/"/>
      <url>/2020/05/16/php-ternary-null-coalescing-operator/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>适当的使用三元运算符<code>?:</code>和NULL合并运算符<code>??</code>可以替换不少<code>if ... else ...</code>。</p><a id="more"></a><hr><h4 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h4><p>表达式 (expr1) ? (expr2) : (expr3) 在 expr1 求值为 TRUE 时的值为 expr2，在 expr1 求值为 FALSE 时的值为 expr3。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Example usage for: Ternary Operator</span></span><br><span class="line">$action = (<span class="keyword">empty</span>($_POST[<span class="string">'action'</span>])) ? <span class="string">'default'</span> : $_POST[<span class="string">'action'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// The above is identical to this if/else statement</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">'action'</span>])) &#123;</span><br><span class="line">    $action = <span class="string">'default'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $action = $_POST[<span class="string">'action'</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="#891717">自 PHP 5.3 起，可以省略三元运算符中间那部分。表达式 expr1 ?: expr3 在 expr1 求值为 TRUE 时返回 expr1，否则返回 expr3。</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当$_POST['action']为null或''，则$action == 'default'</span></span><br><span class="line"><span class="comment">// 当$_POST['action'=不为空则$action == $_POST['action']</span></span><br><span class="line">$action = $_POST[<span class="string">'action'</span>] ?: <span class="string">'default'</span>;</span><br></pre></td></tr></table></figure><p><b><font color="#891717">Note: 注意三元运算符是个语句，因此其求值不是变量，而是语句的结果。如果想通过引用返回一个变量这点就很重要。在一个通过引用返回的函数中语句 <code>return $var == 42 ? $a : $b;</code> 将不起作用，以后的 PHP 版本会为此发出一条警告。</font></b></p><hr><h4 id="NULL合并运算符"><a href="#NULL合并运算符" class="headerlink" title="NULL合并运算符"></a>NULL合并运算符</h4><p>PHP7开始支持NULL合并运算符<code>??</code>。当 expr1 为 NULL，表达式 (expr1) ?? (expr2) 等同于 expr2，否则为 expr1。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Example usage for: Null Coalesce Operator</span></span><br><span class="line">$action = $_POST[<span class="string">'action'</span>] ?? <span class="string">'default'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// The above is identical to this if/else statement</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'action'</span>])) &#123;</span><br><span class="line">    $action = $_POST[<span class="string">'action'</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $action = <span class="string">'default'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><b><font color="#891717">Note: 请注意：NULL 合并运算符是一个表达式，产生的也是表达式结果，而不是变量。 返回引用变量时需要强调这一点。 因此，在返回引用的函数里就无法使用这样的语句: <code>return $foo ?? $bar;</code>，还会提示警告。</font></b></p><hr><h4 id="三元运算符和NULL合并运算符之间的区别"><a href="#三元运算符和NULL合并运算符之间的区别" class="headerlink" title="三元运算符和NULL合并运算符之间的区别"></a>三元运算符和NULL合并运算符之间的区别</h4><ul><li>三元运算符是<code>左关联</code>的；而NULL合并运算符是<code>右关联</code>的。</li><li>三元运算符检查值<code>是否为true</code>；而NULL合并运算符检查该值<code>是否为Null</code>。</li><li>如果要执行更多迭代，则发现<code>NULL合并</code>运算符比三元运算符<code>更快</code>。</li><li><code>NULL合并</code>运算符可以提供<code>更好的可读性</code>。</li></ul><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvbGFuZ3VhZ2Uub3BlcmF0b3JzLmNvbXBhcmlzb24ucGhwI2xhbmd1YWdlLm9wZXJhdG9ycy5jb21wYXJpc29uLnRlcm5hcnk=" title="https://www.php.net/manual/zh/language.operators.comparison.php#language.operators.comparison.ternary">三元运算符<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvbGFuZ3VhZ2Uub3BlcmF0b3JzLmNvbXBhcmlzb24ucGhwI2xhbmd1YWdlLm9wZXJhdG9ycy5jb21wYXJpc29uLmNvYWxlc2Nl" title="https://www.php.net/manual/zh/language.operators.comparison.php#language.operators.comparison.coalesce">NULL合并运算符<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLmNuL3BocC13ZWl6aWppYW9jaGVuZy00MTUwMDYuaHRtbA==" title="https://www.php.cn/php-weizijiaocheng-415006.html">PHP中三元运算符和NULL合并运算符的简单比较<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHPStorm配置Xdebug断点调试</title>
      <link href="/2020/05/03/phpstorm-xdebug/"/>
      <url>/2020/05/03/phpstorm-xdebug/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>厌倦了通过<code>var_dump()</code>、<code>var_export()</code>、<code>print_r()</code>等命令加<code>exit()</code>命令调试代码可以使用<strong>Xdebug</strong>来调试。</p><a id="more"></a><hr><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>XDebug调试是一种C/S结构，Client是PHP-Xdebug插件，Server是我们的IDE（或者各种Editor插件），中间通过DBGp协议通信。PHP脚本在运行时，由Xdebug插件向IDE发起连接，将调试信息发送给IDE，并通过DBGp协议进行互动。详细结束可参考<span class="exturl" data-url="aHR0cHM6Ly94ZGVidWcub3JnL2RvY3MvcmVtb3Rl" title="https://xdebug.org/docs/remote">官网说明<i class="fa fa-external-link"></i></span>。</p><hr><h4 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h4><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p>下载Xdebug，先打印phpinfo()信息，然后<code>右键-&gt;源码</code>复制源码信息到<span class="exturl" data-url="aHR0cHM6Ly94ZGVidWcub3JnL3dpemFyZA==" title="https://xdebug.org/wizard">https://xdebug.org/wizard<i class="fa fa-external-link"></i></span>，点击<code>分析我的phpinfo()输出</code>可以看到当前php环境对应的Xdebug版本，点击下载即可。</p><p>下载完成后根据提示放入对应的php安装目录的<code>ext</code>目录下，如<code>G:\Nginx+php+mysql\php-7.4.3-nts-Win32-vc15-x64\ext\php_xdebug-2.9.5-7.4-vc15-nts-x86_64.dll</code>。</p><h5 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h5><p>在php.ini文件中进行Xdebug相关设置，相关配置说明<span class="exturl" data-url="aHR0cHM6Ly94ZGVidWcub3JnL2RvY3MvYWxsX3NldHRpbmdz" title="https://xdebug.org/docs/all_settings">参考官网<i class="fa fa-external-link"></i></span></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[XDebug]</span></span><br><span class="line"><span class="attr">xdebug.profiler_enable</span>=<span class="literal">on</span> <span class="comment">; 启用性能检测分析</span></span><br><span class="line"><span class="attr">xdebug.auto_trace</span>=<span class="literal">on</span>      <span class="comment">; 启用代码自动跟踪</span></span><br><span class="line"><span class="attr">xdebug.collect_params</span>=<span class="literal">on</span>  <span class="comment">; 允许收集传递给函数的参数变量</span></span><br><span class="line"><span class="attr">xdebug.collect_return</span>=<span class="literal">on</span>  <span class="comment">; 允许收集函数调用的返回值</span></span><br><span class="line"><span class="attr">xdebug.profiler_output_dir</span>=<span class="string">"G:\Nginx+php+mysql\tmp\xdebug"</span> <span class="comment">; 指定性能分析文件的存放目录</span></span><br><span class="line"><span class="attr">xdebug.trace_output_dir</span>=<span class="string">"G:\Nginx+php+mysql\tmp\xdebug"</span>    <span class="comment">; 指定堆栈跟踪文件的存放目录</span></span><br><span class="line"><span class="attr">zend_extension</span> = <span class="string">"G:\Nginx+php+mysql\php-7.4.3-nts-Win32-vc15-x64\ext\php_xdebug-2.9.5-7.4-vc15-nts-x86_64.dll"</span> <span class="comment"># 扩展文件绝对路径</span></span><br><span class="line"><span class="attr">xdebug.remote_enable</span>=<span class="literal">on</span>     <span class="comment">; 打开远程调试开关</span></span><br><span class="line"><span class="attr">xdebug.remote_handler</span>=dbgp  <span class="comment">; </span></span><br><span class="line"><span class="attr">xdebug.remote_mode</span>=req      <span class="comment">; </span></span><br><span class="line"><span class="attr">xdebug.remote_port</span>=<span class="number">9100</span>     <span class="comment">; 此处为客户端监听端口，即debug信息通过此端口传递给客户端，如PHPStorm，所以不要与服务器监听的端口冲突，比如Apache或Nginx</span></span><br><span class="line"><span class="attr">xdebug.idekey</span>=<span class="string">"PHPSTORM"</span>    <span class="comment">;</span></span><br></pre></td></tr></table></figure><hr><h4 id="配置PHPStorm"><a href="#配置PHPStorm" class="headerlink" title="配置PHPStorm"></a>配置PHPStorm</h4><h5 id="添加PHP-Debug-Servers"><a href="#添加PHP-Debug-Servers" class="headerlink" title="添加PHP Debug Servers"></a>添加PHP Debug Servers</h5><p>点击<code>File -&gt; Settings -&gt; Languages &amp; Frameworks -&gt; PHP -&gt; Debug -&gt; Servers</code>，点击<code>+</code>号添加站点地址和端口以及Debugger类型，如图<br><img src="/2020/05/03/phpstorm-xdebug/20200503223425.png" alt><br>点击<code>apply</code>及<code>OK</code>。</p><h5 id="添加PHP-Web-Page"><a href="#添加PHP-Web-Page" class="headerlink" title="添加PHP Web Page"></a>添加PHP Web Page</h5><p>点击<code>Run -&gt; Edit Configurations</code>，点击<code>+</code>号选择<code>PHP Web Page</code>，选择上面添加的服务，然后设置入口文件，如<code>/index.php</code>，配置如图<br><img src="/2020/05/03/phpstorm-xdebug/20200503224221.png" alt></p><hr><h4 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h4><p>PHPStorm选择添加的<code>PHP Web Page</code>，设置好断点，点击绿色小虫虫图标就可以看到文件中加载的变量信息了，如图<br><img src="/2020/05/03/phpstorm-xdebug/20200503224637.png" alt></p><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAxOTgxMTI5OA==" title="https://segmentfault.com/a/1190000019811298">Phpstorm+Xdebug配置断点调试<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAxMTMzMjAyMQ==" title="https://segmentfault.com/a/1190000011332021">PHP xdebug 调试工具安装与使用<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> PHPStorm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter RESTful API实现</title>
      <link href="/2020/04/17/codeigniter-restful/"/>
      <url>/2020/04/17/codeigniter-restful/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>利用一个库文件、一个配置文件以及一个控制器就可以实现完整的CodeIgniter开发RESTful架构API的一个工具。</p><a id="more"></a><hr><h4 id="认识RESTful"><a href="#认识RESTful" class="headerlink" title="认识RESTful"></a>认识RESTful</h4><p>参考<strong>阮一峰</strong>先生的三篇文章: <span class="exturl" data-url="aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMTEvMDkvcmVzdGZ1bC5odG1s" title="http://www.ruanyifeng.com/blog/2011/09/restful.html">理解RESTful架构<i class="fa fa-external-link"></i></span>、<span class="exturl" data-url="aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMTQvMDUvcmVzdGZ1bF9hcGkuaHRtbA==" title="http://www.ruanyifeng.com/blog/2014/05/restful_api.html">RESTful API 设计指南<i class="fa fa-external-link"></i></span>、<span class="exturl" data-url="aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMTgvMTAvcmVzdGZ1bC1hcGktYmVzdC1wcmFjdGljZXMuaHRtbA==" title="http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html">RESTful API 最佳实践<i class="fa fa-external-link"></i></span></p><h4 id="实现REST-API"><a href="#实现REST-API" class="headerlink" title="实现REST API"></a>实现REST API</h4><h5 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h5><ol><li>下载<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nocmlza2FjZXJndWlzL2NvZGVpZ25pdGVyLXJlc3RzZXJ2ZXIvcmVsZWFzZXMvdGFnLzMuMC4w" title="https://github.com/chriskacerguis/codeigniter-restserver/releases/tag/3.0.0">codeigniter-restserver<i class="fa fa-external-link"></i></span>，该版本为<code>3.0.0</code>版本，最新版本<code>4.0.0</code>的安装方法可参考<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nocmlza2FjZXJndWlzL2NvZGVpZ25pdGVyLXJlc3RzZXJ2ZXI=" title="https://github.com/chriskacerguis/codeigniter-restserver">https://github.com/chriskacerguis/codeigniter-restserver<i class="fa fa-external-link"></i></span>。</li><li>将<code>3.0.0</code>版本下载后解压会看到<code>libraries</code>目录下有两个文件(一个库文件、一个控制器文件)<code>Format.php</code>和<code>REST_Controller.php</code>，移动到CI中的<code>application/libraries</code>目录下。</li><li>将解压目录下<code>config</code>目录下的<code>rest.php</code>文件移至CI的<code>application/config</code>目录下。</li></ol><p>将三个文件拷贝到指定目录后就配置完了。</p><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><p>写一个漏洞百出的<code>^_^</code>Blog控制器:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">defined(<span class="string">'BASEPATH'</span>) <span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">"No direct script access allowed"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> APPPATH . <span class="string">'libraries/REST_Controller.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Blog</span> <span class="keyword">extends</span> <span class="title">REST_Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::__construct();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;load-&gt;model(<span class="string">'blog_model'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 新建资源</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index_post</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $input = <span class="keyword">$this</span>-&gt;post();</span><br><span class="line">        $result = <span class="keyword">$this</span>-&gt;blog_model-&gt;add_blog($input);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;response([</span><br><span class="line">            <span class="string">'ret'</span> =&gt; REST_Controller::HTTP_OK,</span><br><span class="line">            <span class="string">'msg'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">            <span class="string">'data'</span> =&gt; [</span><br><span class="line">                <span class="string">'code'</span> =&gt; SUCCESS,</span><br><span class="line">                <span class="string">'message'</span> =&gt; <span class="string">'Blog create successfully.'</span>,</span><br><span class="line">            ],</span><br><span class="line">        ], REST_Controller::HTTP_OK);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取资源列表</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index_get</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $page = <span class="keyword">$this</span>-&gt;get(<span class="string">'page'</span>) ?: <span class="number">1</span>;</span><br><span class="line">        $limit = <span class="keyword">$this</span>-&gt;get(<span class="string">'limit'</span>) ?: <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        $result = <span class="keyword">$this</span>-&gt;blog_model-&gt;get_list($limit, $page);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;response([</span><br><span class="line">            <span class="string">'ret'</span> =&gt; REST_Controller::HTTP_OK,</span><br><span class="line">            <span class="string">'msg'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">            <span class="string">'data'</span> =&gt; [</span><br><span class="line">                <span class="string">'code'</span> =&gt; SUCCESS,</span><br><span class="line">                <span class="string">'message'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">                <span class="string">'total'</span> =&gt; $result[<span class="string">'total'</span>],</span><br><span class="line">                <span class="string">'list'</span> =&gt; $result[<span class="string">'list'</span>],</span><br><span class="line">            ],</span><br><span class="line">        ], REST_Controller::HTTP_OK);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取单个资源</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">id_get</span><span class="params">($id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $result = <span class="keyword">$this</span>-&gt;blog_model-&gt;get_by_id($id);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;response([</span><br><span class="line">            <span class="string">'ret'</span> =&gt; REST_Controller::HTTP_OK,</span><br><span class="line">            <span class="string">'msg'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">            <span class="string">'data'</span> =&gt; [</span><br><span class="line">                <span class="string">'code'</span> =&gt; SUCCESS,</span><br><span class="line">                <span class="string">'message'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">                <span class="string">'info'</span> =&gt; $result,</span><br><span class="line">            ],</span><br><span class="line">        ], REST_Controller::HTTP_OK);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新单个资源</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">id_put</span><span class="params">($id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $where[<span class="string">'blog_id'</span>] = $id;</span><br><span class="line">        $input = <span class="keyword">$this</span>-&gt;put();</span><br><span class="line">        $result = <span class="keyword">$this</span>-&gt;blog_model-&gt;update_blog($input, $where); <span class="comment">// 成功返回true</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;response([</span><br><span class="line">            <span class="string">'ret'</span> =&gt; REST_Controller::HTTP_OK,</span><br><span class="line">            <span class="string">'msg'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">            <span class="string">'data'</span> =&gt; [</span><br><span class="line">                <span class="string">'code'</span> =&gt; SUCCESS,</span><br><span class="line">                <span class="string">'message'</span> =&gt; <span class="string">'Blog update successfully.'</span>,</span><br><span class="line">            ],</span><br><span class="line">        ], REST_Controller::HTTP_OK);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>/api/blog</code>获取列表接口返回：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"ret"</span>: <span class="number">200</span>,</span><br><span class="line">  <span class="attr">"msg"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"data"</span>: &#123;</span><br><span class="line">    <span class="attr">"code"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"message"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">"list"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"blog_id"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="attr">"blog_title"</span>: <span class="string">"咏鹅"</span>,</span><br><span class="line">        <span class="attr">"blog_description"</span>: <span class="string">"鹅鹅鹅，曲项向天歌，白毛浮绿水，红掌拨清波"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"blog_id"</span>: <span class="string">"2"</span>,</span><br><span class="line">        <span class="attr">"blog_title"</span>: <span class="string">"春晓"</span>,</span><br><span class="line">        <span class="attr">"blog_description"</span>: <span class="string">"春眠不觉晓，处处闻啼鸟。夜来风雨声，花落知多少。"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"blog_id"</span>: <span class="string">"3"</span>,</span><br><span class="line">        <span class="attr">"blog_title"</span>: <span class="string">"登鹳雀楼"</span>,</span><br><span class="line">        <span class="attr">"blog_description"</span>: <span class="string">"白日依山尽，黄河入海流。欲穷千里目，更上一层楼。"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>api/blog/3</code>获取单个接口返回：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"ret"</span>: <span class="number">200</span>,</span><br><span class="line">  <span class="attr">"msg"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"data"</span>: &#123;</span><br><span class="line">    <span class="attr">"code"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"message"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"info"</span>: &#123;</span><br><span class="line">      <span class="attr">"blog_id"</span>: <span class="string">"3"</span>,</span><br><span class="line">      <span class="attr">"blog_title"</span>: <span class="string">"登鹳雀楼"</span>,</span><br><span class="line">      <span class="attr">"blog_description"</span>: <span class="string">"白日依山尽，黄河入海流。欲穷千里目，更上一层楼。"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h5><h6 id="REST-Controller"><a href="#REST-Controller" class="headerlink" title="REST_Controller"></a>REST_Controller</h6><p><b><font color="#891717">HTTP status codes const</font></b></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> HTTP_CONTINUE = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_SWITCHING_PROTOCOLS = <span class="number">101</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_PROCESSING = <span class="number">102</span>;            <span class="comment">// RFC2518</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Success</span></span><br><span class="line"><span class="keyword">const</span> HTTP_OK = <span class="number">200</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_CREATED = <span class="number">201</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_ACCEPTED = <span class="number">202</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_NON_AUTHORITATIVE_INFORMATION = <span class="number">203</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_NO_CONTENT = <span class="number">204</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_RESET_CONTENT = <span class="number">205</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_PARTIAL_CONTENT = <span class="number">206</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_MULTI_STATUS = <span class="number">207</span>;          <span class="comment">// RFC4918</span></span><br><span class="line"><span class="keyword">const</span> HTTP_ALREADY_REPORTED = <span class="number">208</span>;      <span class="comment">// RFC5842</span></span><br><span class="line"><span class="keyword">const</span> HTTP_IM_USED = <span class="number">226</span>;               <span class="comment">// RFC3229</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Redirection</span></span><br><span class="line"><span class="keyword">const</span> HTTP_MULTIPLE_CHOICES = <span class="number">300</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_MOVED_PERMANENTLY = <span class="number">301</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_FOUND = <span class="number">302</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_SEE_OTHER = <span class="number">303</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_NOT_MODIFIED = <span class="number">304</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_USE_PROXY = <span class="number">305</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_RESERVED = <span class="number">306</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_TEMPORARY_REDIRECT = <span class="number">307</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_PERMANENTLY_REDIRECT = <span class="number">308</span>;  <span class="comment">// RFC7238</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Client Error</span></span><br><span class="line"><span class="keyword">const</span> HTTP_BAD_REQUEST = <span class="number">400</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_UNAUTHORIZED = <span class="number">401</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_PAYMENT_REQUIRED = <span class="number">402</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_FORBIDDEN = <span class="number">403</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_NOT_FOUND = <span class="number">404</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_METHOD_NOT_ALLOWED = <span class="number">405</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_NOT_ACCEPTABLE = <span class="number">406</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_PROXY_AUTHENTICATION_REQUIRED = <span class="number">407</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_REQUEST_TIMEOUT = <span class="number">408</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_CONFLICT = <span class="number">409</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_GONE = <span class="number">410</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_LENGTH_REQUIRED = <span class="number">411</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_PRECONDITION_FAILED = <span class="number">412</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_REQUEST_ENTITY_TOO_LARGE = <span class="number">413</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_REQUEST_URI_TOO_LONG = <span class="number">414</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_UNSUPPORTED_MEDIA_TYPE = <span class="number">415</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_REQUESTED_RANGE_NOT_SATISFIABLE = <span class="number">416</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_EXPECTATION_FAILED = <span class="number">417</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_I_AM_A_TEAPOT = <span class="number">418</span>;                                               <span class="comment">// RFC2324</span></span><br><span class="line"><span class="keyword">const</span> HTTP_UNPROCESSABLE_ENTITY = <span class="number">422</span>;                                        <span class="comment">// RFC4918</span></span><br><span class="line"><span class="keyword">const</span> HTTP_LOCKED = <span class="number">423</span>;                                                      <span class="comment">// RFC4918</span></span><br><span class="line"><span class="keyword">const</span> HTTP_FAILED_DEPENDENCY = <span class="number">424</span>;                                           <span class="comment">// RFC4918</span></span><br><span class="line"><span class="keyword">const</span> HTTP_RESERVED_FOR_WEBDAV_ADVANCED_COLLECTIONS_EXPIRED_PROPOSAL = <span class="number">425</span>;   <span class="comment">// RFC2817</span></span><br><span class="line"><span class="keyword">const</span> HTTP_UPGRADE_REQUIRED = <span class="number">426</span>;                                            <span class="comment">// RFC2817</span></span><br><span class="line"><span class="keyword">const</span> HTTP_PRECONDITION_REQUIRED = <span class="number">428</span>;                                       <span class="comment">// RFC6585</span></span><br><span class="line"><span class="keyword">const</span> HTTP_TOO_MANY_REQUESTS = <span class="number">429</span>;                                           <span class="comment">// RFC6585</span></span><br><span class="line"><span class="keyword">const</span> HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE = <span class="number">431</span>;                             <span class="comment">// RFC6585</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Server Error</span></span><br><span class="line"><span class="keyword">const</span> HTTP_INTERNAL_SERVER_ERROR = <span class="number">500</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_NOT_IMPLEMENTED = <span class="number">501</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_BAD_GATEWAY = <span class="number">502</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_SERVICE_UNAVAILABLE = <span class="number">503</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_GATEWAY_TIMEOUT = <span class="number">504</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_VERSION_NOT_SUPPORTED = <span class="number">505</span>;</span><br><span class="line"><span class="keyword">const</span> HTTP_VARIANT_ALSO_NEGOTIATES_EXPERIMENTAL = <span class="number">506</span>;                        <span class="comment">// RFC2295</span></span><br><span class="line"><span class="keyword">const</span> HTTP_INSUFFICIENT_STORAGE = <span class="number">507</span>;                                        <span class="comment">// RFC4918</span></span><br><span class="line"><span class="keyword">const</span> HTTP_LOOP_DETECTED = <span class="number">508</span>;                                               <span class="comment">// RFC5842</span></span><br><span class="line"><span class="keyword">const</span> HTTP_NOT_EXTENDED = <span class="number">510</span>;                                                <span class="comment">// RFC2774</span></span><br><span class="line"><span class="keyword">const</span> HTTP_NETWORK_AUTHENTICATION_REQUIRED = <span class="number">511</span>;</span><br></pre></td></tr></table></figure><p><b><font color="#891717">变量</font></b></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 默认的REST输出格式，必须在控制器中进行重新覆盖以便进行设置</span></span><br><span class="line"><span class="comment">// 一般客户端通过"Content-Type"来进行设置用不到此变量</span></span><br><span class="line"><span class="keyword">protected</span> $rest_format = <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在控制器中进行设置，用来设置某个方法['token_post' =&gt; ['level' =&gt; 10, 'limit' =&gt; 300]]</span></span><br><span class="line"><span class="comment"> * ①limit 每小时请求次数限制</span></span><br><span class="line"><span class="comment"> *②level 设置等级，小于某个等级将不验证token</span></span><br><span class="line"><span class="comment"> * ③log   是否将请求进行记录</span></span><br><span class="line"><span class="comment"> * ④key   是否使用token</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> $methods = [];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 支持的请求方法</span></span><br><span class="line"><span class="keyword">protected</span> $allowed_http_methods = [<span class="string">'get'</span>, <span class="string">'delete'</span>, <span class="string">'post'</span>, <span class="string">'put'</span>, <span class="string">'options'</span>, <span class="string">'patch'</span>, <span class="string">'head'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是一个对象，包含四个变量</span></span><br><span class="line"><span class="comment"> * body    请求体信息，可理解为请求参数</span></span><br><span class="line"><span class="comment"> * format  请求内容格式，在客户端通过Content-Type来设置，比如json、xml</span></span><br><span class="line"><span class="comment"> * method  请求方法</span></span><br><span class="line"><span class="comment"> * ssl     是否为https</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> $request = <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是一个对象，包含两个变量</span></span><br><span class="line"><span class="comment"> * format 响应内容格式</span></span><br><span class="line"><span class="comment"> * lang   响应内容语言</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> $response = <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * REST API的详细信息，包含五个变量</span></span><br><span class="line"><span class="comment"> * db            将请求写入日志或验证token时需要加载配置的数据库对象，否则使用系统使用已存在的数据库对象</span></span><br><span class="line"><span class="comment"> * key           token值</span></span><br><span class="line"><span class="comment"> * level         token等级</span></span><br><span class="line"><span class="comment"> * user_id       token对应的用户名，通过token来判断登录用户</span></span><br><span class="line"><span class="comment"> * ignore_limits token是否忽略限制</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> $rest = <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求参数</span></span><br><span class="line"><span class="keyword">protected</span> $_get_args = [];</span><br><span class="line"><span class="keyword">protected</span> $_post_args = [];</span><br><span class="line"><span class="keyword">protected</span> $_put_args = [];</span><br><span class="line"><span class="keyword">protected</span> $_delete_args = [];</span><br><span class="line"><span class="keyword">protected</span> $_patch_args = [];</span><br><span class="line"><span class="keyword">protected</span> $_head_args = [];</span><br><span class="line"><span class="keyword">protected</span> $_options_args = [];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询参数，即$this-&gt;input-&gt;get();</span></span><br><span class="line"><span class="keyword">protected</span> $_query_args = [];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求参数集合</span></span><br><span class="line"><span class="keyword">protected</span> $_args = [];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将请求写入日志后会返回insert id，用来更新本条记录</span></span><br><span class="line"><span class="keyword">protected</span> $_insert_id = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求是否被允许，当使用token验证时如果没通过验证则不被允许</span></span><br><span class="line"><span class="keyword">protected</span> $_allow = <span class="keyword">TRUE</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 轻量级目录访问协议验证时用，用户名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> $_user_ldap_dn = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 服务器响应的开始时间</span></span><br><span class="line"><span class="keyword">protected</span> $_start_rtime;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 服务器响应结束的时间</span></span><br><span class="line"><span class="keyword">protected</span> $_end_rtime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 支持的响应信息格式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> $_supported_formats = [</span><br><span class="line"><span class="string">'json'</span> =&gt; <span class="string">'application/json'</span>,</span><br><span class="line"><span class="string">'array'</span> =&gt; <span class="string">'application/json'</span>,</span><br><span class="line"><span class="string">'csv'</span> =&gt; <span class="string">'application/csv'</span>,</span><br><span class="line"><span class="string">'html'</span> =&gt; <span class="string">'text/html'</span>,</span><br><span class="line"><span class="string">'jsonp'</span> =&gt; <span class="string">'application/javascript'</span>,</span><br><span class="line"><span class="string">'php'</span> =&gt; <span class="string">'text/plain'</span>,</span><br><span class="line"><span class="string">'serialized'</span> =&gt; <span class="string">'application/vnd.php.serialized'</span>,</span><br><span class="line"><span class="string">'xml'</span> =&gt; <span class="string">'application/xml'</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据token获取用户信息，保存到该变量中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> $_apiuser;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查cors</span></span><br><span class="line"><span class="keyword">protected</span> $check_cors = <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// xss 过滤</span></span><br><span class="line"><span class="keyword">protected</span> $_enable_xss = <span class="keyword">FALSE</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 表示请求是否有效</span></span><br><span class="line"><span class="keyword">private</span> $is_valid_request = <span class="keyword">TRUE</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 响应状态码</span></span><br><span class="line"><span class="keyword">protected</span> $http_status_codes = [</span><br><span class="line"><span class="keyword">self</span>::HTTP_OK =&gt; <span class="string">'OK'</span>,</span><br><span class="line"><span class="keyword">self</span>::HTTP_CREATED =&gt; <span class="string">'CREATED'</span>,</span><br><span class="line"><span class="keyword">self</span>::HTTP_NO_CONTENT =&gt; <span class="string">'NO CONTENT'</span>,</span><br><span class="line"><span class="keyword">self</span>::HTTP_NOT_MODIFIED =&gt; <span class="string">'NOT MODIFIED'</span>,</span><br><span class="line"><span class="keyword">self</span>::HTTP_BAD_REQUEST =&gt; <span class="string">'BAD REQUEST'</span>,</span><br><span class="line"><span class="keyword">self</span>::HTTP_UNAUTHORIZED =&gt; <span class="string">'UNAUTHORIZED'</span>,</span><br><span class="line"><span class="keyword">self</span>::HTTP_FORBIDDEN =&gt; <span class="string">'FORBIDDEN'</span>,</span><br><span class="line"><span class="keyword">self</span>::HTTP_NOT_FOUND =&gt; <span class="string">'NOT FOUND'</span>,</span><br><span class="line"><span class="keyword">self</span>::HTTP_METHOD_NOT_ALLOWED =&gt; <span class="string">'METHOD NOT ALLOWED'</span>,</span><br><span class="line"><span class="keyword">self</span>::HTTP_NOT_ACCEPTABLE =&gt; <span class="string">'NOT ACCEPTABLE'</span>,</span><br><span class="line"><span class="keyword">self</span>::HTTP_CONFLICT =&gt; <span class="string">'CONFLICT'</span>,</span><br><span class="line"><span class="keyword">self</span>::HTTP_INTERNAL_SERVER_ERROR =&gt; <span class="string">'INTERNAL SERVER ERROR'</span>,</span><br><span class="line"><span class="keyword">self</span>::HTTP_NOT_IMPLEMENTED =&gt; <span class="string">'NOT IMPLEMENTED'</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Format对象</span></span><br><span class="line"><span class="keyword">private</span> $format;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求方法重新定义验证方式，可在rest配置文件中定义</span></span><br><span class="line"><span class="keyword">private</span> $auth_override;</span><br></pre></td></tr></table></figure><p><b><font color="#891717">部分方法</font></b></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 检测PHP和CI是否符合要求</span></span><br><span class="line"><span class="comment"> * 设置_enable_xss</span></span><br><span class="line"><span class="comment"> * 禁用解析伪变量，如&#123;elapsed_time&#125; &#123;memory_usage&#125;</span></span><br><span class="line"><span class="comment"> * 设置请求时间</span></span><br><span class="line"><span class="comment"> * 获取rest配置信息</span></span><br><span class="line"><span class="comment"> * 加载Format类库</span></span><br><span class="line"><span class="comment"> * 从配置信息中确定支持的输出格式</span></span><br><span class="line"><span class="comment"> * 如果缺少默认输出格式则进行添加</span></span><br><span class="line"><span class="comment"> * 从配置信息中获取语言类型，默认为'simplified-chinese'，若没有设置则为'english'，根据该类型加载rest语言文件</span></span><br><span class="line"><span class="comment"> * 初始化response、request、rest对象</span></span><br><span class="line"><span class="comment"> * 配置文件rest_ip_blacklist_enabled设置为true则检查当前的IP地址是否被列入黑名单，默认为false</span></span><br><span class="line"><span class="comment"> * 确定连接是否为HTTPS</span></span><br><span class="line"><span class="comment"> * 确定请求方法，根据请求方法创建请求参数容器，如_get_args</span></span><br><span class="line"><span class="comment"> * 检查CORS访问请求</span></span><br><span class="line"><span class="comment"> * 解析查询参数</span></span><br><span class="line"><span class="comment"> * 设置_get_args</span></span><br><span class="line"><span class="comment"> * 解析请求格式、请求体以及获取请求参数</span></span><br><span class="line"><span class="comment"> * 确定响应格式、响应语言类型</span></span><br><span class="line"><span class="comment"> * 如果配置了rest_database_group并且使用密钥或者需要写入日志则加载数据库类</span></span><br><span class="line"><span class="comment"> * 请求API如果在rest文件中进行了相关设置，比如none basic digest library则进行相关验证准备</span></span><br><span class="line"><span class="comment"> * 解析密钥</span></span><br><span class="line"><span class="comment"> * rest设置不支持Ajax请求，如果发现请求是Ajax请求则报错</span></span><br><span class="line"><span class="comment"> * 根据rest_enable_keys、allow_auth_and_keys、rest_auth进行相关验证</span></span><br><span class="line"><span class="comment"> * 根据rest_ip_whitelist_enabled进行白名单验证</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">__construct()</span><br><span class="line"></span><br><span class="line">get_local_config() <span class="comment">// 加载rest配置文件，即rest.php</span></span><br><span class="line"></span><br><span class="line">__destruct() <span class="comment">// 日志更新响应结束时间</span></span><br><span class="line"></span><br><span class="line">preflight_checks() <span class="comment">// 检测PHP和CI的版本是否符合要求</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 重定向方法，由CodeIgniter.php文件调用，该方法实现过程</span></span><br><span class="line"><span class="comment"> * 根据force_https配置项检测当前请求是否为https</span></span><br><span class="line"><span class="comment"> * 去掉请求方法中的文件扩展名，加上请求动词，如:index_get，请求方法不存在则默认为index_get</span></span><br><span class="line"><span class="comment"> * 判断请求方法是否要写入日志，若需要则写入日志</span></span><br><span class="line"><span class="comment"> * 判断请求方法是否使用密钥，若使用了则检查该密钥是否有权限访问请求控制器</span></span><br><span class="line"><span class="comment"> * 如果有权限访问该控制器则判断请求方法是否存在</span></span><br><span class="line"><span class="comment"> * 若存在密钥则判断请求是否限制次数</span></span><br><span class="line"><span class="comment"> * 调用更新后的控制器-方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">_remap()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置响应、返回响应</span></span><br><span class="line">response()</span><br><span class="line">set_response()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">_get_default_output_format() <span class="comment">// 获取默认响应格式，默认由rest_default_format进行配置，默认值为json</span></span><br><span class="line"></span><br><span class="line">_detect_input_format()    <span class="comment">// 检测请求内容格式</span></span><br><span class="line">_detect_output_format()    <span class="comment">// 检测响应内容格式</span></span><br><span class="line">_detect_method()           <span class="comment">// 检测请求方法</span></span><br><span class="line">_detect_api_key()          <span class="comment">// 根据API KEY确定登录用户，API KEY的类型由rest_key_name定义，可为Authorization、X-API-KEY</span></span><br><span class="line">_detect_lang()             <span class="comment">// 检测客户端支持的语言</span></span><br><span class="line"></span><br><span class="line">_log_request() <span class="comment">// 请求api写入log</span></span><br><span class="line"></span><br><span class="line">_check_limit() <span class="comment">// 请求数检查</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求API在auth_override_class_method配置了none、digest、basic、session、whitelist时会调用对应的验证方法</span></span><br><span class="line">_auth_override_check() </span><br><span class="line"></span><br><span class="line">_parse_get()     <span class="comment">// 解析GET请求参数</span></span><br><span class="line">_parse_post()    <span class="comment">// 解析POST请求参数</span></span><br><span class="line">_parse_put()     <span class="comment">// 解析PUT请求参数</span></span><br><span class="line">_parse_head()    <span class="comment">// 解析HEAD请求参数</span></span><br><span class="line">_parse_options() <span class="comment">// 解析OPTIONS请求参数</span></span><br><span class="line">_parse_patch()   <span class="comment">// 解析PATCH请求参数</span></span><br><span class="line">_parse_delete()  <span class="comment">// 解析DELETE请求参数</span></span><br><span class="line">_parse_query()   <span class="comment">// 解析查询参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取请求参数方法</span></span><br><span class="line">get()      <span class="comment">// $this-&gt;get('xxx') or $this-&gt;get()</span></span><br><span class="line">options()  <span class="comment">// $this-&gt;options('xxx') or $this-&gt;options()</span></span><br><span class="line">head()     <span class="comment">// $this-&gt;head('xxx') or $this-&gt;head()</span></span><br><span class="line">post()     <span class="comment">// $this-&gt;post('xxx') or $this-&gt;post()</span></span><br><span class="line">put()      <span class="comment">// $this-&gt;put('xxx') or $this-&gt;put()</span></span><br><span class="line">delete()   <span class="comment">// $this-&gt;delete('xxx') or $this-&gt;delete()</span></span><br><span class="line">patch()    <span class="comment">// $this-&gt;patch('xxx') or $this-&gt;patch()</span></span><br><span class="line">query()    <span class="comment">// $this-&gt;query('xxx') or $this-&gt;query()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">_xss_clean() <span class="comment">// xss过滤方法</span></span><br><span class="line"></span><br><span class="line">validation_errors() <span class="comment">// 表单验证产生的错误信息</span></span><br><span class="line"></span><br><span class="line">_perform_ldap_auth()    <span class="comment">// ldap登录验证，auth_source配置为ldap时调用</span></span><br><span class="line">_perform_library_auth() <span class="comment">// library登录验证，auth_source配置为library时调用</span></span><br><span class="line">_check_login() <span class="comment">// 登录验证 digest、ldap、library</span></span><br><span class="line"></span><br><span class="line">_check_php_session()    <span class="comment">// rest_auth配置为session时调用</span></span><br><span class="line">_prepare_basic_auth()   <span class="comment">// rest_auth配置为basic时调用</span></span><br><span class="line">_prepare_digest_auth()  <span class="comment">// rest_auth配置为digest时调用</span></span><br><span class="line"></span><br><span class="line">_check_blacklist_auth() <span class="comment">// 黑名单验证，默认开关未打开</span></span><br><span class="line">_check_whitelist_auth() <span class="comment">// 白名单验证，默认开关未打开</span></span><br><span class="line"></span><br><span class="line">_force_login() <span class="comment">// 验证失败，给出响应</span></span><br><span class="line"></span><br><span class="line">_log_access_time()   <span class="comment">// 更新请求处理时间</span></span><br><span class="line">_log_response_code() <span class="comment">// 更新请求结果，状态码</span></span><br><span class="line"></span><br><span class="line">_check_access() <span class="comment">// 检查API密钥是否有权限访问控制器和方法，需要在rest配置文件总设置</span></span><br><span class="line">_check_cors()   <span class="comment">// 检查跨域请求是否合法</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter-base-model使用文档</title>
      <link href="/2020/04/17/codeigniter-base-model/"/>
      <url>/2020/04/17/codeigniter-base-model/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>阮一峰先生在<span class="exturl" data-url="aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMTkvMDIvb3JtLXR1dG9yaWFsLmh0bWw=" title="http://www.ruanyifeng.com/blog/2019/02/orm-tutorial.html">《ORM实例教程》<i class="fa fa-external-link"></i></span>一文中写到过<code>面向对象编程把所有实体看成对象（object），关系型数据库则是采用实体之间的关系（relation）连接数据。ORM 就是通过实例对象的语法，完成关系型数据库的操作的技术，是&quot;对象-关系映射&quot;（Object/Relational Mapping） 的缩写，ORM 把数据库映射成对象。</code>，CI针对数据库实现了<code>构造器类</code>用来进行CRUD操作，<code>工厂类</code>用来对数据表和字段进行增删改等操作。当对业务进行查询的时候通常通过构造器进行查询，即通过<code>$this-&gt;db-&gt;...</code>语句，这需要掌握查询构造器的诸多方法才能运用自如，最近发现一个CI的模型扩展，更简单的实现了ORM查询。</p><a id="more"></a><hr><h4 id="ORM与其他查询的区别"><a href="#ORM与其他查询的区别" class="headerlink" title="ORM与其他查询的区别"></a>ORM与其他查询的区别</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//正常SQL</span></span><br><span class="line">$result = <span class="keyword">$this</span>-&gt;db-&gt;query(<span class="string">"select * from table_name"</span>)-&gt;result_array();</span><br><span class="line"><span class="comment">//查询构造器</span></span><br><span class="line">$result = <span class="keyword">$this</span>-&gt;db-&gt;get(table_name)-&gt;result_array();</span><br><span class="line"><span class="comment">//ORM</span></span><br><span class="line">$result = <span class="keyword">$this</span>-&gt;model-&gt;get_all();</span><br></pre></td></tr></table></figure><h4 id="模型扩展介绍"><a href="#模型扩展介绍" class="headerlink" title="模型扩展介绍"></a>模型扩展介绍</h4><h5 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h5><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2phbWllcnVtYmVsb3cvY29kZWlnbml0ZXItYmFzZS1tb2RlbA==" title="https://github.com/jamierumbelow/codeigniter-base-model">jamierumbelow/codeigniter-base-model<i class="fa fa-external-link"></i></span></p><h5 id="使用举例"><a href="#使用举例" class="headerlink" title="使用举例"></a>使用举例</h5><p>将<code>MY_model.php</code>文件放入放至<code>application/core</code>目录下，然后在<code>models</code>目录下创建<code>Blog_model.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Blog_model</span> <span class="keyword">extends</span> <span class="title">MY_model</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//表示要操作的表，如果不设置则为blog，该扩展会获取类名，然后去掉'_m'或'_model'作为表名</span></span><br><span class="line">    <span class="keyword">protected</span> $_table = <span class="string">'blog'</span>; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//可以不写  默认当前库</span></span><br><span class="line">    <span class="keyword">public</span> $_database = <span class="string">'切换其他库'</span>; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//可以不写 默认表主键</span></span><br><span class="line">    <span class="keyword">protected</span> $primary_key =<span class="string">'当前表查询primary_key'</span>; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//下面开启 每个SQL都会拼接where 下面全部可以不写</span></span><br><span class="line">    <span class="comment">//where  deleted = 0;  //=1 修改$_temporary_only_deleted=true</span></span><br><span class="line">    <span class="keyword">protected</span> $soft_delete = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">protected</span> $soft_delete_key = <span class="string">'deleted'</span>;</span><br><span class="line">    <span class="keyword">protected</span> $_temporary_with_deleted = <span class="keyword">FALSE</span>; <span class="comment">//  0</span></span><br><span class="line">    <span class="keyword">protected</span> $_temporary_only_deleted = <span class="keyword">FALSE</span>;  <span class="comment">// 1</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//生命周期钩子 全部可以不写</span></span><br><span class="line">    <span class="keyword">protected</span> $before_create = <span class="keyword">array</span>(); <span class="comment">//数据创建之前</span></span><br><span class="line">    <span class="keyword">protected</span> $after_create = <span class="keyword">array</span>();  <span class="comment">//数据创建之后</span></span><br><span class="line">    <span class="keyword">protected</span> $before_update = <span class="keyword">array</span>();  <span class="comment">//数据更新之前</span></span><br><span class="line">    <span class="keyword">protected</span> $after_update = <span class="keyword">array</span>();  <span class="comment">//数据更新之后</span></span><br><span class="line">    <span class="keyword">protected</span> $before_get = <span class="keyword">array</span>();  <span class="comment">//数据获取之前</span></span><br><span class="line">    <span class="keyword">protected</span> $after_get = <span class="keyword">array</span>(); <span class="comment">//数据获取之后 存在值</span></span><br><span class="line">    <span class="keyword">protected</span> $before_delete = <span class="keyword">array</span>(); <span class="comment">//数据删除之前</span></span><br><span class="line">    <span class="keyword">protected</span> $after_delete = <span class="keyword">array</span>(); <span class="comment">//数据删除之后</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//比如 数据里面增加一个时间，然后增加条目之前就会调用该方法，这里在insert方法中触发了该钩子方法</span></span><br><span class="line">    <span class="comment">// public $before_create = array( 'timestamps' );</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">timestamps</span><span class="params">($blog)</span></span>&#123;</span><br><span class="line">        $blog[<span class="string">'created_at'</span>] = $blog[<span class="string">'updated_at'</span>] = date(<span class="string">'Y-m-d H:i:s'</span>);</span><br><span class="line">        <span class="keyword">return</span> $blog;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//更新/新增 数据 删除数组中的key</span></span><br><span class="line">    <span class="keyword">public</span> $protected_attributes = <span class="keyword">array</span>(<span class="string">'id'</span>);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="控制器调用"><a href="#控制器调用" class="headerlink" title="控制器调用"></a>控制器调用</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;load-&gt;model(<span class="string">'blog_model'</span>);</span><br><span class="line">$list = <span class="keyword">$this</span>-&gt;blog_model-&gt;get_all();<span class="comment">// 获取blog表中所有记录</span></span><br></pre></td></tr></table></figure><h5 id="CRUD方法"><a href="#CRUD方法" class="headerlink" title="CRUD方法"></a>CRUD方法</h5><p><strong>获取数据</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">get($id)            <span class="comment">// 通过主键获取一条记录</span></span><br><span class="line">get_by($where)      <span class="comment">// 过滤获取一条记录</span></span><br><span class="line">get_many($where)    <span class="comment">// 获取多条数据where in</span></span><br><span class="line">get_many_by($where) <span class="comment">// 获取多条数据 where and</span></span><br><span class="line">get_all()           <span class="comment">// 获取表全部数据</span></span><br><span class="line">dropdown($field)    <span class="comment">// 获取字段的一个数组集合</span></span><br></pre></td></tr></table></figure><p><strong>插入数据</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert($data)      <span class="comment">// 插入一条数据</span></span><br><span class="line">insert_many($data) <span class="comment">// 插入多少数据</span></span><br></pre></td></tr></table></figure><p><strong>更新数据</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">update(<span class="string">'10'</span>,$arr)            <span class="comment">// 更新一条数据 $primary_key = 'id'; where id=10</span></span><br><span class="line">update_many(<span class="string">'11,12,13'</span>,$arr) <span class="comment">// 更新多条数据 where in(11,12,13)</span></span><br><span class="line">update_by($where,$data)  <span class="comment">// 根据条件更新数据</span></span><br><span class="line">update_all($data)        <span class="comment">// 更新全部数据</span></span><br></pre></td></tr></table></figure><p><strong>删除数据</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">delete($id)         <span class="comment">// 根据主键删除一条数据</span></span><br><span class="line">delete_by($where)   <span class="comment">// 删除满足条件数据 ['title'=&gt;'1111']</span></span><br><span class="line">delete_many($where) <span class="comment">// 删除主键数据 [1,2,3]</span></span><br><span class="line">truncate()          <span class="comment">// 清空表</span></span><br></pre></td></tr></table></figure><p><strong>统计数据</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">count_by($where) <span class="comment">// count(*) where</span></span><br><span class="line">count_all()      <span class="comment">// 统计全部数据</span></span><br></pre></td></tr></table></figure><p><strong>排序</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">order_by([<span class="string">'id'</span>=&gt;<span class="string">'desc'</span>,<span class="string">'title'</span>=&gt;<span class="string">'desc'</span>])</span><br><span class="line">order_by(<span class="string">'id'</span>,<span class="string">'desc'</span>)</span><br></pre></td></tr></table></figure><p><strong>分页</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">limit($limit,$offset)</span><br></pre></td></tr></table></figure><p><strong>分组</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">group_by($field)</span><br></pre></td></tr></table></figure><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcGhwZXI4L3AvOTgwMjc3Mi5odG1s" title="https://www.cnblogs.com/phper8/p/9802772.html">codeigniter-base-model 中文文档<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2phbWllcnVtYmVsb3cvY29kZWlnbml0ZXItYmFzZS1tb2RlbA==" title="https://github.com/jamierumbelow/codeigniter-base-model">jamierumbelow/codeigniter-base-model<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP获取系统详细信息-CPU、内存、磁盘、负载</title>
      <link href="/2020/04/16/php-get-system-info/"/>
      <url>/2020/04/16/php-get-system-info/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>本文使用PHP获取服务器的状态，包括负载、CPU、磁盘和内存的使用率等信息，另外还支持检查进程是否存在，目前支持Windows和Linux两种平台下使用。</p><a id="more"></a><hr><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">System_info</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $is_win = <span class="keyword">false</span>;<span class="comment">// 是否是Windows操作系统</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果是Linux操作系统则自动获取CPU/内存的使用率</span></span><br><span class="line">    <span class="keyword">protected</span> $lin_cpu_usage = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">protected</span> $lin_mem_usage = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;is_win = is_running_on_windows();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Linux操作系统自动获取CPU(内存)使用率</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_lin_status</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $fp = popen(<span class="string">'top -b -n 2 | grep -E "(Cpu\(s\))|(KiB Mem)"'</span>, <span class="string">"r"</span>);</span><br><span class="line">        $rs = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">while</span> (!feof($fp)) &#123;</span><br><span class="line">            $rs .= fread($fp, <span class="number">1024</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        pclose($fp);</span><br><span class="line"></span><br><span class="line">        $sys_info = explode(<span class="string">'\n'</span>, $rs);</span><br><span class="line">        $cpu_info = explode(<span class="string">','</span>, $sys_info[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;lin_cpu_usage = trim(trim($cpu_info[<span class="number">0</span>], <span class="string">'%Cpu(s): '</span>), <span class="string">'us'</span>);</span><br><span class="line"></span><br><span class="line">        $mem_info = explode(<span class="string">","</span>, $sys_info[<span class="number">3</span>]); <span class="comment">//内存占有量 数组</span></span><br><span class="line">        $mem_total = trim(trim($mem_info[<span class="number">0</span>], <span class="string">'KiB Mem : '</span>), <span class="string">' total'</span>);</span><br><span class="line">        $mem_used = trim(trim($mem_info[<span class="number">2</span>], <span class="string">'used'</span>));</span><br><span class="line">        <span class="keyword">$this</span>-&gt;lin_mem_usage = round(<span class="number">100</span> * intval($mem_used) /     intval($mem_total), <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断指定路径下指定文件是否存在，不存在则创建，Windows环境下使用</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $file_name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_file_path</span><span class="params">($file_name, $content)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">         $path = dirname(<span class="keyword">__FILE__</span>) . <span class="string">"/&#123;$file_name&#125;"</span>;</span><br><span class="line">         <span class="keyword">if</span> (!file_exists($path)) &#123;</span><br><span class="line">             file_put_contents($path, $content);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> $path;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string 返回cpu使用率函数文件路径， Windows环境下使用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_cpu_usage_vbs_path</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get_file_path(</span><br><span class="line">            <span class="string">'cpu_usage.vbs'</span>,</span><br><span class="line">            <span class="string">"On Error Resume Next</span></span><br><span class="line"><span class="string">    Set objProc = GetObject(\"winmgmts:\\\\.\\root\cimv2:win32_processor='cpu0'\")</span></span><br><span class="line"><span class="string">    WScript.Echo(objProc.LoadPercentage)"</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string 返回总内存及可用物理内存函数文件路径， Windows环境下使用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_mem_usage_path</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get_file_path(</span><br><span class="line">            <span class="string">'memory_usage.vbs'</span>,</span><br><span class="line">            <span class="string">"On Error Resume Next</span></span><br><span class="line"><span class="string">    Set objWMI = GetObject(\"winmgmts:\\\\.\\root\cimv2\")</span></span><br><span class="line"><span class="string">    Set colOS = objWMI.InstancesOf(\"Win32_OperatingSystem\")</span></span><br><span class="line"><span class="string">    For Each objOS in colOS</span></span><br><span class="line"><span class="string">     Wscript.Echo(\"&#123;\"\"TotalVisibleMemorySize\"\":\" &amp; objOS.TotalVisibleMemorySize &amp; \",\"\"FreePhysicalMemory\"\":\" &amp; objOS.FreePhysicalMemory &amp; \"&#125;\")</span></span><br><span class="line"><span class="string">    Next"</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed cpu usage， Windows环境下使用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_cpu_usage</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;is_win) &#123;</span><br><span class="line">            $path = <span class="keyword">$this</span>-&gt;get_cpu_usage_vbs_path();</span><br><span class="line">            $retval = <span class="keyword">$this</span>-&gt;exec(<span class="string">"cscript -nologo \"&#123;$path&#125;\""</span>, $usage);</span><br><span class="line">            <span class="keyword">return</span> intval($usage[<span class="number">0</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            is_null(<span class="keyword">$this</span>-&gt;lin_cpu_usage) <span class="keyword">and</span> <span class="keyword">$this</span>-&gt;get_lin_status();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;lin_cpu_usage;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed memory usage</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_mem_usage</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;is_win) &#123;</span><br><span class="line">            $path = <span class="keyword">$this</span>-&gt;get_mem_usage_path();</span><br><span class="line">            $retval = <span class="keyword">$this</span>-&gt;exec(<span class="string">"cscript -nologo \"$path\""</span>, $usage);</span><br><span class="line">            $memory = json_decode($usage[<span class="number">0</span>], <span class="keyword">true</span>);</span><br><span class="line">            <span class="keyword">return</span> Round((($memory[<span class="string">'TotalVisibleMemorySize'</span>] - $memory[<span class="string">'FreePhysicalMemory'</span>]) / $memory[<span class="string">'TotalVisibleMemorySize'</span>]) * <span class="number">100</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            is_null(<span class="keyword">$this</span>-&gt;lin_mem_usage) <span class="keyword">and</span> <span class="keyword">$this</span>-&gt;get_lin_status();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;lin_mem_usage;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array 磁盘使用率</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_hd_usage</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $storage = [];</span><br><span class="line">        $sys_hd = <span class="keyword">$this</span>-&gt;is_win ? <span class="string">'C:'</span> : <span class="string">'/'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 系统盘C: 或 linux下的/</span></span><br><span class="line">        $hdc_free = disk_free_space($sys_hd);</span><br><span class="line">        $hdc_total = disk_total_space($sys_hd);</span><br><span class="line">        array_push($storage, [<span class="string">'label'</span> =&gt; $sys_hd, <span class="string">'value'</span> =&gt; floor(<span class="number">100</span> * $hdc_free / $hdc_total) . <span class="string">'%'</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $storage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed|null 负载</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_load</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $load = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;is_win) &#123;</span><br><span class="line">            $cmd = <span class="string">"WMIC CPU GET LOADPERCENTAGE /ALL"</span>;</span><br><span class="line">            @exec($cmd, $output);<span class="comment">// exp: LoadPercentage 9 4</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ($output)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">foreach</span> ($output <span class="keyword">as</span> $line)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> ($line &amp;&amp; preg_match(<span class="string">"/^[0-9]+\$/"</span>, $line))</span><br><span class="line">                    &#123;</span><br><span class="line">                        $load = $line;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $sys_load = sys_getloadavg();</span><br><span class="line">            $load = $sys_load[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $load;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 检查指定进程是否存在 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check_if_process_exists</span><span class="params">($process_name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $output = <span class="keyword">null</span>;<span class="comment">// init output</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// $process_name: Nginx QQ </span></span><br><span class="line">        $cmd = <span class="keyword">$this</span>-&gt;is_win ? <span class="string">"TASKLIST | FINDSTR &#123;$process_name&#125;"</span> : <span class="string">"ps -ax | grep &#123;$process_name&#125;"</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;is_win) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;exec($cmd, $output);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">empty</span>($output[<span class="number">0</span>])) &#123;</span><br><span class="line">                <span class="keyword">return</span> ON;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;exec($cmd, $output);</span><br><span class="line">            <span class="keyword">if</span> (count($output) &gt;= <span class="number">2</span>) &#123;<span class="comment">// ps查看进程最少会有两个，这里包含查询命令这一条</span></span><br><span class="line">                <span class="keyword">return</span> ON;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> OFF;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 重新实现exec */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">exec</span><span class="params">($cmd, &amp;$out = null)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $desc = <span class="keyword">array</span>(</span><br><span class="line">            <span class="number">1</span> =&gt; <span class="keyword">array</span>(<span class="string">'pipe'</span>, <span class="string">'w'</span>),</span><br><span class="line">            <span class="number">2</span> =&gt; <span class="keyword">array</span>(<span class="string">'pipe'</span>, <span class="string">'w'</span>)</span><br><span class="line">        );</span><br><span class="line">        $proc = proc_open($cmd, $desc, $pipes);</span><br><span class="line"></span><br><span class="line">        $ret = stream_get_contents($pipes[<span class="number">1</span>]);</span><br><span class="line">        $err = stream_get_contents($pipes[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">        fclose($pipes[<span class="number">1</span>]);</span><br><span class="line">        fclose($pipes[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">        $ret_val = proc_close($proc);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (func_num_args() == <span class="number">2</span>) &#123;</span><br><span class="line">            $out = <span class="keyword">array</span>($ret, $err);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $ret_val;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 检查系统类型：True: Windows   false:Linux */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">is_running_on_windows</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (strtoupper(substr(PHP_OS, <span class="number">0</span>, <span class="number">3</span>)) === <span class="string">'WIN'</span></span><br><span class="line">            || substr(php_uname(), <span class="number">0</span>, <span class="number">7</span>) === <span class="string">'Windows'</span></span><br><span class="line">            || DIRECTORY_SEPARATOR == <span class="string">'\\'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$sys = <span class="keyword">new</span> System_info();</span><br><span class="line">$load = $sys-&gt;get_load() . <span class="string">'%'</span>;<span class="comment">// 当前负载</span></span><br><span class="line">$cpu_usage = $sys-&gt;get_cpu_usage() . <span class="string">'%'</span>;<span class="comment">// CPU使用率</span></span><br><span class="line">$mem_usage = $sys-&gt;get_mem_usage() . <span class="string">'%'</span>;<span class="comment">// 内存使用率</span></span><br><span class="line">$storage  =  $sys-&gt;get_hd_usage(); <span class="comment">// 存储</span></span><br><span class="line">$nginx_exists = $sys-&gt;check_if_process_exists(<span class="string">'Nginx'</span>);<span class="comment">// 检查Nginx进程是否存在</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter实现HMVC模块扩展</title>
      <link href="/2020/03/28/codeigniter-hmvc/"/>
      <url>/2020/03/28/codeigniter-hmvc/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>模块扩展让CodeIgniter框架模块化。模块是一组独立的组件（通常有模型、控制器和视图），它们被分类在应用模块的子文件夹中，并且能够直接拖到其他的CodeIgniter应用中。</p><p>HMVC的意思是分层模型视图控制器。</p><p>模块控制器能够作为普通的控制器或者HMVC控制器使用，它们也能够被当做小部件帮助你开发一部分视图。</p><a id="more"></a><hr><h4 id="模块扩展安装"><a href="#模块扩展安装" class="headerlink" title="模块扩展安装"></a>模块扩展安装</h4><ol><li>安装CI框架，下载地址:<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JjaXQtY2kvQ29kZUlnbml0ZXIvYXJjaGl2ZS8zLjEuMTEudGFyLmd6" title="https://github.com/bcit-ci/CodeIgniter/archive/3.1.11.tar.gz">CodeIgniter-3.1.11<i class="fa fa-external-link"></i></span>。</li><li>配置好CI环境，访问URL <code>/index.php/welcome</code>可以看到欢迎界面说明正常。</li><li>下载<span class="exturl" data-url="aHR0cHM6Ly9iaXRidWNrZXQub3JnL3dpcmVkZXNpZ256L2NvZGVpZ25pdGVyLW1vZHVsYXItZXh0ZW5zaW9ucy1obXZjL2dldC9mNzdhM2ZjOWE2ZmQuemlw" title="https://bitbucket.org/wiredesignz/codeigniter-modular-extensions-hmvc/get/f77a3fc9a6fd.zip">模块扩展源码<i class="fa fa-external-link"></i></span>并将模块扩展的third_party文件拖入application/third_party目录。</li><li>修改<code>third_party/MX/Loader.php</code>文件，有个bug需要处理下，要不然会报错，<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3B1cmV2ZW4vQ29kZUlnbml0ZXItSE1WQy9jb21taXQvY2U0ZjY2ZTIyOGU2MTc4ODViZjE3MzU4MDQ1ZDZjM2VhYmEyMDY5MA==" title="https://github.com/pureven/CodeIgniter-HMVC/commit/ce4f66e228e617885bf17358045d6c3eaba20690">参考连接<i class="fa fa-external-link"></i></span>。 </li><li>再次访问URL <code>/index.php/welcome</code>看到欢迎界面。</li><li>创造模块目录结构<code>application/modules/welcome/controllers</code>。</li><li>将控制器文件<strong>application/controllers/welcome.php</strong>移动至<strong>application/modules/welcome/controllers/welcome.php</strong>。</li><li>访问URL <code>/index.php/welcome</code>看到欢迎界面。</li><li>创建目录<code>application/modules/welcome/views</code>。</li><li>将视图文件<font color="#891717">pplication/views/welcome_message.php</font>移动至<font color="#891717">application/modules/welcome/views/welcome_message.php</font>。</li><li>访问URL <code>/index.php/welcome</code>看到欢迎界面</li></ol><p>配置完毕。</p><hr><h4 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h4><p>Q: 什么是模块？我为什么要使用他们？</p><p>A: 参见维基百科：</p><ul><li><span class="exturl" data-url="aHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Nb2R1bGU=" title="http://en.wikipedia.org/wiki/Module">http://en.wikipedia.org/wiki/Module)<i class="fa fa-external-link"></i></span>)</li><li><span class="exturl" data-url="aHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Nb2R1bGFyX3Byb2dyYW1taW5n" title="http://en.wikipedia.org/wiki/Modular_programming">http://en.wikipedia.org/wiki/Modular_programming)<i class="fa fa-external-link"></i></span>)</li><li><span class="exturl" data-url="aHR0cDovL2Jsb2cuZmVkZWNhcmcuY29tLzIwMDgvMDYvMjgvYS1tb2R1bGFyLWFwcHJvYWNoLXRvLXdlYi1kZXZlbG9wbWVudA==" title="http://blog.fedecarg.com/2008/06/28/a-modular-approach-to-web-development">http://blog.fedecarg.com/2008/06/28/a-modular-approach-to-web-development)<i class="fa fa-external-link"></i></span>)</li></ul><p>Q: 什么是模块化HMVC，为什么我应该使用它？</p><p>A: 模块化 HMVC = <code>Multiple MVC triads</code></p><p>当你需要载入视图和视图中的数据的时候，这将是非常有用的。考虑添加一个购物车到一个页面中，这个购物车需要它自己的控制器，这个控制器要调用一个模型来获取购物车数据。然后控制器需要将数据载入到视图中。因此，和在主控制器处理这个页面和购物车不同，购物车MVC能够直接在页面中加载。这个主控制器不需要知道购物车MVC，并且和购物车MVC是完全隔离的。</p><p>在CI框架中，我们不能够在一次请求中调用多个控制器。因此，为了实现HMVC，我们不得不模拟控制器的行为。这用类库可以做到或者使用这个“模块扩展HMVC”。</p><p>使用一个类库和一个“模块扩展HMVC”类不同之处在于：</p><ol><li>不需要在HMVC中获取和使用CI实例</li><li>HMVC类存储在modules目录中而不是类库目录中</li></ol><p>Q: 模块扩展HMVC和模块分离是一样的么？</p><p>A: 是，也可以说不是。和模块分离类似，模块扩展使得模块变得“可便携的”。例如，如果你有一个漂亮的自包含MVC文件集，你能够将你的MVC文件加入到另一个项目中，仅仅通过复制一个目录就行了。所有文件都在同一个地方而不是散布在model、view 和controller文件夹。</p><p>模块化HMVC意味着模块化MVC triads。 模块分离和模块扩展让相关的控制器、模型、类库、视图等等文件能够被打包在模块子目录中，并且能够像一个小型应用那样使用。但是，模块扩展更进一步，它允许这些模块互相通信。你能够不用通过与http交互得到控制器的输出内容。</p><hr><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>所有的控制器都包含一个<code>$autoload</code>类变量，这个类变量拥有一个运行时优先载入的条目（item）数组。这个功能能够和 <code>module/config/autoload.php</code>一起使用，然而，使用<code>$autoload</code>变量仅仅在对应的控制器中起作用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Xyz</span> <span class="keyword">extends</span> <span class="title">MX_Controller</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    $autoload = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'helper'</span>    =&gt; <span class="keyword">array</span>(<span class="string">'url'</span>, <span class="string">'form'</span>),</span><br><span class="line">        <span class="string">'libraries'</span> =&gt; <span class="keyword">array</span>(<span class="string">'email'</span>),</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Modules::$locations</code>可以在<code>application/config.php</code>文件中设置，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$config[<span class="string">'modules_locations'</span>] = <span class="keyword">array</span>(</span><br><span class="line">    APPPATH.<span class="string">'modules/'</span> =&gt; <span class="string">'../modules/'</span>,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><code>Modules::run()</code>输出将会被缓存，因此从任何从控制器返回或者输出的数据将会被捕获并且返回到调用者。特别的，<code>$this-&gt;load-&gt;view()</code>能够在一个普通的控制器中按照你所想的那样使用，而不用返回任何值。</p><p>控制器能够作为别的控制器的类变量载入，使用语句<code>$this-&gt;load-&gt;module(&#39;module/controller&#39;);</code>或者在控制器的名称和模块的名称一致的时候，使用<code>$this-&gt;load-&gt;module(&#39;module&#39;);</code></p><p>任何加载的模块都可以当做一个类库使用，例如<code>$this-&gt;controller-&gt;method()</code>，但是加载的模块拥有自己独立与调用它的类的模块和类库。</p><p>所有模块控制器都能够通过URL（ <code>module/controller/method</code>或者模块名和控制器名称一致的时候使用<code>module/method</code>）访问到。如果你添加了<code>_remap()</code>方法到你的控制器中，你能够阻止不需要的访问然后重定向或者发送一个错误，这些随你。</p><hr><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>要使用HMVC功能，例如<code>Modules::run()</code>，控制器必须继承<code>MX_Controller</code>类。</p><p>仅仅使用分开的模块而不是HMVC功能，控制器可以继承CodeIgniter类。</p><p>你必须在控制器中使用PHP5样式的构造函数，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Xyz</span> <span class="keyword">extends</span> <span class="title">MX_Controller</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::__construct();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造函数并不是必须的，除非你想在控制器创建的时候载入或者处理什么东西。</p><p>所有的<code>MY_extension</code>类库应该包含（需要）他们同等的MX类库文件，并且继承它们同等的<code>MX_class</code>。</p><p>每一个模块可以包含一个<code>config/routes.php</code>文件，在文件中定义该模块的路由和默认控制器：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$route[<span class="string">'module_name'</span>] = <span class="string">'controller_name'</span>;</span><br></pre></td></tr></table></figure><p>控制器可以从<code>application/controllers</code>子目录中载入。</p><p>控制器也可以从<code>module/controllers</code>子目录中载入。</p><p>资源能够能够跨控制器载入，例如： <code>$this-&gt;load-&gt;model(&#39;module/model&#39;);</code></p><p><code>Modules::run()</code>被设计成返回部分视图，并且它将会从控制器返回缓存输出（一个视图）。使用<code>modules::run</code>语法是一个URI类型的片段字符串和无限的变量。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** module and controller names are different, you must include the method name also, including 'index' **/</span></span><br><span class="line">modules::run(<span class="string">'module/controller/method'</span>, $params, $...);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** module and controller names are the same but the method is not 'index' **/</span></span><br><span class="line">modules::run(<span class="string">'module/method'</span>, $params, $...);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** module and controller names are the same and the method is 'index' **/</span></span><br><span class="line">modules::run(<span class="string">'module'</span>, $params, $...);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Parameters are optional, You may pass any number of parameters. **/</span></span><br></pre></td></tr></table></figure><p>在控制器里边调用一个模块控制器，你可以使用<code>$this-&gt;load-&gt;module()</code>或者<code>Modules::load()</code>，PHP5的方法链也可以用在任何被MX加载的对象中，例如： <code>$this-&gt;load-&gt;library(‘validation’)-&gt;run()</code>。</p><p>载入模块的语言文件推荐使用载入方法，该方法将会传递一个激活的模块名称到一个语言实例，例如：<code>$this-&gt;load-&gt;language(&#39;language_file&#39;);</code></p><p>PHP5的spl_autoload特性允许你自由地扩展你的控制器、模块和来自<code>application/core</code>或者<code>application/libraries</code>基本类的的类库，不需要考虑显式包含他们。</p><p>类库加载器也被更新从而适应一些CI的特性，例如：类库别名能够和模块别名一样的方式接受，并且从模块配置目录中载入配置文件作为类库的参数（例如：<code>form_validation.php</code>），这项特性也被加了进来。</p><p><code>$config = $this-&gt;load-&gt;config(‘config_file’)</code>，返回已加载的数组到变量中。</p><p>模块和类库也能够从他们各自的应用目录的子目录中加载。</p><p>在用MX使用表单验证时，你将需要继承<code>CI_Form_validation</code>类，如下所示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** application/libraries/MY_Form_validation **/</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MY_Form_validation</span> <span class="keyword">extends</span> <span class="title">CI_Form_validation</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $CI;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在将目前的控制器作为$CI变量赋值给表单验证类库之前。这将让你的回调函数正常工作。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Xyz</span> <span class="keyword">extends</span> <span class="title">MX_Controller</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::__construct();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;load-&gt;library(<span class="string">'form_validation'</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;form_validation-&gt;CI =&amp; <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAwNDEwNTU2Mw==" title="https://segmentfault.com/a/1190000004105563">【译】CodeIgniter HMVC模块扩展使用文档<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3B1cmV2ZW4vQ29kZUlnbml0ZXItSE1WQw==" title="https://github.com/pureven/CodeIgniter-HMVC">源码分析<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用PHPMailer发送邮件</title>
      <link href="/2020/03/27/codeigniter-phpmailer/"/>
      <url>/2020/03/27/codeigniter-phpmailer/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>本文通过一个开源的<code>PHPMailer</code>类库来实现邮件发送。PHPMailer 是一个强大的 PHP 编写的邮件发送类，使用它可以更加便捷的发送邮件，并且还能发送附件和 HTML 格式的邮件，同时还能使用<code>SMTP</code>服务器来发送邮件。</p><a id="more"></a><hr><h4 id="部分服务器地址和端口"><a href="#部分服务器地址和端口" class="headerlink" title="部分服务器地址和端口"></a>部分服务器地址和端口</h4><p>在配置发送邮件服务器时会填写服务器地址和端口，而服务器地址不同的服务器的类型和不同的邮箱也不相同。下面参考<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLndwamFtLmNvbS9tL2dtYWlsLXFtYWlsLTE2M21haWwtaW1hcC1zbXRwLXBvcDMv" title="https://blog.wpjam.com/m/gmail-qmail-163mail-imap-smtp-pop3/">WordPress果酱<i class="fa fa-external-link"></i></span>给出<strong>Gmail</strong>, <strong>QMail</strong>, <strong>163邮箱</strong>这三个常用邮箱的这些地址。</p><h5 id="Exmail-的-IMAP-SMTP-POP3-地址"><a href="#Exmail-的-IMAP-SMTP-POP3-地址" class="headerlink" title="Exmail 的 IMAP/SMTP/POP3 地址"></a>Exmail 的 IMAP/SMTP/POP3 地址</h5><table><thead><tr><th align="left">服务器名称</th><th align="left">服务器地址</th><th align="left">SSL协议端口</th><th align="left">非SSL协议端口</th></tr></thead><tbody><tr><td align="left">IMAP</td><td align="left">imap.exmail.qq.com</td><td align="left">993</td><td align="left">-</td></tr><tr><td align="left">SMTP</td><td align="left">smtp.exmail.qq.com</td><td align="left">465</td><td align="left">-</td></tr><tr><td align="left">POP3</td><td align="left">pop.exmail.qq.com</td><td align="left">995</td><td align="left">-</td></tr></tbody></table><h5 id="QMail-的-IMAP-SMTP-POP3-地址"><a href="#QMail-的-IMAP-SMTP-POP3-地址" class="headerlink" title="QMail 的 IMAP/SMTP/POP3 地址"></a>QMail 的 IMAP/SMTP/POP3 地址</h5><p>QMail 的 IMAP/SMTP/POP3 协议默认是不开启的，你需要登陆到 QQ邮箱，然后到“设置” &gt; “账户” 将其开启</p><table><thead><tr><th align="left">服务器名称</th><th align="left">服务器地址</th><th align="left">SSL协议端口</th><th align="left">非SSL协议端口</th></tr></thead><tbody><tr><td align="left">IMAP</td><td align="left">imap.qq.com</td><td align="left">993</td><td align="left">143</td></tr><tr><td align="left">SMTP</td><td align="left">smtp.qq.com</td><td align="left">465或587</td><td align="left">25</td></tr><tr><td align="left">POP3</td><td align="left">pop.qq.com</td><td align="left">995</td><td align="left">110</td></tr></tbody></table><h5 id="Gmail-的-IMAP-SMTP-POP3-地址"><a href="#Gmail-的-IMAP-SMTP-POP3-地址" class="headerlink" title="Gmail 的 IMAP/SMTP/POP3 地址"></a>Gmail 的 IMAP/SMTP/POP3 地址</h5><p>Gmail 的 IMAP/SMTP/POP3 协议默认都是开启，它的详细地址如下</p><table><thead><tr><th align="left">服务器名称</th><th align="left">服务器地址</th><th align="left">SSL协议端口</th><th align="left">非SSL协议端口</th></tr></thead><tbody><tr><td align="left">IMAP</td><td align="left">imap.gmail.com</td><td align="left">993</td><td align="left">-</td></tr><tr><td align="left">SMTP</td><td align="left">smtp.gmail.com</td><td align="left">465</td><td align="left">-</td></tr><tr><td align="left">POP3</td><td align="left">pop.gmail.com</td><td align="left">995</td><td align="left">-</td></tr></tbody></table><h5 id="163邮箱-的-IMAP-SMTP-POP3-地址"><a href="#163邮箱-的-IMAP-SMTP-POP3-地址" class="headerlink" title="163邮箱 的 IMAP/SMTP/POP3 地址"></a>163邮箱 的 IMAP/SMTP/POP3 地址</h5><table><thead><tr><th align="left">服务器名称</th><th align="left">服务器地址</th><th align="left">SSL协议端口</th><th align="left">非SSL协议端口</th></tr></thead><tbody><tr><td align="left">IMAP</td><td align="left">imap.163.com</td><td align="left">993</td><td align="left">143</td></tr><tr><td align="left">SMTP</td><td align="left">smtp.163.com</td><td align="left">465或994</td><td align="left">25</td></tr><tr><td align="left">POP3</td><td align="left">pop.163.com</td><td align="left">995</td><td align="left">110</td></tr></tbody></table><hr><h4 id="PHPMailer简单介绍"><a href="#PHPMailer简单介绍" class="headerlink" title="PHPMailer简单介绍"></a>PHPMailer简单介绍</h4><p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BIUE1haWxlci9QSFBNYWlsZXI=" title="https://github.com/PHPMailer/PHPMailer">PHPMailer<i class="fa fa-external-link"></i></span>，部分功能举例:</p><ul><li>在邮件中包含多个 TO、CC、BCC 和 REPLY-TO。</li><li>平台应用广泛，支持的 SMTP 服务器包括 Sendmail、qmail、Postfix、Gmail、Imail、Exchange 等等。</li><li>支持嵌入图像，附件，HTML 邮件。</li><li>可靠的强大的调试功能。</li><li>支持 SMTP 认证。</li><li>自定义邮件头。</li><li>支持 8bit、base64、binary 和 quoted-printable 编码。</li></ul><h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">defined(<span class="string">'BASEPATH'</span>) <span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">'No direct script access allowed'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">PHPMailer</span>\<span class="title">PHPMailer</span>\<span class="title">PHPMailer</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PHPMailer</span>\<span class="title">PHPMailer</span>\<span class="title">Exception</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PHPMailer</span>\<span class="title">PHPMailer</span>\<span class="title">SMTP</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Notifications</span> <span class="keyword">extends</span> <span class="title">Api</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::__construct();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">email_test_get</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $mail = <span class="keyword">new</span> PHPMailer(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//Server settings</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             *  SMTPDebug 输出信息级别</span></span><br><span class="line"><span class="comment">             *  关闭：DEBUG_OFF</span></span><br><span class="line"><span class="comment">             *  客户端信息：DEBUG_CLIENT</span></span><br><span class="line"><span class="comment">             *  服务器信息：DEBUG_SERVER</span></span><br><span class="line"><span class="comment">             * 所有信息：DEBUG_LOWLEVEL</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            $mail-&gt;SMTPDebug = SMTP::DEBUG_LOWLEVEL;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//设定邮件编码，默认ISO-8859-1，如果发中文此项必须设置为 UTF-8</span></span><br><span class="line">            $mail-&gt;CharSet =<span class="string">"UTF-8"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 使用SMTP</span></span><br><span class="line">            $mail-&gt;isSMTP();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 发送服务器，比如：smtp.exmail.qq.com</span></span><br><span class="line">            $mail-&gt;Host       = <span class="string">'smtp.exmail.qq.com'</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 使用SMTP认证</span></span><br><span class="line">            $mail-&gt;SMTPAuth   = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 发件人账号/密码</span></span><br><span class="line">            $mail-&gt;Username   = <span class="string">'your_name@xxx.com'</span>;</span><br><span class="line">            $mail-&gt;Password   = <span class="string">'your_password'</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 加密技术： tls or ssl</span></span><br><span class="line">            $mail-&gt;SMTPSecure = PHPMailer::ENCRYPTION_SMTPS;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// SMTP服务器端口： SMTPS =&gt; 465  SMTP =&gt; 25</span></span><br><span class="line">            $mail-&gt;Port       = <span class="number">465</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 发件人账号及昵称</span></span><br><span class="line">            $mail-&gt;setFrom(<span class="string">'发件人地址'</span>, <span class="string">'发件人昵称'</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 收件人账号及昵称</span></span><br><span class="line">            $mail-&gt;addAddress(<span class="string">'收件人地址'</span>, <span class="string">'收件人昵称'</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 回复人地址和昵称</span></span><br><span class="line">            $mail-&gt;AddReplyTo(<span class="string">"邮件回复人地址"</span>,<span class="string">"邮件回复人名称"</span>);</span><br><span class="line">            </span><br><span class="line">            $mail-&gt;isHTML(<span class="keyword">true</span>); <span class="comment">// true: 'text/html'  false: 'text/plain'</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 标题</span></span><br><span class="line">            $mail-&gt;Subject = <span class="string">'你的奖品已到账，请查收'</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 正文</span></span><br><span class="line">            $mail-&gt;Body    = <span class="string">'...'</span>;</span><br><span class="line">            $mail-&gt;AltBody = <span class="string">'为了查看该邮件，请切换到支持 HTML 的邮件客户端'</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//$mail-&gt;AddAttachment("images/phpmailer.gif"); // 附件</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 发送</span></span><br><span class="line">            $mail-&gt;send();</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'Message has been sent'</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Message could not be sent. Mailer Error: &#123;$mail-&gt;ErrorInfo&#125;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter数据库相关功能的实现机制</title>
      <link href="/2020/03/17/codeigniter-database/"/>
      <url>/2020/03/17/codeigniter-database/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p><code>PHP</code>操作数据库<code>如MySQL</code>的流程分为<strong>连接数据库</strong>、<strong>设置字符编码</strong>、<strong>选择数据库</strong>、<strong>构造sql语句</strong>、<strong>执行sql语句</strong>、<strong>获取执行结果</strong>、<strong>关闭数据库连接</strong>等。如下面一个分页的例子</p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 连接数据库</span></span><br><span class="line">$link = mysqli_connect(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">'xxxxxx'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$link) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">'connect database faild!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 设置字符编码</span></span><br><span class="line">mysqli_set_charset($link,<span class="string">'utf8'</span>);</span><br><span class="line"><span class="comment">// 选择数据库</span></span><br><span class="line">mysqli_select_db($link,<span class="string">'bbs'</span>);</span><br><span class="line"><span class="comment">// 构造sql</span></span><br><span class="line">$get_count_sql = <span class="string">'select count(*) as count from user'</span>;</span><br><span class="line"><span class="comment">// 执行sql</span></span><br><span class="line">$count = mysqli_fetch_assoc(mysqli_query($link,$get_count_sql));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 分页</span></span><br><span class="line">$page = (<span class="keyword">isset</span>($_GET[<span class="string">'page'</span>]) &amp;&amp; $_GET[<span class="string">'page'</span>] &gt; <span class="number">1</span>) ? $_GET[<span class="string">'page'</span>] : <span class="number">1</span>;</span><br><span class="line">$num = <span class="number">4</span>;</span><br><span class="line">$start = ($page - <span class="number">1</span>) * $num;</span><br><span class="line">$end = ceil($count[<span class="string">'count'</span>]/$num);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构造sql</span></span><br><span class="line">$sql = <span class="string">"select * from user limit $start , $num"</span>;</span><br><span class="line"><span class="comment">// 执行</span></span><br><span class="line">$ret = mysqli_query($link,$sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">// html呈现</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;html&gt;&lt;table width='800' border='2'&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;th&gt;编号&lt;/th&gt;&lt;th&gt;用户名&lt;/th&gt;&lt;th&gt;地址&lt;/th&gt;&lt;th&gt;性别&lt;/th&gt;&lt;th&gt;年龄&lt;/th&gt;"</span>;</span><br><span class="line"><span class="keyword">while</span>($result = mysqli_fetch_assoc($ret)) &#123;    $sex = $result[<span class="string">'sex'</span>] ? <span class="string">"男"</span> : <span class="string">"女"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;tr&gt;&lt;td&gt;"</span>.$result[<span class="string">'id'</span>].<span class="string">"&lt;/td&gt;&lt;td&gt;"</span>.$result[<span class="string">'username'</span>].<span class="string">"&lt;/td&gt;&lt;td&gt;"</span>.$result[<span class="string">'address'</span>].<span class="string">"&lt;/td&gt;&lt;td&gt;"</span>.$sex.<span class="string">"&lt;/td&gt;&lt;td&gt;"</span>.$result[<span class="string">'age'</span>].<span class="string">"&lt;/td&gt;&lt;/tr&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/table&gt;"</span>;</span><br><span class="line">$prev = ($page &gt; <span class="number">1</span>) ? $page - <span class="number">1</span> : <span class="number">1</span>;</span><br><span class="line">$next = ($page &lt; $end) ?  $page + <span class="number">1</span> : $end;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;a href='page.php?page=1'&gt;首页&lt;/a&gt; &lt;a href='page.php?page=$prev'&gt;上页&lt;/a&gt; &lt;a href='page.php?page=$next'&gt;下页&lt;/a&gt; &lt;a href='page.php?page=$end'&gt;尾页&lt;/a&gt;"</span>;</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">1</span>; $i &lt;= $end; $i++) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">" &lt;a href='page.php?page=$i'&gt;$i&lt;/a&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/html&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭连接</span></span><br><span class="line">mysqli_close($link);</span><br></pre></td></tr></table></figure><p>这个例子有很多不足之处，比如分页不是从sql里分页而是拿出数据后使用php的逻辑来分页肯定有效率问题，这里不做讨论，主要是用来显示<code>PHP</code>操作<code>MySQL</code>的流程。明白了上面的流程就可以看CodeIgniter对数据库操作的实现机制了。详细的介绍可参考官网<span class="exturl" data-url="aHR0cHM6Ly9jb2RlaWduaXRlci5vcmcuY24vdXNlcl9ndWlkZS9kYXRhYmFzZS9pbmRleC5odG1s" title="https://codeigniter.org.cn/user_guide/database/index.html">数据库参考<i class="fa fa-external-link"></i></span>。下面从<code>代码</code>的角度学习这部分。</p><hr><h4 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h4><p>APPPATH . ‘config/database.php’为数据库的配置文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">$db[<span class="string">'default'</span>] = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">'dsn'</span>=&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'hostname'</span> =&gt; <span class="string">'localhost'</span>,</span><br><span class="line"><span class="string">'port'</span> =&gt; <span class="number">3306</span>,</span><br><span class="line"><span class="string">'username'</span> =&gt; <span class="string">'root'</span>,</span><br><span class="line"><span class="string">'password'</span> =&gt; <span class="string">'root'</span>,</span><br><span class="line"><span class="string">'database'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'dbdriver'</span> =&gt; <span class="string">'mysqli'</span>,</span><br><span class="line"><span class="string">'dbprefix'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'pconnect'</span> =&gt; <span class="keyword">FALSE</span>,</span><br><span class="line"><span class="string">'db_debug'</span> =&gt; (ENVIRONMENT !== <span class="string">'production'</span>),</span><br><span class="line"><span class="string">'cache_on'</span> =&gt; <span class="keyword">FALSE</span>,</span><br><span class="line"><span class="string">'cachedir'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'char_set'</span> =&gt; <span class="string">'utf8'</span>,</span><br><span class="line"><span class="string">'dbcollat'</span> =&gt; <span class="string">'utf8_general_ci'</span>,</span><br><span class="line"><span class="string">'swap_pre'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'encrypt'</span> =&gt; <span class="keyword">FALSE</span>,</span><br><span class="line"><span class="string">'compress'</span> =&gt; <span class="keyword">FALSE</span>,</span><br><span class="line"><span class="string">'stricton'</span> =&gt; <span class="keyword">FALSE</span>,</span><br><span class="line"><span class="string">'failover'</span> =&gt; <span class="keyword">array</span>(),</span><br><span class="line"><span class="string">'save_queries'</span> =&gt; <span class="keyword">TRUE</span></span><br><span class="line">);</span><br><span class="line">$db[<span class="string">'codeigniter'</span>] = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'dsn'</span>=&gt; <span class="string">''</span>,                   <span class="comment">// DNS连接字符串（该字符串包含了所有的数据库配置信息）</span></span><br><span class="line">    <span class="string">'hostname'</span> =&gt; <span class="string">'localhost'</span>,     <span class="comment">// 数据库的主机名</span></span><br><span class="line">    <span class="string">'port'</span> =&gt; <span class="number">3306</span>,                 <span class="comment">// 数据库端口号</span></span><br><span class="line">    <span class="string">'username'</span> =&gt; <span class="string">'codeigniter'</span>,  <span class="comment">// 需要连接到数据库的用户名</span></span><br><span class="line">    <span class="string">'password'</span> =&gt; <span class="string">'helloworld'</span>,   <span class="comment">// 登录数据库的密码</span></span><br><span class="line">    <span class="string">'database'</span> =&gt; <span class="string">'codeigniter'</span>,  <span class="comment">// 需要连接的数据库名</span></span><br><span class="line">    <span class="string">'dbdriver'</span> =&gt; <span class="string">'mysqli'</span>,       <span class="comment">// 数据库类型: mysqli postgres odbc</span></span><br><span class="line">    <span class="string">'dbprefix'</span> =&gt; <span class="string">''</span>,             <span class="comment">// 当使用查询构造器查询时，可以选择性的为表加个前缀</span></span><br><span class="line">    <span class="string">'pconnect'</span> =&gt; <span class="keyword">FALSE</span>,          <span class="comment">// 是否使用持续连接</span></span><br><span class="line">    <span class="string">'db_debug'</span> =&gt; (ENVIRONMENT !== <span class="string">'production'</span>), <span class="comment">// 是否显示数据库错误信息</span></span><br><span class="line">    <span class="string">'cache_on'</span> =&gt; <span class="keyword">FALSE</span>,             <span class="comment">// 是否开启数据库查询缓存</span></span><br><span class="line">    <span class="string">'cachedir'</span> =&gt; <span class="string">''</span>,                <span class="comment">// 数据库查询缓存目录所在服务器的绝对路径</span></span><br><span class="line">    <span class="string">'char_set'</span> =&gt; <span class="string">'utf8'</span>,           <span class="comment">// 与数据库通信时所使用的字符集</span></span><br><span class="line">    <span class="string">'dbcollat'</span> =&gt; <span class="string">'utf8_general_ci'</span>,<span class="comment">// 只是用与mysql和mysqli数据库驱动</span></span><br><span class="line">    <span class="string">'swap_pre'</span> =&gt; <span class="string">''</span>,     <span class="comment">// 替换默认的 dbprefix 表前缀，该项设置对于分布式应用是非常有用的， 可以在查询中使用由最终用户定制的表前缀。</span></span><br><span class="line">    <span class="string">'encrypt'</span> =&gt; <span class="keyword">FALSE</span>,  <span class="comment">// 是否使用加密连接</span></span><br><span class="line">    <span class="string">'compress'</span> =&gt; <span class="keyword">FALSE</span>, <span class="comment">// 是否使用客户端压缩协议（只用于MySQL）</span></span><br><span class="line">    <span class="string">'stricton'</span> =&gt; <span class="keyword">FALSE</span>, <span class="comment">// 是否强制使用 "Strict Mode" 连接, 在开发程序时，使用 strict SQL 是一个好习惯。</span></span><br><span class="line">    <span class="string">'failover'</span> =&gt; <span class="keyword">array</span>(),</span><br><span class="line">    <span class="string">'save_queries'</span> =&gt; <span class="keyword">TRUE</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">$active_group = <span class="string">'codeigniter'</span>; <span class="comment">// 告訴系统要使用codeigniter数据库</span></span><br><span class="line">$query_builder = <span class="keyword">TRUE</span>;         <span class="comment">// 数据库初始化时对查询构造器类进行全局设定</span></span><br></pre></td></tr></table></figure><p>使用哪款<strong>数据库</strong>，使用哪个<strong>端口</strong>会根据项目需求具体情况具体分析，CodeIgniter将这些信息整合到具体的配置文件中来统一配置。然后根据配置信息选择对应的<code>数据库适配器</code>、<code>查询构造类</code>等。各类数据库适配器目录结构如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">H:\CodeIgniter-3.1.11\system&gt;tree</span><br><span class="line">卷 test 的文件夹 PATH 列表</span><br><span class="line">卷序列号为 AC46-F491</span><br><span class="line">H:.</span><br><span class="line">├─core</span><br><span class="line">│  └─compat</span><br><span class="line">├─database</span><br><span class="line">│  └─drivers</span><br><span class="line">│      ├─cubrid</span><br><span class="line">│      ├─ibase</span><br><span class="line">│      ├─mssql</span><br><span class="line">│      ├─mysql</span><br><span class="line">│      ├─mysqli</span><br><span class="line">│      │      index.html</span><br><span class="line">│      │      mysqli_driver.php</span><br><span class="line">│      │      mysqli_forge.php</span><br><span class="line">│      │      mysqli_result.php</span><br><span class="line">│      │      mysqli_utility.php</span><br><span class="line">│      ├─oci8</span><br><span class="line">│      ├─odbc</span><br><span class="line">│      ├─pdo</span><br><span class="line">│      │  └─subdrivers</span><br><span class="line">│      ├─postgre</span><br><span class="line">│      ├─sqlite</span><br><span class="line">│      ├─sqlite3</span><br><span class="line">│      └─sqlsrv</span><br><span class="line">├─fonts</span><br><span class="line">├─...</span><br></pre></td></tr></table></figure><p>限于篇幅，上面仅<strong>手动</strong>加上了<code>mysqli</code>目录下的文件，其实每个数据库都有相对应的<code>driver</code>, <code>forge</code>, <code>result</code>, <code>utility</code>等文件。CodeIgniter根据配置文件中的数据库信息加载对应的文件。</p><h4 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h4><p>连接数据库有<code>自动连接</code>和<code>手动连接</code>两种方式，其中在加载<code>model</code>时可以设置同时连接数据库，在加载<code>dbutilh</code>和<code>dbforge</code>时则会间接的连接数据库。这里的连接数据库都是执行的<code>$this-&gt;load-&gt;database()</code>语句。</p><h5 id="自动连接"><a href="#自动连接" class="headerlink" title="自动连接"></a>自动连接</h5><p><code>自动连接</code>特性将在每一个页面加载时自动实例化数据库类。要启用<code>自动连接</code>， 可在 <code>application/config/autoload.php</code>中的<code>library</code>数组里添加<code>database</code>:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$autoload[<span class="string">'libraries'</span>] = <span class="keyword">array</span>(<span class="string">'database'</span>);</span><br></pre></td></tr></table></figure><p>配置好后会在<code>初始化Loader类</code>时完成数据库的连接，可参考<span class="exturl" data-url="aHR0cHM6Ly9wdXJldmVuLmNjLzIwMjAvMDIvMTcvY29kZWlnbml0ZXItbG9hZGVyLw==" title="https://pureven.cc/2020/02/17/codeigniter-loader/">Loader类<i class="fa fa-external-link"></i></span>中<code>initialize()</code>的方法。通过该方法间接执行了<code>this-&gt;load-&gt;database()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($autoload[<span class="string">'libraries'</span>]) &amp;&amp; count($autoload[<span class="string">'libraries'</span>]) &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Load the database driver. 此处是指初始化时就加载数据库</span></span><br><span class="line">    <span class="keyword">if</span> (in_array(<span class="string">'database'</span>, $autoload[<span class="string">'libraries'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 加载DB类，只有加载了才能使用$this-&gt;db-&gt;...</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;database();</span><br><span class="line">        <span class="comment">// 返回不包含'database'的数组</span></span><br><span class="line">        $autoload[<span class="string">'libraries'</span>] = array_diff($autoload[<span class="string">'libraries'</span>], <span class="keyword">array</span>(<span class="string">'database'</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Load all other libraries</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;library($autoload[<span class="string">'libraries'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="手动连接"><a href="#手动连接" class="headerlink" title="手动连接"></a>手动连接</h5><p><code>手动连接</code>是指可以手动执行<code>$this-&gt;load-&gt;database()</code>语句来连接数据库，详见<span class="exturl" data-url="aHR0cHM6Ly9jb2RlaWduaXRlci5vcmcuY24vdXNlcl9ndWlkZS9kYXRhYmFzZS9jb25uZWN0aW5nLmh0bWwjaWQ1" title="https://codeigniter.org.cn/user_guide/database/connecting.html#id5">手动连接到数据库<i class="fa fa-external-link"></i></span>。</p><hr><h4 id="连接过程分析"><a href="#连接过程分析" class="headerlink" title="连接过程分析"></a>连接过程分析</h4><p>当执行<code>$this-&gt;load-&gt;database()</code>语句时实际上执行的是<code>Loader类</code>中的<code>database()</code>方法，在<a href>Loader类</a>中有相关分析，这里单独拿出database()方法的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@params</span> - 数据库组名称或配置选项</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> - 是否返回加载的数据库对象，false表示将数据库类加载到超级对象，true表示直接返回数据库类实例</span></span><br><span class="line"><span class="comment">* <span class="doctag">@query</span>_builder 是否加载查询构造器</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">database</span><span class="params">($params = <span class="string">''</span>, $return = FALSE, $query_builder = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 获取超级对象</span></span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果要求返回数据库类实例，但是超级对象中已经加载并建立了到数据库的连接则直接返回false</span></span><br><span class="line">    <span class="keyword">if</span> ($return === <span class="keyword">FALSE</span> &amp;&amp; $query_builder === <span class="keyword">NULL</span> &amp;&amp; <span class="keyword">isset</span>($CI-&gt;db) &amp;&amp; is_object($CI-&gt;db) &amp;&amp; ! <span class="keyword">empty</span>($CI-&gt;db-&gt;conn_id))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重点： 加载DB.php文件，该文件中只有一个DB方法，加载数据库类和加载构造器都是通过这个方法来加载的</span></span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/DB.php'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这里判断如果要求返回数据库类的实例则直接通过DB()方法返回</span></span><br><span class="line">    <span class="keyword">if</span> ($return === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> DB($params, $query_builder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Initialize the db variable. Needed to prevent</span></span><br><span class="line">    <span class="comment">// reference errors with some configurations</span></span><br><span class="line">    $CI-&gt;db = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Load the DB class</span></span><br><span class="line">    $CI-&gt;db =&amp; DB($params, $query_builder);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面再来看看DB方法，该方法也就是<code>BASEPATH . &#39;database/DB.php&#39;</code>的内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@params</span> - 数据库连接值，一般为数据库组名称或配置选项</span></span><br><span class="line"><span class="comment">* <span class="doctag">@query</span>_builder_override - 是否加载查询构造器</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> &amp;<span class="title">DB</span><span class="params">($params = <span class="string">''</span>, $query_builder_override = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 如果数据连接值不是DSN字符串则加载配置文件database.php</span></span><br><span class="line">    <span class="keyword">if</span> (is_string($params) &amp;&amp; strpos($params, <span class="string">'://'</span>) === <span class="keyword">FALSE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// database.php文件不存在则报错</span></span><br><span class="line">        <span class="keyword">if</span> ( ! file_exists($file_path = APPPATH.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/database.php'</span>)</span><br><span class="line">            &amp;&amp; ! file_exists($file_path = APPPATH.<span class="string">'config/database.php'</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            show_error(<span class="string">'The configuration file database.php does not exist.'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 加载database.php文件</span></span><br><span class="line">        <span class="keyword">include</span>($file_path);</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// CI_Controller类中会调用$this-&gt;load-&gt;initialize();语句将autoload.php文件设置的默认加载项加载了</span></span><br><span class="line">        <span class="comment">// 因此如果存在CI_Controller说明已经加载了默认加载项</span></span><br><span class="line">        <span class="keyword">if</span> (class_exists(<span class="string">'CI_Controller'</span>, <span class="keyword">FALSE</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果默认加载项包含package，则需要判断package目录下有没有database.php配置文件，有则加载</span></span><br><span class="line">            <span class="keyword">foreach</span> (get_instance()-&gt;load-&gt;get_package_paths() <span class="keyword">as</span> $path)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ($path !== APPPATH)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (file_exists($file_path = $path.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/database.php'</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">include</span>($file_path);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">elseif</span> (file_exists($file_path = $path.<span class="string">'config/database.php'</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">include</span>($file_path);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// database.php文件中定义了$db数组，加载完database.php文件后如果不存在$db数组保存退出</span></span><br><span class="line">        <span class="keyword">if</span> ( ! <span class="keyword">isset</span>($db) <span class="keyword">OR</span> count($db) === <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            show_error(<span class="string">'No database connection settings were found in the database config file.'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// $active_group表示要使用哪个数据库组</span></span><br><span class="line">        <span class="comment">// 如果指定了数据库组就使用指定的，不指定就使用默认的，通常在database.php文件中会通过$active_group = 'default';语句来设置</span></span><br><span class="line">        <span class="keyword">if</span> ($params !== <span class="string">''</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $active_group = $params;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 如果不存在则说明没有指定要连接的数据库，保存退出</span></span><br><span class="line">        <span class="keyword">if</span> ( ! <span class="keyword">isset</span>($active_group))</span><br><span class="line">        &#123;</span><br><span class="line">            show_error(<span class="string">'You have not specified a database connection group via $active_group in your config/database.php file.'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span> ( ! <span class="keyword">isset</span>($db[$active_group]))</span><br><span class="line">        &#123;   <span class="comment">// 如果指定了数据库组，但是这个组内没有连接数据库的相关信息也会报错退出</span></span><br><span class="line">            show_error(<span class="string">'You have specified an invalid database connection group ('</span>.$active_group.<span class="string">') in your config/database.php file.'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 将连接数据库需要的信息赋值给$params， 这里的信息包括hostname、username、password、database、dbdriver、char_set...</span></span><br><span class="line">        $params = $db[$active_group];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (is_string($params))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * DSNs必须有以下属性: $dsn = 'driver://username:password<span class="doctag">@hostname</span>/database';</span></span><br><span class="line"><span class="comment">         * 例如： $dsn = 'pgsql:host=localhost;port=5432;dbname=database_name';</span></span><br><span class="line"><span class="comment">         * 使用parse_url方法解析dsn，并将解析后的关联数组赋值给$dsn，对于严重不合格的URL，将返回false</span></span><br><span class="line"><span class="comment">         * 下面会看到解析失败则报错退出</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (($dsn = @parse_url($params)) === <span class="keyword">FALSE</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            show_error(<span class="string">'Invalid DB Connection String'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        $params = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'dbdriver'</span>=&gt; $dsn[<span class="string">'scheme'</span>],</span><br><span class="line">            <span class="comment">// 这里要注意rawurldecode()方法对已编码的URL字符串进行解码</span></span><br><span class="line">            <span class="string">'hostname'</span>=&gt; <span class="keyword">isset</span>($dsn[<span class="string">'host'</span>]) ? rawurldecode($dsn[<span class="string">'host'</span>]) : <span class="string">''</span>,</span><br><span class="line">            <span class="string">'port'</span>=&gt; <span class="keyword">isset</span>($dsn[<span class="string">'port'</span>]) ? rawurldecode($dsn[<span class="string">'port'</span>]) : <span class="string">''</span>,</span><br><span class="line">            <span class="string">'username'</span>=&gt; <span class="keyword">isset</span>($dsn[<span class="string">'user'</span>]) ? rawurldecode($dsn[<span class="string">'user'</span>]) : <span class="string">''</span>,</span><br><span class="line">            <span class="string">'password'</span>=&gt; <span class="keyword">isset</span>($dsn[<span class="string">'pass'</span>]) ? rawurldecode($dsn[<span class="string">'pass'</span>]) : <span class="string">''</span>,</span><br><span class="line">            <span class="string">'database'</span>=&gt; <span class="keyword">isset</span>($dsn[<span class="string">'path'</span>]) ? rawurldecode(substr($dsn[<span class="string">'path'</span>], <span class="number">1</span>)) : <span class="string">''</span></span><br><span class="line">        );</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 解析问号？之后的参数，如get请求后跟的参数</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($dsn[<span class="string">'query'</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            parse_str($dsn[<span class="string">'query'</span>], $extra);</span><br><span class="line">    </span><br><span class="line">            <span class="keyword">foreach</span> ($extra <span class="keyword">as</span> $key =&gt; $val)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (is_string($val) &amp;&amp; in_array(strtoupper($val), <span class="keyword">array</span>(<span class="string">'TRUE'</span>, <span class="string">'FALSE'</span>, <span class="string">'NULL'</span>)))</span><br><span class="line">                &#123;</span><br><span class="line">                    $val = var_export($val, <span class="keyword">TRUE</span>);</span><br><span class="line">                &#125;</span><br><span class="line">    </span><br><span class="line">                $params[$key] = $val;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 没有指定数据库报错退出</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($params[<span class="string">'dbdriver'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(<span class="string">'You have not selected a database type to connect to.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// $query_builder表示是否加载数据库构造类，一般从database.php定义好，不过可以动态的改变，</span></span><br><span class="line">    <span class="comment">// 比如这里通过$query_builder_override的值来覆盖</span></span><br><span class="line">    <span class="keyword">if</span> ($query_builder_override !== <span class="keyword">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        $query_builder = $query_builder_override;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// $active_record变量在CodeIgniter2版本中设置，CodeIgniter3中删除了，这里做兼容处理</span></span><br><span class="line">    <span class="keyword">elseif</span> ( ! <span class="keyword">isset</span>($query_builder) &amp;&amp; <span class="keyword">isset</span>($active_record))</span><br><span class="line">    &#123;</span><br><span class="line">        $query_builder = $active_record;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 重点： 加载DB_driver.php文件，这个文件是一个抽象类CI_DB_driver</span></span><br><span class="line">    <span class="comment">// 定义了数据库的连接、选择、字符集设置、sql语句执行...一个基本的方法。</span></span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/DB_driver.php'</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">isset</span>($query_builder) <span class="keyword">OR</span> $query_builder === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 如果需要加载数据库构造类则加载BASEPATH.'database/DB_query_builer.php'文件</span></span><br><span class="line">        <span class="comment">// 该文件定义了一个抽象类CI_DB_query_builder，继承自CI_DB_driver</span></span><br><span class="line">        <span class="comment">// 查询构造类增加了查询有关的条件方法，使用起来灰常方便</span></span><br><span class="line">        <span class="comment">// 详情参考官网: https://codeigniter.org.cn/user_guide/database/query_builder.html</span></span><br><span class="line">        <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/DB_query_builder.php'</span>);</span><br><span class="line">        <span class="keyword">if</span> ( ! class_exists(<span class="string">'CI_DB'</span>, <span class="keyword">FALSE</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 这里很明确了，如果加载查询构造类，则CI_DB继承CI_DB_query_builder</span></span><br><span class="line">            <span class="class"><span class="keyword">class</span> <span class="title">CI_DB</span> <span class="keyword">extends</span> <span class="title">CI_DB_query_builder</span> </span>&#123; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> ( ! class_exists(<span class="string">'CI_DB'</span>, <span class="keyword">FALSE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 如果不加载查询构造类则直接继承CI_DB_driver</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">CI_DB</span> <span class="keyword">extends</span> <span class="title">CI_DB_driver</span> </span>&#123; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据配置信息加载对应的driver文件，比如BASEPATH . 'database/drivers/mysqli/mysqli_driver.php'文件</span></span><br><span class="line">    <span class="comment">// 该文件继承自CI_DB，具体实现了数据库的连接、选择、字符集设置、事务相关操作等等重要方法，</span></span><br><span class="line">    <span class="comment">// 因为每种数据库的这些方法不一样需要具体数据库具体设置</span></span><br><span class="line">    $driver_file = BASEPATH.<span class="string">'database/drivers/'</span>.$params[<span class="string">'dbdriver'</span>].<span class="string">'/'</span>.$params[<span class="string">'dbdriver'</span>].<span class="string">'_driver.php'</span>;</span><br><span class="line">    </span><br><span class="line">    file_exists($driver_file) <span class="keyword">OR</span> show_error(<span class="string">'Invalid DB driver'</span>); <span class="comment">// 每种driver文件只能加载一次，重复加载则报错退出</span></span><br><span class="line">    <span class="keyword">require_once</span>($driver_file);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 实例化DB适配器</span></span><br><span class="line">    $driver = <span class="string">'CI_DB_'</span>.$params[<span class="string">'dbdriver'</span>].<span class="string">'_driver'</span>;</span><br><span class="line">    $DB = <span class="keyword">new</span> $driver($params);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果存在subdrivers目录则加载subdrivers目录下的driver文件，比如pdo_mysql_driver.php文件</span></span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">empty</span>($DB-&gt;subdriver))</span><br><span class="line">    &#123;</span><br><span class="line">        $driver_file = BASEPATH.<span class="string">'database/drivers/'</span>.$DB-&gt;dbdriver.<span class="string">'/subdrivers/'</span>.$DB-&gt;dbdriver.<span class="string">'_'</span>.$DB-&gt;subdriver.<span class="string">'_driver.php'</span>;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> (file_exists($driver_file))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">require_once</span>($driver_file);</span><br><span class="line">            $driver = <span class="string">'CI_DB_'</span>.$DB-&gt;dbdriver.<span class="string">'_'</span>.$DB-&gt;subdriver.<span class="string">'_driver'</span>;</span><br><span class="line">            $DB = <span class="keyword">new</span> $driver($params);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 重要： 初始化函数完成了数据库的连接和字符集的设置</span></span><br><span class="line">    $DB-&gt;initialize();</span><br><span class="line">    <span class="keyword">return</span> $DB;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从代码中得知，<strong>首</strong>先通过<code>require_once(BASEPATH.&#39;database/DB_driver.php&#39;);</code>语句加载了抽象类<code>CI_DB_driver</code>，该类中定义了数据库连接、选择、字符集设置、sql语句执行等基本方法，这些方法在数据库适配类中完整实现。<strong>然</strong>后如果加载查询构造器则通过<code>require_once(BASEPATH.&#39;database/DB_query_builder.php&#39;);</code>语句加载<code>CI_DB_query_builder</code>抽象类，该类继承<code>CI_DB_driver</code>并定义了查询有关的方法，使用起来非常方便，<strong>然</strong>后根据是否加载查询构造器来定义<code>CI_DB</code>，<strong>最</strong>后实例化<code>CI_DB</code>。</p><p>如果加载了查询构造器就可以使用<code>$this-&gt;db-&gt;select()-&gt;where()-&gt;like()</code>等方法了，这是因为查询构造器中定义了这类方法。下面再来看看另一个常用数据库类<code>dbforge</code>。</p><hr><h4 id="数据库工厂类"><a href="#数据库工厂类" class="headerlink" title="数据库工厂类"></a>数据库工厂类</h4><p>在migrate文件中经常会用的<code>dbforge</code>，该类默认在迁移类(<code>CI_Migration</code>)中加载，用来对数据表做一些操作，这里的<code>dbforge</code>即<span class="exturl" data-url="aHR0cHM6Ly9jb2RlaWduaXRlci5vcmcuY24vdXNlcl9ndWlkZS9kYXRhYmFzZS9mb3JnZS5odG1sI2lkMQ==" title="https://codeigniter.org.cn/user_guide/database/forge.html#id1">数据库工厂类<i class="fa fa-external-link"></i></span>，该类主要完成一下功能：</p><ul><li>创建和删除数据库</li><li>创建和删除数据表，包括添加字段、添加键、创建表、删除表、重命名表等</li><li>修改表，包括给表添加列、从表中删除列、修改表中的某个列等</li></ul><p>下面来看代码实现：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dbforge</span><span class="params">($db = NULL, $return = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line">    <span class="keyword">if</span> ( ! is_object($db) <span class="keyword">OR</span> ! ($db <span class="keyword">instanceof</span> CI_DB))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 先要连接数据库才能后续操作</span></span><br><span class="line">        class_exists(<span class="string">'CI_DB'</span>, <span class="keyword">FALSE</span>) <span class="keyword">OR</span> <span class="keyword">$this</span>-&gt;database();</span><br><span class="line">        $db =&amp; $CI-&gt;db;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载BASEPATH . 'database/DB_forge.php'文件，即抽象类CI_DB_forge</span></span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/DB_forge.php'</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据选择的数据库从适配器目录下加载对应的forge类，比如CI_DB_mysqli_forge类，该类继承自CI_DB_forge</span></span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/drivers/'</span>.$db-&gt;dbdriver.<span class="string">'/'</span>.$db-&gt;dbdriver.<span class="string">'_forge.php'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">empty</span>($db-&gt;subdriver))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 例如pdo方式操作mysql，则要加载BASEPATH . 'database/drivers/pdo/subdrivers/pdo_mysql_forge.php'</span></span><br><span class="line">        $driver_path = BASEPATH.<span class="string">'database/drivers/'</span>.$db-&gt;dbdriver.<span class="string">'/subdrivers/'</span>.$db-&gt;dbdriver.<span class="string">'_'</span>.$db-&gt;subdriver.<span class="string">'_forge.php'</span>;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($driver_path))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">require_once</span>($driver_path);</span><br><span class="line">            $class = <span class="string">'CI_DB_'</span>.$db-&gt;dbdriver.<span class="string">'_'</span>.$db-&gt;subdriver.<span class="string">'_forge'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $class = <span class="string">'CI_DB_'</span>.$db-&gt;dbdriver.<span class="string">'_forge'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果返回对象则返回CI_DB_mysqli_forge类的实例</span></span><br><span class="line">    <span class="keyword">if</span> ($return === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> $class($db);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 否则将该实例加入超级对象$CI中</span></span><br><span class="line">    $CI-&gt;dbforge = <span class="keyword">new</span> $class($db);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当执行<code>$this-&gt;load-&gt;dbforge();</code>语句后就可以通过<code>$this-&gt;dbforge-&gt;...</code>来管理数据库了。</p><h4 id="数据库工具类"><a href="#数据库工具类" class="headerlink" title="数据库工具类"></a>数据库工具类</h4><p>数据库工具类暂时未用到，后续补上。</p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter迁移类文件Migration.php</title>
      <link href="/2020/03/15/codeigniter-migration/"/>
      <url>/2020/03/15/codeigniter-migration/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>使用迁移类可以很方便的组织和管理数据库的变更，该类包含8个成员变量和11个成员方法。</p><a id="more"></a><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 启用或禁用迁移，默认为禁用</span></span><br><span class="line"><span class="keyword">protected</span> $_migration_enabled = <span class="keyword">FALSE</span>;</span><br><span class="line"><span class="comment">// 迁移文件的命名规则， 默认为'sequential'， 其实'timestamp'更常用一些</span></span><br><span class="line"><span class="keyword">protected</span> $_migration_type = <span class="string">'sequential'</span>;</span><br><span class="line"><span class="comment">// 迁移目录所在位置，默认为APPPATH . 'migrations/'</span></span><br><span class="line"><span class="keyword">protected</span> $_migration_path = <span class="keyword">NULL</span>;</span><br><span class="line"><span class="comment">// 当前数据库所使用的版本，默认0</span></span><br><span class="line"><span class="keyword">protected</span> $_migration_version = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 用于存储当前版本的数据库表名</span></span><br><span class="line"><span class="keyword">protected</span> $_migration_table = <span class="string">'migrations'</span>;</span><br><span class="line"><span class="comment">// 启用或禁用自动迁移，默认不启用</span></span><br><span class="line"><span class="keyword">protected</span> $_migration_auto_latest = <span class="keyword">FALSE</span>;</span><br><span class="line"><span class="comment">// migrate文件的正则匹配模式，有两种，'/^\d&#123;14&#125;_(\w+)$/'和'/^\d&#123;3&#125;_(\w+)$/'分别对应'timestamp'和'sequential'</span></span><br><span class="line"><span class="keyword">protected</span> $_migration_regex;</span><br><span class="line"><span class="comment">// 表示迁移过程中的错误信息</span></span><br><span class="line"><span class="keyword">protected</span> $_error_string = <span class="string">''</span>;</span><br></pre></td></tr></table></figure><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($config = array<span class="params">()</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 如果不是CI_Migration类或者CI_Migration类的子类则退出，即只能在CI_Migration类及其子类加载该构造方法</span></span><br><span class="line">    <span class="keyword">if</span> ( ! in_array(get_class(<span class="keyword">$this</span>), <span class="keyword">array</span>(<span class="string">'CI_Migration'</span>, config_item(<span class="string">'subclass_prefix'</span>).<span class="string">'Migration'</span>), <span class="keyword">TRUE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可选参数$config用来覆盖成员变量的默认值</span></span><br><span class="line">    <span class="keyword">foreach</span> ($config <span class="keyword">as</span> $key =&gt; $val)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;&#123;<span class="string">'_'</span>.$key&#125; = $val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    log_message(<span class="string">'info'</span>, <span class="string">'Migrations Class Initialized'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果迁移功能处于禁用状态则报错退出</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_migration_enabled !== <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(<span class="string">'Migrations has been loaded but is disabled or set up incorrectly.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取迁移文件路径，默认为APPPATH . 'migrations/'</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_migration_path !== <span class="string">''</span> <span class="keyword">OR</span> <span class="keyword">$this</span>-&gt;_migration_path = APPPATH.<span class="string">'migrations/'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 迁移文件路径格式化</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_migration_path = rtrim(<span class="keyword">$this</span>-&gt;_migration_path, <span class="string">'/'</span>).<span class="string">'/'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载BASEPATH . '/language/english/migration_lang.php'</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;lang-&gt;load(<span class="string">'migration'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载数据库工厂类</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;load-&gt;dbforge();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果数据库中没有migrations表则报错退出</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;_migration_table))</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(<span class="string">'Migrations configuration file (migration.php) must have "migration_table" set.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据迁移文件的命名规则来确定用哪种正则匹配模式</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_migration_regex = (<span class="keyword">$this</span>-&gt;_migration_type === <span class="string">'timestamp'</span>)</span><br><span class="line">        ? <span class="string">'/^\d&#123;14&#125;_(\w+)$/'</span></span><br><span class="line">        : <span class="string">'/^\d&#123;3&#125;_(\w+)$/'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果迁移文件的命名规则既不是'sequential'也不是'timestamp'则报错退出</span></span><br><span class="line">    <span class="keyword">if</span> ( ! in_array(<span class="keyword">$this</span>-&gt;_migration_type, <span class="keyword">array</span>(<span class="string">'sequential'</span>, <span class="string">'timestamp'</span>)))</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(<span class="string">'An invalid migration numbering type was specified: '</span>.<span class="keyword">$this</span>-&gt;_migration_type);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果migrations表不存在则创建</span></span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">$this</span>-&gt;db-&gt;table_exists(<span class="keyword">$this</span>-&gt;_migration_table))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 一般来说，在调用 create_table() 方法的后面使用 $this-&gt;dbforge-&gt;add_field($fields); 方法来添加字段</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;dbforge-&gt;add_field(<span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'version'</span> =&gt; <span class="keyword">array</span>(<span class="string">'type'</span> =&gt; <span class="string">'BIGINT'</span>, <span class="string">'constraint'</span> =&gt; <span class="number">20</span>),</span><br><span class="line">        ));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;dbforge-&gt;create_table(<span class="keyword">$this</span>-&gt;_migration_table, <span class="keyword">TRUE</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;db-&gt;insert(<span class="keyword">$this</span>-&gt;_migration_table, <span class="keyword">array</span>(<span class="string">'version'</span> =&gt; <span class="number">0</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果启用了自动迁移，但是发现当前并不是最新版本则报错退出</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_migration_auto_latest === <span class="keyword">TRUE</span> &amp;&amp; ! <span class="keyword">$this</span>-&gt;latest())</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(<span class="keyword">$this</span>-&gt;error_string());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="version"><a href="#version" class="headerlink" title="version()"></a>version()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">version</span><span class="params">($target_version)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 获取当前版本</span></span><br><span class="line">    $current_version = <span class="keyword">$this</span>-&gt;_get_version();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 格式化目标版本</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_migration_type === <span class="string">'sequential'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        $target_version = sprintf(<span class="string">'%03d'</span>, $target_version);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $target_version = (string) $target_version;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回 migration_path 目录下的所有迁移文件的数组</span></span><br><span class="line">    $migrations = <span class="keyword">$this</span>-&gt;find_migrations();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指定的版本并没有在迁移文件数组中则报错退出</span></span><br><span class="line">    <span class="keyword">if</span> ($target_version &gt; <span class="number">0</span> &amp;&amp; ! <span class="keyword">isset</span>($migrations[$target_version]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_error_string = sprintf(<span class="keyword">$this</span>-&gt;lang-&gt;line(<span class="string">'migration_not_found'</span>), $target_version);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($target_version &gt; $current_version)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 指定的目标版本大于当前版本说明要做升级</span></span><br><span class="line">        $method = <span class="string">'up'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> ($target_version &lt; $current_version)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 小于当前版本说明要做回退</span></span><br><span class="line">        $method = <span class="string">'down'</span>;</span><br><span class="line">        <span class="comment">// 这里按照键名逆向排序， 这里排完序后便于回退处理</span></span><br><span class="line">        krsort($migrations);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 相等则说明不用迁移了</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用来存放要迁移的migrate文件</span></span><br><span class="line">    $pending = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">foreach</span> ($migrations <span class="keyword">as</span> $number =&gt; $file)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ($method === <span class="string">'up'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 这里要做升级，当$number小于等于当前版本时继续下次循环，大于指定版本时退出，也就是说大于当前版本小于指定版本的$number继续下面的流程</span></span><br><span class="line">            <span class="keyword">if</span> ($number &lt;= $current_version)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">elseif</span> ($number &gt; $target_version)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 这里要做回退，当$number大于当前版本时继续下次循环，小于等于指定版本时退出，也就是说小于当前版本大于指定版本的$number继续下面的流程</span></span><br><span class="line">            <span class="keyword">if</span> ($number &gt; $current_version)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">elseif</span> ($number &lt;= $target_version)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_migration_type === <span class="string">'sequential'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 每个迁移文件以数字序列格式递增命名，从 001 开始，每个数字都需要占三位，序列之间不能有间隙。</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($previous) &amp;&amp; abs($number - $previous) &gt; <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;_error_string = sprintf(<span class="keyword">$this</span>-&gt;lang-&gt;line(<span class="string">'migration_sequence_gap'</span>), $number);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 记录当前序列号，跟下次比较时使用</span></span><br><span class="line">            $previous = $number;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 加载migrate文件</span></span><br><span class="line">        <span class="keyword">include_once</span>($file);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// migrate文件跟类名不一致： 20200315195100_add_user_table ==&gt; Migration_add_user_table</span></span><br><span class="line">        <span class="comment">// 这里$class = Migration_Add_user_table，解释了为什么创建migrate文件时要把Migrate改成时间戳或序列号了</span></span><br><span class="line">        $class = <span class="string">'Migration_'</span>.ucfirst(strtolower(<span class="keyword">$this</span>-&gt;_get_migration_name(basename($file, <span class="string">'.php'</span>))));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 不区分大小写，就上面的例子来说所以Migration_add_user_table也能匹配到</span></span><br><span class="line">        <span class="comment">// 如果匹配不到说明加载的migrate文件不包括指定的类，报错退出</span></span><br><span class="line">        <span class="keyword">if</span> ( ! class_exists($class, <span class="keyword">FALSE</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_error_string = sprintf(<span class="keyword">$this</span>-&gt;lang-&gt;line(<span class="string">'migration_class_doesnt_exist'</span>), $class);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span> ( ! is_callable(<span class="keyword">array</span>($class, $method)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 类存在了，但是没有升级(up)或回退(down)对应的方法也要报错</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;_error_string = sprintf(<span class="keyword">$this</span>-&gt;lang-&gt;line(<span class="string">'migration_missing_'</span>.$method.<span class="string">'_method'</span>), $class);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果符合条件，将migrate文件加入到$pending数组中</span></span><br><span class="line">        $pending[$number] = <span class="keyword">array</span>($class, $method);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历执行符合条件的migrate文件</span></span><br><span class="line">    <span class="keyword">foreach</span> ($pending <span class="keyword">as</span> $number =&gt; $migration)</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(<span class="string">'debug'</span>, <span class="string">'Migrating '</span>.$method.<span class="string">' from version '</span>.$current_version.<span class="string">' to version '</span>.$number);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// migration数组首元素时类名，这里改成实际的对象然后调用call_user_func()来执行就ok了</span></span><br><span class="line">        $migration[<span class="number">0</span>] = <span class="keyword">new</span> $migration[<span class="number">0</span>];</span><br><span class="line">        call_user_func($migration);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 执行完成后$number即当前版本了，更新到数据库</span></span><br><span class="line">        $current_version = $number;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_update_version($current_version);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 执行完成后发现当前版本跟指定版本不一致，再次更新数据库，将migrate版本号设置为指定版本</span></span><br><span class="line">    <span class="keyword">if</span> ($current_version &lt;&gt; $target_version)</span><br><span class="line">    &#123;</span><br><span class="line">        $current_version = $target_version;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_update_version($current_version);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    log_message(<span class="string">'debug'</span>, <span class="string">'Finished migrating to '</span>.$current_version);</span><br><span class="line">    <span class="keyword">return</span> $current_version;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>迁移(<code>升级或回退</code>)到指定版本。</p><hr><h4 id="latest"><a href="#latest" class="headerlink" title="latest()"></a>latest()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">latest</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $migrations = <span class="keyword">$this</span>-&gt;find_migrations();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($migrations))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_error_string = <span class="keyword">$this</span>-&gt;lang-&gt;line(<span class="string">'migration_none_found'</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取migrations最后一个元素，也就是最新版本migrate文件</span></span><br><span class="line">    $last_migration = basename(end($migrations));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 升级到最新版本</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;version(<span class="keyword">$this</span>-&gt;_get_migration_number($last_migration));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="current"><a href="#current" class="headerlink" title="current()"></a>current()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">current</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;version(<span class="keyword">$this</span>-&gt;_migration_version);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>升级到指定版本，默认0，可以在配置文件中指定具体版本来覆盖默认版本即可。</p><hr><h4 id="error-string"><a href="#error-string" class="headerlink" title="error_string()"></a>error_string()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">error_string</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_error_string;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回错误信息。</p><hr><h4 id="find-migrations"><a href="#find-migrations" class="headerlink" title="find_migrations()"></a>find_migrations()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">find_migrations</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $migrations = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// globglob — 寻找与模式(*_*.php)匹配的文件路径</span></span><br><span class="line">    <span class="keyword">foreach</span> (glob(<span class="keyword">$this</span>-&gt;_migration_path.<span class="string">'*_*.php'</span>) <span class="keyword">as</span> $file)</span><br><span class="line">    &#123;</span><br><span class="line">        $name = basename($file, <span class="string">'.php'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 拿到文件之后使用migrate文件的正则匹配模式过滤文件</span></span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="keyword">$this</span>-&gt;_migration_regex, $name))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 拿到migrate文件的序列号或时间戳</span></span><br><span class="line">            $number = <span class="keyword">$this</span>-&gt;_get_migration_number($name);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 时间戳或序列号不能重复，否则报错退出</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($migrations[$number]))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;_error_string = sprintf(<span class="keyword">$this</span>-&gt;lang-&gt;line(<span class="string">'migration_multiple_version'</span>), $number);</span><br><span class="line">                show_error(<span class="keyword">$this</span>-&gt;_error_string);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 将过滤后的文件放入$migration数组中，将时间戳或序列号作为key</span></span><br><span class="line">            $migrations[$number] = $file;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据key值排序-顺序排序</span></span><br><span class="line">    ksort($migrations);</span><br><span class="line">    <span class="keyword">return</span> $migrations;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get-migration-number"><a href="#get-migration-number" class="headerlink" title="_get_migration_number()"></a>_get_migration_number()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_get_migration_number</span><span class="params">($migration)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sscanf($migration, <span class="string">'%[0-9]+'</span>, $number)</span><br><span class="line">        ? $number : <span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从migrate文件名中拿到数字部分。</p><hr><h4 id="get-migration-name"><a href="#get-migration-name" class="headerlink" title="_get_migration_name()"></a>_get_migration_name()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_get_migration_name</span><span class="params">($migration)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $parts = explode(<span class="string">'_'</span>, $migration);</span><br><span class="line">    array_shift($parts);</span><br><span class="line">    <span class="keyword">return</span> implode(<span class="string">'_'</span>, $parts);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从migrate文件名中去掉数字部分。</p><hr><h4 id="get-version"><a href="#get-version" class="headerlink" title="_get_version()"></a>_get_version()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_get_version</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $row = <span class="keyword">$this</span>-&gt;db-&gt;select(<span class="string">'version'</span>)-&gt;get(<span class="keyword">$this</span>-&gt;_migration_table)-&gt;row();</span><br><span class="line">    <span class="keyword">return</span> $row ? $row-&gt;version : <span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取数据库中保存的版本号，即当前版本。</p><hr><h4 id="update-version"><a href="#update-version" class="headerlink" title="_update_version()"></a>_update_version()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_update_version</span><span class="params">($migration)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;db-&gt;update(<span class="keyword">$this</span>-&gt;_migration_table, <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'version'</span> =&gt; $migration</span><br><span class="line">    ));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将指定版本更新到数据库中。</p><hr><h4 id="get"><a href="#get" class="headerlink" title="__get()"></a>__get()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($var)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> get_instance()-&gt;$var;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>魔术方法，用于使用超级对象CI。</p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Phpstorm License</title>
      <link href="/2020/03/11/phpstormm-about-license/"/>
      <url>/2020/03/11/phpstormm-about-license/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>本文持续跟进phpstorm可用的license。</p><a id="more"></a><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><p><font color="#891717"><b>下面步骤作废，可直接参考<span class="exturl" data-url="aHR0cDovL2lkZWEubWVkZW1pbmcuY29tL2pldHMv" title="http://idea.medeming.com/jets/">该链接<i class="fa fa-external-link"></i></span></b></font></p><ol><li><p>将下列配置加入<code>hosts</code>文件。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> <span class="string">https://account.jetbrains.com:443</span></span><br><span class="line"><span class="number">1.2</span><span class="number">.3</span><span class="number">.4</span> <span class="string">account.jetbrains.com</span></span><br><span class="line"><span class="number">1.2</span><span class="number">.3</span><span class="number">.4</span> <span class="string">http://www.jetbrains.com</span></span><br><span class="line"><span class="number">1.2</span><span class="number">.3</span><span class="number">.4</span> <span class="string">www-weighted.jetbrains.com</span></span><br><span class="line"><span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> <span class="string">account.jetbrains.com</span></span><br></pre></td></tr></table></figure></li><li><p>命令行执行<code>ipconfig /flushdns</code>刷新DNS缓存。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Microsoft Windows [版本 10.0.18362.657]</span><br><span class="line">(c) 2019 Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">C:\Users\39260&gt;ipconfig /flushdns</span><br></pre></td></tr></table></figure></li><li><p>打开Phpstorm，选择<code>Enter Key</code>，然后选择<code>Activation code</code>，输入下面License。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Z4ZSP0F8FF-eyJsaWNlbnNlSWQiOiJaNFpTUDBGOEZGIiwibGljZW5zZWVOYW1lIjoi5rC45LmF5r+A5rS7IGlkZWEubWVkZW1pbmcuY29tIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IiIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlNDIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU0YiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRNIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUkQiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU1YiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAyMC0wNS0yMiIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAyMC0wNS0yMiIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQREIiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFdTIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBHTyIsInBhaWRVcFRvIjoiMjAyMC0wNS0yMiIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUFMiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBDIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBSQiIsInBhaWRVcFRvIjoiMjAyMC0wNS0yMiIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU1ciLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiRFAiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlMiLCJwYWlkVXBUbyI6IjIwMjAtMDUtMjIiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiRFBBIiwicGFpZFVwVG8iOiIyMDIwLTA1LTIyIiwiZXh0ZW5kZWQiOnRydWV9XSwibWV0YWRhdGEiOiIwMTIwMjAwNDIzUFBBTTAwMDAwNSIsImhhc2giOiIxNzc0Mzc0NC8wOi0yMTI0OTkyNzQ5IiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-HrnYQ9EDqNdNoAVOYpdOl0Tq/9hf1d6qcWb2kNFTV+Yo7WLrHh8qYN8DMInZnJqLBXqIUeSEMSVDv8fcWU3yHrtnRACz+7BFyVEoYOi6lcgPOROcwGTgpGk8IGww6EE+lTcFaod249TXxc0eoVSUAQWa5NNq35PJ/lYQSFhzWCkKs7NRTdBFirB9zRYfnFdLPNd2I4N2k4doAZiqYT4weMcouBuD9QfGDpwyET2gF7f1lTzdILEthHBe/EQukmus8fZh/adYpFpKhvnAuTwHd9jVaDw/H3QFI1rlQMeGN51uXRPwyVNuqldKbPTU5lXJNWn2WhiauXz4Ja0ih7HBWA==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</span><br></pre></td></tr></table></figure></li></ol><p><strong>注：该license维保期到<code>2021年2月9号</code>。</strong></p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHPStorm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx高级配置</title>
      <link href="/2020/03/08/nginx-advanced-conf/"/>
      <url>/2020/03/08/nginx-advanced-conf/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p><span class="exturl" data-url="aHR0cHM6Ly9wdXJldmVuLmNjLzIwMjAvMDMvMDYvbmdpbngtc2ltcGxlLWNvbmYtd2l0aC1waHAtZnBtLw==" title="https://pureven.cc/2020/03/06/nginx-simple-conf-with-php-fpm/">上文<i class="fa fa-external-link"></i></span>对Windows平台下搭建Nginx + PHP环境做了介绍，通过上文的配置通过<code>http://localhost:6688/index.php</code>访问本地的index.php文件。这时index.php文件是通过后端服务器进行解析的，此时Nginx作为代理服务器，本文对Nginx作为代理服务器进行介绍以及一些其他功能。</p><a id="more"></a><hr><h4 id="正向代理与反向代理"><a href="#正向代理与反向代理" class="headerlink" title="正向代理与反向代理"></a>正向代理与反向代理</h4><h5 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h5><p>正向代理也是大家最常接触的到的代理模式，我们会从两个方面来说关于正向代理的处理模式，分别从软件方面和生活方面来解释一下什么叫正向代理。比如我们想要访问facebook，但是因为国内的网络环境我们是访问不了的，我们就会去使用一些翻墙工具，帮助我们访问facebook，那么翻墙工具背后实际上就是一个可以访问国外网站的代理服务器，我们将请求发送给代理服务器，代理服务器去访问国外的网站，然后将访问到的数据传递给我们。 </p><p>上述这样的代理模式称为正向代理，<code>正向代理最大的特点是客户端非常明确要访问的服务器地址；服务器只清楚请求来自哪个代理服务器，而不清楚来自哪个具体的客户端；正向代理模式屏蔽或者隐藏了真实客户端信息。</code><br><img src="/2020/03/08/nginx-advanced-conf/20200308163752.png" alt></p><h5 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h5><p>某宝网站，每天同时连接到网站的访问人数已经爆表，单个服务器远远不能满足人民日益增长的购买欲望了，此时就出现了一个大家耳熟能详的名词：<code>分布式部署，即通过部署多台服务器来解决访问人数限制的问题</code>；某宝网站中大部分功能也是直接使用<code>Nginx</code>进行反向代理实现的。<br><img src="/2020/03/08/nginx-advanced-conf/20200308164312.png" alt><br>多个客户端给服务器发送的请求，Nginx服务器接收到之后，按照一定的规则分发给了后端的业务处理服务器进行处理了。此时~请求的来源也就是客户端是明确的，但是请求具体由哪台服务器处理的并不明确了，Nginx扮演的就是一个反向代理角色。</p><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><p>本地是Windows系统，当访问localhost:6688/index.php时结果如下：<br><img src="https://pureven.cc/2020/03/06/nginx-simple-conf-with-php-fpm/20200306144934.png" alt><br>此时有一个Linux平台，当通过本地Nginx服务器去代理Linux服务器时步骤如下：</p><ol><li><p>修改本地<code>nginx.conf</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">listen</span> <span class="number">6688</span><span class="string">;</span></span><br><span class="line">    <span class="string">server_name</span> <span class="string">localhost;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">location</span> <span class="string">^~</span> <span class="string">/pureven</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">proxy_pass</span> <span class="string">http://192.168.31.3:80/index.php;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>修改Linux(192.168.31.3)服务器<code>nginx.conf</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">listen</span> <span class="number">80</span><span class="string">;</span></span><br><span class="line">    <span class="string">server_name</span> <span class="string">localhost;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">location</span> <span class="string">~</span> <span class="string">\.php$</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">root</span> <span class="string">html;</span> </span><br><span class="line">        <span class="string">fastcgi_pass</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:16688;</span></span><br><span class="line">        <span class="string">fastcgi_index</span> <span class="string">index.php;</span></span><br><span class="line">        <span class="string">fastcgi_param</span> <span class="string">SCRIPT_FILENAME</span> <span class="string">$document_root$fastcgi_script_name;</span></span><br><span class="line">        <span class="string">include</span> <span class="string">fastcgi_params;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>修改Linux(192.168.31.3)服务器<code>www.conf</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">listen</span> <span class="string">=</span> <span class="number">16688</span></span><br></pre></td></tr></table></figure></li><li><p>浏览器访问<code>localhost:6688/pureven</code><br><img src="/2020/03/08/nginx-advanced-conf/20200308170806.png" alt></p></li><li><p>proxy_pass使用方法参考<span class="exturl" data-url="aHR0cHM6Ly94dWV4Yi5naXRodWIuaW8vbGVhcm4tbmdpbngvZXhhbXBsZS9wcm94eV9wYXNzLmh0bWwjdXJsLSVFNSU4RiVBQSVFNiU5OCVBRi1ob3N0" title="https://xuexb.github.io/learn-nginx/example/proxy_pass.html#url-%E5%8F%AA%E6%98%AF-host">proxy_pass url 反向代理的坑<i class="fa fa-external-link"></i></span>。</p></li></ol><hr><h4 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h4><p><strong>当我们的应用单例不能支撑用户请求时，此时就需要扩容，从一台服务器扩容到两台、几十台、几百台，我们需要一个入口，将客户端请求均衡分布在后台的多个服务器上。负载均衡在服务端开发中算是一个比较重要的特性，Nginx提供的负载均衡可以实现<code>上游服务器的负载均衡</code>、<code>故障转移</code>、<code>失败重试</code>、<code>容错</code>、<code>健康检查</code>，当某些上游服务器出现问题时，可以将请求转到其它的上游服务器从而保障高可用。</strong></p><h5 id="upstream指令"><a href="#upstream指令" class="headerlink" title="upstream指令"></a>upstream指令</h5><p>Nginx通过如下配置负载均衡到真实的处理业务的服务器(即<code>上游服务器</code>)：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">upstream</span> <span class="string">backend</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">server</span> <span class="string">backend1.example.com</span>       <span class="string">weight=5;</span></span><br><span class="line">    <span class="string">server</span> <span class="string">backend2.example.com:8080;</span></span><br><span class="line">    <span class="string">server</span> <span class="string">unix:/tmp/backend3;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">server</span> <span class="string">backup1.example.com:8080</span>   <span class="string">backup;</span></span><br><span class="line">    <span class="string">server</span> <span class="string">backup2.example.com:8080</span>   <span class="string">backup;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">proxy_pass</span> <span class="string">http://backend;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p><code>upstream</code>指令当中包含<code>server</code>指令</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">语法:</span><span class="string">server</span> <span class="string">address</span> <span class="string">[parameters];</span></span><br><span class="line"><span class="string">默认值:</span><span class="string">—</span></span><br><span class="line"><span class="string">上下文:</span><span class="string">upstream</span></span><br></pre></td></tr></table></figure><p>下面介绍部分parameters:</p><ul><li><strong>weight</strong>: 设定服务器的<code>权重</code>，默认是1，权重越大被访问机会越大，要根据机器的配置情况来配置</li><li><strong>max_fails</strong>: 设定Nginx与服务器通信的<code>尝试失败的次数</code>。在<code>fail_timeout</code>参数定义的时间段内，如果失败的次数达到此值，Nginx就认为服务器不可用。在下一个fail_timeout时间段，服务器不会再被尝试。 失败的尝试次数默认是1。可以通过指令<code>proxy_next_upstream</code> 和<code>memcached_next_upstream</code>来配置什么是失败的尝试。 <code>默认配置时，http_404状态不被认为是失败的尝试</code>。</li><li><strong>fail_timeout</strong>: <code>统计失败尝试次数的时间段</code>。在这段时间中，服务器失败次数达到指定的尝试次数，服务器就被认为不可用。默认情况下，该超时时间是10秒。</li><li><strong>backup</strong>: 标记为<code>备用服务器</code>。当主服务器不可用以后，请求会被传给这些服务器，配置这个指令可以实现故障转移。</li><li><strong>down</strong>: 标记服务器<code>永久不可用</code>，可以跟<code>ip_hash</code>指令一起使用。</li></ul><h5 id="负载均衡机制"><a href="#负载均衡机制" class="headerlink" title="负载均衡机制"></a>负载均衡机制</h5><h6 id="轮询"><a href="#轮询" class="headerlink" title="轮询"></a>轮询</h6><p>默认的轮询方式，即每一个来自网络中的请求，轮流分配给内部的服务器，从1到N然后重新开始。此种负载均衡算法适合<code>服务器组内部的服务器都具有相同的配置并且平均服务请求相对均衡的情况。</code></p><h6 id="加权轮询"><a href="#加权轮询" class="headerlink" title="加权轮询"></a>加权轮询</h6><p>通过<code>weight</code>参数控制权重，根据服务器的不同处理能力，给每个服务器分配不同的权值，使其能够接受相应权值数的服务请求。例如：服务器A的权值被设计成1，B的权值是3，C的权值是6，则服务器A、B、C将分别接受到10%、30％、60％的服务请求。<code>此种均衡算法能确保高性能的服务器得到更多的使用率，避免低性能的服务器负载过重。</code></p><h6 id="IP-Hash"><a href="#IP-Hash" class="headerlink" title="IP Hash"></a>IP Hash</h6><p>在upstream当中配置ip_hash;<br>这种方式通过生成请求源IP的哈希值，并通过这个哈希值来找到正确的真实服务器。这意味着对于同一主机来说他对应的服务器总是相同。使用这种方式，你不需要保存任何源IP。将客户端会话”沾住”或者”持久化”，以便总是能选择特定服务器，那么可以使用ip-hash负载均衡机制。<code>使用ip-hash时，客户端IP地址作为hash key使用，用来决策选择服务器集群中的哪个服务器来处理这个客户端的请求。这个方法保证从同一个客户端发起的请求总是定向到同一台服务器，除非服务器不可用。</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">upstream</span> <span class="string">backend&#123;</span></span><br><span class="line">    <span class="string">ip_hash;</span></span><br><span class="line">    <span class="string">server</span> <span class="number">192.168</span><span class="number">.128</span><span class="number">.1</span><span class="string">:8080</span> <span class="string">;</span></span><br><span class="line">    <span class="string">server</span> <span class="number">192.168</span><span class="number">.128</span><span class="number">.2</span><span class="string">:8080</span> <span class="string">;</span></span><br><span class="line">    <span class="string">server</span> <span class="number">192.168</span><span class="number">.128</span><span class="number">.3</span><span class="string">:8080</span> <span class="string">down;</span></span><br><span class="line">    <span class="string">server</span> <span class="number">192.168</span><span class="number">.128</span><span class="number">.4</span><span class="string">:8080</span> <span class="string">down;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">listen</span> <span class="number">8081</span><span class="string">;</span></span><br><span class="line">    <span class="string">server_name</span> <span class="string">test.csdn.net;</span></span><br><span class="line">    <span class="string">root</span> <span class="string">/home/system/test.csdn.net/test;</span></span><br><span class="line">    <span class="string">location</span> <span class="string">^~</span> <span class="string">/Upload/upload</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">proxy_pass</span> <span class="string">http://backend;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>当你服务端的一个特定url路径会被同一个用户连续访问时，如果负载均衡策略还是轮询的话，那该用户的多次访问会被打到各台服务器上，<strong>这显然并不高效（会建立多次http链接等问题）</strong>。甚至考虑一种极端情况，<strong>用户需要分片上传文件到服务器下，然后再由服务器将分片合并，这时如果用户的请求到达了不同的服务器，那么分片将存储于不同的服务器目录中，导致无法将分片合并</strong>。所以，此类场景可以考虑采用nginx提供的ip_hash策略。既能满足每个用户请求到同一台服务器，又能满足不同用户之间负载均衡。</p><h6 id="最少连接数"><a href="#最少连接数" class="headerlink" title="最少连接数"></a>最少连接数</h6><p>在upstream当中配置least_conn实现最少连接数，客户端的每一次请求服务在服务器停留的时间可能会有较大的差异，随着工作时间加长，如果采用简单的轮循或随机均衡算法，每一台服务器上的连接进程可能会产生极大的不同，并没有达到真正的负载均衡。<code>最少连接数均衡算法对内部中需负载的每一台服务器都有一个数据记录，记录当前该服务器正在处理的连接数量，当有新的服务连接请求时，将把当前请求分配给连接数最少的服务器，使均衡更加符合实际情况，负载更加均衡。</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">upstream</span> <span class="string">backend</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">server</span> <span class="string">backend1.example.com</span> <span class="string">weight=5;</span></span><br><span class="line">    <span class="string">server</span> <span class="string">backend2.example.com:8080;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">upstream</span> <span class="string">backend</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">ip_hash;</span>   <span class="comment">#哈希</span></span><br><span class="line">    <span class="string">least_conn;</span> <span class="comment">#最少连接数</span></span><br><span class="line">    <span class="string">server</span>  <span class="string">nginx.23673.com:9502</span> <span class="string">max_fails=3</span> <span class="string">fail_timeout=5s;</span></span><br><span class="line">    <span class="string">server</span>  <span class="string">nginx.23673.com:9503</span> <span class="string">backup</span> <span class="string">max_fails=3</span> <span class="string">fail_timeout=5s;</span></span><br><span class="line">    <span class="string">server</span>  <span class="string">nginx.23673.com:9503</span> <span class="string">down</span> <span class="string">max_fails=3</span> <span class="string">fail_timeout=5s;</span></span><br><span class="line">    <span class="string">server</span>  <span class="string">nginx.23673.com:9502</span> <span class="string">max_fails=3</span> <span class="string">fail_timeout=5s;</span></span><br><span class="line">    <span class="string">server</span>  <span class="string">nginx.23673.com:9502</span> <span class="string">max_fails=3</span> <span class="string">fail_timeout=5s;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h6 id="URL-Hash"><a href="#URL-Hash" class="headerlink" title="URL Hash"></a>URL Hash</h6><p>一般来讲，要用到url hash，是要配合缓存命中来使用。例如：有一个服务器集群A，需要对外提供文件下载，由于文件上传量巨大，没法存储到服务器磁盘中，所以用到了第三方云存储来做文件存储。服务器集群A收到客户端请求之后，需要从云存储中下载文件然后返回，为了省去不必要的网络带宽和下载耗时，在服务器集群A上做了一层临时缓存（缓存一个月）。<strong>由于是服务器集群，所以同一个资源多次请求，可能会到达不同的服务器上，导致不必要的多次下载，缓存命中率不高，以及一些资源时间的浪费</strong>。在此类场景下，<code>为了使得缓存命中率提高，很适合使用url_hash策略，同一个url（也就是同一个资源请求）会到达同一台机器，一旦缓存住了资源，再此收到请求，就可以从缓存中读取，既减少了带宽，也减少的下载时间。</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">upstream</span> <span class="string">somestream</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">hash</span> <span class="string">$request_uri;</span></span><br><span class="line">    <span class="string">server</span> <span class="number">192.168</span><span class="number">.244</span><span class="number">.1</span><span class="string">:8080;</span></span><br><span class="line">    <span class="string">server</span> <span class="number">192.168</span><span class="number">.244</span><span class="number">.2</span><span class="string">:8080;</span></span><br><span class="line">    <span class="string">server</span> <span class="number">192.168</span><span class="number">.244</span><span class="number">.3</span><span class="string">:8080;</span></span><br><span class="line">    <span class="string">server</span> <span class="number">192.168</span><span class="number">.244</span><span class="number">.4</span><span class="string">:8080;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">listen</span> <span class="number">8081</span> <span class="string">default;</span></span><br><span class="line">    <span class="string">server_name</span> <span class="string">test.csdn.net;</span></span><br><span class="line">    <span class="string">charset</span> <span class="string">utf-8;</span></span><br><span class="line">    <span class="string">location</span> <span class="string">/get</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">proxy_pass</span> <span class="string">http://somestream;</span></span><br><span class="line">    <span class="string">&#125;</span>  </span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><hr><h4 id="失败重试"><a href="#失败重试" class="headerlink" title="失败重试"></a>失败重试</h4><h5 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h5><p>通过配置上游服务器<code>max_fails</code>和<code>fail_timeout</code>，指定每个上游服务器，当fail_timeout时间内失败了max_fails次请求，则认为该上游服务器不可用/不存活，然后这段时间将不会访问这台上游服务器，fail_timeout时间后会再次进行重试。<br>max_fails=2 fail_timeout=30s 这2个一起搭配使用表示<code>当失败2次的时候，就停止使30秒</code>，<code>这样既可以避免重复请求，不能访问或者暂时不能访问的服务，增大服务器的压力，也可以灵活的做到当服务器可用时再次访问。</code></p><p><code>proxy_next_upstream</code>定义了什么情况下算作请求失败</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">语法:</span> <span class="string">proxy_next_upstream</span> <span class="string">error</span> <span class="string">|</span> <span class="string">timeout</span> <span class="string">|</span> <span class="string">invalid_header</span> <span class="string">|</span> <span class="string">http_500</span> <span class="string">|</span> <span class="string">http_502</span> <span class="string">http_503</span> <span class="string">|</span> <span class="string">http_504</span> <span class="string">|http_404</span> <span class="string">|</span> <span class="string">off</span> <span class="string">...;</span> </span><br><span class="line"><span class="string">默认值:</span> <span class="string">proxy_next_upstream</span> <span class="string">error</span> <span class="string">timeout;</span> </span><br><span class="line"><span class="string">上下文:</span> <span class="string">http,</span> <span class="string">server,</span> <span class="string">location</span></span><br></pre></td></tr></table></figure><ul><li><strong>error</strong> 表示和后端服务器建立连接时，或者向后端服务器发送请求时，或者从后端服务器接收响应头时，出现错误。</li><li><strong>timeout</strong> 表示和后端服务器建立连接时，或者向后端服务器发送请求时，或者从后端服务器接收响应头时，出现超时。</li><li><strong>invalid_header</strong> 表示后端服务器返回空响应或者非法响应头。</li><li><strong>http_500</strong> 表示后端服务器返回的响应状态码为500。</li><li><strong>off</strong> 表示停止将请求发送给下一台后端服务器。</li></ul><p><strong>重试不能无限制进行，因此，需要控制重试次数和重试超时时间的指令。</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置重试次数，默认0表示不限制，注意此重试次数指的是所有请求次数（包括第一次和之后的重试次数之和）。</span></span><br><span class="line"><span class="string">proxy_next_upstream_tries</span> <span class="string">number</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置重试最大超时时间，默认0表示不限制，即在proxy_next_upstream_timeout时间内允许proxy_next_upstream_tries次重试。</span></span><br><span class="line"><span class="comment"># 如果超过了其中一个设置，则Nginx也会结束重试并返回客户端响应（可能是错误码）。</span></span><br><span class="line"><span class="string">proxy_next_upstream_timeout</span> <span class="string">time</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 后端服务器数据回传时间(代理发送超时时间)</span></span><br><span class="line"><span class="string">proxy_send_timeout</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接成功后，后端服务器响应时间(代理接收超时时间)</span></span><br><span class="line"><span class="string">proxy_read_timeout</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx连接后端的超时时间，一般不超过75s</span></span><br><span class="line"><span class="string">proxy_connect_timeout</span></span><br></pre></td></tr></table></figure><h5 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="comment">#proxy_next_upstream timeout; #超时切换到下一台服务器,注意备用服务器切换问题</span></span><br><span class="line">    <span class="comment">#超时时间</span></span><br><span class="line">    <span class="string">proxy_connect_timeout</span> <span class="number">20</span><span class="string">;</span></span><br><span class="line">    <span class="string">proxy_send_timeout</span> <span class="number">30</span><span class="string">;</span></span><br><span class="line">    <span class="string">proxy_read_timeout</span> <span class="number">30</span><span class="string">;</span></span><br><span class="line">    <span class="string">proxy_next_upstream_tries</span> <span class="number">1</span><span class="string">;</span> <span class="comment">#代理请求的重试次数</span></span><br><span class="line">    <span class="string">proxy_next_upstream_timeout</span> <span class="number">1</span><span class="string">;</span> <span class="comment">#重试的超时时间</span></span><br><span class="line">    <span class="string">proxy_pass</span>   <span class="string">http://backend;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><hr><h4 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h4><p>基于IP的访问控制，基于Nginx的http_access_module模块，是Nginx本身内置的模块，不需要安装的时候配置。也就是允许哪些IP访问，不允许哪些IP访问。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">  <span class="string">listen</span>       <span class="number">80</span><span class="string">;</span></span><br><span class="line">  <span class="string">server_name</span> <span class="string">example.com;</span></span><br><span class="line">  <span class="string">access_log</span> <span class="string">logs/access.log</span> <span class="string">main;</span></span><br><span class="line"></span><br><span class="line">  <span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">       <span class="string">deny</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span><span class="string">;</span></span><br><span class="line">       <span class="string">allow</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span><span class="string">/24;</span></span><br><span class="line">       <span class="string">allow</span> <span class="number">10.1</span><span class="number">.1</span><span class="number">.0</span><span class="string">/16;</span></span><br><span class="line">       <span class="string">allow</span> <span class="number">2001</span><span class="string">:0db8::/32;</span></span><br><span class="line">       <span class="string">deny</span> <span class="string">all;</span></span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>从上到下的顺序，类似iptables。匹配到了便跳出。如上的例子先禁止了192.16.1.1，接下来允许了3个网段，其中包含了一个ipv6，最后未匹配的IP全部禁止访问.被deny的将返回403状态码。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">  <span class="string">listen</span>       <span class="number">80</span><span class="string">;</span></span><br><span class="line">  <span class="string">server_name</span> <span class="string">example.com;</span></span><br><span class="line">  <span class="string">access_log</span> <span class="string">logs/access.log</span> <span class="string">main;</span></span><br><span class="line"></span><br><span class="line">  <span class="string">location</span> <span class="string">~</span> <span class="string">^/phpmyadmin/</span> <span class="string">&#123;</span></span><br><span class="line">      <span class="string">allow</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span><span class="string">/24;</span></span><br><span class="line">      <span class="string">deny</span> <span class="string">all;</span></span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>只允许局域网访问。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">  <span class="string">listen</span>       <span class="number">80</span><span class="string">;</span></span><br><span class="line">  <span class="string">server_name</span> <span class="string">example.com;</span></span><br><span class="line">  <span class="string">access_log</span> <span class="string">logs/access.log</span> <span class="string">main;</span></span><br><span class="line">   <span class="string">location</span> <span class="string">/project</span> <span class="string">&#123;</span>  </span><br><span class="line">       <span class="string">allow</span>   <span class="number">220.178</span><span class="number">.25</span><span class="number">.22</span><span class="string">;</span>  </span><br><span class="line">       <span class="string">allow</span>   <span class="number">172.2</span><span class="number">.2</span><span class="number">.0</span><span class="string">/24;</span>  </span><br><span class="line">       <span class="string">allow</span>   <span class="number">192.2</span><span class="number">.2</span><span class="number">.0</span><span class="string">/24;</span>  </span><br><span class="line">       <span class="string">deny</span>    <span class="string">all;</span>  </span><br><span class="line">       <span class="string">proxy_pass</span> <span class="string">http://172.2.2.20:8080/project/;</span>  </span><br><span class="line">       <span class="string">proxy_set_header</span>   <span class="string">Host</span>    <span class="string">$host:$server_port;</span>  </span><br><span class="line">       <span class="string">proxy_set_header</span>   <span class="string">X-Real-IP</span>   <span class="string">$remote_addr;</span>   </span><br><span class="line">       <span class="string">proxy_set_header</span>   <span class="string">X-Forwarded-For</span> <span class="string">$proxy_add_x_forwarded_for;</span>  </span><br><span class="line">       <span class="string">client_max_body_size</span>    <span class="string">10m;</span>  </span><br><span class="line">   <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>以上配置的作用是允许IP为220.178.25.22，以及172和192网段的机器可以访问这个location地址，其他IP的客户端访问均是403。其中，24是指子网掩码为255.255.255.0。</p><hr><h4 id="防盗链"><a href="#防盗链" class="headerlink" title="防盗链"></a>防盗链</h4><h5 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h5><p>盗链是一种损害原有网站合法利益，给原网站所在服务器造成额外负担的非法行为。要采取防盗链的措施，首先需要了解盗链的实现原理。 客户端向服务器请求资源时，为了减少网络带宽，提高响应时间，服务器一般不会一次将所有资源完整地传回给客户端。比如在请求一个网页时，首先会传回该网页的文本内容，当客户端浏览器在解析文本的过程中发现有图片存在时，会再次向服务器发起对该图片资源的请求，服务器将存储的图片资源再发送给客户端。在这个过程中，如果该服务器上只包含了网页的文本内容，并没有存储相关的图片资源，而是将图片资源链接到其他站点的服务器上去了，这就形成了盗链行为。</p><p>比如内网用户通过Internet访问域名为<code>www.test.com</code>这个服务器上的WEB服务，而该服务器没有存储图片资源，而是将图片链接到域名为<code>www.fz.com</code>服务器上，这就形成了盗链行为。这种情况下客户端请求图片资源实际上是来自其他的服务器。<code>要实现防盗链，需要了解HTTP协议中的请求头部的Referer头域和采用URL的格式表示访问当前网页或者文件的源地址。通过该头域的值，我们可以检测到访问目标资源的源地址。这样，如果我们检测到Referer头域中的值并不是自己站点内的URL，就采取组织措施，实现防盗链。</code><strong>需要注意是，由于Referer头域中的值可以被更改的，因此该方法不能完全阻止所有盗链行为。</strong></p><h5 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h5><p>一般来说，遵照HTTP协议实现的浏览器，在从A网站访问B网站时，都会带上当前网站的URL，以表明此次点击是从何而起的。因此， Nginx的这个模块也是依靠这个来实现，所以，如果不加此头部，还是没法愉快的防盗图。</p><p>Nginx配置中有一个指令<code>valid_referers</code>，用来获取Referer头域中的值，并且根据该值的情况给Nginx全局变量<code>$invalid_referer</code>的值，<code>如果Referer头域中没有符合valid_referers指令配置的值，$invalid_referer变量将会被赋值为1</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">语法:</span> <span class="string">valid_referers</span> <span class="string">none</span> <span class="string">|</span> <span class="string">blocked</span> <span class="string">|</span> <span class="string">server_names</span> <span class="string">|</span> <span class="string">string</span> <span class="string">...;</span></span><br><span class="line"><span class="string">默认值:</span> <span class="string">—</span></span><br><span class="line"><span class="string">上下文:</span> <span class="string">server,</span> <span class="string">location</span></span><br></pre></td></tr></table></figure><ul><li><code>none</code> 请求标头中缺少<code>Referer</code>字段，也就是说Referer为空，<code>浏览器直接访问的时候Referer一般为空</code>。比如直接从浏览器输入资源的链接地址访问资源时没有<code>Referer头域</code>的。</li><li><code>blocked</code> <code>Referer</code>字段出现在请求标头中，但其值已被防火墙或代理服务器删除; 这些值是不以<code>http://</code> 或 <code>https://</code> 开头的字符串。</li><li><code>server_names</code> 服务器名称，也就是域名列表。设置一个或多个URL,检测<code>Referer头域</code>的值是否是域名列表中的某个。从nginx 0.5.33以后支持使用通配符<code>*</code>。</li></ul><h5 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">location</span> <span class="string">~*</span> <span class="string">^.+\.(jpg|gif|png|swf|flv|wma|wmv|asf|mp3|mmf|zip|rar)$</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">valid_referers</span> <span class="string">none</span> <span class="string">blocked</span> <span class="string">www.pureven.com</span> <span class="string">pureven.com</span> <span class="string">server_names</span> <span class="string">~\.google\.;</span></span><br><span class="line">    <span class="string">if</span> <span class="string">($invalid_referer)</span> <span class="string">&#123;</span></span><br><span class="line">       <span class="string">return</span> <span class="number">404</span><span class="string">;</span></span><br><span class="line">       <span class="comment"># rewrite ^/ http://www.pureven.com/404.jpg;</span></span><br><span class="line">     <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>以上所有来自<code>pureven.com</code>和域名中包含<code>google</code>的站点都可以访问当前站点的图片。</p><ol><li>如果域名不在这个列表中，那么<code>$invalid_referer</code>的值为<code>1</code>，在if语句中返回404给用户，如果使用下面的<code>rewrite</code>，那么会返回一个404含义的图片。</li><li>如果用户直接在浏览器中输入资源的地址是可以访问该资源的，因为符合<code>none</code>的规则，即Referer头域不存在。</li></ol><hr><h4 id="限流"><a href="#限流" class="headerlink" title="限流"></a>限流</h4><p>电商平台营销时候，经常会碰到的大流量问题，除了做流量分流处理，可能还要做用户黑白名单、信誉分析，进而根据用户ip信誉权重做相应的流量拦截、限制流量。Nginx自身有的请求限制模块<span class="exturl" data-url="aHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfbGltaXRfcmVxX21vZHVsZS5odG1s" title="http://nginx.org/en/docs/http/ngx_http_limit_req_module.html">ngx_http_limit_req_module<i class="fa fa-external-link"></i></span>、流量限制模块<span class="exturl" data-url="aHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfbGltaXRfY29ubl9tb2R1bGUuaHRtbA==" title="http://nginx.org/en/docs/http/ngx_http_limit_conn_module.html">ngx_stream_limit_conn_module<i class="fa fa-external-link"></i></span>基于<strong>漏桶算法</strong>，可以方便的控制请求速率，自定义调节限流，实现基本的限流控制。对于提供下载的网站，肯定是要进行流量控制的，例如软件下载站、视频服务等。它也可以减少一些爬虫程序或者<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLWNuLyVFOSU5OCVCQiVFNiU5NiVCNyVFNiU5QyU4RCVFNSU4QiU5OSVFNiU5NCVCQiVFNiU5MyU4QQ==" title="https://zh.wikipedia.org/zh-cn/%E9%98%BB%E6%96%B7%E6%9C%8D%E5%8B%99%E6%94%BB%E6%93%8A">DDOS的攻击<i class="fa fa-external-link"></i></span>。</p><h5 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h5><p>漏桶算法要解决的一个核心问题，便是如何<code>将不断变化的访问量，变成相对稳定的一个访问量</code>。这么说可能太过抽象，举一个实际的例子，NGINX 接收到互联网上的请求，速率是 n requests/second，或者说 n RPS，但这个 n 是不可控制的，可能是 0.1，也可能是 10 万。NGINX 需要将这些请求发送给后台的 PHP-FPM 服务去处理。假如被访问的 PHP 脚本，能稳定处理的 RPS 是 1 万，而实际的访问量正不断在 0.1 RPS 和 10 万 RPS 之间徘徊，那么有什么办法可以让 PHP-FPM 接受到来自 NGINX 的请求能相对稳定，这就是漏桶算法需要解决的问题。</p><p>漏桶这个名字，其实就非常形象的描述了算法本身的原理。大家都知道，一个身上打了 n 个眼儿的桶，无论你倒进桶里的水多还是少，漏出来的水的流速也会保持稳定，这就是此算法的本质。再以 NGINX + PHP-FPM 为例，<code>我们在 NGINX 配置里定义一个最大处理请求的速度，如果 PHP-FPM 的稳定处理速度峰值是 1000 RPS，那就在 NGINX 里定义处理请求速度最大为 1000 RPS。当 RPS 已经大于这个值的时候，多出来的请求就被 NGINX 这个桶暂时储存起来，排着队等待处理。在 NGINX 的精心照料下，PHP-FPM 会相对稳定的处理来自 NGINX 的请求，而不会出现突然暴增的请求让 PHP-FPM 处理不过来，甚至挂掉。然而桶也有大小，NGINX 也一样，假如请求太多太多，桶都装不下了，那么桶将会把多出来的请求直接漏掉，返回 503 错误。</code>而如果用户浏览器发起请求时，服务器的 RPS 还在 1000 以内，那就看不出什么变化；但如果发起请求的时候正好赶上访问高峰期，那么浏览器会一直等待响应，直到请求“漏”给了 PHP-FPM 处理；极端情况，如果赶上访问多得服务器无法承受时，用户就只能得到一个 503 错误。精心呵护 PHP-FPM 避免出现因压力突然增大而导致的雪崩效应，是漏桶的一种用法。然而，没有网站愿意返回 503 错误信息给用户。不过有一种访问，叫恶意访问，以不让服务器罢工不罢休为目的，这种恶意访问叫 <code>DDOS（Distributed Denial of Service）</code>，而漏桶更多是用在防止 DDOS 攻击上。</p><p>大部分 DDOS，都属于低成本 DDOS 攻击，也就是通过一台或者几台机器，不断向服务器发起请求来实现的。<code>我们只要给每一个 IP 设置一个“桶”，并做一个限制：每个 IP 一秒最多只能有 10 次请求，否则视为有问题的请求。</code>在 NGINX 的配置上体现为：10 RPS，桶的大小为 0，如果一秒内有超过 10 个请求被处理，多出来的请求会立马返回 503。当然这种处理方式也是略显粗暴，配置不好会误伤小区宽带内的正常访问。</p><h5 id="关于漏桶算法"><a href="#关于漏桶算法" class="headerlink" title="关于漏桶算法"></a>关于漏桶算法</h5><p>漏桶(Leaky Bucket)算法思路很简单,水(请求)先进入到漏桶里,漏桶以一定的速度出水(接口有响应速率),当水流入速度过大会直接溢出(访问频率超过接口响应速率),然后就拒绝请求,可以看出漏桶算法能强行限制数据的传输速率.示意图如下<br><img src="/2020/03/08/nginx-advanced-conf/20200310204402.png" alt><br>可见这里有两个变量,一个是桶的大小,支持流量突发增多时可以存多少的水(burst),另一个是水桶漏洞的大小(rate)。</p><p>我们假设系统是一个漏桶，当请求到达时，就是往漏桶里“加水”，而当请求被处理掉，就是水从漏桶的底部漏出。水漏出的速度是固定的，当“加水”太快，桶就会溢出，也就是“拒绝请求”。从而使得桶里的水的体积不可能超出桶的容量。主要目的是控制数据注入到网络的速率，平滑网络上的突发流量。漏桶算法提供了一种机制，通过它，突发流量可以被整形以便为网络提供一个稳定的流量。</p><h5 id="相关指令"><a href="#相关指令" class="headerlink" title="相关指令"></a>相关指令</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">limit_req_zone</span>  <span class="string">$binary_remote_addr</span>  <span class="string">zone=req_one:20m</span> <span class="string">rate=10r/s;</span></span><br></pre></td></tr></table></figure><p>该指令只能在<code>http块</code>中使用，作用是限制<strong>请求数</strong>。其中 <code>rate</code> 就是上面所说的 <code>RPS</code>，而且不仅可以设置 n r/s，也可以设置 n r/m；另外 <code>burst</code> 参数，就是我们的桶大小了。</p><ol><li><code>zone</code>表示容器名，是针对每个变量(这里指IP，即<code>$binary_remote_addr</code>)定义一个存储session状态的容器。这个示例中定义了一个20m的容器，按照<code>32bytes/session</code>，可以处理640000个session。使用<code>$binary_remote_addr</code>变量，可以将每条状态记录的大小减少到64个字节，这样1M的内存可以保存大约1万6千个64字节的记录。如果限制域的存储空间耗尽了，对于后续所有请求，服务器都会返回<code>503 (Service Temporarily Unavailable)</code>错误。</li><li><code>rate</code>表示请求频率. 每秒允许10个请求。速度可以设置为每<strong>秒</strong>处理请求数和每<strong>分钟</strong>处理请求数，其值必须是整数，所以如果需要指定每秒处理少于1个的请求，2秒处理一个请求，可以使用 <code>30r/m</code>。</li></ol><br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">limit_conn</span> <span class="string">req_one</span> <span class="number">10</span><span class="string">;</span></span><br><span class="line"><span class="string">limit_req</span> <span class="string">zone=req_one</span> <span class="string">burst=5</span> <span class="string">nodelay;</span></span><br></pre></td></tr></table></figure><ol><li><code>limit_conn</code> 表示限制一个IP能发起10个并发连接数。</li><li><code>limit_req</code> 与<code>limit_req_zone</code>对应。<code>burst</code>表示缓存住的请求数。可选参数<code>burst=5</code>表示允许超过频率限制的请求数不多于5个(<code>rate=10r/s</code>)，假设1、2、3、4秒请求为每秒9个，那么第5秒内请求15个是允许的，反之，如果第一秒内请求15个，会将5个请求放到第二秒，第二秒内超过10的请求直接<code>503</code>，类似多秒内平均速率限制。<code>nodelay</code>表示超过的请求不被延迟处理，设置后15个请求在1秒内处理。</li><li>可以在http, server, location配置。</li></ol><h5 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line">    <span class="string">limit_req_zone</span>  <span class="string">$binary_remote_addr</span>  <span class="string">zone=req_one:20m</span> <span class="string">rate=10r/s;</span></span><br><span class="line">    <span class="string">limit_conn</span>  <span class="string">req_one</span>  <span class="number">10</span><span class="string">;</span></span><br><span class="line">    <span class="string">limit_req</span>   <span class="string">zone=req_one</span> <span class="string">burst=5;</span></span><br><span class="line">    <span class="string">server</span>  <span class="string">&#123;</span></span><br><span class="line">            <span class="string">listen</span>          <span class="number">80</span><span class="string">;</span></span><br><span class="line">            <span class="string">server_name</span>     <span class="string">localhost</span> <span class="string">;</span></span><br><span class="line">            <span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">                <span class="string">limit_req</span> <span class="string">zone=one</span> <span class="string">burst=5</span> <span class="string">nodelay;</span></span><br><span class="line">                <span class="string">root</span>   <span class="string">html;</span></span><br><span class="line">                <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span></span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><hr><h4 id="白名单"><a href="#白名单" class="headerlink" title="白名单"></a>白名单</h4><p>限流的配置会对所有的ip都进行限制，有些时候我们不希望对搜索引擎的蜘蛛或者某些自己的代理机过来的请求进行限制。</p><h5 id="geo指令"><a href="#geo指令" class="headerlink" title="geo指令"></a>geo指令</h5><p>geo是Nginx的地域模块， 可以通过用户的IP信息查询到地理位置，再根据地理位置提供更好的服务。对于特定的白名单ip我们可以借助<span class="exturl" data-url="aHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfZ2VvX21vZHVsZS5odG1s" title="http://nginx.org/en/docs/http/ngx_http_geo_module.html">geo<i class="fa fa-external-link"></i></span>指令创建变量，并根据客户端IP地址对变量赋值。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Syntax:</span><span class="string">geo</span> <span class="string">[$address]</span> <span class="string">$variable</span> <span class="string">&#123;</span> <span class="string">...</span> <span class="string">&#125;</span></span><br><span class="line"><span class="attr">Default:</span><span class="string">—</span></span><br><span class="line"><span class="attr">Context:</span><span class="string">http</span></span><br></pre></td></tr></table></figure><p>定义从指定的变量获取客户端的IP地址。默认情况下，Nginx从<code>$remote_addr</code>变量取得客户端IP地址。下面配置会根据不同区域的用户访问不同的服务器进行负载。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">upstream</span> <span class="string">US</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">server</span> <span class="number">172.22</span><span class="number">.23</span><span class="number">.1</span><span class="string">:80</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    <span class="string">upstream</span> <span class="string">RU</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">server</span> <span class="number">172.22</span><span class="number">.23</span><span class="number">.2</span><span class="string">:80</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    <span class="string">upstream</span> <span class="string">UK</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">server</span> <span class="number">172.22</span><span class="number">.23</span><span class="number">.3</span><span class="string">:80</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    <span class="string">upstream</span> <span class="string">ZZ</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">server</span> <span class="number">172.22</span><span class="number">.23</span><span class="number">.4</span><span class="string">:80</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 根据不同区域的用户访问不同的服务器进行负载</span></span><br><span class="line">    <span class="string">geo</span> <span class="string">$country</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">default</span> <span class="string">ZZ;</span> <span class="comment"># $country默认为ZZ</span></span><br><span class="line">        <span class="string">include</span> <span class="string">conf/geo.conf;</span></span><br><span class="line">        <span class="string">delete</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16;</span>     <span class="comment"># 删除指定网络</span></span><br><span class="line">        <span class="string">proxy</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.0</span><span class="string">/24;</span></span><br><span class="line">        <span class="string">proxy</span> <span class="number">2001</span><span class="string">:0db8::/32;</span></span><br><span class="line">    </span><br><span class="line">        <span class="number">127.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">/24</span> <span class="string">US;</span>  <span class="string">设置$contry为US</span></span><br><span class="line">        <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">/32</span> <span class="string">RU;</span>  <span class="string">设置$contry为RU</span></span><br><span class="line">        <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span><span class="string">/24</span> <span class="string">UK;设置$contry为UK</span></span><br><span class="line">        </span><br><span class="line">        <span class="number">10.1</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span> <span class="number">0</span><span class="string">;</span> <span class="comment"># 表示正常访问</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">proxy_redirect</span> <span class="string">off;</span> <span class="comment"># 参数off将在这个字段中禁止所有的proxy_redirect指令</span></span><br><span class="line">        <span class="string">proxy_set_header</span> <span class="string">Host</span> <span class="string">$host;</span> <span class="comment"># 重新定义或添加字段传递给代理服务器的请求头。</span></span><br><span class="line">        <span class="string">proxy_set_header</span> <span class="string">X-Real-IP</span> <span class="string">$remote_addr;</span> <span class="comment"># 重新定义或添加字段传递给代理服务器的请求头。</span></span><br><span class="line">        <span class="string">proxy_pass</span> <span class="string">http://$country;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>Nginx通过CIDR或者地址段来描述地址，同时支持下面的特殊参数：</p><ol><li><code>delete</code> 删除指定的网络。</li><li><code>default</code> 如果客户端地址不能匹配任意一个定义的地址，Nginx将使用此值。如果使用CIDR，可以用<code>0.0.0.0/0</code>代替default。</li><li><code>include</code> 包含一个定义地址和值的文件。可以多次包含。</li><li><code>proxy</code> 定义可信地址， 如果请求来自可信地址，Nginx将使用其<code>X-Forwarded-For</code>头来获得地址。 相对于普通地址，可信地址是顺序检测的。</li><li><code>proxy_recursive</code> 开启递归查找地址， 如果关闭递归查找，在客户端地址与某个可信地址匹配时，Nginx将使用<code>X-Forwarded-For</code>中的最后一个地址来代替原始客户端地址。如果开启递归查找，在客户端地址与某个可信地址匹配时，Nginx将使用<code>X-Forwarded-For</code>中最后一个与所有可信地址都不匹配的地址来代替原始客户端地址。</li><li><code>ranges</code> 指示地址将定义为地址段的形式，这个参数必须放在首位。为了加速装载地址库，地址应按升序定义。</li></ol><h5 id="http-x-forwarded-for和-remote-addr参数过滤"><a href="#http-x-forwarded-for和-remote-addr参数过滤" class="headerlink" title="$http_x_forwarded_for和$remote_addr参数过滤"></a>$http_x_forwarded_for和$remote_addr参数过滤</h5><p>通过$remote_addr参数和$http_x_forwarded_for参数进行访问的分发限制</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">listen</span>       <span class="number">80</span><span class="string">;</span></span><br><span class="line">    <span class="string">server_name</span>  <span class="string">testwww.wangshibo.com;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">##白名单设置，只允许下面三个来源ip的客户端以及本地能访问该站。主要是下面这三行</span></span><br><span class="line">    <span class="string">if</span> <span class="string">($remote_addr</span> <span class="string">!~</span> <span class="string">^(172.20.0.1|172.20.0.2|172.20.0.3|127.0.0.1))</span> <span class="string">&#123;</span></span><br><span class="line">     <span class="string">rewrite</span> <span class="string">^.*$</span> <span class="string">/index.php</span> <span class="string">last;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#白名单设置，只允许下面三个来源ip的客户端以及本地能访问该站。</span></span><br><span class="line">   <span class="string">if</span> <span class="string">($http_x_forwarded_for</span> <span class="string">!~</span> <span class="string">^(172.20.0.4|172.20.0.5|172.20.0.6|127.0.0.1))</span> <span class="string">&#123;</span></span><br><span class="line">       <span class="string">rewrite</span> <span class="string">^.*$</span>  <span class="string">/index.php</span> <span class="string">last;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">location</span> <span class="string">~</span> <span class="string">\.php$</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">fastcgi_pass</span>   <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:16688;</span></span><br><span class="line">        <span class="string">fastcgi_read_timeout</span> <span class="number">30</span><span class="string">;</span></span><br><span class="line">        <span class="string">fastcgi_index</span>  <span class="string">index.php;</span></span><br><span class="line">        <span class="string">fastcgi_param</span>  <span class="string">SCRIPT_FILENAME</span>  <span class="string">$document_root$fastcgi_script_name;</span></span><br><span class="line">        <span class="string">include</span>        <span class="string">fastcgi_params;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><hr><h4 id="支持HTTPS"><a href="#支持HTTPS" class="headerlink" title="支持HTTPS"></a>支持HTTPS</h4><h5 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">include</span>       <span class="string">mime.types;</span> </span><br><span class="line">    <span class="string">default_type</span>  <span class="string">application/octet-stream;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="comment"># 监听时指定ssl</span></span><br><span class="line">        <span class="string">listen</span> <span class="number">16688</span> <span class="string">ssl;</span></span><br><span class="line">        <span class="string">server_name</span> <span class="string">localhost;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 证书文件</span></span><br><span class="line">        <span class="string">ssl_certificate</span> <span class="string">"G:/Nginx+php+mysql/etc/ssl/server.crt"</span><span class="string">;</span></span><br><span class="line">        <span class="comment"># 密钥文件</span></span><br><span class="line">        <span class="string">ssl_certificate_key</span> <span class="string">"G:/Nginx+php+mysql/etc/ssl/server.key"</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># ssl_protocols ssl_ciphers用来限制连接只包含SSL/TLS的加强版本和算法</span></span><br><span class="line">        <span class="string">ssl_protocols</span> <span class="string">TLSv1</span> <span class="string">TLSv1.1</span> <span class="string">TLSv1.2;</span></span><br><span class="line">        <span class="string">ssl_ciphers</span>   <span class="string">HIGH:!aNULL:!MD5;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">root</span> <span class="string">"E:/personal/CodeIgniter_hmvc"</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">location</span> <span class="string">^~</span> <span class="string">/api</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="string">index</span> <span class="string">index.php;</span></span><br><span class="line"></span><br><span class="line">            <span class="string">try_files</span> <span class="string">$uri</span> <span class="string">$uri/</span> <span class="string">/api/index.php;</span></span><br><span class="line"></span><br><span class="line">            <span class="string">location</span> <span class="string">=</span> <span class="string">/api/index.php</span> <span class="string">&#123;</span></span><br><span class="line">                <span class="string">fastcgi_pass</span>   <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8888;</span></span><br><span class="line">                <span class="string">fastcgi_index</span>  <span class="string">index.php;</span></span><br><span class="line">                <span class="string">fastcgi_param</span> <span class="string">SCRIPT_FILENAME</span> <span class="string">$document_root$fastcgi_script_name;</span></span><br><span class="line">                <span class="string">include</span>        <span class="string">fastcgi_params;</span></span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm</span> <span class="string">index.php;</span></span><br><span class="line"></span><br><span class="line">            <span class="string">location</span> <span class="string">~</span> <span class="string">\.php$</span> <span class="string">&#123;</span></span><br><span class="line">                <span class="string">root</span>           <span class="string">E:\personal\CodeIgniter_hmvc;</span></span><br><span class="line">                <span class="string">fastcgi_pass</span>   <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8888;</span></span><br><span class="line">                <span class="string">fastcgi_index</span>  <span class="string">index.php;</span></span><br><span class="line">                <span class="string">fastcgi_param</span> <span class="string">SCRIPT_FILENAME</span> <span class="string">$document_root$fastcgi_script_name;</span></span><br><span class="line">                <span class="string">include</span>        <span class="string">fastcgi_params;</span></span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h5><h6 id="减少CPU运算量"><a href="#减少CPU运算量" class="headerlink" title="减少CPU运算量"></a>减少CPU运算量</h6><p>进程数量最少为CPU核数</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">worker_processes</span>  <span class="number">4</span><span class="string">;</span></span><br></pre></td></tr></table></figure><p>激活keepalive长连接</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">keepalive_timeout</span> <span class="number">300</span><span class="string">;</span></span><br></pre></td></tr></table></figure><p>复用SSL会话</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置共享会话缓存大小</span></span><br><span class="line"><span class="string">ssl_session_cache</span>   <span class="string">shared:SSL:10m;</span></span><br><span class="line"><span class="comment">#配置会话超时时间</span></span><br><span class="line"><span class="string">ssl_session_timeout</span> <span class="string">10m;</span></span><br></pre></td></tr></table></figure><hr><h4 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h4><p>根据学习进展不定期更新。</p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx配置入门-WNMP(Win10+Nginx+MySQL+PHP)</title>
      <link href="/2020/03/06/nginx-simple-conf-with-php-fpm/"/>
      <url>/2020/03/06/nginx-simple-conf-with-php-fpm/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p><span class="exturl" data-url="aHR0cHM6Ly9wdXJldmVuLmNjLzIwMjAvMDIvMjkvbmdpbngtc2ltcGxlLWNvbmYtd2l0aC1zdGF0aWMtc2l0ZS8=" title="https://pureven.cc/2020/02/29/nginx-simple-conf-with-static-site/">上一篇<i class="fa fa-external-link"></i></span>学习了Nginx配置文件中的基本指令，然后配置了一个静态网站。通过这个网站可以访问指定目录中的静态资源，但是如果向php脚本这样的文件还是无法访问，这是因为php脚本只能由特定的解析器(php解析器)来解析，本文学习Win10环境下配置Nginx和PHP-FPM的环境然后通过Nginx来访问指定目录中的动态资源(php脚本)，同时安装配置并调试MySQL。</p><a id="more"></a><hr><h4 id="PHP下载"><a href="#PHP下载" class="headerlink" title="PHP下载"></a>PHP下载</h4><p>下载PHP的<strong>非线程安全版本：</strong><span class="exturl" data-url="aHR0cHM6Ly93aW5kb3dzLnBocC5uZXQvZG93bmxvYWQjcGhwLTcuNC1udHMtdmMxNS14NjQ=" title="https://windows.php.net/download#php-7.4-nts-vc15-x64">php-7.4.3-nts-Win32-vc15-x64.zip<i class="fa fa-external-link"></i></span>。</p><h5 id="关于线程安全和非线程安全"><a href="#关于线程安全和非线程安全" class="headerlink" title="关于线程安全和非线程安全"></a>关于线程安全和非线程安全</h5><p>Windows版的PHP从版本5.2.1开始有<code>Thread Safe</code>。这两者不同在于何处？到底应该用哪种？这里做一个简单的介绍。</p><p>从2000年10月20日发布的第一个Windows版的PHP3.0.17开始的都是线程安全的版本，这是由于与Linux/Unix系统是采用<code>多进程</code>的工作方式不同的是Windows系统是采用<code>多线程</code>的工作方式。如果在IIS下以CGI方式运行PHP会非常慢，这是由于CGI模式是建立在多进程 的基础之上的，而非多线程。一般我们会把PHP配置成以<code>ISAPI</code>的方式来运行，ISAPI是多线程的方式，这样就快多了。但存在一个问题，很多常用的 PHP扩展是以Linux/Unix的多进程思想来开发的，这些扩展在ISAPI的方式运行时就会出错搞垮IIS。而用线程安全版本的话顶多只是搞跨某个 线程，而不会影响到整个IIS的安全。</p><p>当然在IIS下CGI模式才是 PHP运行的最安全方式，但CGI模式对于每个HTTP请求都需要重新加载和卸载整个PHP环境，其消耗是巨大的。为了兼顾IIS下PHP的效率和安全， 有人给出了FastCGI的解决方案。FastCGI可以让PHP的进程重复利用而不是每一个新的请求就重开一个进程。同时FastCGI也可以允许几个 进程同时执行。这样既解决了CGI进程模式消耗太大的问题，又利用上了CGI进程模式不存在线程安全问题的优势。</p><p><code>因此，如果是使用ISAPI的方式来运行PHP就必须用Thread Safe(线程安全)的版本；而用FastCGI模式运行PHP的话就没有必要用线程安全检查了，用None Thread Safe(NTS，非线程安全)的版本能够更好的提高效率。</code></p><hr><h4 id="PHP配置"><a href="#PHP配置" class="headerlink" title="PHP配置"></a>PHP配置</h4><ol><li>进入<code>php-7.4.3-nts-Win32-vc15-x64</code>目录，拷贝一份<code>php.ini-development</code>并将文件名修改为<code>php.ini</code>。</li><li>修改<code>php.ini</code>:<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">;</span> <span class="attr">On windows:</span></span><br><span class="line"><span class="string">extension_dir</span> <span class="string">=</span> <span class="string">"G:\Nginx+php+mysql\php-7.4.3-nts-Win32-vc15-x64\ext"</span></span><br><span class="line"></span><br><span class="line"><span class="string">extension=curl</span></span><br><span class="line"><span class="string">extension=mbstring</span></span><br><span class="line"><span class="string">extension=exif</span>      <span class="string">;</span> <span class="string">Must</span> <span class="string">be</span> <span class="string">after</span> <span class="string">mbstring</span> <span class="string">as</span> <span class="string">it</span> <span class="string">depends</span> <span class="string">on</span> <span class="string">it</span></span><br><span class="line"><span class="string">extension=mysqli</span></span><br><span class="line"><span class="string">extension=pdo_mysql</span></span><br><span class="line"></span><br><span class="line"><span class="string">;</span> <span class="string">http://php.net/cgi.fix-pathinfo</span></span><br><span class="line"><span class="string">cgi.fix_pathinfo=1</span></span><br><span class="line"></span><br><span class="line"><span class="string">[Date]</span></span><br><span class="line"><span class="string">;</span> <span class="string">Defines</span> <span class="string">the</span> <span class="string">default</span> <span class="string">timezone</span> <span class="string">used</span> <span class="string">by</span> <span class="string">the</span> <span class="string">date</span> <span class="string">functions</span></span><br><span class="line"><span class="string">;</span> <span class="string">http://php.net/date.timezone</span></span><br><span class="line"><span class="string">date.timezone</span> <span class="string">=</span> <span class="string">'Asia/Shanghai'</span></span><br></pre></td></tr></table></figure></li></ol><hr><h4 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">listen</span>       <span class="number">6688</span><span class="string">;</span></span><br><span class="line">    <span class="string">server_name</span>  <span class="string">localhost;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 定义与FastCGI服务器建立连接的超时时间。应该指出的是，这个超时通常不能超过75秒。</span></span><br><span class="line">    <span class="string">fastcgi_connect_timeout</span> <span class="string">120s;</span></span><br><span class="line">    <span class="comment"># 定义从FastCGI服务器读取响应的超时时间。超时只在两次连续的读操作之间设置，而不是用于传输整个响应。</span></span><br><span class="line">    <span class="comment"># 如果FastCGI服务器在此时间内没有传输任何内容，则连接将被关闭。</span></span><br><span class="line">    <span class="string">fastcgi_read_timeout</span> <span class="string">300s;</span></span><br><span class="line">    <span class="comment"># 设置向FastCGI服务器发送请求的超时时间。超时只在两次连续写入操作之间设置，而不是用于传输整个请求。</span></span><br><span class="line">    <span class="comment"># 如果FastCGI服务器在此时间内没有收到任何内容，则连接将关闭。</span></span><br><span class="line">    <span class="string">fastcgi_send_timeout</span> <span class="string">300s;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 设置number和size用于读取从FastCGI的服务器的响应，供用于单个连接的缓冲器。</span></span><br><span class="line">    <span class="comment"># 默认情况下，缓冲区大小等于一个内存页面。这是4K或8K，取决于平台。</span></span><br><span class="line">    <span class="string">fastcgi_buffers</span> <span class="number">256</span> <span class="string">16k;</span> </span><br><span class="line">    <span class="string">fastcgi_buffer_size</span> <span class="string">128k;</span> </span><br><span class="line">    <span class="comment"># 当启用FastCGI服务器的响应缓冲时，限制size可能正忙于向客户端发送响应的缓冲区总数，而响应尚未完全读取。</span></span><br><span class="line">    <span class="comment"># 同时，其余的缓冲区可以用于读取响应，并且如果需要的话，缓冲部分对临时文件的响应。</span></span><br><span class="line">    <span class="comment"># 默认情况下，size受fastcgi_buffer_size和fastcgi_buffers指令设置的两个缓冲区大小的限制。</span></span><br><span class="line">    <span class="string">fastcgi_busy_buffers_size</span> <span class="string">256k;</span> </span><br><span class="line">    <span class="comment"># size一旦启用了从FastCGI服务器到临时文件的缓存响应，就一次限制写入临时文件的数据。</span></span><br><span class="line">    <span class="comment"># 默认情况下，size由fastcgi_buffer_size和fastcgi_buffers指令设置的两个缓冲区限制。</span></span><br><span class="line">    <span class="comment"># 临时文件的最大大小由fastcgi_max_temp_file_size指令设置。</span></span><br><span class="line">    <span class="string">fastcgi_temp_file_write_size</span> <span class="string">256k;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">root</span> <span class="string">"E:/CodeIgniter_hmvc"</span><span class="string">;</span></span><br><span class="line">    <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:8888</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="string">location</span> <span class="string">~</span> <span class="string">\.php$</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">root</span>           <span class="string">G:\Nginx+php+mysql\html;</span></span><br><span class="line">        <span class="comment"># 设置FastCGI服务器的地址。该地址可以指定为域名或IP地址，以及端口：localhost:9000;</span></span><br><span class="line">        <span class="comment"># 或者作为UNIX域套接字路径：unix:/tmp/fastcgi.socket;</span></span><br><span class="line">        <span class="string">fastcgi_pass</span>   <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8888;</span></span><br><span class="line">        <span class="comment"># 在$fastcgi_script_name变量的值中设置一个文件名，该文件名将附加在以斜杠结尾的URI后面。</span></span><br><span class="line">        <span class="string">fastcgi_index</span>  <span class="string">index.php;</span></span><br><span class="line">        <span class="comment"># 设置一个parameter应该传递给FastCGI服务器的应用程序。该value可以包含文本，变量，他们的组合。</span></span><br><span class="line">        <span class="comment"># 当且仅当没有fastcgi_param在当前级别上定义的指令时，这些指令才从前一级继承。</span></span><br><span class="line">        <span class="string">fastcgi_param</span> <span class="string">SCRIPT_FILENAME</span> <span class="string">$document_root$fastcgi_script_name;</span> <span class="comment"># 针对当前请求的根路径设置值 . 脚本名称</span></span><br><span class="line">        <span class="string">include</span>        <span class="string">fastcgi_params;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 这里使用try_files</span></span><br><span class="line">    <span class="comment"># ① 当请求localhost:6688/api/migrate时先在root下找api文件</span></span><br><span class="line">    <span class="comment"># ② 找不到就在root/api/下找migrate文件</span></span><br><span class="line">    <span class="comment"># ③ 找不到就请求root/api/index.php并将migrate作为参数传递给fastcgi</span></span><br><span class="line">    <span class="string">location</span> <span class="string">^~</span> <span class="string">/api</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">index</span> <span class="string">index.php;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">try_files</span> <span class="string">$uri</span> <span class="string">$uri/</span> <span class="string">/api/index.php;</span></span><br><span class="line">        </span><br><span class="line">        <span class="string">location</span> <span class="string">=</span> <span class="string">/api/index.php</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="string">fastcgi_pass</span>   <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8888;</span></span><br><span class="line">            <span class="string">fastcgi_index</span>  <span class="string">index.php;</span></span><br><span class="line">            <span class="string">fastcgi_param</span> <span class="string">SCRIPT_FILENAME</span> <span class="string">$document_root$fastcgi_script_name;</span></span><br><span class="line">            <span class="string">include</span>        <span class="string">fastcgi_params;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p><code>fastcig</code>相关指令参考<span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvc2VjdGlvbi8xMjU5MTQ2" title="https://cloud.tencent.com/developer/section/1259146">ngx_http_fastcgi_module<i class="fa fa-external-link"></i></span></p><hr><h4 id="开启PHP-fpm服务"><a href="#开启PHP-fpm服务" class="headerlink" title="开启PHP-fpm服务"></a>开启PHP-fpm服务</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[G:\Nginx+php+mysql]$</span> <span class="string">cd</span> <span class="string">php-7.4.3-nts-Win32-vc15-x64</span></span><br><span class="line"><span class="string">[G:\Nginx+php+mysql\php-7.4.3-nts-Win32-vc15-x64]$</span> <span class="string">php-cgi.exe</span> <span class="string">-b</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8888</span> <span class="string">-c</span> <span class="string">php.ini</span></span><br></pre></td></tr></table></figure><hr><h4 id="重启Nginx"><a href="#重启Nginx" class="headerlink" title="重启Nginx"></a>重启Nginx</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[G:\Nginx+php+mysql\nginx-1.17.8]$</span> <span class="string">nginx.exe</span> <span class="string">-s</span> <span class="string">reload</span></span><br></pre></td></tr></table></figure><hr><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><ol><li>创建index.php文件<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[G:\Nginx+php+mysql]$</span> <span class="string">cd</span> <span class="string">html</span></span><br><span class="line"><span class="string">[G:\Nginx+php+mysql\html]$</span> <span class="string">dir</span></span><br><span class="line"> <span class="string">驱动器</span> <span class="string">G</span> <span class="string">中的卷是</span> <span class="string">研发专用</span></span><br><span class="line"> <span class="string">卷的序列号是</span> <span class="number">5861</span><span class="string">-182A</span></span><br><span class="line"></span><br><span class="line"> <span class="string">G:\Nginx+php+mysql\html</span> <span class="string">的目录</span></span><br><span class="line"></span><br><span class="line"><span class="number">2020</span><span class="string">/03/06</span>  <span class="number">08</span><span class="string">:51</span>    <span class="string">&lt;DIR&gt;</span>          <span class="string">.</span></span><br><span class="line"><span class="number">2020</span><span class="string">/03/06</span>  <span class="number">08</span><span class="string">:51</span>    <span class="string">&lt;DIR&gt;</span>          <span class="string">..</span></span><br><span class="line"><span class="number">2020</span><span class="string">/01/21</span>  <span class="number">21</span><span class="string">:39</span>               <span class="number">494</span> <span class="string">50x.html</span></span><br><span class="line"><span class="number">2020</span><span class="string">/03/06</span>  <span class="number">08</span><span class="string">:51</span>    <span class="string">&lt;DIR&gt;</span>          <span class="string">ci</span></span><br><span class="line"><span class="number">2020</span><span class="string">/01/21</span>  <span class="number">21</span><span class="string">:39</span>               <span class="number">612</span> <span class="string">index.html</span></span><br><span class="line"><span class="number">2020</span><span class="string">/03/06</span>  <span class="number">14</span><span class="string">:24</span>                <span class="number">24</span> <span class="string">index.php</span></span><br><span class="line">               <span class="number">3</span> <span class="string">个文件</span>          <span class="number">1</span><span class="string">,130</span> <span class="string">字节</span></span><br><span class="line">               <span class="number">3</span> <span class="string">个目录</span> <span class="number">31</span><span class="string">,849,316,352</span> <span class="string">可用字节</span></span><br><span class="line"></span><br><span class="line"><span class="string">[G:\Nginx+php+mysql\html]$</span> <span class="string">type</span> <span class="string">index.php</span></span><br><span class="line"><span class="string">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="string">echo</span> <span class="string">phpinfo();</span></span><br><span class="line"><span class="string">[G:\Nginx+php+mysql\html]$</span></span><br></pre></td></tr></table></figure></li><li>访问index.php<br><img src="/2020/03/06/nginx-simple-conf-with-php-fpm/20200306144934.png" alt></li></ol><hr><h4 id="将PHP-fpm注册为服务"><a href="#将PHP-fpm注册为服务" class="headerlink" title="将PHP-fpm注册为服务"></a>将PHP-fpm注册为服务</h4><p>下面介绍使用<code>winsw</code>将nginx加入到windows服务的操作流程：</p><ol><li>下载<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tvaHN1a2Uvd2luc3cvcmVsZWFzZXMvdGFnL3dpbnN3LXYyLjIuMA==" title="https://github.com/kohsuke/winsw/releases/tag/winsw-v2.2.0">winsw<i class="fa fa-external-link"></i></span>,目前稳定版为<code>winsw-v2.2.0</code>，本例下载的为<code>WinSW.NET2.exe</code></li><li>将<code>WinSW.NET2.exe</code>重命名为<code>php-pureven.exe</code>并放入与<code>php-cgi.exe</code>相同目录下</li><li>新建配置文件<code>php-pureven.xml</code>，参考<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tvaHN1a2Uvd2luc3cvYmxvYi9tYXN0ZXIvZG9jL3htbENvbmZpZ0ZpbGUubWQ=" title="https://github.com/kohsuke/winsw/blob/master/doc/xmlConfigFile.md">这里<i class="fa fa-external-link"></i></span>进行配置，本例配置信息为：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- ID of the service. It should be unique accross the Windows system--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>PHP-pureven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Display name of the service --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>PHPCGI-pureven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Service description --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>Serve PHPCGI on 8888 by pureven<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- Path to the executable, which should be started --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">executable</span>&gt;</span>G:\Nginx+php+mysql\php-7.4.3-nts-Win32-vc15-x64\php-cgi.exe<span class="tag">&lt;/<span class="name">executable</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">onfailure</span> <span class="attr">action</span>=<span class="string">"restart"</span> <span class="attr">delay</span>=<span class="string">"20 sec"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">arguments</span>&gt;</span>-b 127.0.0.1:8888 -c "G:\Nginx+php+mysql\php-7.4.3-nts-Win32-vc15-x64\php.ini"<span class="tag">&lt;/<span class="name">arguments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  &lt;startarguments&gt;-b 127.0.0.1:8888 -c "G:\Nginx+php+mysql\php-7.4.3-nts-Win32-vc15-x64\php.ini"&lt;/startarguments&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">priority</span>&gt;</span>Normal<span class="tag">&lt;/<span class="name">priority</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">stoptimeout</span>&gt;</span>30 sec<span class="tag">&lt;/<span class="name">stoptimeout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">stopparentprocessfirst</span>&gt;</span>false<span class="tag">&lt;/<span class="name">stopparentprocessfirst</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">stopexecutable</span>&gt;</span>taskkill<span class="tag">&lt;/<span class="name">stopexecutable</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">stoparguments</span>&gt;</span>/f /IM php-cgi.exe<span class="tag">&lt;/<span class="name">stoparguments</span>&gt;</span>--&gt;</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">startmode</span>&gt;</span>Automatic<span class="tag">&lt;/<span class="name">startmode</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  &lt;delayedAutoStart/&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">waithint</span>&gt;</span>15 sec<span class="tag">&lt;/<span class="name">waithint</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">sleeptime</span>&gt;</span>1 sec<span class="tag">&lt;/<span class="name">sleeptime</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">logpath</span>&gt;</span>G:\Nginx+php+mysql\php-7.4.3-nts-Win32-vc15-x64\logs<span class="tag">&lt;/<span class="name">logpath</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">log</span> <span class="attr">mode</span>=<span class="string">"roll-by-size"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sizeThreshold</span>&gt;</span>10240<span class="tag">&lt;/<span class="name">sizeThreshold</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">keepFiles</span>&gt;</span>8<span class="tag">&lt;/<span class="name">keepFiles</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">log</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">env</span> <span class="attr">name</span>=<span class="string">"PHP_FCGI_MAX_REQUESTS"</span> <span class="attr">value</span>=<span class="string">"3000"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">env</span> <span class="attr">name</span>=<span class="string">"PHP_FCGI_CHILDREN"</span> <span class="attr">value</span>=<span class="string">"12"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">env</span> <span class="attr">name</span>=<span class="string">"CI_ENV"</span> <span class="attr">value</span>=<span class="string">"production"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">beeponshutdown</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>管理员权限通过cmd终端运行<code>php-pureven.exe install</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">G:\Nginx+php+mysql\php-7.4.3-nts-Win32-vc15-x64&gt;php-pureven.exe install</span><br><span class="line">2020-03-06 15:26:50,233 INFO  - Installing the service with id &apos;PHP-pureven&apos;</span><br></pre></td></tr></table></figure></li><li>加入服务成功，如图：<br><img src="/2020/03/06/nginx-simple-conf-with-php-fpm/20200306153358.png" alt></li><li>启动停止可通过服务界面直接操作了，另外配置文件中设置了开机自启，上图可以看到，至此设置完毕！</li></ol><hr><h4 id="Linux下安装配置Nginx-PHP-fpm"><a href="#Linux下安装配置Nginx-PHP-fpm" class="headerlink" title="Linux下安装配置Nginx + PHP-fpm"></a>Linux下安装配置Nginx + PHP-fpm</h4><p>请参考<span class="exturl" data-url="aHR0cHM6Ly93aXphcmRmb3JjZWwuZ2l0Ym9va3MuaW8vbmdpbngtZG9jL2NvbnRlbnQvVGV4dC82LjVfbmdpbnhfcGhwX2ZwbS5odG1s" title="https://wizardforcel.gitbooks.io/nginx-doc/content/Text/6.5_nginx_php_fpm.html">Nginx中文官方文档-nginx php-fpm安装配置<i class="fa fa-external-link"></i></span></p><hr><h4 id="MySQL下载配置"><a href="#MySQL下载配置" class="headerlink" title="MySQL下载配置"></a>MySQL下载配置</h4><h5 id="下载MySQL-5-7-28安装包并解压到目录G-Nginx-php-mysql"><a href="#下载MySQL-5-7-28安装包并解压到目录G-Nginx-php-mysql" class="headerlink" title="下载MySQL-5.7.28安装包并解压到目录G:\Nginx+php+mysql"></a>下载<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9teXNxbC8=" title="https://dev.mysql.com/downloads/mysql/">MySQL-5.7.28<i class="fa fa-external-link"></i></span>安装包并解压到目录<code>G:\Nginx+php+mysql</code></h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[G:\Nginx+php+mysql]$ cd mysql-5.7.28-winx64</span><br><span class="line">[G:\Nginx+php+mysql\mysql-5.7.28-winx64]$ dir</span><br><span class="line"> 驱动器 G 中的卷是 研发专用</span><br><span class="line"> 卷的序列号是 5861-182A</span><br><span class="line"></span><br><span class="line"> G:\Nginx+php+mysql\mysql-5.7.28-winx64 的目录</span><br><span class="line"></span><br><span class="line">2020/03/12  08:40    <span class="xml"><span class="tag">&lt;<span class="name">DIR</span>&gt;</span></span>          .</span><br><span class="line">2020/03/12  08:40    <span class="xml"><span class="tag">&lt;<span class="name">DIR</span>&gt;</span></span>          ..</span><br><span class="line">2020/03/12  08:40    <span class="xml"><span class="tag">&lt;<span class="name">DIR</span>&gt;</span></span>          bin</span><br><span class="line">2020/03/12  08:40    <span class="xml"><span class="tag">&lt;<span class="name">DIR</span>&gt;</span></span>          docs</span><br><span class="line">2020/03/12  08:40    <span class="xml"><span class="tag">&lt;<span class="name">DIR</span>&gt;</span></span>          include</span><br><span class="line">2020/03/12  08:40    <span class="xml"><span class="tag">&lt;<span class="name">DIR</span>&gt;</span></span>          lib</span><br><span class="line">2019/12/10  03:53           405,571 LICENSE</span><br><span class="line">2019/12/10  03:53               687 README</span><br><span class="line">2020/03/12  08:40    <span class="xml"><span class="tag">&lt;<span class="name">DIR</span>&gt;</span></span>          share</span><br><span class="line"><span class="code">               2 个文件        406,258 字节</span></span><br><span class="line"><span class="code">               7 个目录 30,955,925,504 可用字节</span></span><br></pre></td></tr></table></figure><h5 id="在G-Nginx-php-mysql-mysql-5-7-28-winx64目录下新建文件my-ini"><a href="#在G-Nginx-php-mysql-mysql-5-7-28-winx64目录下新建文件my-ini" class="headerlink" title="在G:\Nginx+php+mysql\mysql-5.7.28-winx64目录下新建文件my.ini"></a>在<code>G:\Nginx+php+mysql\mysql-5.7.28-winx64</code>目录下新建文件<code>my.ini</code></h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[G:\Nginx+php+mysql\mysql-5.7.28-winx64]$</span> <span class="string">type</span> <span class="string">my.ini</span></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="comment"># 设置3306端口</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"><span class="string">basedir=G:\Nginx+php+mysql\mysql-5.7.28-winx64</span></span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line"><span class="string">datadir=G:\Nginx+php+mysql\mysql-5.7.28-winx64\data</span></span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="string">max_connections=200</span></span><br><span class="line"><span class="comment"># 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统</span></span><br><span class="line"><span class="string">max_connect_errors=10</span></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为UTF8</span></span><br><span class="line"><span class="string">character-set-server=utf8</span></span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="string">default-storage-engine=INNODB</span></span><br><span class="line"><span class="comment"># 默认使用“mysql_native_password”插件认证</span></span><br><span class="line"><span class="string">default_authentication_plugin=mysql_native_password</span></span><br><span class="line"><span class="string">[mysql]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"><span class="string">default-character-set=utf8</span></span><br><span class="line"><span class="string">[client]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端连接服务端时默认使用的端口</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string">default-character-set=utf8</span></span><br></pre></td></tr></table></figure><h5 id="环境变量设置"><a href="#环境变量设置" class="headerlink" title="环境变量设置"></a>环境变量设置</h5><p><strong>将MySQL解压后的目录加入环境变量<code>MYSQL_HOME</code></strong><br><img src="/2020/03/06/nginx-simple-conf-with-php-fpm/20200312085658.png" alt></p><p><strong>将bin目录绝对路径加入系统变量<code>path</code></strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">%MYSQL_HOME\bin%</span> <span class="string">==&gt;</span> <span class="string">path</span> <span class="comment"># 此处不是代码，理解万岁</span></span><br></pre></td></tr></table></figure><h5 id="数据库服务初始化"><a href="#数据库服务初始化" class="headerlink" title="数据库服务初始化"></a>数据库服务初始化</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">G:\Nginx+php+mysql\mysql-5.7.28-winx64\bin&gt;mysqld.exe</span> <span class="string">--initialize</span> <span class="string">--console</span></span><br><span class="line"><span class="number">2020</span><span class="number">-03</span><span class="string">-11T13:33:52.368829Z</span> <span class="number">0</span> <span class="string">[System]</span> <span class="string">[MY-013169]</span> <span class="string">[Server]</span> <span class="string">G:\Nginx+php+mysql\mysql-5.7.28-winx64\bin\mysqld.exe</span> <span class="string">(mysqld</span> <span class="number">5.7</span><span class="number">.28</span><span class="string">)</span> <span class="string">initializing</span> <span class="string">of</span> <span class="string">server</span> <span class="string">in</span> <span class="string">progress</span> <span class="string">as</span> <span class="string">process</span> <span class="number">12704</span></span><br><span class="line"><span class="number">2020</span><span class="number">-03</span><span class="string">-11T13:33:52.370320Z</span> <span class="number">0</span> <span class="string">[Warning]</span> <span class="string">[MY-013242]</span> <span class="string">[Server]</span> <span class="string">--character-set-server:</span> <span class="string">'utf8'</span> <span class="string">is</span> <span class="string">currently</span> <span class="string">an</span> <span class="string">alias</span> <span class="string">for</span> <span class="string">the</span> <span class="string">character</span> <span class="string">set</span> <span class="string">UTF8MB3,</span> <span class="string">but</span> <span class="string">will</span> <span class="string">be</span> <span class="string">an</span> <span class="string">alias</span> <span class="string">for</span> <span class="string">UTF8MB4</span> <span class="string">in</span> <span class="string">a</span> <span class="string">future</span> <span class="string">release.</span> <span class="string">Please</span> <span class="string">consider</span> <span class="string">using</span> <span class="string">UTF8MB4</span> <span class="string">in</span> <span class="string">order</span> <span class="string">to</span> <span class="string">be</span> <span class="string">unambiguous.</span></span><br><span class="line"><span class="number">2020</span><span class="number">-03</span><span class="string">-11T13:34:00.541307Z</span> <span class="number">5</span> <span class="string">[Note]</span> <span class="string">[MY-010454]</span> <span class="string">[Server]</span> <span class="string">A</span> <span class="string">temporary</span> <span class="string">password</span> <span class="string">is</span> <span class="string">generated</span> <span class="string">for</span> <span class="string">root@localhost:</span> <span class="string">iw.r)rhp)7jX</span></span><br></pre></td></tr></table></figure><p>注意最后一行中的<code>iw.r)rhp)7jX</code>是默认生成的密码。</p><h5 id="安装并启动MySQL服务"><a href="#安装并启动MySQL服务" class="headerlink" title="安装并启动MySQL服务"></a>安装并启动MySQL服务</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">G:\Nginx+php+mysql\mysql-5.7.28-winx64\bin&gt;mysqld.exe</span> <span class="string">install</span> <span class="string">pureven-MySQL-5.7.28</span></span><br><span class="line"><span class="string">Service</span> <span class="string">successfully</span> <span class="string">installed.</span></span><br><span class="line"></span><br><span class="line"><span class="string">G:\Nginx+php+mysql\mysql-5.7.28-winx64\bin&gt;net</span> <span class="string">start</span> <span class="string">mysql</span></span><br><span class="line"><span class="string">MySQL</span> <span class="string">服务正在启动</span> <span class="string">..</span></span><br><span class="line"><span class="string">MySQL</span> <span class="string">服务已经启动成功。</span></span><br></pre></td></tr></table></figure><p><strong>注：可通过<code>sc delete pureven-MySQL-5.7.28</code>命令删除<code>pureven-MySQL</code>服务。</strong></p><h5 id="登录数据库并修改密码"><a href="#登录数据库并修改密码" class="headerlink" title="登录数据库并修改密码"></a>登录数据库并修改密码</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">G:\Nginx+php+mysql\mysql-5.7.28-winx64\bin&gt;mysql.exe</span> <span class="string">-u</span> <span class="string">root</span> <span class="string">-p</span></span><br><span class="line"><span class="attr">Enter password:</span> <span class="string">************</span> <span class="comment"># 这里使用的密码是上面初始化后系统生成的密码：iw.r)rhp)7jX</span></span><br><span class="line"><span class="string">Welcome</span> <span class="string">to</span> <span class="string">the</span> <span class="string">MySQL</span> <span class="string">monitor.</span>  <span class="string">Commands</span> <span class="string">end</span> <span class="string">with</span> <span class="string">;</span> <span class="string">or</span> <span class="string">\g.</span></span><br><span class="line"><span class="string">Your</span> <span class="string">MySQL</span> <span class="string">connection</span> <span class="string">id</span> <span class="string">is</span> <span class="number">8</span></span><br><span class="line"><span class="attr">Server version:</span> <span class="number">5.7</span><span class="number">.28</span></span><br><span class="line"></span><br><span class="line"><span class="string">Copyright</span> <span class="string">(c)</span> <span class="number">2000</span><span class="string">,</span> <span class="number">2020</span><span class="string">,</span> <span class="string">Oracle</span> <span class="string">and/or</span> <span class="string">its</span> <span class="string">affiliates.</span> <span class="string">All</span> <span class="string">rights</span> <span class="string">reserved.</span></span><br><span class="line"></span><br><span class="line"><span class="string">Oracle</span> <span class="string">is</span> <span class="string">a</span> <span class="string">registered</span> <span class="string">trademark</span> <span class="string">of</span> <span class="string">Oracle</span> <span class="string">Corporation</span> <span class="string">and/or</span> <span class="string">its</span></span><br><span class="line"><span class="string">affiliates.</span> <span class="string">Other</span> <span class="string">names</span> <span class="string">may</span> <span class="string">be</span> <span class="string">trademarks</span> <span class="string">of</span> <span class="string">their</span> <span class="string">respective</span></span><br><span class="line"><span class="string">owners.</span></span><br><span class="line"></span><br><span class="line"><span class="string">Type</span> <span class="string">'help;'</span> <span class="string">or</span> <span class="string">'\h'</span> <span class="string">for</span> <span class="string">help.</span> <span class="string">Type</span> <span class="string">'\c'</span> <span class="string">to</span> <span class="string">clear</span> <span class="string">the</span> <span class="string">current</span> <span class="string">input</span> <span class="string">statement.</span></span><br><span class="line"></span><br><span class="line"><span class="string">mysql&gt;</span> <span class="string">set</span> <span class="string">password</span> <span class="string">for</span> <span class="string">root@localhost='xxxxxx';</span> <span class="comment"># 修改密码为6个x，即xxxxxx</span></span><br><span class="line"><span class="string">Query</span> <span class="string">OK,</span> <span class="number">0</span> <span class="string">rows</span> <span class="string">affected</span> <span class="string">(0.03</span> <span class="string">sec)</span></span><br><span class="line"></span><br><span class="line"><span class="string">mysql&gt;</span> <span class="string">show</span> <span class="string">databases;</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="string">|</span> <span class="string">Database</span>           <span class="string">|</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="string">|</span> <span class="string">information_schema</span> <span class="string">|</span></span><br><span class="line"><span class="string">|</span> <span class="string">mysql</span>              <span class="string">|</span></span><br><span class="line"><span class="string">|</span> <span class="string">performance_schema</span> <span class="string">|</span></span><br><span class="line"><span class="string">|</span> <span class="string">sys</span>                <span class="string">|</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="number">4</span> <span class="string">rows</span> <span class="string">in</span> <span class="string">set</span> <span class="string">(0.01</span> <span class="string">sec)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Nginx </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx配置入门-nginx.conf文件学习笔记</title>
      <link href="/2020/02/29/nginx-simple-conf-with-static-site/"/>
      <url>/2020/02/29/nginx-simple-conf-with-static-site/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>本文为nginx.conf文件中配置指令学习的相关笔记，并试着配置了一个静态网站。本文介绍：</p><ul><li>nginx.conf文件结构</li><li>配置允许允许Nginx服务器的用户和用户组</li><li>配置允许生成的worker process数</li><li>配置Nginx服务器的错误日志</li><li>设置网络连接的序列化</li><li>设置是否允许同时接收多个网络连接</li><li>选择事件驱动模型</li><li>配置最大连接数</li><li>引入文件配置</li><li>配置默认处理前端请求的MIME类型</li><li>设置服务日志的格式、大学、输出及Nginx服务日志<br>……</li></ul><a id="more"></a><hr><h4 id="nginx-conf文件结构"><a href="#nginx-conf文件结构" class="headerlink" title="nginx.conf文件结构"></a>nginx.conf文件结构</h4><p><img src="/2020/02/29/nginx-simple-conf-with-static-site/20200229155600.png" alt></p><p>nginx.conf一共由三部分组成，分别为<code>全局块</code>、<code>events块</code>和<code>http块</code>。在http块中，又包含http全局块、多个server块。每个server块中，可以包含server全局块和多个location块。在同一配置块中嵌套的配置块，各个之间不存在次序关系。</p><p>配置文件支持大量可配置的指令，绝大多数指令不是特定属于某一个块的。同一个指令放在不同层级的块中，其作用域也不同，一般情况下，高一级块中的指令可以作用于自身所在的块和此块包含的所有低层级块。如果某个指令在两个不同层级的块中同时出现，则采用“<strong>就近原则</strong>”，即<code>以较低层级块中的配置为准</code>。比如，某指令同时出现在http全局块中和server块中，并且配置不同，则应该以server块中的配置为准。</p><hr><h4 id="全局块"><a href="#全局块" class="headerlink" title="全局块"></a>全局块</h4><h5 id="配置允许运行Nginx服务器的用户和用户组"><a href="#配置允许运行Nginx服务器的用户和用户组" class="headerlink" title="配置允许运行Nginx服务器的用户和用户组"></a>配置允许运行Nginx服务器的用户和用户组</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">user</span>  <span class="string">nobody;</span></span><br></pre></td></tr></table></figure><ul><li>配置允许运行Nginx服务器的用户和用户组， <code>user user [group];</code></li><li>只有被设置的用户或用户组成员才有权限启动Nginx进程，如果是其他用户尝试启动Nginx进程则报错</li><li>如果希望所有用户都可以启动Nginx进程则将此指令注释掉或者将用户(和用户组)设置为nobody</li></ul><h5 id="配置允许生成的worker-process数"><a href="#配置允许生成的worker-process数" class="headerlink" title="配置允许生成的worker process数"></a>配置允许生成的worker process数</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">worker_processes</span>  <span class="number">2</span><span class="string">;</span></span><br></pre></td></tr></table></figure><ul><li>配置允许生成的worker process数的指令， <code>worker_process number | auto;</code></li><li>number 表示指定Nginx进程最多可以产生的workder process数; auto 表示Nginx进程将自动检测;</li><li>number值理论上越大可支持的并发处理量越多，但实际上会受到来自软件本身、操作系统本身资源和能力、硬件设备(CPU和磁盘驱动器)的制约</li></ul><h5 id="配置错误输出"><a href="#配置错误输出" class="headerlink" title="配置错误输出"></a>配置错误输出</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br></pre></td></tr></table></figure><ul><li><code>err_log file | stderr [debug | info | notice | warn | error | crit | alert | emerg];</code>，Nginx服务器的日志支持输出到某一固定的文件或输出到标准错误输出stderr;日志级别是可选项;</li><li>全局快、http块和server块中都可以对Nginx服务器的日志进行相关配置; </li></ul><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#user  nobody; </span></span><br><span class="line"></span><br><span class="line"><span class="string">worker_processes</span>  <span class="number">2</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pid file; 用于保存当前运行程序的主进程号;</span></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br></pre></td></tr></table></figure><p>全局块是默认配置文件从开始到events块之间的一部分内容，主要设置一些影响<code>Nginx服务器整体运行的配置指令</code>，因此，这些指令的作用域是Nginx服务器全局。<br>通常包括配置运行Nginx服务器的用户（组）、允许生成的worker process数、Nginx进程PID存放路径、日志的存放路径和类型以及配置文件引入等。</p><hr><p><code>worker_process 2</code>表示Nginx进程最多产生两个worker进程，Windows下可利用<code>netstat -ano | findstr 8080</code>通过端口号查看进程PID和<code>tasklist | findstr $PID</code>通过PID查看进程。<br><img src="/2020/02/29/nginx-simple-conf-with-static-site/20200303094534.png" alt></p><hr><h4 id="events块"><a href="#events块" class="headerlink" title="events块"></a>events块</h4><h5 id="设置网络连接的序列化"><a href="#设置网络连接的序列化" class="headerlink" title="设置网络连接的序列化"></a>设置网络连接的序列化</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">accept_mutex</span> <span class="string">on</span> <span class="string">|</span> <span class="string">off;</span></span><br></pre></td></tr></table></figure><ul><li>设置网络连接的序列化，当开启时将会对多个Nginx进程接收连接进行序列化，防止多个进程对连接的争抢，杜绝<strong>惊群</strong>问题; 默认on;</li></ul><h5 id="设置是否允许同时接受多个网络连接"><a href="#设置是否允许同时接受多个网络连接" class="headerlink" title="设置是否允许同时接受多个网络连接"></a>设置是否允许同时接受多个网络连接</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">multi_accept</span> <span class="string">on</span> <span class="string">|</span> <span class="string">off;</span></span><br></pre></td></tr></table></figure><ul><li>设置是否允许同时接受多个网络连接。默认off，即每个worker process一次只能接受一个新到达的网络连接</li></ul><h5 id="选择事件驱动模型"><a href="#选择事件驱动模型" class="headerlink" title="选择事件驱动模型"></a>选择事件驱动模型</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">use</span> <span class="string">epoll;</span></span><br></pre></td></tr></table></figure><ul><li>选择事件驱动模型: <code>use method;</code> 其中method可选择select、poll、kqueue、epoll、rtsig、/dev/poll以及eventport。</li></ul><h5 id="配置最大连接数"><a href="#配置最大连接数" class="headerlink" title="配置最大连接数"></a>配置最大连接数</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">worker_connections</span>  <span class="number">1024</span><span class="string">;</span></span><br></pre></td></tr></table></figure><ul><li>配置最大连接数，用来设置允许每一个worker process同时开启的最大连接数: <code>worker_connections number;</code>，number值不能大于操作系统支持打开的最大文件句柄数量;</li></ul><h5 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">events</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="comment"># accept_mutex on | off;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># multi_accept on | off;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># use epoll; </span></span><br><span class="line">    </span><br><span class="line">    <span class="string">worker_connections</span>  <span class="number">1024</span><span class="string">;</span> </span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>events块涉及的指令主要影响Nginx服务器与用户的网络连接。常用到的设置包括是否开启对多worker process下的网络连接进行序列化，是否允许同时接收多个网络连接，选取哪种事件驱动模型处理连接请求，每个worker process可以同时支持的最大连接数等。</p><hr><h4 id="http块"><a href="#http块" class="headerlink" title="http块"></a>http块</h4><h5 id="引入配置文件"><a href="#引入配置文件" class="headerlink" title="引入配置文件"></a>引入配置文件</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">include</span> <span class="string">mime.types;</span> <span class="comment"># 定义MIME-Type;</span></span><br><span class="line"><span class="string">default_type</span>  <span class="string">application/octet-stream;</span></span><br></pre></td></tr></table></figure><ul><li>引入配置文件: <code>include file;</code>可以在任意地方引入;</li><li>可在http块、server块或者location块中进行配置;</li><li>配置用于处理前端请求的MIME类型，结构: <code>default_type mime-type;</code>默认<code>text/plain;</code></li></ul><h5 id="设置服务日志的格式、大小、输出等和设置Nginx服务日志"><a href="#设置服务日志的格式、大小、输出等和设置Nginx服务日志" class="headerlink" title="设置服务日志的格式、大小、输出等和设置Nginx服务日志"></a>设置服务日志的格式、大小、输出等和设置Nginx服务日志</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">log_format</span>  <span class="string">main</span>  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                  <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                  <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span><span class="string">;</span></span><br><span class="line"><span class="string">access_log</span>  <span class="string">logs/access.log</span>  <span class="string">main;</span></span><br></pre></td></tr></table></figure><ul><li>设置Nginx服务日志，即用于存放前端请求的日志;格式为<code>access_log path [format [buffer=size]];</code></li><li>可在http块、server块或者location块中进行配置;默认的配置为: <code>access_log logs/access.log combined;</code></li></ul><h5 id="用于开启或关闭使用sendfile-传输文件"><a href="#用于开启或关闭使用sendfile-传输文件" class="headerlink" title="用于开启或关闭使用sendfile()传输文件"></a>用于开启或关闭使用sendfile()传输文件</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">sendfile</span>        <span class="string">on;</span></span><br></pre></td></tr></table></figure><ul><li>用于开启或关闭使用sendfile()传输文件;可在http块、server块或者location块中进行配置;</li></ul><h5 id="设置worker-process进程每次调用sendfile-传输数据量上限"><a href="#设置worker-process进程每次调用sendfile-传输数据量上限" class="headerlink" title="设置worker process进程每次调用sendfile()传输数据量上限"></a>设置worker process进程每次调用sendfile()传输数据量上限</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">sendfile_max_chunk</span> <span class="number">0</span><span class="string">;</span></span><br></pre></td></tr></table></figure><ul><li><code>sendfile_max_chunk size;</code>用于设置Nginx进程的每个worker process每次调用<code>sendfile()</code>传输的数据量最大不能超过这个值;<code>如果为0则表示无限制;</code></li><li>可在http块、server块或者location块中进行配置;</li></ul><h5 id="配置连接超时时间"><a href="#配置连接超时时间" class="headerlink" title="配置连接超时时间"></a>配置连接超时时间</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">keepalive_timeout</span>  <span class="number">65</span><span class="string">;</span></span><br></pre></td></tr></table></figure><ul><li>配置连接超时时间: <code>keepalive_timeout  timeout [header_timeout];</code>，即与用户建立会话连接后可以保持这些连接持续打开的时间。</li><li><strong>header_timeout</strong> 为可选项，表示在应答报文头部的<code>Keep-Alive</code>域设置超时时间: <code>&quot;Keep-Alive:timeout=header_timeout&quot;</code>，比如: <code>keepalive_timeout 120 100;</code></li><li>可在http块、server块或者location块中进行配置;</li></ul><h5 id="单连接请求数上限"><a href="#单连接请求数上限" class="headerlink" title="单连接请求数上限"></a>单连接请求数上限</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">keepalive_requests</span> <span class="number">100</span><span class="string">;</span></span><br></pre></td></tr></table></figure><ul><li>单连接请求数上限: <code>keepalive_requests number;</code>，用于限制用户通过某一连接向Nginx服务器发送请求的次数;</li><li>可在http块、server块或者location块中进行配置;</li></ul><h5 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">include</span> <span class="string">mime.types;</span></span><br><span class="line">    <span class="string">default_type</span>  <span class="string">application/octet-stream;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">    <span class="comment">#                  '$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">    <span class="comment">#                  '"$http_user_agent" "$http_x_forwarded_for"';</span></span><br><span class="line"></span><br><span class="line">    <span class="string">access_log</span>  <span class="string">logs/access.log</span>  <span class="string">main;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">sendfile</span>        <span class="string">on;</span></span><br><span class="line">    <span class="string">sendfile_max_chunk</span> <span class="number">0</span><span class="string">;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">keepalive_timeout</span>  <span class="number">65</span><span class="string">;</span></span><br><span class="line">    <span class="string">keepalive_requests</span> <span class="number">100</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">......</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>http块是Nginx服务器配置中的重要部分，<code>代理</code>、<code>缓存</code>和<code>日志定义</code>等绝大多数的功能和<code>第三方模块的配置</code>都可以放在这个模块中。http块中可以包含自己的全局块，也可以包含<code>server块</code>，server块中又可以进一步包含location块，“http全局块”用来表示http中自己的全局块，即http块中不包含在server块中的部分。可以在http全局块中配置的指令包括<code>文件引入</code>、<code>MIME-Type定义</code>、<code>日志自定义</code>、<code>是否使用sendfile传输文件</code>、<code>连接超时时间</code>、<code>单连接请求数上限</code>等。</p><hr><h4 id="server块"><a href="#server块" class="headerlink" title="server块"></a>server块</h4><h5 id="配置网络监听"><a href="#配置网络监听" class="headerlink" title="配置网络监听"></a>配置网络监听</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">listen</span>       <span class="number">80</span><span class="string">;</span></span><br></pre></td></tr></table></figure><ul><li><code>listen 192.168.1.10:8000;</code> 监听具体IP和具体端口的连接</li><li><code>listen 192.168.1.10;</code> 监听具体IP所有端口的连接</li><li><code>listen 8000;</code> 监听具体端口的所有IP连接，等同于listen *:8000</li></ul><h5 id="基于名称的虚拟主机配置"><a href="#基于名称的虚拟主机配置" class="headerlink" title="基于名称的虚拟主机配置"></a>基于名称的虚拟主机配置</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server_name</span>  <span class="string">localhost;</span></span><br></pre></td></tr></table></figure><ul><li>基于名称的虚拟主机配置: 这里的“主机”，就是指此server块对外提供的虚拟主机。</li><li>设置了主机的名称并配置好DNS，用户就可以使用这个名称向此虚拟主机发送请求了。</li><li>比如： <code>server_name ~^www\.(.+)\.come$;</code> 或<code>server_name *.myserver.com  www.myserver.*;</code></li><li>匹配优先级: 准确匹配 &gt;&gt; 通配符在开始时匹配server_name成功 &gt;&gt; 通配符在结尾时匹配server_name成功 &gt;&gt; 正则表达式匹配server_name成功</li></ul><h5 id="基于IP的虚拟主机配置"><a href="#基于IP的虚拟主机配置" class="headerlink" title="基于IP的虚拟主机配置"></a>基于IP的虚拟主机配置</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server_name</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.10</span><span class="string">;</span></span><br></pre></td></tr></table></figure><h5 id="设置网站的错误页面"><a href="#设置网站的错误页面" class="headerlink" title="设置网站的错误页面"></a>设置网站的错误页面</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  <span class="string">/50x.html;</span></span><br></pre></td></tr></table></figure><ul><li>设置网站的错误页面: 当请求资源出现问题时服务器会返回响应的HTTP错误，此时可以通过配置响应的错误页面进行友好提示，这样显得更人性化。</li></ul><h5 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">listen</span>       <span class="number">80</span><span class="string">;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">server_name</span>  <span class="string">localhost;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># server_name 192.168.1.10;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">root</span>   <span class="string">html;</span></span><br><span class="line">        <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line">    <span class="string">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  <span class="string">/50x.html;</span></span><br><span class="line">    <span class="string">location</span> <span class="string">=</span> <span class="string">/50x.html</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">root</span>   <span class="string">html;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>server块和“虚拟主机”的概念有密切联系。为了加深对相关配置的理解，在介绍server块之前，我们简单了解一下虚拟主机的相关内容。</p><p>虚拟主机，又称虚拟服务器、主机空间或是网页空间，它是一种技术。该技术是为了节省互联网服务器硬件成本而出现的。这里的“主机”或“空间”是由实体的服务器延伸而来，硬件系统可以基于服务器群，或者单个服务器等。虚拟主机技术主要应用于HTTP、FTP及EMAIL等多项服务，将一台服务器的某项或者全部服务内容逻辑划分为多个服务单位，对外表现为多个服务器，从而充分利用服务器硬件资源。从用户角度来看，一台虚拟主机和一台独立的硬件主机是完全一样的。</p><p><code>在使用Nginx服务器提供Web服务时，利用虚拟主机的技术就可以避免为每一个要运行的网站提供单独的Nginx服务器，也无需为每个网站对应运行一组Nginx进程。</code>虚拟主机技术使得Nginx服务器可以在同一台服务器上只运行一组Nginx进程，就可以运行多个网站。那么，如何对Nginx进行配置才能达到这种效果呢？server块就是用来完成这个功能的。</p><p>每一个http块都可以包含多个server块，而每个server块就相当于一台虚拟主机，它内部可有多台主机联合提供服务，一起对外提供在逻辑上关系密切的一组服务（或网站）。server全局块指令的作用域为本server块，其不会影响到其他的server块。和http块相同，server块也可以包含自己的全局块，同时可以包含多个<code>location块</code>。在server全局块中，最常见的两个配置项是本虚拟主机的监听配置和本虚拟主机的名称或IP配置。</p><hr><h4 id="location块"><a href="#location块" class="headerlink" title="location块"></a>location块</h4><h5 id="location结构"><a href="#location结构" class="headerlink" title="location结构"></a>location结构</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">location</span> <span class="string">[</span> <span class="string">=</span> <span class="string">|</span> <span class="string">~</span> <span class="string">|</span> <span class="string">~*</span> <span class="string">|</span> <span class="string">^~</span> <span class="string">]</span> <span class="string">uri</span> </span><br><span class="line"><span class="string">&#123;</span> </span><br><span class="line">    <span class="string">...</span> </span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>其中方括号中的部分是可选项，用来改变请求字符串与uri的匹配方式。在不添加可选项时： Nginx服务器首先在server块的多个location块中搜索是否有标准uri和请求字符串匹配，如果有多个可以匹配，就记录匹配度最高的一个。然后，服务器再用location块中的正则uri和请求字符串匹配，当第一个正则uri匹配成功，结束搜索，并使用这个location块处理此请求；如果正则匹配全部失败，就使用刚才记录的匹配度最高的location块处理此请求。</p><h5 id="location-可选项优先级"><a href="#location-可选项优先级" class="headerlink" title="location: 可选项优先级"></a>location: 可选项优先级</h5><p>如果添加了可选项，需要清楚各个可选项的作用：</p><ul><li><code>=</code>： 用于标准uri前，要求请求字符串与uri严格匹配。如果匹配成功则停止继续向下搜索并立即处理此请求。</li><li><code>~</code>： 用于表示uri包含正则表达式，并且区分大小写。</li><li><code>~*</code>： 用于表示uri包含正则表达式，并且不区分大小写。如果uri包含正则表达式，就必须要使用<code>~</code>或者<code>~*</code>标识。</li><li><code>^~</code>： 用于标准uri前，要求Nginx服务器找到标识uri和请求字符串匹配度最高的location后，立即使用此location处理请求而不再使用location块中的正则uri和请求字符串做匹配。</li><li>可选项优先级：<b>(location <code>=</code>) &gt;&gt; (location <code>完整路径</code>) &gt;&gt; (location <code>^~ 路径</code>) &gt;&gt; (location <code>~</code>,<code>~*</code> 正则顺序) &gt;&gt; (location <code>部分起始路径</code>)</b></li></ul><h5 id="配置请求的根目录"><a href="#配置请求的根目录" class="headerlink" title="配置请求的根目录"></a>配置请求的根目录</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">root</span>   <span class="string">html;</span></span><br></pre></td></tr></table></figure><ul><li>web服务器接收到网络请求之后，首先要在服务器端指定目录中寻找请求资源。</li><li>配置请求的根目录：root， <code>root path;</code> 其中path为Nginx服务器接收到请求以后查找资源的根目录路径。</li><li>可在http块、server块或者location块中进行配置;</li><li>比如设置为<code>location /data/ { root /location_test1; }</code>时,当location块接收到<code>/data/index.html</code>的请求时，将在<code>location_test1/data/</code>目录下找到<code>index.html</code>响应请求。</li></ul><h5 id="更改location的URI"><a href="#更改location的URI" class="headerlink" title="更改location的URI"></a>更改location的URI</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">alias</span> <span class="string">"C:\CodeIgniter-3.1.10\user_guide"</span><span class="string">;</span></span><br></pre></td></tr></table></figure><ul><li>更改location的URI， <code>alias path;</code>，alias用来改变location接收到的URI的请求路径，path即为修改后的根路径。</li><li>当此location块收到<code>/codeigniter/index.html</code>时，匹配成功，之后根据alia指令的配置，Nginx服务器将到<code>C:/Codeigniter-3.1.10/user_guide</code>目录下找到<code>index.html</code>并响应请求。</li></ul><h5 id="设置网站的默认首页"><a href="#设置网站的默认首页" class="headerlink" title="设置网站的默认首页"></a>设置网站的默认首页</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span></span><br></pre></td></tr></table></figure><ul><li>设置网站的默认首页: <code>index file1 file2 . . .;</code> 当location块接收到”/“时匹配成功后会按照index的配置次序<strong>依次寻找</strong>index.html页和index.htm页。首先找到哪个页面就使用哪个页面响应请求。</li></ul><h5 id="基于IP配置Nginx的访问权限"><a href="#基于IP配置Nginx的访问权限" class="headerlink" title="基于IP配置Nginx的访问权限"></a>基于IP配置Nginx的访问权限</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">deny</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span><span class="string">;</span></span><br><span class="line">    <span class="string">allow</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span><span class="string">/24;</span></span><br><span class="line">    <span class="string">deny</span> <span class="string">all;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>基于IP配置Nginx的访问权限: <code>allow address | CIDR | all;</code> ，<code>deny address | CIDR | all;</code>其中address为允许(或拒绝)访问的客户端IP，不支持同时配置多个。CIDR表示CIDR地址，如<code>192.168.1.11/25</code>，25表示IP地址中前25位是网络部分。下面例子表示首先禁止192.168.1.1访问Nginx，然后配置允许192.168.1.0/24访问Nginx，最后使用all配置禁止所有IP访问。通过上面的顺序192.168.1.0/24是可以访问的。因为Nginx配置在解析的过程中，遇到deny指令或者allow指令是按照顺序对当前客户端的连接进行访问权限检查的。如果遇到匹配的配置时，则停止继续向下搜索相关配置。因此，当192.168.1.0/24客户端访问时，Nginx在第3行解析配置发现允许该客户端访问，就不会继续向下解析第4行了。</li></ul><h5 id="示例-4"><a href="#示例-4" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">root</span>   <span class="string">html;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="string">location</span> <span class="string">/codeigniter</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">alias</span> <span class="string">"C:\CodeIgniter-3.1.10\user_guide"</span><span class="string">;</span></span><br><span class="line">    <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">location</span> <span class="string">=</span> <span class="string">/50x.html</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">root</span>   <span class="string">html;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">deny</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span><span class="string">;</span></span><br><span class="line">    <span class="string">allow</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span><span class="string">/24;</span></span><br><span class="line">    <span class="string">deny</span> <span class="string">all;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>每个server块中可以包含多个location块。从严格意义上说，location其实是server块的一个指令，只是由于其在整个Nginx配置文档中起着重要的作用，而且Nginx服务器在许多功能上的灵活性往往在location指令的配置中体现出来，这些location块的主要作用是，<code>基于Nginx服务器接收到的请求字符串(例如， server_name/uri-string)，对除虚拟主机名称(也可以是IP别名)之外的字符串进行匹配，对特定的请求进行处理</code>。<code>地址定向</code>、<code>数据缓存</code>和<code>应答控制</code>等功能都是在这部分实现。许多<code>第三方模块的配置</code>也是在location块中提供功能。</p><hr><h4 id="一个简单的静态站点配置实例"><a href="#一个简单的静态站点配置实例" class="headerlink" title="一个简单的静态站点配置实例"></a>一个简单的静态站点配置实例</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">############################### 全局块 开始 ############################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置允许运行Nginx服务器的用户和用户组</span></span><br><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置允许Nginx进程生成的worker process数 </span></span><br><span class="line"><span class="string">worker_processes</span>  <span class="number">3</span><span class="string">;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置Nginx服务器运行对错误日志存放路径</span></span><br><span class="line"><span class="string">error_log</span>  <span class="string">logs/my-nginx-error.log;</span> </span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置Nginx服务器运行时的pid文件存放路径和名称</span></span><br><span class="line"><span class="comment"># pid        logs/my-nginx.pid; </span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################### 全局块 结束 ############################################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################### events块 开始 ##########################################</span></span><br><span class="line"></span><br><span class="line"><span class="string">events</span> <span class="string">&#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 配置事件驱动模型</span></span><br><span class="line">    <span class="comment"># use epoll; </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置最大连接数</span></span><br><span class="line">    <span class="string">worker_connections</span>  <span class="number">1024</span><span class="string">;</span> </span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################### events块 结束 ##########################################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################### http块 开始 ############################################</span></span><br><span class="line"></span><br><span class="line"><span class="string">http</span> <span class="string">&#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义MIME-Type</span></span><br><span class="line">    <span class="string">include</span>       <span class="string">mime.types;</span> </span><br><span class="line">    <span class="string">default_type</span>  <span class="string">application/octet-stream;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义日志格式， main为日志格式的默认名称，也可以自定义名称，比如'access_lf'</span></span><br><span class="line">    <span class="string">log_format</span>  <span class="string">main</span>  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 配置请求处理日志存放路径</span></span><br><span class="line">    <span class="string">access_log</span>  <span class="string">logs/access.log</span>  <span class="string">main;</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 配置允许使用sendfile方式传输</span></span><br><span class="line">    <span class="string">sendfile</span>        <span class="string">on;</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 配置连接超时时间</span></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    <span class="string">keepalive_timeout</span>  <span class="number">65</span><span class="string">;</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">####################### server块 开始 ############################</span></span><br><span class="line">    <span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="comment"># 配置监听端口和主机名称(基于名称)</span></span><br><span class="line">        <span class="string">listen</span>       <span class="number">80</span><span class="string">;</span></span><br><span class="line">        <span class="string">server_name</span>  <span class="string">localhost;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 配置请求日志存放路径</span></span><br><span class="line">        <span class="string">access_log</span>  <span class="string">logs/80.host.access.log</span>  <span class="string">main;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 配置错误页面</span></span><br><span class="line">        <span class="string">error_page</span>  <span class="number">404</span>              <span class="string">/404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 配置处理localhost/codeigniter请求的location， 对location的URI进行更改</span></span><br><span class="line"><span class="comment"># 静态文件目录</span></span><br><span class="line">        <span class="string">location</span> <span class="string">/codeigniter</span> <span class="string">&#123;</span></span><br><span class="line"><span class="string">alias</span> <span class="string">"E:\personal\CodeIgniter-3.1.10\user_guide"</span><span class="string">;</span></span><br><span class="line">            <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 静态文件目录</span></span><br><span class="line">        <span class="string">location</span> <span class="string">/ci</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="string">root</span> <span class="string">html;</span></span><br><span class="line">            <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 默认 静态文件目录</span></span><br><span class="line">        <span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="string">root</span>   <span class="string">html;</span></span><br><span class="line">            <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># root 和 alias的区别</span></span><br><span class="line">        <span class="comment"># root:  最上层目录的定义, 当访问localhost/ci时访问的是html/ci/index.html，即root路径 + location路径。</span></span><br><span class="line">        <span class="comment"># alias: 目录别名的定义(仅能用于location上下文)，当访问localhost/codeigniter时访问的是E:/personal/CodeIgniter-3.1.10/user_guide/index.html，即使用alias路径替换location路径。</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 对错误页面 500 502 503 504做了定向配置</span></span><br><span class="line">        <span class="string">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  <span class="string">/50x.html;</span></span><br><span class="line">        <span class="string">location</span> <span class="string">=</span> <span class="string">/50x.html</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="string">root</span>   <span class="string">html;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    root           html;</span></span><br><span class="line">        <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">        <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">        <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx's one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#    deny  all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    <span class="comment">####################### server块 结束 ############################</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################### http块 结束 ############################################</span></span><br></pre></td></tr></table></figure><h4 id="附：部分Nginx内置变量"><a href="#附：部分Nginx内置变量" class="headerlink" title="附：部分Nginx内置变量"></a>附：部分Nginx内置变量</h4><table><thead><tr><th align="center">内置变量名</th><th align="center">介绍</th></tr></thead><tbody><tr><td align="center">$arg_PARAMETER</td><td align="center">客户端GET请求中PARAMETER字段的值，如<code>/index.php?site=www.ttlsa.com</code>，可以用<code>$arg_site</code>取得<code>www.ttlsa.com</code>这个值</td></tr><tr><td align="center">$args</td><td align="center"><strong>HTTP</strong>请求中的完整参数。例如，在请求<code>/index.php?width=400&amp;height=200</code>中，<code>$args</code>表示字符串<code>width=400&amp;height=200</code></td></tr><tr><td align="center">$binary_remote_addr</td><td align="center">二进制格式的客户端地址。例如：<code>\x0A\xE0B\x0E</code></td></tr><tr><td align="center">$body_bytes_sent</td><td align="center">表示在向客户端发送的http响应中，<strong>消息体部分</strong>的字节数</td></tr><tr><td align="center">$content_length</td><td align="center">表示客户端请求头部中的<code>Content-Length</code>字段</td></tr><tr><td align="center">$content_type</td><td align="center">表示客户端请求头部中的<code>Content-Type</code>字段</td></tr><tr><td align="center">$cookie_COOKIE</td><td align="center">表示在客户端请求头部中的<code>cookie</code>字段</td></tr><tr><td align="center">$document_root</td><td align="center">表示当前请求所使用的<code>root</code>配置项的值, 即在<code>server</code>配置中<code>root</code>指令中指定的值</td></tr><tr><td align="center">$document_uri</td><td align="center">与<code>$uri</code>相同，表示当前请求的URI，不带任何参数</td></tr><tr><td align="center">$host</td><td align="center">表示客户端请求头部中的<code>Host</code>字段。如果Host字段不存在，则以实际处理的server（虚拟主机）名称代替。<code>如果Host字段中带有端口，如IP:PORT，那么$host是去掉端口的，它的值为IP。</code>$host 是全小写的。这些特性与http_HEADER中的http_host不同，http_host只取出Host头部对应的值。</td></tr><tr><td align="center">$hostname</td><td align="center">表示<code>Nginx所在机器的名称</code>，与 <code>gethostbyname</code>调用返回的值相同</td></tr><tr><td align="center">$http_HEADER</td><td align="center">表示<code>当前HTTP请求中相应头部的值</code>。HEADER名称全小写。例如，请求中 Host头部对应的值用$http_host表示</td></tr><tr><td align="center">$http_host</td><td align="center">与<code>$host相同</code>，但如果请求信息中没有Host行，则可能不同</td></tr><tr><td align="center">$http_cookie</td><td align="center">客户端的cookie信息</td></tr><tr><td align="center">$http_referer</td><td align="center">引用地址</td></tr><tr><td align="center">$http_user_agent</td><td align="center">客户端代理信息</td></tr><tr><td align="center">$http_via</td><td align="center">最后一个访问服务器的IP地址</td></tr><tr><td align="center">$http_x_forwarded_for</td><td align="center">相当于网络访问路径</td></tr><tr><td align="center">$is_args</td><td align="center">表示返回客户端的 HTTP响应中相应头部的值。HEADER名称全小写。例如，用<code>$sent_ http_content_type</code>表示响应中<code>Content-Type</code>头部对应的值</td></tr><tr><td align="center">$limit_rate</td><td align="center">表示当前连接的限速是多少，0表示无限速</td></tr><tr><td align="center">$nginx_version</td><td align="center">当前Nginx服务器的版本</td></tr><tr><td align="center">$pid</td><td align="center">当前Nginx服务器主进程的进程ID</td></tr><tr><td align="center">$query_string</td><td align="center">请求URI中的参数，与<code>$args</code>相同，然而<code>$query_string</code>是只读的不会改变</td></tr><tr><td align="center">$remote_addr</td><td align="center">表示客户端的地址</td></tr><tr><td align="center">$remote_port</td><td align="center">表示客户端连接使用的端口</td></tr><tr><td align="center">$remote_user</td><td align="center">表示使用<code>Auth Basic Module</code>时定义的用户名</td></tr><tr><td align="center">$request</td><td align="center">客户端请求</td></tr><tr><td align="center">$request_body</td><td align="center">表示HTTP请求中的消息体，该参数只在<code>proxy_pass</code>或<code>fastcgi_pass</code>中有意义</td></tr><tr><td align="center">$request_body_file</td><td align="center">发往后端服务器的本地临时缓存文件的名称</td></tr><tr><td align="center">$request_completion</td><td align="center">当请求已经全部完成时，其值为<code>ok</code>。若没有完成，就要返回客户端，则其值为<code>空字符串</code>;或者在断点续传等情况下使用 <code>HTTP range</code>访问的并不是文件的最后一块，那么其值也是空字符串。</td></tr><tr><td align="center">$request_filename</td><td align="center">表示用户请求中的<strong>URI</strong>经过<code>root</code>或<code>alias</code>转换后的文件路径</td></tr><tr><td align="center">$request_method</td><td align="center">请求的方法，比如GET、POST等</td></tr><tr><td align="center">$request_uri</td><td align="center">请求的URI，带参数，不包含主机名。表示客户端发来的原始请求URI，带完整的参数。<code>$uri和$document_uri未必是用户的原始请求，在内部重定向后可能是重定向后的URI，而$request_uri 永远不会改变，始终是客户端的原始URI</code></td></tr><tr><td align="center">$scheme</td><td align="center">所用的协议，如<code>http</code>或者<code>https</code>，比如<code>rewrite^(.+)$$scheme://mysite.name$1redirect</code></td></tr><tr><td align="center">$sent_http_HEADER</td><td align="center">表示返回客户端的HTTP响应中相应头部的值。HEADER名称全小写。例如，用 <code>$sent_ http_content_type</code>表示响应中<code>Content-Type</code>头部对应的值</td></tr><tr><td align="center">$server_addr</td><td align="center">服务器地址，如果没有用listen指明服务器地址，使用这个变量将发起一次系统调用以取得地址（这样会造成资源浪费）$server_name请求到达的服务器名</td></tr><tr><td align="center">$server_port</td><td align="center">请求到达的服务器端口号</td></tr><tr><td align="center">$server_name</td><td align="center">服务器名称</td></tr><tr><td align="center">$server_protocol</td><td align="center">请求的协议版本，<code>HTTP/1.0</code>或<code>HTTP/1.1</code></td></tr><tr><td align="center">$uri</td><td align="center">请求的不带请求参数的URI，可能和最初的值有不同，比如经过重定向之类的</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter日志类文件Log.php</title>
      <link href="/2020/02/22/codeigniter-log/"/>
      <url>/2020/02/22/codeigniter-log/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>日志记录类用于记录CI框架信息的一些操作日志(错误日志、调试日志、信息日志等等)。</p><a id="more"></a><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> $_log_path; <span class="comment">// 日志存放路径</span></span><br><span class="line"><span class="keyword">protected</span> $_file_permissions = <span class="number">0644</span>; <span class="comment">// 写入的日志文件权限，默认0644，即rw-r--r--</span></span><br><span class="line"><span class="keyword">protected</span> $_threshold = <span class="number">1</span>;           <span class="comment">// 允许写日志的阈值，默认为1。</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 0 = Disables logging, Error logging TURNED OFF</span></span><br><span class="line"><span class="comment">* 1 = Error Messages (including PHP errors)</span></span><br><span class="line"><span class="comment">* 2 = Debug Messages</span></span><br><span class="line"><span class="comment">* 3 = Informational Messages</span></span><br><span class="line"><span class="comment">* 4 = All Messages</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 也是允许写日志的阀值，但与$_threshold有些不同。</span></span><br><span class="line"><span class="comment">// 比如设置配置文件$config['log_threshold'] = 3，这个值会读到$_threshold属性中。</span></span><br><span class="line"><span class="comment">// 那么写日志允许的level可以是1，2，3；可是如果设置$config['log_threshold'] = [3],</span></span><br><span class="line"><span class="comment">// 那么系统会把这个3读到$_threshold_array数组中，写日志level只允许3，其它的1和2不允许。</span></span><br><span class="line"><span class="keyword">protected</span> $_threshold_array = <span class="keyword">array</span>();</span><br><span class="line"><span class="comment">// 日志的时间格式，由$config['log_date_format']决定。默认'Y-m-d H:i:s'。</span></span><br><span class="line"><span class="comment">// 主要用于$date-&gt;format的参数。</span></span><br><span class="line"><span class="keyword">protected</span> $_date_fmt = <span class="string">'Y-m-d H:i:s'</span>;</span><br><span class="line"><span class="keyword">protected</span> $_file_ext; <span class="comment">// 日志文件的扩展名</span></span><br><span class="line"><span class="keyword">protected</span> $_enabled = <span class="keyword">TRUE</span>; <span class="comment">// 标记字段。标记是否有权限写日志。</span></span><br><span class="line"><span class="comment">// 预定义的level级别数组。</span></span><br><span class="line"><span class="keyword">protected</span> $_levels = <span class="keyword">array</span>(<span class="string">'ERROR'</span> =&gt; <span class="number">1</span>, <span class="string">'DEBUG'</span> =&gt; <span class="number">2</span>, <span class="string">'INFO'</span> =&gt; <span class="number">3</span>, <span class="string">'ALL'</span> =&gt; <span class="number">4</span>);</span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> $func_overload;<span class="comment">// 表示启用函数重载功能。</span></span><br></pre></td></tr></table></figure><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $config =&amp; get_config();<span class="comment">// 读取配置文件，获取$config数组。</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">isset</span>(<span class="keyword">self</span>::$func_overload) <span class="keyword">OR</span> <span class="keyword">self</span>::$func_overload = (extension_loaded(<span class="string">'mbstring'</span>) &amp;&amp; ini_get(<span class="string">'mbstring.func_overload'</span>)); <span class="comment">// 确定是否支持函数重载</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 确定日志文件路径</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_log_path = ($config[<span class="string">'log_path'</span>] !== <span class="string">''</span>) ? $config[<span class="string">'log_path'</span>] : APPPATH.<span class="string">'logs/'</span>;</span><br><span class="line">    <span class="comment">// 确定日志文件扩展名</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_file_ext = (<span class="keyword">isset</span>($config[<span class="string">'log_file_extension'</span>]) &amp;&amp; $config[<span class="string">'log_file_extension'</span>] !== <span class="string">''</span>)</span><br><span class="line">        ? ltrim($config[<span class="string">'log_file_extension'</span>], <span class="string">'.'</span>) : <span class="string">'php'</span>;</span><br><span class="line">    <span class="comment">// 设置日志文件所在目录权限</span></span><br><span class="line">    file_exists(<span class="keyword">$this</span>-&gt;_log_path) <span class="keyword">OR</span> mkdir(<span class="keyword">$this</span>-&gt;_log_path, <span class="number">0755</span>, <span class="keyword">TRUE</span>);</span><br><span class="line">    <span class="comment">// 确定日志文件所在目录是否可读以及是否是个目录</span></span><br><span class="line">    <span class="keyword">if</span> ( ! is_dir(<span class="keyword">$this</span>-&gt;_log_path) <span class="keyword">OR</span> ! is_really_writable(<span class="keyword">$this</span>-&gt;_log_path))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_enabled = <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 确定设置的日志级别</span></span><br><span class="line">    <span class="keyword">if</span> (is_numeric($config[<span class="string">'log_threshold'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_threshold = (int) $config[<span class="string">'log_threshold'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (is_array($config[<span class="string">'log_threshold'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_threshold = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_threshold_array = array_flip($config[<span class="string">'log_threshold'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 确定日志日期格式</span></span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">empty</span>($config[<span class="string">'log_date_format'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_date_fmt = $config[<span class="string">'log_date_format'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 确定创建的日志文件权限</span></span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">empty</span>($config[<span class="string">'log_file_permissions'</span>]) &amp;&amp; is_int($config[<span class="string">'log_file_permissions'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_file_permissions = $config[<span class="string">'log_file_permissions'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="write-log"><a href="#write-log" class="headerlink" title="write_log()"></a>write_log()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 写日志方法</span></span><br><span class="line"><span class="comment">* 该方法以下几种情况下不写：</span></span><br><span class="line"><span class="comment">* ① 目录没有写权限时。$this-&gt;_enabled===FALSE时。</span></span><br><span class="line"><span class="comment">* ② 阀值与Log记录等级不匹配时。</span></span><br><span class="line"><span class="comment">* ③ 文件打开失败时。</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write_log</span><span class="params">($level, $msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 目录没有写权限时，返回false退出。</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_enabled === <span class="keyword">FALSE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $level = strtoupper($level);</span><br><span class="line">    <span class="comment">//写日志的level级别大于阈值设置值，同时level级别也不能匹配阈值数组中设置的值，返回FALSE退出</span></span><br><span class="line">    <span class="keyword">if</span> (( ! <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_levels[$level]) <span class="keyword">OR</span> (<span class="keyword">$this</span>-&gt;_levels[$level] &gt; <span class="keyword">$this</span>-&gt;_threshold))</span><br><span class="line">        &amp;&amp; ! <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_threshold_array[<span class="keyword">$this</span>-&gt;_levels[$level]]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//设置文件全路径及名称</span></span><br><span class="line">    $filepath = <span class="keyword">$this</span>-&gt;_log_path.<span class="string">'log-'</span>.date(<span class="string">'Y-m-d'</span>).<span class="string">'.'</span>.<span class="keyword">$this</span>-&gt;_file_ext;</span><br><span class="line">    $message = <span class="string">''</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//新创建并且后缀为php的文件，系统首先在前面加上</span></span><br><span class="line">    <span class="comment">//"<span class="meta">&lt;?php</span> defined('BASEPATH') OR exit('No direct script access allowed');\n\n"</span></span><br><span class="line">    <span class="keyword">if</span> ( ! file_exists($filepath))</span><br><span class="line">    &#123;</span><br><span class="line">        $newfile = <span class="keyword">TRUE</span>;</span><br><span class="line">        <span class="comment">// Only add protection to php files</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_file_ext === <span class="string">'php'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $message .= <span class="string">"&lt;?php defined('BASEPATH') OR exit('No direct script access allowed'); ?&gt;\n\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//无法打开文件，返回FALSE退出</span></span><br><span class="line">    <span class="keyword">if</span> ( ! $fp = @fopen($filepath, <span class="string">'ab'</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    flock($fp, LOCK_EX);</span><br><span class="line">    <span class="comment">//实例化时间</span></span><br><span class="line">    <span class="comment">// Instantiating DateTime with microseconds appended to initial date is needed for proper support of this format</span></span><br><span class="line">    <span class="keyword">if</span> (strpos(<span class="keyword">$this</span>-&gt;_date_fmt, <span class="string">'u'</span>) !== <span class="keyword">FALSE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        $microtime_full = microtime(<span class="keyword">TRUE</span>);</span><br><span class="line">        $microtime_short = sprintf(<span class="string">"%06d"</span>, ($microtime_full - floor($microtime_full)) * <span class="number">1000000</span>);</span><br><span class="line">        $date = <span class="keyword">new</span> DateTime(date(<span class="string">'Y-m-d H:i:s.'</span>.$microtime_short, $microtime_full));</span><br><span class="line">        $date = $date-&gt;format(<span class="keyword">$this</span>-&gt;_date_fmt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $date = date(<span class="keyword">$this</span>-&gt;_date_fmt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//合成日志内容</span></span><br><span class="line">    $message .= <span class="keyword">$this</span>-&gt;_format_line($level, $date, $msg);</span><br><span class="line">    <span class="comment">// 写入文件</span></span><br><span class="line">    <span class="keyword">for</span> ($written = <span class="number">0</span>, $length = <span class="keyword">self</span>::strlen($message); $written &lt; $length; $written += $result)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (($result = fwrite($fp, <span class="keyword">self</span>::substr($message, $written))) === <span class="keyword">FALSE</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    flock($fp, LOCK_UN);</span><br><span class="line">    fclose($fp);</span><br><span class="line">    <span class="comment">// 更改文件权限</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($newfile) &amp;&amp; $newfile === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        chmod($filepath, <span class="keyword">$this</span>-&gt;_file_permissions);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> is_int($result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="format-line"><a href="#format-line" class="headerlink" title="_format_line()"></a>_format_line()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_format_line</span><span class="params">($level, $date, $message)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $level.<span class="string">' - '</span>.$date.<span class="string">' --&gt; '</span>.$message.<span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="strlen"><a href="#strlen" class="headerlink" title="strlen()"></a>strlen()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">strlen</span><span class="params">($str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">self</span>::$func_overload)</span><br><span class="line">        ? mb_strlen($str, <span class="string">'8bit'</span>)</span><br><span class="line">        : strlen($str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="substr"><a href="#substr" class="headerlink" title="substr()"></a>substr()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">substr</span><span class="params">($str, $start, $length = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>::$func_overload)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// mb_substr($str, $start, null, '8bit') returns an empty</span></span><br><span class="line">        <span class="comment">// string on PHP 5.3</span></span><br><span class="line">        <span class="keyword">isset</span>($length) <span class="keyword">OR</span> $length = ($start &gt;= <span class="number">0</span> ? <span class="keyword">self</span>::strlen($str) - $start : -$start);</span><br><span class="line">        <span class="keyword">return</span> mb_substr($str, $start, $length, <span class="string">'8bit'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">isset</span>($length)</span><br><span class="line">        ? substr($str, $start, $length)</span><br><span class="line">        : substr($str, $start);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjk2NDUxMw==" title="https://blog.csdn.net/Zhihua_W/article/details/52964513">CI框架源码解析十八之日志记录类文件Log.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter异常类文件Exceptions.php</title>
      <link href="/2020/02/22/codeigniter-exceptions/"/>
      <url>/2020/02/22/codeigniter-exceptions/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>异常类用于异常提示，该类定义了三种类型或级别的异常提示，即错误类型的消息、调试类型的消息和信息类型的消息。</p><a id="more"></a><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> $ob_level; <span class="comment">// 嵌套的输出缓冲处理程序的级别；如果输出缓冲区不起作用，返回零。</span></span><br><span class="line"><span class="keyword">public</span> $levels = <span class="keyword">array</span>(</span><br><span class="line">    E_ERROR                 =&gt;<span class="string">'Error'</span>,   <span class="comment">// 致命错误</span></span><br><span class="line">    E_WARNING               =&gt;<span class="string">'Warning'</span>, <span class="comment">// 非致命运行错误</span></span><br><span class="line">    E_PARSE                 =&gt;<span class="string">'Parsing Error'</span>, <span class="comment">// 编译错误</span></span><br><span class="line">    E_NOTICE                =&gt;<span class="string">'Notice'</span>,        <span class="comment">// notice错误</span></span><br><span class="line">    E_CORE_ERROR            =&gt;<span class="string">'Core Error'</span>,   <span class="comment">// php启动时致命错误</span></span><br><span class="line">    E_CORE_WARNING          =&gt;<span class="string">'Core Warning'</span>, <span class="comment">// php启动时非致命错误</span></span><br><span class="line">    E_COMPILE_ERROR         =&gt;<span class="string">'Compile Error'</span>,  <span class="comment">// php致命编译错误</span></span><br><span class="line">    E_COMPILE_WARNING       =&gt;<span class="string">'Compile Warning'</span>,<span class="comment">// php非致命编译错误</span></span><br><span class="line">    E_USER_ERROR            =&gt;<span class="string">'User Error'</span>,  <span class="comment">// 致命的用户错误</span></span><br><span class="line">    E_USER_WARNING          =&gt;<span class="string">'User Warning'</span>,<span class="comment">// 非致命的用户警告</span></span><br><span class="line">    E_USER_NOTICE           =&gt;<span class="string">'User Notice'</span>, <span class="comment">// 用户生成的通知</span></span><br><span class="line">    E_STRICT                =&gt;<span class="string">'Runtime Notice'</span>   <span class="comment">// Run-time通知，提高代码稳定可靠性</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;ob_level = ob_get_level();<span class="comment">// 输出缓冲机制的嵌套级别</span></span><br><span class="line">    <span class="comment">// <span class="doctag">Note:</span> Do not log messages from this constructor.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ub2ItZ2V0LWxldmVsLnBocA==" title="https://www.php.net/manual/zh/function.ob-get-level.php">ob_get_level<i class="fa fa-external-link"></i></span></p><hr><h4 id="log-exception"><a href="#log-exception" class="headerlink" title="log_exception()"></a>log_exception()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">log_exception</span><span class="params">($severity, $message, $filepath, $line)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $severity = <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;levels[$severity]) ? <span class="keyword">$this</span>-&gt;levels[$severity] : $severity;</span><br><span class="line">    log_message(<span class="string">'error'</span>, <span class="string">'Severity: '</span>.$severity.<span class="string">' --&gt; '</span>.$message.<span class="string">' '</span>.$filepath.<span class="string">' '</span>.$line); <span class="comment">// 记录错误日志</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="show-404"><a href="#show-404" class="headerlink" title="show_404()"></a>show_404()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*show_404()是show_error()中的一种特殊情况，就是请求不存在的情况，响应一个404错误*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_404</span><span class="params">($page = <span class="string">''</span>, $log_error = TRUE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (is_cli())</span><br><span class="line">    &#123;</span><br><span class="line">        $heading = <span class="string">'Not Found'</span>;</span><br><span class="line">        $message = <span class="string">'The controller/method pair you requested was not found.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $heading = <span class="string">'404 Page Not Found'</span>;</span><br><span class="line">        $message = <span class="string">'The page you requested was not found.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// By default we log this, but allow a dev to skip it</span></span><br><span class="line">    <span class="keyword">if</span> ($log_error)</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(<span class="string">'error'</span>, $heading.<span class="string">': '</span>.$page);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;show_error($heading, $message, <span class="string">'error_404'</span>, <span class="number">404</span>); <span class="comment">// 调的show_error()方法</span></span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">4</span>); <span class="comment">// EXIT_UNKNOWN_FILE</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="show-error"><a href="#show-error" class="headerlink" title="show_error()"></a>show_error()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* show_error()是有意识触发的错误，不是代码写错，</span></span><br><span class="line"><span class="comment">* 而是代码不当，或者用户操作不当，比如找不到控制器，指定方法之类的，</span></span><br><span class="line"><span class="comment">* CI就show一个错误出来，当然开发者也可以调用此方法响应一个错误信息，</span></span><br><span class="line"><span class="comment">* 某种程度上类似于catch到一个exception之后的处理，然后根据exception发出不同的提示信息。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_error</span><span class="params">($heading, $message, $template = <span class="string">'error_general'</span>, $status_code = <span class="number">500</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $templates_path = config_item(<span class="string">'error_views_path'</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($templates_path))</span><br><span class="line">    &#123;</span><br><span class="line">        $templates_path = VIEWPATH.<span class="string">'errors'</span>.DIRECTORY_SEPARATOR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//默认是500，内部服务错误。是指由于程序代码写得不恰当而引起的，因此向浏览器回应一个内部错误。</span></span><br><span class="line">    <span class="keyword">if</span> (is_cli())</span><br><span class="line">    &#123;</span><br><span class="line">        $message = <span class="string">"\t"</span>.(is_array($message) ? implode(<span class="string">"\n\t"</span>, $message) : $message);</span><br><span class="line">        $template = <span class="string">'cli'</span>.DIRECTORY_SEPARATOR.$template;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        set_status_header($status_code);</span><br><span class="line">        $message = <span class="string">'&lt;p&gt;'</span>.(is_array($message) ? implode(<span class="string">'&lt;/p&gt;&lt;p&gt;'</span>, $message) : $message).<span class="string">'&lt;/p&gt;'</span>;</span><br><span class="line">        $template = <span class="string">'html'</span>.DIRECTORY_SEPARATOR.$template;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 缓冲机制是有嵌套级别的，</span></span><br><span class="line">    <span class="comment">// 这个if判断是说发生错误的缓冲级别和Exception被加载【刚开始】的缓冲级别相差1以上</span></span><br><span class="line">    <span class="comment">// 看core/Loader.php中的_ci_load() CI在加载view的时候先ob_start(),然后由output处理输出，</span></span><br><span class="line">    <span class="comment">// 因此，如果是在视图文件发生错误，则就会出现缓冲级别相差1的情况，此时先把输出的内容给flush出来，然后再把错误信息输出。</span></span><br><span class="line">    <span class="comment">// 此处的作用与show_php_error()中的相应位置作用一样</span></span><br><span class="line">    <span class="keyword">if</span> (ob_get_level() &gt; <span class="keyword">$this</span>-&gt;ob_level + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ob_end_flush();</span><br><span class="line">    &#125;</span><br><span class="line">    ob_start();</span><br><span class="line">    <span class="comment">//错误信息模板，位于应用目录errors/下。</span></span><br><span class="line">    <span class="keyword">include</span>($templates_path.$template.<span class="string">'.php'</span>);</span><br><span class="line">    $buffer = ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    <span class="comment">//这里是return，因为一般情况下，是使用core/Common.php中，</span></span><br><span class="line">    <span class="comment">//全局函数show_error()间接使用当前Exception::show_error()方法。</span></span><br><span class="line">    <span class="keyword">return</span> $buffer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="show-exception"><a href="#show-exception" class="headerlink" title="show_exception()"></a>show_exception()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_exception</span><span class="params">($exception)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $templates_path = config_item(<span class="string">'error_views_path'</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($templates_path))</span><br><span class="line">    &#123;</span><br><span class="line">        $templates_path = VIEWPATH.<span class="string">'errors'</span>.DIRECTORY_SEPARATOR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $message = $exception-&gt;getMessage();</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($message))</span><br><span class="line">    &#123;</span><br><span class="line">        $message = <span class="string">'(null)'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (is_cli())</span><br><span class="line">    &#123;</span><br><span class="line">        $templates_path .= <span class="string">'cli'</span>.DIRECTORY_SEPARATOR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $templates_path .= <span class="string">'html'</span>.DIRECTORY_SEPARATOR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ob_get_level() &gt; <span class="keyword">$this</span>-&gt;ob_level + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ob_end_flush();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ob_start();</span><br><span class="line">    <span class="keyword">include</span>($templates_path.<span class="string">'error_exception.php'</span>);</span><br><span class="line">    $buffer = ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    <span class="keyword">echo</span> $buffer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="show-php-error"><a href="#show-php-error" class="headerlink" title="show_php_error()"></a>show_php_error()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_php_error</span><span class="params">($severity, $message, $filepath, $line)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $templates_path = config_item(<span class="string">'error_views_path'</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($templates_path))</span><br><span class="line">    &#123;</span><br><span class="line">        $templates_path = VIEWPATH.<span class="string">'errors'</span>.DIRECTORY_SEPARATOR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取得对应错误级别相对的说明。在$this-&gt;levels中定义。</span></span><br><span class="line">    $severity = <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;levels[$severity]) ? <span class="keyword">$this</span>-&gt;levels[$severity] : $severity;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// For safety reasons we don't show the full file path in non-CLI requests</span></span><br><span class="line">    <span class="comment">// 为了安全起见，只显示错误文件最后两段路径信息。</span></span><br><span class="line">    <span class="keyword">if</span> ( ! is_cli())</span><br><span class="line">    &#123;</span><br><span class="line">        $filepath = str_replace(<span class="string">'\\'</span>, <span class="string">'/'</span>, $filepath);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">FALSE</span> !== strpos($filepath, <span class="string">'/'</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            $x = explode(<span class="string">'/'</span>, $filepath);</span><br><span class="line">            $filepath = $x[count($x)<span class="number">-2</span>].<span class="string">'/'</span>.end($x);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $template = <span class="string">'html'</span>.DIRECTORY_SEPARATOR.<span class="string">'error_php'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $template = <span class="string">'cli'</span>.DIRECTORY_SEPARATOR.<span class="string">'error_php'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ob_get_level()是取得当前缓冲机制的嵌套级别。（缓冲是可以一层嵌一层的。）</span></span><br><span class="line">    <span class="comment">// 右边的$this-&gt;ob_level是在__construct()里面同样通过ob_get_level()被赋值的。</span></span><br><span class="line">    <span class="comment">// 也就是说，有可能出现：Exception组件被加载时（也就是应用刚开始运行时）的缓冲级别</span></span><br><span class="line">    <span class="comment">// （其实也就是程序最开始的时候的缓冲级别，那时候是还没有ob_start()过的），</span></span><br><span class="line">    <span class="comment">// 与发生错误的时候的缓冲级别相差1。</span></span><br><span class="line">    <span class="comment">// 在控制器执行$this-&gt;load-&gt;view("xxx");的时候，实质，Loader引入并执行这个视图文件的时候，</span></span><br><span class="line">    <span class="comment">// 是先把缓冲打开，即先ob_start()，所有输出放到缓冲区（详见：core/Loader.php中的_ci_load()）,</span></span><br><span class="line">    <span class="comment">// 然后再由Output处理输出。因此，如果是在视图文件发生错误，则就会出现缓冲级别相差1的情况，</span></span><br><span class="line">    <span class="comment">// 此时先把输出的内容给flush出来，然后再把错误信息输出。</span></span><br><span class="line">    <span class="keyword">if</span> (ob_get_level() &gt; <span class="keyword">$this</span>-&gt;ob_level + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ob_end_flush();</span><br><span class="line">    &#125;</span><br><span class="line">    ob_start();</span><br><span class="line">    <span class="keyword">include</span>($templates_path.$template.<span class="string">'.php'</span>);</span><br><span class="line">    $buffer = ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    <span class="keyword">echo</span> $buffer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjk2Mjc4Ng==" title="https://blog.csdn.net/Zhihua_W/article/details/52962786">CI框架源码解析十七之异常处理类文件Exceptions.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter加载类文件Loader.php</title>
      <link href="/2020/02/17/codeigniter-loader/"/>
      <url>/2020/02/17/codeigniter-loader/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>加载类在控制器基类中引入并完成初始化，主要负责对package、library、view、driver、helper、model、config等文件的加载。在配置文件中可以设置自动加载，当然也可以在具体业务实现过程中手动加载需要的文件。</p><a id="more"></a><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> $_ci_ob_level; <span class="comment">// 缓冲机制的嵌套级别</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_view_paths =<span class="keyword">array</span>(VIEWPATH=&gt; <span class="keyword">TRUE</span>); <span class="comment">// 待加载视图文件路径</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_library_paths =<span class="keyword">array</span>(APPPATH, BASEPATH); <span class="comment">// 待加载类库文件路径</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_model_paths =<span class="keyword">array</span>(APPPATH);  <span class="comment">// 待加载模型文件路径</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_helper_paths =<span class="keyword">array</span>(APPPATH, BASEPATH); <span class="comment">// 待加载帮助文件路径</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_cached_vars =<span class="keyword">array</span>(); <span class="comment">// 待加载缓存文件路径</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_classes =<span class="keyword">array</span>(); <span class="comment">// 用于保存已加载的类</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_models =<span class="keyword">array</span>(); <span class="comment">// 用于保存已加载的模型</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_helpers =<span class="keyword">array</span>(); <span class="comment">// 用于保存已加载的帮助文件</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_varmap =<span class="keyword">array</span>( <span class="comment">// 类的别名映射，名字太长的映射个短点儿的</span></span><br><span class="line">    <span class="string">'unit_test'</span> =&gt; <span class="string">'unit'</span>,</span><br><span class="line">    <span class="string">'user_agent'</span> =&gt; <span class="string">'agent'</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ob_get_level(): 输出缓冲机制的嵌套级别</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_ob_level = ob_get_level();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// is_loaded(): 返回已加载的类，此处完成交接，此处_ci_classes也用来保管</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_classes =&amp; is_loaded();</span><br><span class="line"></span><br><span class="line">    log_message(<span class="string">'info'</span>, <span class="string">'Loader Class Initialized'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="initialize"><a href="#initialize" class="headerlink" title="initialize()"></a>initialize()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">initialize</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_autoloader();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法在控制器基类中调用，用于初始化加载类，根据配置的自动加载文件进行完成自动加载。</p><hr><h4 id="is-loaded"><a href="#is-loaded" class="headerlink" title="is_loaded()"></a>is_loaded()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">is_loaded</span><span class="params">($class)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 若加载了返回类名或者指定的名称，未加载则返回false</span></span><br><span class="line">    <span class="keyword">return</span> array_search(ucfirst($class), <span class="keyword">$this</span>-&gt;_ci_classes, <span class="keyword">TRUE</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="library"><a href="#library" class="headerlink" title="library()"></a>library()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">library</span><span class="params">($library, $params = NULL, $object_name = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($library))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (is_array($library))</span><br><span class="line">    &#123; <span class="comment">// 支持数组形式同时加载多个类库：$this-&gt;load-&gt;library(['test', 'database']);</span></span><br><span class="line">        <span class="keyword">foreach</span> ($library <span class="keyword">as</span> $key =&gt; $value)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_int($key))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;library($value, $params);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;library($key, $params, $value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($params !== <span class="keyword">NULL</span> &amp;&amp; ! is_array($params))</span><br><span class="line">    &#123;</span><br><span class="line">        $params = <span class="keyword">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_load_library($library, $params, $object_name);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当执行<code>$this-&gt;load-&gt;library(&#39;xxx&#39;);</code>时走的这个方法。</p><hr><h4 id="model"><a href="#model" class="headerlink" title="model()"></a>model()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">model</span><span class="params">($model, $name = <span class="string">''</span>, $db_conn = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($model))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (is_array($model))</span><br><span class="line">    &#123; <span class="comment">// 可以同时加载多个model</span></span><br><span class="line">        <span class="keyword">foreach</span> ($model <span class="keyword">as</span> $key =&gt; $value)</span><br><span class="line">        &#123;</span><br><span class="line">            is_int($key) ? <span class="keyword">$this</span>-&gt;model($value, <span class="string">''</span>, $db_conn) : <span class="keyword">$this</span>-&gt;model($key, $value, $db_conn);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $path = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果加载的model字符串中有子目录</span></span><br><span class="line">    <span class="comment">// 如:$this-&gt;load-&gt;model('user/base_model')表示加载的是user目录下的Base_model.php</span></span><br><span class="line">    <span class="keyword">if</span> (($last_slash = strrpos($model, <span class="string">'/'</span>)) !== <span class="keyword">FALSE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// $last_slash为'/'最后一次出现的位置，$path即去掉文件名剩下的路径信息</span></span><br><span class="line">        $path = substr($model, <span class="number">0</span>, ++$last_slash);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// $model为文件名</span></span><br><span class="line">        $model = substr($model, $last_slash);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有时候model文件名会很长，因此会映射一个简短的名称，也就是这里的$name</span></span><br><span class="line">    <span class="comment">// 比如： $this-&gt;load-&gt;model('hello_world_I_am_comming_model', 'hello_model');</span></span><br><span class="line">    <span class="comment">// 然后执行$this-&gt;hello_model-&gt;xxx()去调用其中的方法就ok了。</span></span><br><span class="line">    <span class="comment">// 如果不指定则使用$model，即'hello_world_I_am_comming_model'。</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($name))</span><br><span class="line">    &#123;</span><br><span class="line">        $name = $model;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (in_array($name, <span class="keyword">$this</span>-&gt;_ci_models, <span class="keyword">TRUE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重复加载会抛出异常</span></span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($CI-&gt;$name))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">'The model name you are loading is the name of a resource that is already being used: '</span>.$name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果要求同时连接数据库则调用$this-&gt;database()加载数据库</span></span><br><span class="line">    <span class="keyword">if</span> ($db_conn !== <span class="keyword">FALSE</span> &amp;&amp; ! class_exists(<span class="string">'CI_DB'</span>, <span class="keyword">FALSE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ($db_conn === <span class="keyword">TRUE</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $db_conn = <span class="string">''</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;database($db_conn, <span class="keyword">FALSE</span>, <span class="keyword">TRUE</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( ! class_exists(<span class="string">'CI_Model'</span>, <span class="keyword">FALSE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// application目录下如果存在Model.php则加载此文件，这个文件代替system目录下的同名文件作为基类，因此类名为CI_Model</span></span><br><span class="line">        $app_path = APPPATH.<span class="string">'core'</span>.DIRECTORY_SEPARATOR;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($app_path.<span class="string">'Model.php'</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">require_once</span>($app_path.<span class="string">'Model.php'</span>);</span><br><span class="line">            <span class="comment">// 如果加载后发现该文件类名不为CI_Model.php则报错</span></span><br><span class="line">            <span class="keyword">if</span> ( ! class_exists(<span class="string">'CI_Model'</span>, <span class="keyword">FALSE</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException($app_path.<span class="string">"Model.php exists, but doesn't declare class CI_Model"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            log_message(<span class="string">'info'</span>, <span class="string">'CI_Model class loaded'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span> ( ! class_exists(<span class="string">'CI_Model'</span>, <span class="keyword">FALSE</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">require_once</span>(BASEPATH.<span class="string">'core'</span>.DIRECTORY_SEPARATOR.<span class="string">'Model.php'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 加载子类</span></span><br><span class="line">        $class = config_item(<span class="string">'subclass_prefix'</span>).<span class="string">'Model'</span>;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($app_path.$class.<span class="string">'.php'</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">require_once</span>($app_path.$class.<span class="string">'.php'</span>);</span><br><span class="line">            <span class="comment">// 子类名与文件名不一致则抛出异常</span></span><br><span class="line">            <span class="keyword">if</span> ( ! class_exists($class, <span class="keyword">FALSE</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException($app_path.$class.<span class="string">".php exists, but doesn't declare class "</span>.$class);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            log_message(<span class="string">'info'</span>, config_item(<span class="string">'subclass_prefix'</span>).<span class="string">'Model class loaded'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $model = ucfirst($model);</span><br><span class="line">    <span class="keyword">if</span> ( ! class_exists($model, <span class="keyword">FALSE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_ci_model_paths <span class="keyword">as</span> $mod_path)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ( ! file_exists($mod_path.<span class="string">'models/'</span>.$path.$model.<span class="string">'.php'</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 注意这里是'models/'.$path.$model.'.php'，子目录用在这。</span></span><br><span class="line">            <span class="keyword">require_once</span>($mod_path.<span class="string">'models/'</span>.$path.$model.<span class="string">'.php'</span>);</span><br><span class="line">            <span class="comment">// 加载了但是类名不存在则抛出异常</span></span><br><span class="line">            <span class="keyword">if</span> ( ! class_exists($model, <span class="keyword">FALSE</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException($mod_path.<span class="string">"models/"</span>.$path.$model.<span class="string">".php exists, but doesn't declare class "</span>.$model);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 加了一遍发现类名不存在则抛出异常</span></span><br><span class="line">        <span class="keyword">if</span> ( ! class_exists($model, <span class="keyword">FALSE</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">'Unable to locate the model you have specified: '</span>.$model);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> ( ! is_subclass_of($model, <span class="string">'CI_Model'</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 如果该类存在但是不是CI_Model的子类则抛出异常</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Class "</span>.$model.<span class="string">" already exists and doesn't extend CI_Model"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 加载完了将$name，也就是映射后的名称放入'_ci_models'</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_models[] = $name;</span><br><span class="line">    $model = <span class="keyword">new</span> $model();</span><br><span class="line">    $CI-&gt;$name = $model; <span class="comment">// 这里完成映射</span></span><br><span class="line">    log_message(<span class="string">'info'</span>, <span class="string">'Model "'</span>.get_class($model).<span class="string">'" initialized'</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="database"><a href="#database" class="headerlink" title="database()"></a>database()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">database</span><span class="params">($params = <span class="string">''</span>, $return = FALSE, $query_builder = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Grab the super object</span></span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 已经加载了就不重复加载了</span></span><br><span class="line">    <span class="keyword">if</span> ($return === <span class="keyword">FALSE</span> &amp;&amp; $query_builder === <span class="keyword">NULL</span> &amp;&amp; <span class="keyword">isset</span>($CI-&gt;db) &amp;&amp; is_object($CI-&gt;db) &amp;&amp; ! <span class="keyword">empty</span>($CI-&gt;db-&gt;conn_id))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/DB.php'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($return === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 这里DB是个方法</span></span><br><span class="line">        <span class="keyword">return</span> DB($params, $query_builder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Initialize the db variable. Needed to prevent</span></span><br><span class="line">    <span class="comment">// reference errors with some configurations</span></span><br><span class="line">    $CI-&gt;db = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Load the DB class</span></span><br><span class="line">    $CI-&gt;db =&amp; DB($params, $query_builder);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="dbutil"><a href="#dbutil" class="headerlink" title="dbutil()"></a>dbutil()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dbutil</span><span class="params">($db = NULL, $return = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( ! is_object($db) <span class="keyword">OR</span> ! ($db <span class="keyword">instanceof</span> CI_DB))</span><br><span class="line">    &#123;</span><br><span class="line">        class_exists(<span class="string">'CI_DB'</span>, <span class="keyword">FALSE</span>) <span class="keyword">OR</span> <span class="keyword">$this</span>-&gt;database();<span class="comment">// 没有参数，这里加载的是数据库工具类</span></span><br><span class="line">        $db =&amp; $CI-&gt;db;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/DB_utility.php'</span>);<span class="comment">// dbdriver为mssql mysql postgre pdo ...</span></span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/drivers/'</span>.$db-&gt;dbdriver.<span class="string">'/'</span>.$db-&gt;dbdriver.<span class="string">'_utility.php'</span>);</span><br><span class="line">    $class = <span class="string">'CI_DB_'</span>.$db-&gt;dbdriver.<span class="string">'_utility'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($return === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> $class($db);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $CI-&gt;dbutil = <span class="keyword">new</span> $class($db);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="dbforge"><a href="#dbforge" class="headerlink" title="dbforge()"></a>dbforge()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dbforge</span><span class="params">($db = NULL, $return = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line">    <span class="keyword">if</span> ( ! is_object($db) <span class="keyword">OR</span> ! ($db <span class="keyword">instanceof</span> CI_DB))</span><br><span class="line">    &#123;</span><br><span class="line">        class_exists(<span class="string">'CI_DB'</span>, <span class="keyword">FALSE</span>) <span class="keyword">OR</span> <span class="keyword">$this</span>-&gt;database();</span><br><span class="line">        $db =&amp; $CI-&gt;db;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/DB_forge.php'</span>);</span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/drivers/'</span>.$db-&gt;dbdriver.<span class="string">'/'</span>.$db-&gt;dbdriver.<span class="string">'_forge.php'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">empty</span>($db-&gt;subdriver))</span><br><span class="line">    &#123;</span><br><span class="line">        $driver_path = BASEPATH.<span class="string">'database/drivers/'</span>.$db-&gt;dbdriver.<span class="string">'/subdrivers/'</span>.$db-&gt;dbdriver.<span class="string">'_'</span>.$db-&gt;subdriver.<span class="string">'_forge.php'</span>;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($driver_path))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">require_once</span>($driver_path);</span><br><span class="line">            $class = <span class="string">'CI_DB_'</span>.$db-&gt;dbdriver.<span class="string">'_'</span>.$db-&gt;subdriver.<span class="string">'_forge'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $class = <span class="string">'CI_DB_'</span>.$db-&gt;dbdriver.<span class="string">'_forge'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($return === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> $class($db);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $CI-&gt;dbforge = <span class="keyword">new</span> $class($db);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载数据库锻造类。</p><hr><h4 id="view"><a href="#view" class="headerlink" title="view()"></a>view()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">view</span><span class="params">($view, $vars = array<span class="params">()</span>, $return = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_load(<span class="keyword">array</span>(<span class="string">'_ci_view'</span> =&gt; $view, <span class="string">'_ci_vars'</span> =&gt; <span class="keyword">$this</span>-&gt;_ci_prepare_view_vars($vars), <span class="string">'_ci_return'</span> =&gt; $return));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载视图。</p><hr><h4 id="file"><a href="#file" class="headerlink" title="file()"></a>file()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file</span><span class="params">($path, $return = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_load(<span class="keyword">array</span>(<span class="string">'_ci_path'</span> =&gt; $path, <span class="string">'_ci_return'</span> =&gt; $return));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载文件。</p><hr><h4 id="vars"><a href="#vars" class="headerlink" title="vars()"></a>vars()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vars</span><span class="params">($vars, $val = <span class="string">''</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 确保参数为数组格式</span></span><br><span class="line">    $vars = is_string($vars)</span><br><span class="line">        ? <span class="keyword">array</span>($vars =&gt; $val)</span><br><span class="line">        : <span class="keyword">$this</span>-&gt;_ci_prepare_view_vars($vars);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> ($vars <span class="keyword">as</span> $key =&gt; $val)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_ci_cached_vars[$key] = $val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置变量。</p><hr><h4 id="clear-vars"><a href="#clear-vars" class="headerlink" title="clear_vars()"></a>clear_vars()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">clear_vars</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_cached_vars = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>清空缓存的变量。</p><hr><h4 id="get-var"><a href="#get-var" class="headerlink" title="get_var()"></a>get_var()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_var</span><span class="params">($key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_ci_cached_vars[$key]) ? <span class="keyword">$this</span>-&gt;_ci_cached_vars[$key] : <span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>检查并获取某个变量。</p><hr><h4 id="get-vars"><a href="#get-vars" class="headerlink" title="get_vars()"></a>get_vars()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_vars</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_cached_vars;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取设置的变量。</p><hr><h4 id="helper"><a href="#helper" class="headerlink" title="helper()"></a>helper()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">helper</span><span class="params">($helpers = array<span class="params">()</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    is_array($helpers) <span class="keyword">OR</span> $helpers = <span class="keyword">array</span>($helpers);<span class="comment">// 如果是单个传入这里就要构造成数组</span></span><br><span class="line">    <span class="keyword">foreach</span> ($helpers <span class="keyword">as</span> &amp;$helper)</span><br><span class="line">    &#123;</span><br><span class="line">        $filename = basename($helper);<span class="comment">// 获取文件名</span></span><br><span class="line">        $filepath = ($filename === $helper) ? <span class="string">''</span> : substr($helper, <span class="number">0</span>, strlen($helper) - strlen($filename));<span class="comment">// 文件名如果跟参数一致说明没有路径，不一致需要分割获取</span></span><br><span class="line">        $filename = strtolower(preg_replace(<span class="string">'#(_helper)?(\.php)?$#i'</span>, <span class="string">''</span>, $filename)).<span class="string">'_helper'</span>;<span class="comment">// 加后缀 _helper,比如 array_helper</span></span><br><span class="line">        $helper   = $filepath.$filename;<span class="comment">// 重组</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 已经加载过则判断下一个</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_ci_helpers[$helper]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Is this a helper extension request?</span></span><br><span class="line">        $ext_helper = config_item(<span class="string">'subclass_prefix'</span>).$filename; <span class="comment">// $ext_helper = 'MY_array_helper'</span></span><br><span class="line">        $ext_loaded = <span class="keyword">FALSE</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_ci_helper_paths <span class="keyword">as</span> $path)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (file_exists($path.<span class="string">'helpers/'</span>.$ext_helper.<span class="string">'.php'</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">include_once</span>($path.<span class="string">'helpers/'</span>.$ext_helper.<span class="string">'.php'</span>);</span><br><span class="line">                $ext_loaded = <span class="keyword">TRUE</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// If we have loaded extensions - check if the base one is here</span></span><br><span class="line">        <span class="comment">// 这里的意思是如果MY_array_helper.php存在但是array_helper.php不存在则报错</span></span><br><span class="line">        <span class="keyword">if</span> ($ext_loaded === <span class="keyword">TRUE</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $base_helper = BASEPATH.<span class="string">'helpers/'</span>.$helper.<span class="string">'.php'</span>;</span><br><span class="line">            <span class="keyword">if</span> ( ! file_exists($base_helper))</span><br><span class="line">            &#123;</span><br><span class="line">                show_error(<span class="string">'Unable to load the requested file: helpers/'</span>.$helper.<span class="string">'.php'</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">include_once</span>($base_helper);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_ci_helpers[$helper] = <span class="keyword">TRUE</span>;</span><br><span class="line">            log_message(<span class="string">'info'</span>, <span class="string">'Helper loaded: '</span>.$helper);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// No extensions found ... try loading regular helpers and/or overrides</span></span><br><span class="line">        <span class="comment">// 没找到MY_array_helper.php,则加载array_helper.php</span></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_ci_helper_paths <span class="keyword">as</span> $path)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (file_exists($path.<span class="string">'helpers/'</span>.$helper.<span class="string">'.php'</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">include_once</span>($path.<span class="string">'helpers/'</span>.$helper.<span class="string">'.php'</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">$this</span>-&gt;_ci_helpers[$helper] = <span class="keyword">TRUE</span>;</span><br><span class="line">                log_message(<span class="string">'info'</span>, <span class="string">'Helper loaded: '</span>.$helper);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// unable to load the helper</span></span><br><span class="line">        <span class="comment">// 没加载成功则报错</span></span><br><span class="line">        <span class="keyword">if</span> ( ! <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_ci_helpers[$helper]))</span><br><span class="line">        &#123;</span><br><span class="line">            show_error(<span class="string">'Unable to load the requested file: helpers/'</span>.$helper.<span class="string">'.php'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面用到的php内置函数：</p><ol><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uYmFzZW5hbWUucGhw" title="https://www.php.net/manual/zh/function.basename.php">basename: 返回路径中的文件名部分<i class="fa fa-external-link"></i></span></li></ol><hr><h4 id="helpers"><a href="#helpers" class="headerlink" title="helpers()"></a>helpers()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">helpers</span><span class="params">($helpers = array<span class="params">()</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;helper($helpers);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>作用跟helper方法一致。</p><hr><h4 id="language"><a href="#language" class="headerlink" title="language()"></a>language()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载language文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">language</span><span class="params">($files, $lang = <span class="string">''</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    get_instance()-&gt;lang-&gt;load($files, $lang);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="config"><a href="#config" class="headerlink" title="config()"></a>config()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">config</span><span class="params">($file, $use_sections = FALSE, $fail_gracefully = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 调的是CI_Config类中的load()方法</span></span><br><span class="line">    <span class="keyword">return</span> get_instance()-&gt;config-&gt;load($file, $use_sections, $fail_gracefully);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="driver"><a href="#driver" class="headerlink" title="driver()"></a>driver()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">driver</span><span class="params">($library, $params = NULL, $object_name = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (is_array($library))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span> ($library <span class="keyword">as</span> $key =&gt; $value)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_int($key))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;driver($value, $params);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;driver($key, $params, $value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (<span class="keyword">empty</span>($library))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( ! class_exists(<span class="string">'CI_Driver_Library'</span>, <span class="keyword">FALSE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// We aren't instantiating an object here, just making the base class available</span></span><br><span class="line">        <span class="comment">// 加载/system/libraries/Driver.php，该文件内有俩类: CI_Driver_Library作为缓存类的基类、 CI_Driver作为Nosql(redis、memcached)的基类.</span></span><br><span class="line">        <span class="comment">// 这里没有实例化对象，只是require文件</span></span><br><span class="line">        <span class="keyword">require</span> BASEPATH.<span class="string">'libraries/Driver.php'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// We can save the loader some time since Drivers will *always* be in a subfolder,</span></span><br><span class="line">    <span class="comment">// and typically identically named to the library</span></span><br><span class="line">    <span class="keyword">if</span> ( ! strpos($library, <span class="string">'/'</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// /system/libraries/Cache/Cache.php</span></span><br><span class="line">        $library = ucfirst($library).<span class="string">'/'</span>.$library;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;library($library, $params, $object_name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="add-package-path"><a href="#add-package-path" class="headerlink" title="add_package_path()"></a>add_package_path()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add_package_path</span><span class="params">($path, $view_cascade = TRUE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $path = rtrim($path, <span class="string">'/'</span>).<span class="string">'/'</span>;</span><br><span class="line">    <span class="comment">// $path = 'G:\wamp\www\CodeIgniter_hmvc\application\third_party/MX/'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将$path分别加入到_ci_library_paths/_ci_model_paths/_ci_helper_paths中</span></span><br><span class="line">    <span class="comment">// array_unshift()的作用是开头加入，后面foreach的时候也是先判断这个目录下有没有，因为自定义的文件通常继承core里的类</span></span><br><span class="line">    array_unshift(<span class="keyword">$this</span>-&gt;_ci_library_paths, $path);</span><br><span class="line">    array_unshift(<span class="keyword">$this</span>-&gt;_ci_model_paths, $path);</span><br><span class="line">    array_unshift(<span class="keyword">$this</span>-&gt;_ci_helper_paths, $path);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 两个数组相加：如果键名为字符，且键名相同，数组相加会将最先出现的值作为结果</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_view_paths = <span class="keyword">array</span>($path.<span class="string">'views/'</span> =&gt; $view_cascade) + <span class="keyword">$this</span>-&gt;_ci_view_paths;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add config file path 加载MX_Config, 即(&amp; get_instance())-&gt;config;</span></span><br><span class="line">    $config =&amp; <span class="keyword">$this</span>-&gt;_ci_get_component(<span class="string">'config'</span>);</span><br><span class="line">    $config-&gt;_config_paths[] = $path;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get-package-paths"><a href="#get-package-paths" class="headerlink" title="get_package_paths()"></a>get_package_paths()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_package_paths</span><span class="params">($include_base = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 返回已加载的package paths</span></span><br><span class="line">    <span class="keyword">return</span> ($include_base === <span class="keyword">TRUE</span>) ? <span class="keyword">$this</span>-&gt;_ci_library_paths : <span class="keyword">$this</span>-&gt;_ci_model_paths;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="remove-package-path"><a href="#remove-package-path" class="headerlink" title="remove_package_path()"></a>remove_package_path()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">remove_package_path</span><span class="params">($path = <span class="string">''</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $config =&amp; <span class="keyword">$this</span>-&gt;_ci_get_component(<span class="string">'config'</span>);<span class="comment">// 配置类组件</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($path === <span class="string">''</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// _ci_(library/model/helper/view)_paths在开头移除元素</span></span><br><span class="line">        <span class="comment">// $config-&gt;_config_paths在末尾移除元素</span></span><br><span class="line">        array_shift(<span class="keyword">$this</span>-&gt;_ci_library_paths);</span><br><span class="line">        array_shift(<span class="keyword">$this</span>-&gt;_ci_model_paths);</span><br><span class="line">        array_shift(<span class="keyword">$this</span>-&gt;_ci_helper_paths);</span><br><span class="line">        array_shift(<span class="keyword">$this</span>-&gt;_ci_view_paths);</span><br><span class="line">        array_pop($config-&gt;_config_paths);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $path = rtrim($path, <span class="string">'/'</span>).<span class="string">'/'</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">array</span>(<span class="string">'_ci_library_paths'</span>, <span class="string">'_ci_model_paths'</span>, <span class="string">'_ci_helper_paths'</span>) <span class="keyword">as</span> $var)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (($key = array_search($path, <span class="keyword">$this</span>-&gt;&#123;$var&#125;)) !== <span class="keyword">FALSE</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;&#123;$var&#125;[$key]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_ci_view_paths[$path.<span class="string">'views/'</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;_ci_view_paths[$path.<span class="string">'views/'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (($key = array_search($path, $config-&gt;_config_paths)) !== <span class="keyword">FALSE</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">unset</span>($config-&gt;_config_paths[$key]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// make sure the application default paths are still in the array</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_library_paths = array_unique(array_merge(<span class="keyword">$this</span>-&gt;_ci_library_paths, <span class="keyword">array</span>(APPPATH, BASEPATH)));</span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_helper_paths = array_unique(array_merge(<span class="keyword">$this</span>-&gt;_ci_helper_paths, <span class="keyword">array</span>(APPPATH, BASEPATH)));</span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_model_paths = array_unique(array_merge(<span class="keyword">$this</span>-&gt;_ci_model_paths, <span class="keyword">array</span>(APPPATH)));</span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_view_paths = array_merge(<span class="keyword">$this</span>-&gt;_ci_view_paths, <span class="keyword">array</span>(APPPATH.<span class="string">'views/'</span> =&gt; <span class="keyword">TRUE</span>));</span><br><span class="line">    $config-&gt;_config_paths = array_unique(array_merge($config-&gt;_config_paths, <span class="keyword">array</span>(APPPATH)));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="ci-load"><a href="#ci-load" class="headerlink" title="_ci_load()"></a>_ci_load()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// view()、file()方法中调用</span></span><br><span class="line"><span class="comment">// view: array('_ci_view' =&gt; $view, '_ci_vars' =&gt; $this-&gt;_ci_prepare_view_vars($vars), '_ci_return' =&gt; $return)</span></span><br><span class="line"><span class="comment">// file: array('_ci_path' =&gt; $path, '_ci_return' =&gt; $return)</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_ci_load</span><span class="params">($_ci_data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Set the default data variables</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">array</span>(<span class="string">'_ci_view'</span>, <span class="string">'_ci_vars'</span>, <span class="string">'_ci_path'</span>, <span class="string">'_ci_return'</span>) <span class="keyword">as</span> $_ci_val)</span><br><span class="line">    &#123;</span><br><span class="line">        $$_ci_val = <span class="keyword">isset</span>($_ci_data[$_ci_val]) ? $_ci_data[$_ci_val] : <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $file_exists = <span class="keyword">FALSE</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set the path to the requested file</span></span><br><span class="line">    <span class="keyword">if</span> (is_string($_ci_path) &amp;&amp; $_ci_path !== <span class="string">''</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        $_ci_x = explode(<span class="string">'/'</span>, $_ci_path);</span><br><span class="line">        $_ci_file = end($_ci_x);<span class="comment">// $_ci_x中最后一个元素是文件名</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $_ci_ext = pathinfo($_ci_view, PATHINFO_EXTENSION);<span class="comment">// 返回文件名，带有扩展名</span></span><br><span class="line">        $_ci_file = ($_ci_ext === <span class="string">''</span>) ? $_ci_view.<span class="string">'.php'</span> : $_ci_view;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_ci_view_paths <span class="keyword">as</span> $_ci_view_file =&gt; $cascade)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (file_exists($_ci_view_file.$_ci_file))</span><br><span class="line">            &#123;</span><br><span class="line">                $_ci_path = $_ci_view_file.$_ci_file;</span><br><span class="line">                $file_exists = <span class="keyword">TRUE</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ( ! $cascade)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( ! $file_exists &amp;&amp; ! file_exists($_ci_path))</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(<span class="string">'Unable to load the requested file: '</span>.$_ci_file);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $_ci_CI =&amp; get_instance();</span><br><span class="line">    <span class="comment">// get_object_vars：返回由对象属性组成的关联数组</span></span><br><span class="line">    <span class="keyword">foreach</span> (get_object_vars($_ci_CI) <span class="keyword">as</span> $_ci_key =&gt; $_ci_var)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( ! <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;$_ci_key))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;$_ci_key =&amp; $_ci_CI-&gt;$_ci_key;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">empty</span>($_ci_vars) <span class="keyword">OR</span> <span class="keyword">$this</span>-&gt;_ci_cached_vars = array_merge(<span class="keyword">$this</span>-&gt;_ci_cached_vars, $_ci_vars);</span><br><span class="line">    extract(<span class="keyword">$this</span>-&gt;_ci_cached_vars);<span class="comment">// 从数组中将变量导入到当前的符号表</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//我们在控制器中调用$this-&gt;load-&gt;view()方法，</span></span><br><span class="line">    <span class="comment">//实质视图并没有马上输出来，而是先将它放到缓冲区。</span></span><br><span class="line">    ob_start();</span><br><span class="line">    <span class="comment">//就是这个地方，下面if中有一句eval(xxxx)以及else中有include;而里面的xxxx正是我们要加载的视图文件，</span></span><br><span class="line">    <span class="comment">//所以这就是为什么在视图文件里，var_dump($this)，会告诉你当前这个$this是Loader组件，因为视图的代码都是相当于嵌入这个地方。</span></span><br><span class="line">    <span class="comment">// 从 PHP 5.4.0 起， <span class="meta">&lt;?</span>= 总是可用的，但是小于php5.4需要替换</span></span><br><span class="line">    <span class="keyword">if</span> ( ! is_php(<span class="string">'5.4'</span>) &amp;&amp; ! ini_get(<span class="string">'short_open_tag'</span>) &amp;&amp; config_item(<span class="string">'rewrite_short_tags'</span>) === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// '<span class="meta">&lt;?</span>='替换为'<span class="meta">&lt;?</span> echo'， 去掉注释，将字符串作为php代码执行</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">eval</span>(<span class="string">'?&gt;'</span>.preg_replace(<span class="string">'/;*\s*\?&gt;/'</span>, <span class="string">'; ?&gt;'</span>, str_replace(<span class="string">'&lt;?='</span>, <span class="string">'&lt;?php echo '</span>, file_get_contents($_ci_path))));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">include</span>($_ci_path); <span class="comment">// include() vs include_once() allows for multiple views with the same name</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 经过上面的代码，我们的视图文件的内容已经放到了缓冲区了。</span></span><br><span class="line">    log_message(<span class="string">'info'</span>, <span class="string">'File loaded: '</span>.$_ci_path);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一般情况下，$_ci_return都为FLASE，即不要求通过$this-&gt;load-&gt;view()返回输出内容，而是直接放到缓冲区静候处理;</span></span><br><span class="line">    <span class="comment">//当然你也可以先拿出数据，在控制器里面处理一下，再输出，例如在控制器中$output=$this-&gt;load-&gt;view("x",$data,TRUE);，当为TRUE的时候，下面的代码就起作用了。</span></span><br><span class="line">    <span class="keyword">if</span> ($_ci_return === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        $buffer = ob_get_contents();</span><br><span class="line">        @ob_end_clean();</span><br><span class="line">        <span class="keyword">return</span> $buffer;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 下面这个很关键，因为有可能当前这个视图文件是被另一个视图文件通过$this-&gt;view()方法引入，</span></span><br><span class="line"><span class="comment">    * 即视图文件嵌入视图文件，从而导致多了一层缓冲。为了保证缓冲内容最后交给Output处理时，</span></span><br><span class="line"><span class="comment">    * 缓冲级别只比Loader组件加载时多1（这个1就是最父层的视图文件引起的）这里必须先flush掉当前层视图引起的这次缓冲，</span></span><br><span class="line"><span class="comment">    * 以保证Output正常工作。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (ob_get_level() &gt; <span class="keyword">$this</span>-&gt;_ci_ob_level + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ob_end_flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* </span></span><br><span class="line"><span class="comment">        * 如果不是多1，则说明当前引入的视图文件就是直接在控制器里面引入的那个，</span></span><br><span class="line"><span class="comment">        * 而不是由某个视图文件再引入的。把缓冲区的内容交给Output组件并清空关闭缓冲区。</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        $_ci_CI-&gt;output-&gt;append_output(ob_get_contents());</span><br><span class="line">        @ob_end_clean();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>相关概念：</p><ol><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvaW5pLmNvcmUucGhwI2luaS5zaG9ydC1vcGVuLXRhZw==" title="https://www.php.net/manual/zh/ini.core.php#ini.short-open-tag">short_open_tag<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ub2Itc3RhcnQucGhw" title="https://www.php.net/manual/zh/function.ob-start.php">ob_start<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uZXh0cmFjdC5waHA=" title="https://www.php.net/manual/zh/function.extract.php">extract<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uZXZhbC5waHA=" title="https://www.php.net/manual/zh/function.eval.php">eval<i class="fa fa-external-link"></i></span></li></ol><hr><h4 id="ci-load-library"><a href="#ci-load-library" class="headerlink" title="_ci_load_library()"></a>_ci_load_library()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_ci_load_library</span><span class="params">($class, $params = NULL, $object_name = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Get the class name, and while we're at it trim any slashes.</span></span><br><span class="line">    <span class="comment">// The directory path can be included as part of the class name,</span></span><br><span class="line">    <span class="comment">// but we don't want a leading slash</span></span><br><span class="line">    <span class="comment">// 若$class字符串中存在.php，去掉。。。</span></span><br><span class="line">    $class = str_replace(<span class="string">'.php'</span>, <span class="string">''</span>, trim($class, <span class="string">'/'</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Was the path included with the class name?</span></span><br><span class="line">    <span class="comment">// We look for a slash to determine this</span></span><br><span class="line">    <span class="comment">// $class收尾去掉/后发现还有/就说明在子目录下了，这时要获取子目录</span></span><br><span class="line">    <span class="keyword">if</span> (($last_slash = strrpos($class, <span class="string">'/'</span>)) !== <span class="keyword">FALSE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Extract the path</span></span><br><span class="line">        $subdir = substr($class, <span class="number">0</span>, ++$last_slash);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Get the filename from the path</span></span><br><span class="line">        $class = substr($class, $last_slash);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $subdir = <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 类名首字符大写，这里再给格式化下</span></span><br><span class="line">    $class = ucfirst($class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Is this a stock library? There are a few special conditions if so ...</span></span><br><span class="line">    <span class="comment">// BASEPATH.'libraries/'.$subdir.$class.'.php' = 'G:\wamp\www\CodeIgniter_hmvc\system\libraries/My_class.php'</span></span><br><span class="line">    <span class="keyword">if</span> (file_exists(BASEPATH.<span class="string">'libraries/'</span>.$subdir.$class.<span class="string">'.php'</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_load_stock_library($class, $subdir, $params, $object_name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Safety: Was the class already loaded by a previous call?</span></span><br><span class="line">    <span class="keyword">if</span> (class_exists($class, <span class="keyword">FALSE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 这里$property是类的别名，可能由于源类名太长另外指定一个名称来表示，如果没有单独指定则由源类名表示 $this-&gt;&#123;$property&#125;-&gt;...</span></span><br><span class="line">        $property = $object_name;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($property))</span><br><span class="line">        &#123;</span><br><span class="line">            $property = strtolower($class);</span><br><span class="line">            <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_ci_varmap[$property]) &amp;&amp; $property = <span class="keyword">$this</span>-&gt;_ci_varmap[$property];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $CI =&amp; get_instance();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($CI-&gt;$property))</span><br><span class="line">        &#123;</span><br><span class="line">            log_message(<span class="string">'debug'</span>, $class.<span class="string">' class already loaded. Second attempt ignored.'</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_init_library($class, <span class="string">''</span>, $params, $object_name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Let's search for the requested library file and load it.</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_ci_library_paths <span class="keyword">as</span> $path)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// BASEPATH has already been checked for // if (file_exists(BASEPATH.'libraries/'.$subdir.$class.'.php'))...</span></span><br><span class="line">        <span class="keyword">if</span> ($path === BASEPATH)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $filepath = $path.<span class="string">'libraries/'</span>.$subdir.$class.<span class="string">'.php'</span>;</span><br><span class="line">        <span class="comment">// Does the file exist? No? Bummer...</span></span><br><span class="line">        <span class="keyword">if</span> ( ! file_exists($filepath))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// $filepath = 'G:\wamp\www\CodeIgniter_hmvc\application\libraries/My_class.php'</span></span><br><span class="line">        <span class="keyword">include_once</span>($filepath);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_init_library($class, <span class="string">''</span>, $params, $object_name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// One last attempt. Maybe the library is in a subdirectory, but it wasn't specified? 最后的努力，当成子目录来尝试加载</span></span><br><span class="line">    <span class="keyword">if</span> ($subdir === <span class="string">''</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// $this-&gt;_ci_load_library('My_class/My_class', null, null); 其实前面就已经返回了，这个值是前面打印出来的。。。</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_load_library($class.<span class="string">'/'</span>.$class, $params, $object_name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If we got this far we were unable to find the requested class.</span></span><br><span class="line">    log_message(<span class="string">'error'</span>, <span class="string">'Unable to load the requested class: '</span>.$class);</span><br><span class="line">    show_error(<span class="string">'Unable to load the requested class: '</span>.$class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="ci-load-stock-library"><a href="#ci-load-stock-library" class="headerlink" title="_ci_load_stock_library()"></a>_ci_load_stock_library()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_ci_load_stock_library</span><span class="params">($library_name, $file_path, $params, $object_name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 比如参数可能是：</span></span><br><span class="line"><span class="comment">     * $library_name = "Xmlrpc"</span></span><br><span class="line"><span class="comment">     * $file_path = ''</span></span><br><span class="line"><span class="comment">     * $params = [ 'xss_clean' =&gt; false, 'debug' =&gt; false]</span></span><br><span class="line"><span class="comment">     * $object_name = NULL</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    $prefix = <span class="string">'CI_'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (class_exists($prefix.$library_name, <span class="keyword">FALSE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 若一定义MY_Xmlrpc类, 则加载此类</span></span><br><span class="line">        <span class="keyword">if</span> (class_exists(config_item(<span class="string">'subclass_prefix'</span>).$library_name, <span class="keyword">FALSE</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            $prefix = config_item(<span class="string">'subclass_prefix'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $property = $object_name;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($property))</span><br><span class="line">        &#123;</span><br><span class="line">            $property = strtolower($library_name);</span><br><span class="line">            <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_ci_varmap[$property]) &amp;&amp; $property = <span class="keyword">$this</span>-&gt;_ci_varmap[$property];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $CI =&amp; get_instance();</span><br><span class="line">        <span class="keyword">if</span> ( ! <span class="keyword">isset</span>($CI-&gt;$property))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_init_library($library_name, $prefix, $params, $object_name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        log_message(<span class="string">'debug'</span>, $library_name.<span class="string">' class already loaded. Second attempt ignored.'</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $paths = <span class="keyword">$this</span>-&gt;_ci_library_paths;</span><br><span class="line">    array_pop($paths); <span class="comment">// BASEPATH</span></span><br><span class="line">    array_pop($paths); <span class="comment">// APPPATH (needs to be the first path checked)</span></span><br><span class="line">    array_unshift($paths, APPPATH);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> ($paths <span class="keyword">as</span> $path)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($path = $path.<span class="string">'libraries/'</span>.$file_path.$library_name.<span class="string">'.php'</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// Override</span></span><br><span class="line">            <span class="keyword">include_once</span>($path);</span><br><span class="line">            <span class="keyword">if</span> (class_exists($prefix.$library_name, <span class="keyword">FALSE</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_init_library($library_name, $prefix, $params, $object_name);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            log_message(<span class="string">'debug'</span>, $path.<span class="string">' exists, but does not declare '</span>.$prefix.$library_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include_once</span>(BASEPATH.<span class="string">'libraries/'</span>.$file_path.$library_name.<span class="string">'.php'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check for extensions</span></span><br><span class="line">    $subclass = config_item(<span class="string">'subclass_prefix'</span>).$library_name;</span><br><span class="line">    <span class="keyword">foreach</span> ($paths <span class="keyword">as</span> $path)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($path = $path.<span class="string">'libraries/'</span>.$file_path.$subclass.<span class="string">'.php'</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">include_once</span>($path);</span><br><span class="line">            <span class="keyword">if</span> (class_exists($subclass, <span class="keyword">FALSE</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                $prefix = config_item(<span class="string">'subclass_prefix'</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            log_message(<span class="string">'debug'</span>, $path.<span class="string">' exists, but does not declare '</span>.$subclass);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_init_library($library_name, $prefix, $params, $object_name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="ci-init-library"><a href="#ci-init-library" class="headerlink" title="_ci_init_library()"></a>_ci_init_library()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_ci_init_library</span><span class="params">($class, $prefix, $config = FALSE, $object_name = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Is there an associated config file for this class? <span class="doctag">Note:</span> these should always be lowercase</span></span><br><span class="line">    <span class="keyword">if</span> ($config === <span class="keyword">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Fetch the config paths containing any package paths</span></span><br><span class="line">        $config_component = <span class="keyword">$this</span>-&gt;_ci_get_component(<span class="string">'config'</span>);<span class="comment">// 返回的是MX_Config</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (is_array($config_component-&gt;_config_paths))</span><br><span class="line">        &#123;</span><br><span class="line">            $found = <span class="keyword">FALSE</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($config_component-&gt;_config_paths <span class="keyword">as</span> $path)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// We test for both uppercase and lowercase, for servers that</span></span><br><span class="line">                <span class="comment">// are case-sensitive with regard to file names. Load global first,</span></span><br><span class="line">                <span class="comment">// override with environment next</span></span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 在config目录下寻找library...</span></span><br><span class="line"><span class="comment">                 * $path.'config/'.strtolower($class).'.php' = 'G:\wamp\www\CodeIgniter_hmvc\application\config/my_class.php';</span></span><br><span class="line"><span class="comment">                 * $path.'config/'.ucfirst(strtolower($class)).'.php' = 'G:\wamp\www\CodeIgniter_hmvc\application\config/My_class.php'</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="keyword">if</span> (file_exists($path.<span class="string">'config/'</span>.strtolower($class).<span class="string">'.php'</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">include</span>($path.<span class="string">'config/'</span>.strtolower($class).<span class="string">'.php'</span>);</span><br><span class="line">                    $found = <span class="keyword">TRUE</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">elseif</span> (file_exists($path.<span class="string">'config/'</span>.ucfirst(strtolower($class)).<span class="string">'.php'</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">include</span>($path.<span class="string">'config/'</span>.ucfirst(strtolower($class)).<span class="string">'.php'</span>);</span><br><span class="line">                    $found = <span class="keyword">TRUE</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (file_exists($path.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/'</span>.strtolower($class).<span class="string">'.php'</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">include</span>($path.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/'</span>.strtolower($class).<span class="string">'.php'</span>);</span><br><span class="line">                    $found = <span class="keyword">TRUE</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">elseif</span> (file_exists($path.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/'</span>.ucfirst(strtolower($class)).<span class="string">'.php'</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">include</span>($path.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/'</span>.ucfirst(strtolower($class)).<span class="string">'.php'</span>);</span><br><span class="line">                    $found = <span class="keyword">TRUE</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Break on the first found configuration, thus package</span></span><br><span class="line">                <span class="comment">// files are not overridden by default paths</span></span><br><span class="line">                <span class="keyword">if</span> ($found === <span class="keyword">TRUE</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $class_name = $prefix.$class;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Is the class name valid?</span></span><br><span class="line">    <span class="keyword">if</span> ( ! class_exists($class_name, <span class="keyword">FALSE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(<span class="string">'error'</span>, <span class="string">'Non-existent class: '</span>.$class_name);</span><br><span class="line">        show_error(<span class="string">'Non-existent class: '</span>.$class_name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set the variable name we will assign the class to</span></span><br><span class="line">    <span class="comment">// Was a custom class name supplied? If so we'll use it</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($object_name))</span><br><span class="line">    &#123;</span><br><span class="line">        $object_name = strtolower($class);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_ci_varmap[$object_name]))</span><br><span class="line">        &#123;</span><br><span class="line">            $object_name = <span class="keyword">$this</span>-&gt;_ci_varmap[$object_name];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Don't overwrite existing properties</span></span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($CI-&gt;$object_name))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ($CI-&gt;$object_name <span class="keyword">instanceof</span> $class_name)</span><br><span class="line">        &#123;</span><br><span class="line">            log_message(<span class="string">'debug'</span>, $class_name.<span class="string">" has already been instantiated as '"</span>.$object_name.<span class="string">"'. Second attempt aborted."</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        show_error(<span class="string">"Resource '"</span>.$object_name.<span class="string">"' already exists and is not a "</span>.$class_name.<span class="string">" instance."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Save the class name and object name</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_classes[$object_name] = $class;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Instantiate the class 实例化类，这一步很关键，完成最后的加载， $CI-&gt;my_class = new My_class();</span></span><br><span class="line">    $CI-&gt;$object_name = <span class="keyword">isset</span>($config)</span><br><span class="line">        ? <span class="keyword">new</span> $class_name($config)</span><br><span class="line">        : <span class="keyword">new</span> $class_name();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="ci-autoloader"><a href="#ci-autoloader" class="headerlink" title="_ci_autoloader()"></a>_ci_autoloader()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_ci_autoloader</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// include G:\wamp\www\CodeIgniter_hmvc\application\config/autoload.php</span></span><br><span class="line">    <span class="keyword">if</span> (file_exists(APPPATH.<span class="string">'config/autoload.php'</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">include</span>(APPPATH.<span class="string">'config/autoload.php'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// include G:\wamp\www\CodeIgniter_hmvc\application\config/development/autoload.php</span></span><br><span class="line">    <span class="keyword">if</span> (file_exists(APPPATH.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/autoload.php'</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">include</span>(APPPATH.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/autoload.php'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果需要自动加载的文件，提前写入autoload.php,比如My_class.php</span></span><br><span class="line"><span class="comment">     * $autoload = [</span></span><br><span class="line"><span class="comment">     *      'packages' =&gt; [],</span></span><br><span class="line"><span class="comment">     *      'libraries' =&gt; [</span></span><br><span class="line"><span class="comment">     *          0 =&gt; string 'my_class' (length=8)</span></span><br><span class="line"><span class="comment">     *      ],</span></span><br><span class="line"><span class="comment">     *      'drivers' =&gt; [],</span></span><br><span class="line"><span class="comment">     *      'helper' =&gt; [],</span></span><br><span class="line"><span class="comment">     *      'config' =&gt; [],</span></span><br><span class="line"><span class="comment">     *      'language' =&gt; [],</span></span><br><span class="line"><span class="comment">     *      'model' =&gt; [],</span></span><br><span class="line"><span class="comment">     * ]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">isset</span>($autoload))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Autoload packages</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * $autoload['packages'] = [</span></span><br><span class="line"><span class="comment">     *      0 =&gt; string 'G:\wamp\www\CodeIgniter_hmvc\application\third_party/MX' (length=55)</span></span><br><span class="line"><span class="comment">     * ]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($autoload[<span class="string">'packages'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span> ($autoload[<span class="string">'packages'</span>] <span class="keyword">as</span> $package_path)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;add_package_path($package_path);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Load any custom config file 加载autoload.php中配置的config文件，即$autoload['config'] = array('codeigniter');</span></span><br><span class="line">    <span class="keyword">if</span> (count($autoload[<span class="string">'config'</span>]) &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * $autoload['config'] = [</span></span><br><span class="line"><span class="comment">         *      0 =&gt; string 'codeigniter'</span></span><br><span class="line"><span class="comment">         * ]</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">foreach</span> ($autoload[<span class="string">'config'</span>] <span class="keyword">as</span> $val)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// $this-&gt;config('codeigniter');</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;config($val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Autoload helpers and languages</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">array</span>(<span class="string">'helper'</span>, <span class="string">'language'</span>) <span class="keyword">as</span> $type)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($autoload[$type]) &amp;&amp; count($autoload[$type]) &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * $autoload['helper'] = [</span></span><br><span class="line"><span class="comment">             *      0 =&gt; string 'array' (length=5)</span></span><br><span class="line"><span class="comment">             *      1 =&gt; string 'language' (length=8)</span></span><br><span class="line"><span class="comment">             * ]</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;$type($autoload[$type]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Autoload drivers</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($autoload[<span class="string">'drivers'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;driver($autoload[<span class="string">'drivers'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Load libraries</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($autoload[<span class="string">'libraries'</span>]) &amp;&amp; count($autoload[<span class="string">'libraries'</span>]) &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Load the database driver. 此处是指初始化时就加载数据库</span></span><br><span class="line">        <span class="keyword">if</span> (in_array(<span class="string">'database'</span>, $autoload[<span class="string">'libraries'</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 加载DB类，只有加载了才能使用$this-&gt;db-&gt;...</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;database();</span><br><span class="line">            <span class="comment">// 返回不包含'database'的数组</span></span><br><span class="line">            $autoload[<span class="string">'libraries'</span>] = array_diff($autoload[<span class="string">'libraries'</span>], <span class="keyword">array</span>(<span class="string">'database'</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Load all other libraries</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;library($autoload[<span class="string">'libraries'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Autoload models</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($autoload[<span class="string">'model'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;model($autoload[<span class="string">'model'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="ci-prepare-view-vars"><a href="#ci-prepare-view-vars" class="headerlink" title="_ci_prepare_view_vars()"></a>_ci_prepare_view_vars()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_ci_prepare_view_vars</span><span class="params">($vars)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( ! is_array($vars))</span><br><span class="line">    &#123;</span><br><span class="line">        $vars = is_object($vars)</span><br><span class="line">            ? get_object_vars($vars)</span><br><span class="line">            : <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (array_keys($vars) <span class="keyword">as</span> $key)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (strncmp($key, <span class="string">'_ci_'</span>, <span class="number">4</span>) === <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">unset</span>($vars[$key]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $vars;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="ci-get-component"><a href="#ci-get-component" class="headerlink" title="_ci_get_component()"></a>_ci_get_component()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> &amp;<span class="title">_ci_get_component</span><span class="params">($component)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line">    <span class="keyword">return</span> $CI-&gt;$component;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjk1NjY5Mg==" title="https://blog.csdn.net/Zhihua_W/article/details/52956692">CI框架源码解析十六之加载器类文件Loader.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter模型类文件Model.php</title>
      <link href="/2020/02/16/codeigniter-m/"/>
      <url>/2020/02/16/codeigniter-m/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>该类就是MVC中的M。在项目开发过程中定义的模型都要继承这个文件。</p><a id="more"></a><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get"><a href="#get" class="headerlink" title="__get()"></a>__get()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 这里定义了一个魔术方法，当在model类中去加载别的model或library，则需要使用超级控制器中已实例化的相关对象。</span></span><br><span class="line">    <span class="keyword">return</span> get_instance()-&gt;$key;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjk1MzIyNg==" title="https://blog.csdn.net/Zhihua_W/article/details/52953226">CI框架源码解析十五之模型类文件Model.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter控制器类文件Controller.php</title>
      <link href="/2020/02/16/codeigniter-c/"/>
      <url>/2020/02/16/codeigniter-c/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p> 该类为超级控制器类，是我们通常所说的MVC中的C。在项目开发过程中开发的所有的控制器类都要继承自这个文件。在经过路由分发之后，实际的应用Controller接管用户的所有请求，并负责与用户数据的交互。CI中所有的应用控制器都应该是CI_Controller的子类(除非你扩展了CI的核心，那么你的Controller父类可以是MY_Controller)。</p><a id="more"></a><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 该类为单例模式的类，类的实例不能直接访问，需要通过统一的访问接口进行访问。</span></span><br><span class="line"><span class="comment">// 此处`$instance`用于保存该类的实例，即当前对象`$this`。</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> $instance;</span><br></pre></td></tr></table></figure><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 通过self::$instance实现单例化，静态变量`$instance`表示当前对象。</span></span><br><span class="line">    <span class="keyword">self</span>::$instance =&amp; <span class="keyword">$this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// is_loaded()为Common.php文件中定义的全局方法，用于返回已加载的组件(类的实例)。</span></span><br><span class="line">    <span class="comment">// 这里将所有已加载的组件以$this-&gt;xxx = &amp;load_class('xxx')的形式赋值给当前对象(超级控制器)，然后就可以直接使用$this-&gt;xxx了。</span></span><br><span class="line">    <span class="comment">// 比如：$this-&gt;input-&gt;post(); $this-&gt;security-&gt;xss_clean($data); $this-&gt;benchmark-&gt;mark('controller init start');</span></span><br><span class="line">    <span class="keyword">foreach</span> (is_loaded() <span class="keyword">as</span> $var =&gt; $class)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;$var =&amp; load_class($class);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Loader组件单独给超级控制器，之后就可以使用$this-&gt;load-&gt;model('xxx_model'); $this-&gt;load-&gt;library('xxx');进行加载某个类了。</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;load =&amp; load_class(<span class="string">'Loader'</span>, <span class="string">'core'</span>);</span><br><span class="line">    <span class="comment">// 初始化Loader组件。</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;load-&gt;initialize();</span><br><span class="line">    log_message(<span class="string">'info'</span>, <span class="string">'Controller Class Initialized'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get-instance"><a href="#get-instance" class="headerlink" title="get_instance()"></a>get_instance()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> &amp;<span class="title">get_instance</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// $instance为私有变量，外界不能直接访问，所以提供此接口用来获取该类(超级控制器)的实例。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>::$instance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjk0ODAzNA==" title="https://blog.csdn.net/Zhihua_W/article/details/52948034">CI框架源码解析十四之控制器类文件Controller.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter语言类文件Lang.php</title>
      <link href="/2020/02/10/codeigniter-lang/"/>
      <url>/2020/02/10/codeigniter-lang/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>语言类提供了一些方法用于获取语言文件和不同语言的文本来实现国际化。该类包含两个成员变量<code>language</code>、<code>is_loaded</code>和三个成员方法<code>__construct()</code>、<code>load()</code>、<code>line()</code>。</p><a id="more"></a><hr><h4 id="成员方法"><a href="#成员方法" class="headerlink" title="成员方法"></a>成员方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">public $language = array();// 语言列表</span><br><span class="line">public $is_loaded = array();// 加载的语言文件列表</span><br></pre></td></tr></table></figure><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function __construct()</span><br><span class="line">&#123;</span><br><span class="line">    log_message(&apos;info&apos;, &apos;Language Class Initialized&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="load"><a href="#load" class="headerlink" title="load()"></a>load()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">public function load($langfile, $idiom = &apos;&apos;, $return = FALSE, $add_suffix = TRUE, $alt_path = &apos;&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * 加载语言包</span><br><span class="line">     * $LANG = &amp; load_class(&apos;Lang&apos;, &apos;core&apos;);</span><br><span class="line">     * $LANG-&gt;load(&apos;test&apos;); 英文</span><br><span class="line">     * // $LANG-&gt;load(&apos;test&apos;, &apos;zh_cn&apos;); 中文</span><br><span class="line">     * var_dump($LANG-&gt;line(&apos;test.successful&apos;));</span><br><span class="line">     */</span><br><span class="line">    if (is_array($langfile)) // 支持按组加载，即 $this-&gt;lang-&gt;load([&apos;test&apos;, &apos;welcome&apos;]);</span><br><span class="line">    &#123;</span><br><span class="line">        foreach ($langfile as $value)</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;load($value, $idiom, $return, $add_suffix, $alt_path);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 去除.php，即$this-&gt;lang-&gt;load(&apos;test.php&apos;)跟$this-&gt;lang-&gt;load(&apos;test&apos;)效果一样</span><br><span class="line">    $langfile = str_replace(&apos;.php&apos;, &apos;&apos;, $langfile);</span><br><span class="line"></span><br><span class="line">    if ($add_suffix === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        // preg_replace()的作用是去除_lang字符串，即$this-&gt;lang-&gt;load(&apos;test_lang&apos;)跟$this-&gt;lang-&gt;load(&apos;test&apos;)效果一样</span><br><span class="line">        $langfile = preg_replace(&apos;/_lang$/&apos;, &apos;&apos;, $langfile).&apos;_lang&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 至此$langfile = test_lang.php</span><br><span class="line">    $langfile .= &apos;.php&apos;;</span><br><span class="line"></span><br><span class="line">    if (empty($idiom) OR ! preg_match(&apos;/^[a-z_-]+$/i&apos;, $idiom))</span><br><span class="line">    &#123;</span><br><span class="line">        // 若没有指定$idiom, 则首先使用配置文件中指定的语言类型，如果没有配置则使用english</span><br><span class="line">        $config =&amp; get_config();</span><br><span class="line">        $idiom = empty($config[&apos;language&apos;]) ? &apos;english&apos; : $config[&apos;language&apos;];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 已加载则返回，避免重复加载</span><br><span class="line">    if ($return === FALSE &amp;&amp; isset($this-&gt;is_loaded[$langfile]) &amp;&amp; $this-&gt;is_loaded[$langfile] === $idiom)</span><br><span class="line">    &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Load the base file, so any others found can override it</span><br><span class="line">    $basepath = BASEPATH.&apos;language/&apos;.$idiom.&apos;/&apos;.$langfile;</span><br><span class="line">    //  $basepath = &apos;G:\wamp\www\CodeIgniter_hmvc\system\language/zh_cn/test_lang.php&apos;</span><br><span class="line">    if (($found = file_exists($basepath)) === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        include($basepath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Do we have an alternative path to look in?</span><br><span class="line">    // $alt_path 默认为&apos;&apos;，是个目录，也就是说要加载的语言文件可能在这个目录下</span><br><span class="line">    if ($alt_path !== &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $alt_path .= &apos;language/&apos;.$idiom.&apos;/&apos;.$langfile;</span><br><span class="line">        if (file_exists($alt_path))</span><br><span class="line">        &#123;</span><br><span class="line">            include($alt_path);</span><br><span class="line">            $found = TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        /**</span><br><span class="line">         * var_dump(get_instance()-&gt;load-&gt;get_package_paths(TRUE)) = [</span><br><span class="line">         *      0 =&gt; string &apos;G:\wamp\www\CodeIgniter_hmvc\application\&apos; (length=41)</span><br><span class="line">         *      1 =&gt; string &apos;G:\wamp\www\CodeIgniter_hmvc\system\&apos; (length=36)</span><br><span class="line">         * ]</span><br><span class="line">         */</span><br><span class="line">        foreach (get_instance()-&gt;load-&gt;get_package_paths(TRUE) as $package_path)</span><br><span class="line">        &#123;</span><br><span class="line">            $package_path .= &apos;language/&apos;.$idiom.&apos;/&apos;.$langfile;</span><br><span class="line">            // $package_path = &apos;G:\wamp\www\CodeIgniter_hmvc\application\language/zh_cn/test_lang.php&apos;</span><br><span class="line">            if ($basepath !== $package_path &amp;&amp; file_exists($package_path))</span><br><span class="line">            &#123;</span><br><span class="line">                include($package_path);</span><br><span class="line">                $found = TRUE;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if ($found !== TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(&apos;Unable to load the requested language file: language/&apos;.$idiom.&apos;/&apos;.$langfile);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 语言文件内容：$lang[&apos;test_failed&apos;] = &apos;测试成功&apos;;</span><br><span class="line">    if ( ! isset($lang) OR ! is_array($lang))</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(&apos;error&apos;, &apos;Language file contains no data: language/&apos;.$idiom.&apos;/&apos;.$langfile);</span><br><span class="line"></span><br><span class="line">        if ($return === TRUE)</span><br><span class="line">        &#123;</span><br><span class="line">            return array();</span><br><span class="line">        &#125;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // $return 默认为false， 如果为true直接返回</span><br><span class="line">    if ($return === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        return $lang;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *  var_dump($this-&gt;is_loaded) = [</span><br><span class="line">     *       &apos;test_lang.php&apos; =&gt; string &apos;zh_cn&apos; (length=5)</span><br><span class="line">     * ]</span><br><span class="line">     */</span><br><span class="line">    $this-&gt;is_loaded[$langfile] = $idiom;</span><br><span class="line">    /**</span><br><span class="line">     * var_dump($this-&gt;language) = [</span><br><span class="line">     *        &apos;test.successful&apos; =&gt; string &apos;测试成功&apos; (length=12)</span><br><span class="line">     *        &apos;test_failed&apos; =&gt; string &apos;测试失败&apos; (length=12)</span><br><span class="line">     * ]</span><br><span class="line">     */</span><br><span class="line">    $this-&gt;language = array_merge($this-&gt;language, $lang);</span><br><span class="line"></span><br><span class="line">    log_message(&apos;info&apos;, &apos;Language file loaded: language/&apos;.$idiom.&apos;/&apos;.$langfile);</span><br><span class="line">    return TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载语言文件。</p><hr><h4 id="line"><a href="#line" class="headerlink" title="line()"></a>line()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public function line($line, $log_errors = TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    // $line = string &apos;test.successful&apos; (length=15) 找到返回$value找不到返回false</span><br><span class="line">    $value = isset($this-&gt;language[$line]) ? $this-&gt;language[$line] : FALSE;</span><br><span class="line"></span><br><span class="line">    // Because killer robots like unicorns!</span><br><span class="line">    if ($value === FALSE &amp;&amp; $log_errors === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(&apos;error&apos;, &apos;Could not find the language line &quot;&apos;.$line.&apos;&quot;&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从一个已加载的语言文件中，通过行名获取一行该语言的文本。</p><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjk0NTM1OA==" title="https://blog.csdn.net/Zhihua_W/article/details/52945358">CI框架源码解析十三之语言类文件Lang.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter输入类文件Input.php</title>
      <link href="/2020/02/09/codeigniter-input/"/>
      <url>/2020/02/09/codeigniter-input/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>输入类通过对输入数据进行预处理来提高安全性，同时提供了一些辅助方法来获取输入数据。该类包含10个成员变量和22个成员方法。</p><a id="more"></a><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/*当前用户ip地址*/</span><br><span class="line">protected $ip_address = FALSE;</span><br><span class="line"></span><br><span class="line">/*是否允许获取$_GET超级全局变量*/</span><br><span class="line">protected $_allow_get_array = TRUE;</span><br><span class="line"></span><br><span class="line">/*是否标准化换行符*/</span><br><span class="line">protected $_standardize_newlines;</span><br><span class="line"></span><br><span class="line">/*是否开启全局xss过滤*/</span><br><span class="line">protected $_enable_xss = FALSE;</span><br><span class="line"></span><br><span class="line">/*是否开启CSRF过滤*/</span><br><span class="line">protected $_enable_csrf = FALSE;</span><br><span class="line"></span><br><span class="line">/*记录HTTP Request信息*/</span><br><span class="line">protected $headers = array();</span><br><span class="line"></span><br><span class="line">/*原始输入流数据*/</span><br><span class="line">protected $_raw_input_stream;</span><br><span class="line"></span><br><span class="line">/*解析的输入流数据*/</span><br><span class="line">protected $_input_stream;</span><br><span class="line"></span><br><span class="line">/*安全类实例*/</span><br><span class="line">protected $security;</span><br><span class="line"></span><br><span class="line">/*utf8类实例*/</span><br><span class="line">protected $uni;</span><br></pre></td></tr></table></figure><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">public function __construct()</span><br><span class="line">&#123;</span><br><span class="line">    // 表示是否允许用户使用$_GET全局变量，如果设置为不允许将$_GET清空。</span><br><span class="line">    $this-&gt;_allow_get_array = (config_item(&apos;allow_get_array&apos;) !== FALSE);</span><br><span class="line"></span><br><span class="line">    // $config[&apos;global_xss_filtering&apos;]表示是否开启XSS全局防御的标志位，如果设置为允许，则会对用户输入和Cookie的内容中进行XSS过滤。</span><br><span class="line">    $this-&gt;_enable_xss = (config_item(&apos;global_xss_filtering&apos;) === TRUE);</span><br><span class="line"></span><br><span class="line">    // $config[&apos;csrf_protection&apos;]表示是否开启CSRF防御，如果设置为允许，则会在对表单数据进行处理时进行CSRF方法的检查。</span><br><span class="line">    $this-&gt;_enable_csrf = (config_item(&apos;csrf_protection&apos;) === TRUE);</span><br><span class="line"></span><br><span class="line">    // $config[&apos;standardize_newlines&apos;]表示是否标准化换行符，如果设置为允许，则会在对表单数据进行处理时用PHP_EOL代替数据中的换行符。</span><br><span class="line">    $this-&gt;_standardize_newlines = (bool) config_item(&apos;standardize_newlines&apos;);</span><br><span class="line"></span><br><span class="line">    $this-&gt;security =&amp; load_class(&apos;Security&apos;, &apos;core&apos;);</span><br><span class="line"></span><br><span class="line">    // Do we need the UTF-8 class?</span><br><span class="line">    if (UTF8_ENABLED === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;uni =&amp; load_class(&apos;Utf8&apos;, &apos;core&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Sanitize global arrays 清理全局数组，即处理表单数据,$_GET,$_POST,$_COOKIE去掉不合要求的字符</span><br><span class="line">    $this-&gt;_sanitize_globals();</span><br><span class="line"></span><br><span class="line">    // CSRF Protection check</span><br><span class="line">    if ($this-&gt;_enable_csrf === TRUE &amp;&amp; ! is_cli())</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;security-&gt;csrf_verify();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    log_message(&apos;info&apos;, &apos;Input Class Initialized&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="fetch-from-array"><a href="#fetch-from-array" class="headerlink" title="_fetch_from_array()"></a>_fetch_from_array()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">protected function _fetch_from_array(&amp;$array, $index = NULL, $xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    is_bool($xss_clean) OR $xss_clean = $this-&gt;_enable_xss;</span><br><span class="line"></span><br><span class="line">    // $index = NULL 表示获取所有, 比如$this-&gt;input-&gt;get()表示获取所有$_GET参数</span><br><span class="line">    isset($index) OR $index = array_keys($array);</span><br><span class="line"></span><br><span class="line">    // 如果Index是数组则递归调用该方法过滤，比如$this-&gt;input-&gt;get([&apos;a&apos;, &apos;b&apos;])获取的是$_GET[&apos;a&apos;]、$_GET[&apos;b&apos;]</span><br><span class="line">    if (is_array($index))</span><br><span class="line">    &#123;</span><br><span class="line">        $output = array();</span><br><span class="line">        foreach ($index as $key)</span><br><span class="line">        &#123;</span><br><span class="line">            $output[$key] = $this-&gt;_fetch_from_array($array, $key, $xss_clean);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (isset($array[$index]))</span><br><span class="line">    &#123;</span><br><span class="line">        $value = $array[$index];</span><br><span class="line">    &#125;</span><br><span class="line">    elseif (($count = preg_match_all(&apos;/(?:^[^\[]+)|\[[^]]*\]/&apos;, $index, $matches)) &gt; 1) // 索引是否包含数组符号，比如$this-&gt;input-&gt;get([])</span><br><span class="line">    &#123;</span><br><span class="line">        $value = $array;</span><br><span class="line">        for ($i = 0; $i &lt; $count; $i++)</span><br><span class="line">        &#123;</span><br><span class="line">            $key = trim($matches[0][$i], &apos;[]&apos;);</span><br><span class="line">            if ($key === &apos;&apos;) // 如果索引是[]则返回的是个数组，即$array,这里跟参数为null是一样的，只不过这里直接返回不用递归处理了</span><br><span class="line">            &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (isset($value[$key]))</span><br><span class="line">            &#123;</span><br><span class="line">                $value = $value[$key];</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                return NULL;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        return NULL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return ($xss_clean === TRUE)</span><br><span class="line">        ? $this-&gt;security-&gt;xss_clean($value)</span><br><span class="line">        : $value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的功能为从数组中获取某个值并设置是否进行xss过滤。代码中的<code>?:</code>表示非捕获数组，作用可参考<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JheW5haW5nL2FydGljbGUvZGV0YWlscy83OTE0MDAxOA==" title="https://blog.csdn.net/Raynaing/article/details/79140018">https://blog.csdn.net/Raynaing/article/details/79140018<i class="fa fa-external-link"></i></span>。</p><hr><h4 id="get"><a href="#get" class="headerlink" title="get()"></a>get()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function get($index = NULL, $xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_fetch_from_array($_GET, $index, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于获取$_GET值，并可进行xss过滤。</p><hr><h4 id="post"><a href="#post" class="headerlink" title="post()"></a>post()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function post($index = NULL, $xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_fetch_from_array($_POST, $index, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于获取$_POST值，并可进行xss过滤。</p><hr><h4 id="post-get"><a href="#post-get" class="headerlink" title="post_get()"></a>post_get()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public function post_get($index, $xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return isset($_POST[$index])</span><br><span class="line">        ? $this-&gt;post($index, $xss_clean)</span><br><span class="line">        : $this-&gt;get($index, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于$_POST值或$_GET值，从$_POST中获取，如果获取到了直接返回；如果没有获取到再从$_GET中获取。</p><hr><h4 id="get-post"><a href="#get-post" class="headerlink" title="get_post()"></a>get_post()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public function get_post($index, $xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return isset($_GET[$index])</span><br><span class="line">        ? $this-&gt;get($index, $xss_clean)</span><br><span class="line">        : $this-&gt;post($index, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法和 post_get() 方法一样，只是它先查找 GET 数据。</p><hr><h4 id="cookie"><a href="#cookie" class="headerlink" title="cookie()"></a>cookie()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function cookie($index = NULL, $xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_fetch_from_array($_COOKIE, $index, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法和 post() 和 get() 方法一样，只是它用于获取 COOKIE 数据。</p><hr><h4 id="server"><a href="#server" class="headerlink" title="server()"></a>server()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function server($index, $xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_fetch_from_array($_SERVER, $index, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法和 post() 、 get() 和 cookie() 方法一样，只是它用于获取 SERVER 数据。</p><hr><h4 id="input-stream"><a href="#input-stream" class="headerlink" title="input_stream()"></a>input_stream()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public function input_stream($index = NULL, $xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    // Prior to PHP 5.6, the input stream can only be read once,</span><br><span class="line">    // so we&apos;ll need to check if we have already done that first.</span><br><span class="line">    if ( ! is_array($this-&gt;_input_stream))</span><br><span class="line">    &#123;</span><br><span class="line">        // $this-&gt;raw_input_stream will trigger __get().</span><br><span class="line">        parse_str($this-&gt;raw_input_stream, $this-&gt;_input_stream);</span><br><span class="line">        is_array($this-&gt;_input_stream) OR $this-&gt;_input_stream = array();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $this-&gt;_fetch_from_array($this-&gt;_input_stream, $index, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法和 get() 、 post() 和 cookie() 方法一样，只是它用于获取 <span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvd3JhcHBlcnMucGhwLnBocA==" title="https://www.php.net/manual/zh/wrappers.php.php">php://input<i class="fa fa-external-link"></i></span>流数据。</p><hr><h4 id="set-cookie"><a href="#set-cookie" class="headerlink" title="set_cookie()"></a>set_cookie()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">public function set_cookie($name, $value = &apos;&apos;, $expire = &apos;&apos;, $domain = &apos;&apos;, $path = &apos;/&apos;, $prefix = &apos;&apos;, $secure = NULL, $httponly = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    if (is_array($name))</span><br><span class="line">    &#123;</span><br><span class="line">        // always leave &apos;name&apos; in last place, as the loop will break otherwise, due to $$item</span><br><span class="line">        // 这里调用方式类似$this-&gt;input-&gt;set_cookie([ &apos;name&apos; =&gt; &apos;a&apos;, &apos;value&apos; =&gt; &apos;dd&apos;]);</span><br><span class="line">        foreach (array(&apos;value&apos;, &apos;expire&apos;, &apos;domain&apos;, &apos;path&apos;, &apos;prefix&apos;, &apos;secure&apos;, &apos;httponly&apos;, &apos;name&apos;) as $item)</span><br><span class="line">        &#123;</span><br><span class="line">            if (isset($name[$item]))</span><br><span class="line">            &#123;</span><br><span class="line">                $$item = $name[$item];// 这里是将数组中的参数转为从调用方法传入的形式</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //是否配置cookie前缀</span><br><span class="line">    if ($prefix === &apos;&apos; &amp;&amp; config_item(&apos;cookie_prefix&apos;) !== &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $prefix = config_item(&apos;cookie_prefix&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //是否配置cookie有效域名</span><br><span class="line">    if ($domain == &apos;&apos; &amp;&amp; config_item(&apos;cookie_domain&apos;) != &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $domain = config_item(&apos;cookie_domain&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //是否配置cookie的有效路径，默认是当前目录</span><br><span class="line">    if ($path === &apos;/&apos; &amp;&amp; config_item(&apos;cookie_path&apos;) !== &apos;/&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $path = config_item(&apos;cookie_path&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //规定是否通过安全的 HTTPS 连接来传输 cookie。</span><br><span class="line">    $secure = ($secure === NULL &amp;&amp; config_item(&apos;cookie_secure&apos;) !== NULL)</span><br><span class="line">        ? (bool) config_item(&apos;cookie_secure&apos;)</span><br><span class="line">        : (bool) $secure;</span><br><span class="line"></span><br><span class="line">   // 是否设置cookie_httponly</span><br><span class="line">    $httponly = ($httponly === NULL &amp;&amp; config_item(&apos;cookie_httponly&apos;) !== NULL)</span><br><span class="line">        ? (bool) config_item(&apos;cookie_httponly&apos;)</span><br><span class="line">        : (bool) $httponly;</span><br><span class="line"></span><br><span class="line">    //设置cookie的过期时间，默认：默认在会话结束【浏览器关闭】失效</span><br><span class="line">    if ( ! is_numeric($expire))</span><br><span class="line">    &#123;</span><br><span class="line">        $expire = time() - 86500;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $expire = ($expire &gt; 0) ? time() + $expire : 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    setcookie($prefix.$name, $value, $expire, $path, $domain, $secure, $httponly);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uc2V0Y29va2ll" title="https://www.php.net/manual/zh/function.setcookie">设置cookie<i class="fa fa-external-link"></i></span>。</p><hr><h4 id="ip-address"><a href="#ip-address" class="headerlink" title="ip_address()"></a>ip_address()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line">public function ip_address()</span><br><span class="line">&#123;</span><br><span class="line">    if ($this-&gt;ip_address !== FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;ip_address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 当服务器使用了代理时，REMOTER_ADDR获取的就是代理服务器的IP了，</span><br><span class="line">     * 需要从HTTP_X_FORWARDED_FOR、HTTP_CLIENT_IP、HTTP_X_CLIENT_IP、HTTP_X_CLUSTER_CLIENT_IP或其他设定的值中获取。</span><br><span class="line">     * 这里设定的就是代理服务器的IP，逗号分隔。</span><br><span class="line">     */</span><br><span class="line">    $proxy_ips = config_item(&apos;proxy_ips&apos;);</span><br><span class="line">    if ( ! empty($proxy_ips) &amp;&amp; ! is_array($proxy_ips))</span><br><span class="line">    &#123;</span><br><span class="line">        $proxy_ips = explode(&apos;,&apos;, str_replace(&apos; &apos;, &apos;&apos;, $proxy_ips));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * REMOTE_ADDR代表着客户端的IP，但是这个客户端是相对服务器而言的，也就是实际上与服务器相连的机器的IP（建立tcp连接的那个），这个值是不可伪造的，</span><br><span class="line">     * 如果没有代理的话，这个值就是用户实际的IP值，有代理的话，用户的请求会经过代理再到服务器，这个时候REMOTE_ADDR会被设置为代理机器的IP值。</span><br><span class="line">     */</span><br><span class="line">    $this-&gt;ip_address = $this-&gt;server(&apos;REMOTE_ADDR&apos;);</span><br><span class="line"></span><br><span class="line">    if ($proxy_ips)</span><br><span class="line">    &#123;</span><br><span class="line">        /**</span><br><span class="line">         * HTTP_X_FORWARDED_FOR: 是有标准定义,用来识别通过HTTP代理或负载均衡方式连接到Web服务器的客户端最原始的IP地址,</span><br><span class="line">         *      有了代理就获取不了用户的真实IP，由此X-Forwarded-For应运而生，它是一个非正式协议，</span><br><span class="line">         *      在请求转发到代理的时候代理会添加一个X-Forwarded-For头，将连接它的客户端IP（也就是你的上网机器IP）加到这个头信息里，</span><br><span class="line">         *      这样末端的服务器就能获取真正上网的人的IP了</span><br><span class="line">         * HTTP_CLIENT_IP: 头是有的，只是未成标准，不一定服务器都实现了</span><br><span class="line">         * HTTP_X_CLIENT_IP:</span><br><span class="line">         * HTTP_X_CLUSTER_CLIENT_IP:</span><br><span class="line">         */</span><br><span class="line">        foreach (array(&apos;HTTP_X_FORWARDED_FOR&apos;, &apos;HTTP_CLIENT_IP&apos;, &apos;HTTP_X_CLIENT_IP&apos;, &apos;HTTP_X_CLUSTER_CLIENT_IP&apos;) as $header)</span><br><span class="line">        &#123;</span><br><span class="line">            if (($spoof = $this-&gt;server($header)) !== NULL)</span><br><span class="line">            &#123;</span><br><span class="line">                // 有些代理通常会列出客户端通过其与我们联系的IP地址的整个链。 例如 client_ip，proxy_ip1，proxy_ip2等</span><br><span class="line">                // 这里的目的是从列表中取一个可用的ip，ipv4 或 ipv6</span><br><span class="line">                sscanf($spoof, &apos;%[^,]&apos;, $spoof);</span><br><span class="line"></span><br><span class="line">                // 非ipv4/ipv6则返回false</span><br><span class="line">                if ( ! $this-&gt;valid_ip($spoof))</span><br><span class="line">                &#123;</span><br><span class="line">                    $spoof = NULL;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if ($spoof)</span><br><span class="line">        &#123;</span><br><span class="line">            for ($i = 0, $c = count($proxy_ips); $i &lt; $c; $i++)</span><br><span class="line">            &#123;</span><br><span class="line">                // 检查是否有IP地址或子网</span><br><span class="line">                if (strpos($proxy_ips[$i], &apos;/&apos;) === FALSE)</span><br><span class="line">                &#123;</span><br><span class="line">                    // 指定了IP地址（而不是子网） 可以立即进行比较。</span><br><span class="line">                    if ($proxy_ips[$i] === $this-&gt;ip_address)</span><br><span class="line">                    &#123;</span><br><span class="line">                        $this-&gt;ip_address = $spoof;</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // We have a subnet ... now the heavy lifting begins</span><br><span class="line">                // ipv6:    xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx</span><br><span class="line">                // ipv4:    10.120.78.40</span><br><span class="line">                isset($separator) OR $separator = $this-&gt;valid_ip($this-&gt;ip_address, &apos;ipv6&apos;) ? &apos;:&apos; : &apos;.&apos;;</span><br><span class="line"></span><br><span class="line">                // If the proxy entry doesn&apos;t match the IP protocol - skip it</span><br><span class="line">                if (strpos($proxy_ips[$i], $separator) === FALSE)</span><br><span class="line">                &#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // 如果需要，将REMOTE_ADDR IP地址转换为二进制</span><br><span class="line">                // isset()只有在$ip, $sprintf全部设置时才返回true，这里返回的是false，因为$ip $sprintf未被设置</span><br><span class="line">                if ( ! isset($ip, $sprintf))</span><br><span class="line">                &#123;</span><br><span class="line">                    // : 表示IPv6</span><br><span class="line">                    if ($separator === &apos;:&apos;)</span><br><span class="line">                    &#123;</span><br><span class="line">                        // Make sure we&apos;re have the &quot;full&quot; IPv6 format</span><br><span class="line">                        /**</span><br><span class="line">                         *  str_repeat() 重复一个字符串</span><br><span class="line">                         *  substr_count() 计算字符串出现次数</span><br><span class="line">                         *  :: 表示0位压缩，比如FF01::1101表示FF01:0:0:0:0:0:0:1101</span><br><span class="line">                         */</span><br><span class="line">                        $ip = explode(&apos;:&apos;,</span><br><span class="line">                            str_replace(&apos;::&apos;,</span><br><span class="line">                                str_repeat(&apos;:&apos;, 9 - substr_count($this-&gt;ip_address, &apos;:&apos;)),</span><br><span class="line">                                $this-&gt;ip_address</span><br><span class="line">                            )</span><br><span class="line">                        );</span><br><span class="line"></span><br><span class="line">                        for ($j = 0; $j &lt; 8; $j++)</span><br><span class="line">                        &#123;</span><br><span class="line">                            $ip[$j] = intval($ip[$j], 16);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        $sprintf = &apos;%016b%016b%016b%016b%016b%016b%016b%016b&apos;;</span><br><span class="line">                    &#125;</span><br><span class="line">                    else</span><br><span class="line">                    &#123;</span><br><span class="line">                        $ip = explode(&apos;.&apos;, $this-&gt;ip_address);</span><br><span class="line">                        $sprintf = &apos;%08b%08b%08b%08b&apos;;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    // vsprintf(): 返回格式化字符串</span><br><span class="line">                    $ip = vsprintf($sprintf, $ip);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // Split the netmask length off the network address</span><br><span class="line">                // sscanf根据format将$proxy_ips[$i]格式化为$netaddr和$masklen</span><br><span class="line">                sscanf($proxy_ips[$i], &apos;%[^/]/%d&apos;, $netaddr, $masklen);</span><br><span class="line"></span><br><span class="line">                // Again, an IPv6 address is most likely in a compressed form</span><br><span class="line">                if ($separator === &apos;:&apos;)</span><br><span class="line">                &#123;</span><br><span class="line">                    $netaddr = explode(&apos;:&apos;, str_replace(&apos;::&apos;, str_repeat(&apos;:&apos;, 9 - substr_count($netaddr, &apos;:&apos;)), $netaddr));</span><br><span class="line">                    for ($j = 0; $j &lt; 8; $j++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        $netaddr[$j] = intval($netaddr[$j], 16);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    $netaddr = explode(&apos;.&apos;, $netaddr);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // 转换为二进制再比较一次</span><br><span class="line">                if (strncmp($ip, vsprintf($sprintf, $netaddr), $masklen) === 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    $this-&gt;ip_address = $spoof;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 如果 IP 地址无效，则返回 &apos;0.0.0.0&apos;</span><br><span class="line">    if ( ! $this-&gt;valid_ip($this-&gt;ip_address))</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;ip_address = &apos;0.0.0.0&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $this-&gt;ip_address;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="valid-ip"><a href="#valid-ip" class="headerlink" title="valid_ip()"></a>valid_ip()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">public function valid_ip($ip, $which = &apos;&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    switch (strtolower($which))</span><br><span class="line">    &#123;</span><br><span class="line">        case &apos;ipv4&apos;:</span><br><span class="line">            $which = FILTER_FLAG_IPV4;</span><br><span class="line">            break;</span><br><span class="line">        case &apos;ipv6&apos;:</span><br><span class="line">            $which = FILTER_FLAG_IPV6;</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            $which = NULL;</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * filter_var(): 使用特定的过滤器过滤一个变量，详见https://www.php.net/manual/zh/function.filter-var.php</span><br><span class="line">     * $ip: 待过滤的变量。注意：标量的值在过滤前，会被转换成字符串。</span><br><span class="line">     * FILTER_VALIDATE_IP: validate ip,詳見https://www.php.net/manual/zh/filter.filters.validate.php</span><br><span class="line">     * $witch: 一个选项的关联数组，或者按位区分的标示。如果过滤器接受选项，可以通过数组的 &quot;flags&quot; 位去提供这些标示。</span><br><span class="line">     */</span><br><span class="line">    return (bool) filter_var($ip, FILTER_VALIDATE_IP, $which);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="user-agent"><a href="#user-agent" class="headerlink" title="user_agent()"></a>user_agent()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function user_agent($xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    // HTTP_USER_AGENT: 获取用户的所有信息， 比如，Mozilla/5.0 平台操作系统（包括版本号） 引擎版本  浏览器（包括版本号）</span><br><span class="line">    return $this-&gt;_fetch_from_array($_SERVER, &apos;HTTP_USER_AGENT&apos;, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="sanitize-globals"><a href="#sanitize-globals" class="headerlink" title="_sanitize_globals()"></a>_sanitize_globals()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">protected function _sanitize_globals()</span><br><span class="line">&#123;</span><br><span class="line">    // 表示是否允许用户使用$_GET全局变量，如果设置为不允许，会在输入类构造函数处理中将$_GET清空。</span><br><span class="line">    if ($this-&gt;_allow_get_array === FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        $_GET = array();</span><br><span class="line">    &#125;</span><br><span class="line">    elseif (is_array($_GET))</span><br><span class="line">    &#123;</span><br><span class="line">        // ?k=aa&amp;v=bb&amp;**(*=$%##</span><br><span class="line">        /**</span><br><span class="line">         * $_GET = [</span><br><span class="line">         *      &apos;k&apos; =&gt; string &apos;aa&apos; (length=2)</span><br><span class="line">         *      &apos;v&apos; =&gt; string &apos;bb&apos; (length=2)</span><br><span class="line">         *      &apos;**(*&apos; =&gt; string &apos;$%&apos; (length=2)</span><br><span class="line">         * ]</span><br><span class="line">         */</span><br><span class="line">        foreach ($_GET as $key =&gt; $val)</span><br><span class="line">        &#123;</span><br><span class="line">            $_GET[$this-&gt;_clean_input_keys($key)] = $this-&gt;_clean_input_data($val);</span><br><span class="line">        &#125;</span><br><span class="line">        /**</span><br><span class="line">         * $_GET = [</span><br><span class="line">         *      &apos;k&apos; =&gt; string &apos;aa&apos;</span><br><span class="line">         *      &apos;v&apos; =&gt; string &apos;bb&apos;</span><br><span class="line">         *      &apos;**(*&apos; =&gt; string &apos;$%&apos;</span><br><span class="line">         *      0 =&gt; string &apos;$%&apos;</span><br><span class="line">         * ]</span><br><span class="line">         */</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Clean $_POST Data</span><br><span class="line">    if (is_array($_POST))</span><br><span class="line">    &#123;</span><br><span class="line">        /**</span><br><span class="line">         * $_POST  = [</span><br><span class="line">         *      &apos;k&apos; =&gt; string &apos;aa&apos;</span><br><span class="line">         *      &apos;v&apos; =&gt; string &apos;bb&apos;</span><br><span class="line">         *      &apos;**(*&apos; =&gt; string &apos;$%##&apos;</span><br><span class="line">         * ]</span><br><span class="line">         */</span><br><span class="line">        foreach ($_POST as $key =&gt; $val)</span><br><span class="line">        &#123;</span><br><span class="line">            $_POST[$this-&gt;_clean_input_keys($key)] = $this-&gt;_clean_input_data($val);</span><br><span class="line">        &#125;</span><br><span class="line">        /**</span><br><span class="line">         *  $POST = [</span><br><span class="line">         *      &apos;k&apos; =&gt; string &apos;aa&apos;</span><br><span class="line">         *      &apos;v&apos; =&gt; string &apos;bb&apos;</span><br><span class="line">         *      &apos;**(*&apos; =&gt; string &apos;$%##&apos;</span><br><span class="line">         *      0 =&gt; string &apos;$%##&apos;</span><br><span class="line">         * ]</span><br><span class="line">         */</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Clean $_COOKIE Data</span><br><span class="line">    if (is_array($_COOKIE))</span><br><span class="line">    &#123;</span><br><span class="line">        // 注意下面unset的不是变量，单引号括起来了。</span><br><span class="line">        unset(</span><br><span class="line">            $_COOKIE[&apos;$Version&apos;],</span><br><span class="line">            $_COOKIE[&apos;$Path&apos;],</span><br><span class="line">            $_COOKIE[&apos;$Domain&apos;]</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        // $_COOKIE 的话不符合的key直接删掉</span><br><span class="line">        foreach ($_COOKIE as $key =&gt; $val)</span><br><span class="line">        &#123;</span><br><span class="line">            if (($cookie_key = $this-&gt;_clean_input_keys($key)) !== FALSE)</span><br><span class="line">            &#123;</span><br><span class="line">                                        // 将换行符标准化为PHP_EOL</span><br><span class="line">                $_COOKIE[$cookie_key] = $this-&gt;_clean_input_data($val);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                unset($_COOKIE[$key]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Sanitize PHP_SELF</span><br><span class="line">    // strip_tags(): 去除 HTML 和 PHP 标记</span><br><span class="line">    $_SERVER[&apos;PHP_SELF&apos;] = strip_tags($_SERVER[&apos;PHP_SELF&apos;]);</span><br><span class="line"></span><br><span class="line">    log_message(&apos;debug&apos;, &apos;Global POST, GET and COOKIE data sanitized&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于过滤全局变量，如果未启用查询字符串，则取消设置$ _GET数据、清除POST，COOKIE和SERVER数据、将换行符标准化为PHP_EOL。</p><hr><h4 id="clean-input-data"><a href="#clean-input-data" class="headerlink" title="_clean_input_data()"></a>_clean_input_data()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">protected function _clean_input_data($str)</span><br><span class="line">&#123;</span><br><span class="line">    // 如果$str是个数组，则对数组的键和值进行过滤</span><br><span class="line">    if (is_array($str))</span><br><span class="line">    &#123;</span><br><span class="line">        $new_array = array();</span><br><span class="line">        foreach (array_keys($str) as $key)</span><br><span class="line">        &#123;</span><br><span class="line">            $new_array[$this-&gt;_clean_input_keys($key)] = $this-&gt;_clean_input_data($str[$key]);</span><br><span class="line">        &#125;</span><br><span class="line">        return $new_array;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /* 5.4.0開始 魔术引号功能从PHP中移除！小于5.4的版本如果magic_quotes_gpc的配置选项开启则反引用一个引用字符串 */</span><br><span class="line">    if ( ! is_php(&apos;5.4&apos;) &amp;&amp; get_magic_quotes_gpc())</span><br><span class="line">    &#123;</span><br><span class="line">        // stripslashes(): 返回一个去除转义反斜线后的字符串（\&apos; 转换为 &apos; 等等）。</span><br><span class="line">        // 双反斜线（\\）被转换为单个反斜线（\）。</span><br><span class="line">        $str = stripslashes($str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Clean UTF-8 if supported</span><br><span class="line">    if (UTF8_ENABLED === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">               // 确保字符串仅包含有效的UTF-8字符</span><br><span class="line">        $str = $this-&gt;uni-&gt;clean_string($str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 删除不可见字符</span><br><span class="line">    $str = remove_invisible_characters($str, FALSE);</span><br><span class="line"></span><br><span class="line">    // Standardize newlines if needed 默认不进行替换，参考$config[&apos;standardize_newlines&apos;]</span><br><span class="line">    if ($this-&gt;_standardize_newlines === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        return preg_replace(&apos;/(?:\r\n|[\r\n])/&apos;, PHP_EOL, $str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于过滤输入的值。</p><hr><h4 id="clean-input-keys"><a href="#clean-input-keys" class="headerlink" title="_clean_input_keys()"></a>_clean_input_keys()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">protected function _clean_input_keys($str, $fatal = TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    //如果$str中有不允许的字符串则根据$fatal取值返回false活着直接报503，exit</span><br><span class="line">    if ( ! preg_match(&apos;/^[a-z0-9:_\/|-]+$/i&apos;, $str))</span><br><span class="line">    &#123;</span><br><span class="line">        if ($fatal === TRUE)</span><br><span class="line">        &#123;</span><br><span class="line">            return FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            set_status_header(503);</span><br><span class="line">            echo &apos;Disallowed Key Characters.&apos;;</span><br><span class="line">            exit(7); // EXIT_USER_INPUT</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Clean UTF-8 if supported</span><br><span class="line">    if (UTF8_ENABLED === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;uni-&gt;clean_string($str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤键值。</p><hr><h4 id="request-headers"><a href="#request-headers" class="headerlink" title="request_headers()"></a>request_headers()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">/* 获取http 请求头信息 */</span><br><span class="line">public function request_headers($xss_clean = FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    // If header is already defined, return it immediately</span><br><span class="line">    if ( ! empty($this-&gt;headers))</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;_fetch_from_array($this-&gt;headers, NULL, $xss_clean);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // In Apache, you can simply call apache_request_headers()</span><br><span class="line">    if (function_exists(&apos;apache_request_headers&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        // 获取全部http头信息： https://www.php.net/manual/zh/function.apache-request-headers.php</span><br><span class="line">        $this-&gt;headers = apache_request_headers();</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        isset($_SERVER[&apos;CONTENT_TYPE&apos;]) &amp;&amp; $this-&gt;headers[&apos;Content-Type&apos;] = $_SERVER[&apos;CONTENT_TYPE&apos;];</span><br><span class="line"></span><br><span class="line">        foreach ($_SERVER as $key =&gt; $val)</span><br><span class="line">        &#123;</span><br><span class="line">            // HTTP_ACCEPT_CHARSET</span><br><span class="line">            if (sscanf($key, &apos;HTTP_%s&apos;, $header) === 1)</span><br><span class="line">            &#123;</span><br><span class="line">                // take SOME_HEADER and turn it into Some-Header</span><br><span class="line">                $header = str_replace(&apos;_&apos;, &apos; &apos;, strtolower($header));// accept charset</span><br><span class="line">                $header = str_replace(&apos; &apos;, &apos;-&apos;, ucwords($header));   // Accept-Charset</span><br><span class="line"></span><br><span class="line">                $this-&gt;headers[$header] = $_SERVER[$key];            // $this-&gt;headers[&apos;Accept-Charset&apos;] = $_SERVER[&apos;HTTP_ACCEPT_CHARSET&apos;];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $this-&gt;_fetch_from_array($this-&gt;headers, NULL, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get-request-header"><a href="#get-request-header" class="headerlink" title="get_request_header()"></a>get_request_header()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">public function get_request_header($index, $xss_clean = FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    static $headers;</span><br><span class="line"></span><br><span class="line">    // 如果未定义$headers则定义并赋值头信息</span><br><span class="line">    if ( ! isset($headers))</span><br><span class="line">    &#123;</span><br><span class="line">        empty($this-&gt;headers) &amp;&amp; $this-&gt;request_headers();</span><br><span class="line">        foreach ($this-&gt;headers as $key =&gt; $value)</span><br><span class="line">        &#123;</span><br><span class="line">            // $headers[&apos;accept-charset&apos;]</span><br><span class="line">            $headers[strtolower($key)] = $value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $index = strtolower($index);</span><br><span class="line"></span><br><span class="line">    // 没有则返回NULL</span><br><span class="line">    if ( ! isset($headers[$index]))</span><br><span class="line">    &#123;</span><br><span class="line">        return NULL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 如果存在则返回对应的值，当然根据需求进行xss滤波</span><br><span class="line">    return ($xss_clean === TRUE)</span><br><span class="line">        ? $this-&gt;security-&gt;xss_clean($headers[$index])</span><br><span class="line">        : $headers[$index];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="is-ajax-request"><a href="#is-ajax-request" class="headerlink" title="is_ajax_request()"></a>is_ajax_request()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function is_ajax_request()</span><br><span class="line">&#123;</span><br><span class="line">    return ( ! empty($_SERVER[&apos;HTTP_X_REQUESTED_WITH&apos;]) &amp;&amp; strtolower($_SERVER[&apos;HTTP_X_REQUESTED_WITH&apos;]) === &apos;xmlhttprequest&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>判断是否为ajax请求，通过<code>$_SERVER[&#39;HTTP_X_REQUESTED_WITH&#39;])</code>来判断。</p><hr><h4 id="is-cli-request"><a href="#is-cli-request" class="headerlink" title="is_cli_request()"></a>is_cli_request()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function is_cli_request()</span><br><span class="line">&#123;</span><br><span class="line">    return is_cli();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>判断是否为CLI【命令行执行方式】请求。</p><hr><h4 id="method"><a href="#method" class="headerlink" title="method()"></a>method()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public function method($upper = FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    return ($upper)</span><br><span class="line">        ? strtoupper($this-&gt;server(&apos;REQUEST_METHOD&apos;))</span><br><span class="line">        : strtolower($this-&gt;server(&apos;REQUEST_METHOD&apos;));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get-1"><a href="#get-1" class="headerlink" title="__get()"></a>__get()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public function __get($name)</span><br><span class="line">&#123;</span><br><span class="line">    if ($name === &apos;raw_input_stream&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        isset($this-&gt;_raw_input_stream) OR $this-&gt;_raw_input_stream = file_get_contents(&apos;php://input&apos;);</span><br><span class="line">        return $this-&gt;_raw_input_stream;</span><br><span class="line">    &#125;</span><br><span class="line">    elseif ($name === &apos;ip_address&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;ip_address;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用来获取受保护属性  ip_address | _raw_input_stream。</p><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjk0MzAwNw==" title="https://blog.csdn.net/Zhihua_W/article/details/52943007">CI框架源码解析十二之输入类文件Input.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter安全类文件Security.php</title>
      <link href="/2020/02/07/codeigniter-security/"/>
      <url>/2020/02/07/codeigniter-security/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>安全类包含了一些方法，用于安全的处理输入数据，有助于创建一个安全的应用。CI框架安全类提供了跨站请求伪造<strong>CSRF攻击</strong>和<strong>XSS跨站脚本攻击</strong>策略，只需要在配置文件开启即可。该类包含9个成员变量和22个成员方法。</p><a id="more"></a><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">public $filename_bad_chars =array(</span><br><span class="line">    &apos;../&apos;, &apos;&lt;!--&apos;, &apos;--&gt;&apos;, &apos;&lt;&apos;, &apos;&gt;&apos;,</span><br><span class="line">    &quot;&apos;&quot;, &apos;&quot;&apos;, &apos;&amp;&apos;, &apos;$&apos;, &apos;#&apos;,</span><br><span class="line">    &apos;&#123;&apos;, &apos;&#125;&apos;, &apos;[&apos;, &apos;]&apos;, &apos;=&apos;,</span><br><span class="line">    &apos;;&apos;, &apos;?&apos;, &apos;%20&apos;, &apos;%22&apos;,</span><br><span class="line">    &apos;%3c&apos;,// &lt;</span><br><span class="line">    &apos;%253c&apos;,// &lt;</span><br><span class="line">    &apos;%3e&apos;,// &gt;</span><br><span class="line">    &apos;%0e&apos;,// &gt;</span><br><span class="line">    &apos;%28&apos;,// (</span><br><span class="line">    &apos;%29&apos;,// )</span><br><span class="line">    &apos;%2528&apos;,// (</span><br><span class="line">    &apos;%26&apos;,// &amp;</span><br><span class="line">    &apos;%24&apos;,// $</span><br><span class="line">    &apos;%3f&apos;,// ?</span><br><span class="line">    &apos;%3b&apos;,// ;</span><br><span class="line">    &apos;%3d&apos;// =</span><br><span class="line">);</span><br><span class="line">public $charset = &apos;UTF-8&apos;;</span><br><span class="line">protected $_xss_hash;</span><br><span class="line">protected $_csrf_hash;</span><br><span class="line">protected $_csrf_expire =7200;</span><br><span class="line">protected $_csrf_token_name =&apos;ci_csrf_token&apos;;</span><br><span class="line">protected $_csrf_cookie_name =&apos;ci_csrf_token&apos;;</span><br><span class="line">protected $_never_allowed_str =array(</span><br><span class="line">    &apos;document.cookie&apos; =&gt; &apos;[removed]&apos;,</span><br><span class="line">    &apos;(document).cookie&apos; =&gt; &apos;[removed]&apos;,</span><br><span class="line">    &apos;document.write&apos;  =&gt; &apos;[removed]&apos;,</span><br><span class="line">    &apos;(document).write&apos;  =&gt; &apos;[removed]&apos;,</span><br><span class="line">    &apos;.parentNode&apos;     =&gt; &apos;[removed]&apos;,</span><br><span class="line">    &apos;.innerHTML&apos;      =&gt; &apos;[removed]&apos;,</span><br><span class="line">    &apos;-moz-binding&apos;    =&gt; &apos;[removed]&apos;,</span><br><span class="line">    &apos;&lt;!--&apos;            =&gt; &apos;&amp;lt;!--&apos;,</span><br><span class="line">    &apos;--&gt;&apos;             =&gt; &apos;--&amp;gt;&apos;,</span><br><span class="line">    &apos;&lt;![CDATA[&apos;       =&gt; &apos;&amp;lt;![CDATA[&apos;,</span><br><span class="line">    &apos;&lt;comment&gt;&apos;  =&gt; &apos;&amp;lt;comment&amp;gt;&apos;,</span><br><span class="line">    &apos;&lt;%&apos;              =&gt; &apos;&amp;lt;&amp;#37;&apos;</span><br><span class="line">);</span><br><span class="line">protected $_never_allowed_regex = array(</span><br><span class="line">    &apos;javascript\s*:&apos;,</span><br><span class="line">    &apos;(\(?document\)?|\(?window\)?(\.document)?)\.(location|on\w*)&apos;,</span><br><span class="line">    &apos;expression\s*(\(|&amp;\#40;)&apos;, // CSS and IE</span><br><span class="line">    &apos;vbscript\s*:&apos;, // IE, surprise!</span><br><span class="line">    &apos;wscript\s*:&apos;, // IE</span><br><span class="line">    &apos;jscript\s*:&apos;, // IE</span><br><span class="line">    &apos;vbs\s*:&apos;, // IE</span><br><span class="line">    &apos;Redirect\s+30\d&apos;,</span><br><span class="line">    &quot;([\&quot;&apos;])?data\s*:[^\\1]*?base64[^\\1]*?,[^\\1]*?\\1?&quot;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">public function __construct()</span><br><span class="line">&#123;</span><br><span class="line">    if (config_item(&apos;csrf_protection&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        foreach (array(&apos;csrf_expire&apos;, &apos;csrf_token_name&apos;, &apos;csrf_cookie_name&apos;) as $key)</span><br><span class="line">        &#123;</span><br><span class="line">            if (NULL !== ($val = config_item($key)))</span><br><span class="line">            &#123;</span><br><span class="line">                $this-&gt;&#123;&apos;_&apos;.$key&#125; = $val;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if ($cookie_prefix = config_item(&apos;cookie_prefix&apos;))</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;_csrf_cookie_name = $cookie_prefix.$this-&gt;_csrf_cookie_name;</span><br><span class="line">        &#125;</span><br><span class="line">        $this-&gt;_csrf_set_hash();</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;charset = strtoupper(config_item(&apos;charset&apos;));</span><br><span class="line">    log_message(&apos;info&apos;, &apos;Security Class Initialized&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="csrf-verify"><a href="#csrf-verify" class="headerlink" title="csrf_verify()"></a>csrf_verify()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">public function csrf_verify()</span><br><span class="line">&#123;</span><br><span class="line">    if (strtoupper($_SERVER[&apos;REQUEST_METHOD&apos;]) !== &apos;POST&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;csrf_set_cookie();</span><br><span class="line">    &#125;</span><br><span class="line">    if ($exclude_uris = config_item(&apos;csrf_exclude_uris&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        $uri = load_class(&apos;URI&apos;, &apos;core&apos;);</span><br><span class="line">        foreach ($exclude_uris as $excluded)</span><br><span class="line">        &#123;</span><br><span class="line">            if (preg_match(&apos;#^&apos;.$excluded.&apos;$#i&apos;.(UTF8_ENABLED ? &apos;u&apos; : &apos;&apos;), $uri-&gt;uri_string()))</span><br><span class="line">            &#123;</span><br><span class="line">                return $this;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $valid = isset($_POST[$this-&gt;_csrf_token_name], $_COOKIE[$this-&gt;_csrf_cookie_name])</span><br><span class="line">        &amp;&amp; hash_equals($_POST[$this-&gt;_csrf_token_name], $_COOKIE[$this-&gt;_csrf_cookie_name]);</span><br><span class="line">    unset($_POST[$this-&gt;_csrf_token_name]);</span><br><span class="line">    if (config_item(&apos;csrf_regenerate&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        unset($_COOKIE[$this-&gt;_csrf_cookie_name]);</span><br><span class="line">        $this-&gt;_csrf_hash = NULL;</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;_csrf_set_hash();</span><br><span class="line">    $this-&gt;csrf_set_cookie();</span><br><span class="line">    if ($valid !== TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;csrf_show_error();</span><br><span class="line">    &#125;</span><br><span class="line">    log_message(&apos;info&apos;, &apos;CSRF token verified&apos;);</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="csrf-set-cookie"><a href="#csrf-set-cookie" class="headerlink" title="csrf_set_cookie()"></a>csrf_set_cookie()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">public function csrf_set_cookie()</span><br><span class="line">&#123;</span><br><span class="line">    $expire = time() + $this-&gt;_csrf_expire;</span><br><span class="line">    $secure_cookie = (bool) config_item(&apos;cookie_secure&apos;);</span><br><span class="line"></span><br><span class="line">    if ($secure_cookie &amp;&amp; ! is_https())</span><br><span class="line">    &#123;</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    setcookie(</span><br><span class="line">        $this-&gt;_csrf_cookie_name,</span><br><span class="line">        $this-&gt;_csrf_hash,</span><br><span class="line">        $expire,</span><br><span class="line">        config_item(&apos;cookie_path&apos;),</span><br><span class="line">        config_item(&apos;cookie_domain&apos;),</span><br><span class="line">        $secure_cookie,</span><br><span class="line">        config_item(&apos;cookie_httponly&apos;)</span><br><span class="line">    );</span><br><span class="line">    log_message(&apos;info&apos;, &apos;CSRF cookie sent&apos;);</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="csrf-show-error"><a href="#csrf-show-error" class="headerlink" title="csrf_show_error()"></a>csrf_show_error()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function csrf_show_error()</span><br><span class="line">&#123;</span><br><span class="line">    show_error(&apos;The action you have requested is not allowed.&apos;, 403);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get-csrf-hash"><a href="#get-csrf-hash" class="headerlink" title="get_csrf_hash()"></a>get_csrf_hash()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function get_csrf_hash()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_csrf_hash;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get-csrf-token-name"><a href="#get-csrf-token-name" class="headerlink" title="get_csrf_token_name()"></a>get_csrf_token_name()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function get_csrf_token_name()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_csrf_token_name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="xss-clean"><a href="#xss-clean" class="headerlink" title="xss_clean()"></a>xss_clean()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">public function xss_clean($str, $is_image = FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    if (is_array($str))</span><br><span class="line">    &#123;</span><br><span class="line">        foreach ($str as $key =&gt; &amp;$value)</span><br><span class="line">        &#123;</span><br><span class="line">            $str[$key] = $this-&gt;xss_clean($value);</span><br><span class="line">        &#125;</span><br><span class="line">        return $str;</span><br><span class="line">    &#125;</span><br><span class="line">    $str = remove_invisible_characters($str);</span><br><span class="line">    if (stripos($str, &apos;%&apos;) !== false)</span><br><span class="line">    &#123;</span><br><span class="line">        do</span><br><span class="line">        &#123;</span><br><span class="line">            $oldstr = $str;</span><br><span class="line">            $str = rawurldecode($str);</span><br><span class="line">            $str = preg_replace_callback(&apos;#%(?:\s*[0-9a-f])&#123;2,&#125;#i&apos;, array($this, &apos;_urldecodespaces&apos;), $str);</span><br><span class="line">        &#125;</span><br><span class="line">        while ($oldstr !== $str);</span><br><span class="line">        unset($oldstr);</span><br><span class="line">    &#125;</span><br><span class="line">    $str = preg_replace_callback(&quot;/[^a-z0-9&gt;]+[a-z0-9]+=([\&apos;\&quot;]).*?\\1/si&quot;, array($this, &apos;_convert_attribute&apos;), $str);</span><br><span class="line">    $str = preg_replace_callback(&apos;/&lt;\w+.*/si&apos;, array($this, &apos;_decode_entity&apos;), $str);</span><br><span class="line">    $str = remove_invisible_characters($str);</span><br><span class="line">    $str = str_replace(&quot;\t&quot;, &apos; &apos;, $str);</span><br><span class="line">    $converted_string = $str;</span><br><span class="line">    $str = $this-&gt;_do_never_allowed($str);</span><br><span class="line">    if ($is_image === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $str = preg_replace(&apos;/&lt;\?(php)/i&apos;, &apos;&amp;lt;?\\1&apos;, $str);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $str = str_replace(array(&apos;&lt;?&apos;, &apos;?&apos;.&apos;&gt;&apos;), array(&apos;&amp;lt;?&apos;, &apos;?&amp;gt;&apos;), $str);</span><br><span class="line">    &#125;</span><br><span class="line">    $words = array(</span><br><span class="line">        &apos;javascript&apos;, &apos;expression&apos;, &apos;vbscript&apos;, &apos;jscript&apos;, &apos;wscript&apos;,</span><br><span class="line">        &apos;vbs&apos;, &apos;script&apos;, &apos;base64&apos;, &apos;applet&apos;, &apos;alert&apos;, &apos;document&apos;,</span><br><span class="line">        &apos;write&apos;, &apos;cookie&apos;, &apos;window&apos;, &apos;confirm&apos;, &apos;prompt&apos;, &apos;eval&apos;</span><br><span class="line">    );</span><br><span class="line">    foreach ($words as $word)</span><br><span class="line">    &#123;</span><br><span class="line">        $word = implode(&apos;\s*&apos;, str_split($word)).&apos;\s*&apos;;</span><br><span class="line">        $str = preg_replace_callback(&apos;#(&apos;.substr($word, 0, -3).&apos;)(\W)#is&apos;, array($this, &apos;_compact_exploded_words&apos;), $str);</span><br><span class="line">    &#125;</span><br><span class="line">    do</span><br><span class="line">    &#123;</span><br><span class="line">        $original = $str;</span><br><span class="line">        if (preg_match(&apos;/&lt;a/i&apos;, $str))</span><br><span class="line">        &#123;</span><br><span class="line">            $str = preg_replace_callback(&apos;#&lt;a(?:rea)?[^a-z0-9&gt;]+([^&gt;]*?)(?:&gt;|$)#si&apos;, array($this, &apos;_js_link_removal&apos;), $str);</span><br><span class="line">        &#125;</span><br><span class="line">        if (preg_match(&apos;/&lt;img/i&apos;, $str))</span><br><span class="line">        &#123;</span><br><span class="line">            $str = preg_replace_callback(&apos;#&lt;img[^a-z0-9]+([^&gt;]*?)(?:\s?/?&gt;|$)#si&apos;, array($this, &apos;_js_img_removal&apos;), $str);</span><br><span class="line">        &#125;</span><br><span class="line">        if (preg_match(&apos;/script|xss/i&apos;, $str))</span><br><span class="line">        &#123;</span><br><span class="line">            $str = preg_replace(&apos;#&lt;/*(?:script|xss).*?&gt;#si&apos;, &apos;[removed]&apos;, $str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    while ($original !== $str);</span><br><span class="line">    unset($original);</span><br><span class="line">    $pattern = &apos;#&apos;</span><br><span class="line">        .&apos;&lt;((?&lt;slash&gt;/*\s*)((?&lt;tagName&gt;[a-z0-9]+)(?=[^a-z0-9]|$)|.+)&apos; // tag start and name, followed by a non-tag character</span><br><span class="line">        .&apos;[^\s\042\047a-z0-9&gt;/=]*&apos; // a valid attribute character immediately after the tag would count as a separator</span><br><span class="line">        // optional attributes</span><br><span class="line">        .&apos;(?&lt;attributes&gt;(?:[\s\042\047/=]*&apos; // non-attribute characters, excluding &gt; (tag close) for obvious reasons</span><br><span class="line">        .&apos;[^\s\042\047&gt;/=]+&apos; // attribute characters</span><br><span class="line">        // optional attribute-value</span><br><span class="line">            .&apos;(?:\s*=&apos; // attribute-value separator</span><br><span class="line">                .&apos;(?:[^\s\042\047=&gt;&lt;`]+|\s*\042[^\042]*\042|\s*\047[^\047]*\047|\s*(?U:[^\s\042\047=&gt;&lt;`]*))&apos; // single, double or non-quoted value</span><br><span class="line">            .&apos;)?&apos; // end optional attribute-value group</span><br><span class="line">        .&apos;)*)&apos; // end optional attributes group</span><br><span class="line">        .&apos;[^&gt;]*)(?&lt;closeTag&gt;\&gt;)?#isS&apos;;</span><br><span class="line">    do</span><br><span class="line">    &#123;</span><br><span class="line">        $old_str = $str;</span><br><span class="line">        $str = preg_replace_callback($pattern, array($this, &apos;_sanitize_naughty_html&apos;), $str);</span><br><span class="line">    &#125;</span><br><span class="line">    while ($old_str !== $str);</span><br><span class="line">    unset($old_str);</span><br><span class="line">    $str = preg_replace(</span><br><span class="line">        &apos;#(alert|prompt|confirm|cmd|passthru|eval|exec|expression|system|fopen|fsockopen|file|file_get_contents|readfile|unlink)(\s*)\((.*?)\)#si&apos;,</span><br><span class="line">        &apos;\\1\\2&amp;#40;\\3&amp;#41;&apos;,</span><br><span class="line">        $str</span><br><span class="line">    );</span><br><span class="line">    $str = preg_replace(</span><br><span class="line">        &apos;#(alert|prompt|confirm|cmd|passthru|eval|exec|expression|system|fopen|fsockopen|file|file_get_contents|readfile|unlink)(\s*)`(.*?)`#si&apos;,</span><br><span class="line">        &apos;\\1\\2&amp;#96;\\3&amp;#96;&apos;,</span><br><span class="line">        $str</span><br><span class="line">    );</span><br><span class="line">    $str = $this-&gt;_do_never_allowed($str);</span><br><span class="line">    if ($is_image === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        return ($str === $converted_string);</span><br><span class="line">    &#125;</span><br><span class="line">    return $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="xss-hash"><a href="#xss-hash" class="headerlink" title="xss_hash()"></a>xss_hash()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public function xss_hash()</span><br><span class="line">&#123;</span><br><span class="line">    if ($this-&gt;_xss_hash === NULL)</span><br><span class="line">    &#123;</span><br><span class="line">        $rand = $this-&gt;get_random_bytes(16);</span><br><span class="line">        $this-&gt;_xss_hash = ($rand === FALSE)</span><br><span class="line">            ? md5(uniqid(mt_rand(), TRUE))</span><br><span class="line">            : bin2hex($rand);</span><br><span class="line">    &#125;</span><br><span class="line">    return $this-&gt;_xss_hash;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get-random-bytes"><a href="#get-random-bytes" class="headerlink" title="get_random_bytes()"></a>get_random_bytes()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">public function get_random_bytes($length)</span><br><span class="line">&#123;</span><br><span class="line">    if (empty($length) OR ! ctype_digit((string) $length))</span><br><span class="line">    &#123;</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    if (function_exists(&apos;random_bytes&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        try</span><br><span class="line">        &#123;</span><br><span class="line">            return random_bytes((int) $length);</span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception $e)</span><br><span class="line">        &#123;</span><br><span class="line">            log_message(&apos;error&apos;, $e-&gt;getMessage());</span><br><span class="line">            return FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if (defined(&apos;MCRYPT_DEV_URANDOM&apos;) &amp;&amp; ($output = mcrypt_create_iv($length, MCRYPT_DEV_URANDOM)) !== FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        return $output;</span><br><span class="line">    &#125;</span><br><span class="line">    if (is_readable(&apos;/dev/urandom&apos;) &amp;&amp; ($fp = fopen(&apos;/dev/urandom&apos;, &apos;rb&apos;)) !== FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        is_php(&apos;5.4&apos;) &amp;&amp; stream_set_chunk_size($fp, $length);</span><br><span class="line">        $output = fread($fp, $length);</span><br><span class="line">        fclose($fp);</span><br><span class="line">        if ($output !== FALSE)</span><br><span class="line">        &#123;</span><br><span class="line">            return $output;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if (function_exists(&apos;openssl_random_pseudo_bytes&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        return openssl_random_pseudo_bytes($length);</span><br><span class="line">    &#125;</span><br><span class="line">    return FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="entity-decode"><a href="#entity-decode" class="headerlink" title="entity_decode()"></a>entity_decode()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">public function entity_decode($str, $charset = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    if (strpos($str, &apos;&amp;&apos;) === FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        return $str;</span><br><span class="line">    &#125;</span><br><span class="line">    static $_entities;</span><br><span class="line">    isset($charset) OR $charset = $this-&gt;charset;</span><br><span class="line">    $flag = is_php(&apos;5.4&apos;)</span><br><span class="line">        ? ENT_COMPAT | ENT_HTML5</span><br><span class="line">        : ENT_COMPAT;</span><br><span class="line">    if ( ! isset($_entities))</span><br><span class="line">    &#123;</span><br><span class="line">        $_entities = array_map(&apos;strtolower&apos;, get_html_translation_table(HTML_ENTITIES, $flag, $charset));</span><br><span class="line">        if ($flag === ENT_COMPAT)</span><br><span class="line">        &#123;</span><br><span class="line">            $_entities[&apos;:&apos;] = &apos;&amp;colon;&apos;;</span><br><span class="line">            $_entities[&apos;(&apos;] = &apos;&amp;lpar;&apos;;</span><br><span class="line">            $_entities[&apos;)&apos;] = &apos;&amp;rpar;&apos;;</span><br><span class="line">            $_entities[&quot;\n&quot;] = &apos;&amp;NewLine;&apos;;</span><br><span class="line">            $_entities[&quot;\t&quot;] = &apos;&amp;Tab;&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    do</span><br><span class="line">    &#123;</span><br><span class="line">        $str_compare = $str;</span><br><span class="line">        if (preg_match_all(&apos;/&amp;[a-z]&#123;2,&#125;(?![a-z;])/i&apos;, $str, $matches))</span><br><span class="line">        &#123;</span><br><span class="line">            $replace = array();</span><br><span class="line">            $matches = array_unique(array_map(&apos;strtolower&apos;, $matches[0]));</span><br><span class="line">            foreach ($matches as &amp;$match)</span><br><span class="line">            &#123;</span><br><span class="line">                if (($char = array_search($match.&apos;;&apos;, $_entities, TRUE)) !== FALSE)</span><br><span class="line">                &#123;</span><br><span class="line">                    $replace[$match] = $char;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $str = str_replace(array_keys($replace), array_values($replace), $str);</span><br><span class="line">        &#125;</span><br><span class="line">        $str = html_entity_decode(</span><br><span class="line">            preg_replace(&apos;/(&amp;#(?:x0*[0-9a-f]&#123;2,5&#125;(?![0-9a-f;])|(?:0*\d&#123;2,4&#125;(?![0-9;]))))/iS&apos;, &apos;$1;&apos;, $str),</span><br><span class="line">            $flag,</span><br><span class="line">            $charset</span><br><span class="line">        );</span><br><span class="line">        if ($flag === ENT_COMPAT)</span><br><span class="line">        &#123;</span><br><span class="line">            $str = str_replace(array_values($_entities), array_keys($_entities), $str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    while ($str_compare !== $str);</span><br><span class="line">    return $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="sanitize-filename"><a href="#sanitize-filename" class="headerlink" title="sanitize_filename()"></a>sanitize_filename()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public function sanitize_filename($str, $relative_path = FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    $bad = $this-&gt;filename_bad_chars;</span><br><span class="line">    if ( ! $relative_path)</span><br><span class="line">    &#123;</span><br><span class="line">        $bad[] = &apos;./&apos;;</span><br><span class="line">        $bad[] = &apos;/&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    $str = remove_invisible_characters($str, FALSE);</span><br><span class="line">    do</span><br><span class="line">    &#123;</span><br><span class="line">        $old = $str;</span><br><span class="line">        $str = str_replace($bad, &apos;&apos;, $str);</span><br><span class="line">    &#125;</span><br><span class="line">    while ($old !== $str);</span><br><span class="line">    return stripslashes($str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="strip-image-tags"><a href="#strip-image-tags" class="headerlink" title="strip_image_tags()"></a>strip_image_tags()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public function strip_image_tags($str)</span><br><span class="line">&#123;</span><br><span class="line">    return preg_replace(</span><br><span class="line">        array(</span><br><span class="line">            &apos;#&lt;img[\s/]+.*?src\s*=\s*([&quot;\&apos;])([^\\1]+?)\\1.*?\&gt;#i&apos;,</span><br><span class="line">            &apos;#&lt;img[\s/]+.*?src\s*=\s*?(([^\s&quot;\&apos;=&lt;&gt;`]+)).*?\&gt;#i&apos;</span><br><span class="line">        ),</span><br><span class="line">        &apos;\\2&apos;,</span><br><span class="line">        $str</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="urldecodespaces"><a href="#urldecodespaces" class="headerlink" title="_urldecodespaces()"></a>_urldecodespaces()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">protected function _urldecodespaces($matches)</span><br><span class="line">&#123;</span><br><span class="line">    $input    = $matches[0];</span><br><span class="line">    $nospaces = preg_replace(&apos;#\s+#&apos;, &apos;&apos;, $input);</span><br><span class="line">    return ($nospaces === $input)</span><br><span class="line">        ? $input</span><br><span class="line">        : rawurldecode($nospaces);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="compact-exploded-words"><a href="#compact-exploded-words" class="headerlink" title="_compact_exploded_words()"></a>_compact_exploded_words()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">protected function _compact_exploded_words($matches)</span><br><span class="line">&#123;</span><br><span class="line">    return preg_replace(&apos;/\s+/s&apos;, &apos;&apos;, $matches[1]).$matches[2];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="sanitize-naughty-html"><a href="#sanitize-naughty-html" class="headerlink" title="_sanitize_naughty_html()"></a>_sanitize_naughty_html()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">protected function _sanitize_naughty_html($matches)</span><br><span class="line">&#123;</span><br><span class="line">    static $naughty_tags    = array(</span><br><span class="line">        &apos;alert&apos;, &apos;area&apos;, &apos;prompt&apos;, &apos;confirm&apos;, &apos;applet&apos;, &apos;audio&apos;, &apos;basefont&apos;, &apos;base&apos;, &apos;behavior&apos;, &apos;bgsound&apos;,</span><br><span class="line">        &apos;blink&apos;, &apos;body&apos;, &apos;embed&apos;, &apos;expression&apos;, &apos;form&apos;, &apos;frameset&apos;, &apos;frame&apos;, &apos;head&apos;, &apos;html&apos;, &apos;ilayer&apos;,</span><br><span class="line">        &apos;iframe&apos;, &apos;input&apos;, &apos;button&apos;, &apos;select&apos;, &apos;isindex&apos;, &apos;layer&apos;, &apos;link&apos;, &apos;meta&apos;, &apos;keygen&apos;, &apos;object&apos;,</span><br><span class="line">        &apos;plaintext&apos;, &apos;style&apos;, &apos;script&apos;, &apos;textarea&apos;, &apos;title&apos;, &apos;math&apos;, &apos;video&apos;, &apos;svg&apos;, &apos;xml&apos;, &apos;xss&apos;</span><br><span class="line">    );</span><br><span class="line">    static $evil_attributes = array(</span><br><span class="line">        &apos;on\w+&apos;, &apos;style&apos;, &apos;xmlns&apos;, &apos;formaction&apos;, &apos;form&apos;, &apos;xlink:href&apos;, &apos;FSCommand&apos;, &apos;seekSegmentTime&apos;</span><br><span class="line">    );</span><br><span class="line">    if (empty($matches[&apos;closeTag&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        return &apos;&amp;lt;&apos;.$matches[1];</span><br><span class="line">    &#125;</span><br><span class="line">    elseif (in_array(strtolower($matches[&apos;tagName&apos;]), $naughty_tags, TRUE))</span><br><span class="line">    &#123;</span><br><span class="line">        return &apos;&amp;lt;&apos;.$matches[1].&apos;&amp;gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    elseif (isset($matches[&apos;attributes&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        $attributes = array();</span><br><span class="line">        $attributes_pattern = &apos;#&apos;</span><br><span class="line">            .&apos;(?&lt;name&gt;[^\s\042\047&gt;/=]+)&apos; // attribute characters</span><br><span class="line">            // optional attribute-value</span><br><span class="line">            .&apos;(?:\s*=(?&lt;value&gt;[^\s\042\047=&gt;&lt;`]+|\s*\042[^\042]*\042|\s*\047[^\047]*\047|\s*(?U:[^\s\042\047=&gt;&lt;`]*)))&apos; // attribute-value separator</span><br><span class="line">            .&apos;#i&apos;;</span><br><span class="line">        $is_evil_pattern = &apos;#^(&apos;.implode(&apos;|&apos;, $evil_attributes).&apos;)$#i&apos;;</span><br><span class="line">        do</span><br><span class="line">        &#123;</span><br><span class="line">            $matches[&apos;attributes&apos;] = preg_replace(&apos;#^[^a-z]+#i&apos;, &apos;&apos;, $matches[&apos;attributes&apos;]);</span><br><span class="line">            if ( ! preg_match($attributes_pattern, $matches[&apos;attributes&apos;], $attribute, PREG_OFFSET_CAPTURE))</span><br><span class="line">            &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            if (</span><br><span class="line">                preg_match($is_evil_pattern, $attribute[&apos;name&apos;][0])</span><br><span class="line">                OR (trim($attribute[&apos;value&apos;][0]) === &apos;&apos;)</span><br><span class="line">            )</span><br><span class="line">            &#123;</span><br><span class="line">                $attributes[] = &apos;xss=removed&apos;;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                $attributes[] = $attribute[0][0];</span><br><span class="line">            &#125;</span><br><span class="line">            $matches[&apos;attributes&apos;] = substr($matches[&apos;attributes&apos;], $attribute[0][1] + strlen($attribute[0][0]));</span><br><span class="line">        &#125;</span><br><span class="line">        while ($matches[&apos;attributes&apos;] !== &apos;&apos;);</span><br><span class="line">        $attributes = empty($attributes)</span><br><span class="line">            ? &apos;&apos;</span><br><span class="line">            : &apos; &apos;.implode(&apos; &apos;, $attributes);</span><br><span class="line">        return &apos;&lt;&apos;.$matches[&apos;slash&apos;].$matches[&apos;tagName&apos;].$attributes.&apos;&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    return $matches[0];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="js-link-removal"><a href="#js-link-removal" class="headerlink" title="_js_link_removal()"></a>_js_link_removal()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">protected function _js_link_removal($match)</span><br><span class="line">&#123;</span><br><span class="line">    return str_replace(</span><br><span class="line">        $match[1],</span><br><span class="line">        preg_replace(</span><br><span class="line">            &apos;#href=.*?(?:(?:alert|prompt|confirm)(?:\(|&amp;\#40;|`|&amp;\#96;)|javascript:|livescript:|mocha:|charset=|window\.|\(?document\)?\.|\.cookie|&lt;script|&lt;xss|d\s*a\s*t\s*a\s*:)#si&apos;,</span><br><span class="line">            &apos;&apos;,</span><br><span class="line">            $this-&gt;_filter_attributes($match[1])</span><br><span class="line">        ),</span><br><span class="line">        $match[0]</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="js-img-removal"><a href="#js-img-removal" class="headerlink" title="_js_img_removal()"></a>_js_img_removal()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">protected function _js_img_removal($match)</span><br><span class="line">&#123;</span><br><span class="line">    return str_replace(</span><br><span class="line">        $match[1],</span><br><span class="line">        preg_replace(</span><br><span class="line">            &apos;#src=.*?(?:(?:alert|prompt|confirm|eval)(?:\(|&amp;\#40;|`|&amp;\#96;)|javascript:|livescript:|mocha:|charset=|window\.|\(?document\)?\.|\.cookie|&lt;script|&lt;xss|base64\s*,)#si&apos;,</span><br><span class="line">            &apos;&apos;,</span><br><span class="line">            $this-&gt;_filter_attributes($match[1])</span><br><span class="line">        ),</span><br><span class="line">        $match[0]</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="convert-attribute"><a href="#convert-attribute" class="headerlink" title="_convert_attribute()"></a>_convert_attribute()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">protected function _convert_attribute($match)</span><br><span class="line">&#123;</span><br><span class="line">    return str_replace(array(&apos;&gt;&apos;, &apos;&lt;&apos;, &apos;\\&apos;), array(&apos;&amp;gt;&apos;, &apos;&amp;lt;&apos;, &apos;\\\\&apos;), $match[0]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="filter-attributes"><a href="#filter-attributes" class="headerlink" title="_filter_attributes()"></a>_filter_attributes()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">protected function _filter_attributes($str)</span><br><span class="line">&#123;</span><br><span class="line">    $out = &apos;&apos;;</span><br><span class="line">    if (preg_match_all(&apos;#\s*[a-z\-]+\s*=\s*(\042|\047)([^\\1]*?)\\1#is&apos;, $str, $matches))</span><br><span class="line">    &#123;</span><br><span class="line">        foreach ($matches[0] as $match)</span><br><span class="line">        &#123;</span><br><span class="line">            $out .= preg_replace(&apos;#/\*.*?\*/#s&apos;, &apos;&apos;, $match);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $out;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="decode-entity"><a href="#decode-entity" class="headerlink" title="_decode_entity()"></a>_decode_entity()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">protected function _decode_entity($match)</span><br><span class="line">&#123;</span><br><span class="line">    $match = preg_replace(&apos;|\&amp;([a-z\_0-9\-]+)\=([a-z\_0-9\-/]+)|i&apos;, $this-&gt;xss_hash().&apos;\\1=\\2&apos;, $match[0]);</span><br><span class="line">    return str_replace(</span><br><span class="line">        $this-&gt;xss_hash(),</span><br><span class="line">        &apos;&amp;&apos;,</span><br><span class="line">        $this-&gt;entity_decode($match, $this-&gt;charset)</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="do-never-allowed"><a href="#do-never-allowed" class="headerlink" title="_do_never_allowed()"></a>_do_never_allowed()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">protected function _do_never_allowed($str)</span><br><span class="line">&#123;</span><br><span class="line">    $str = str_replace(array_keys($this-&gt;_never_allowed_str), $this-&gt;_never_allowed_str, $str);</span><br><span class="line">    foreach ($this-&gt;_never_allowed_regex as $regex)</span><br><span class="line">    &#123;</span><br><span class="line">        $str = preg_replace(&apos;#&apos;.$regex.&apos;#is&apos;, &apos;[removed]&apos;, $str);</span><br><span class="line">    &#125;</span><br><span class="line">    return $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="csrf-set-hash"><a href="#csrf-set-hash" class="headerlink" title="_csrf_set_hash()"></a>_csrf_set_hash()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">protected function _csrf_set_hash()</span><br><span class="line">&#123;</span><br><span class="line">    if ($this-&gt;_csrf_hash === NULL)</span><br><span class="line">    &#123;</span><br><span class="line">        if (isset($_COOKIE[$this-&gt;_csrf_cookie_name]) &amp;&amp; is_string($_COOKIE[$this-&gt;_csrf_cookie_name])</span><br><span class="line">            &amp;&amp; preg_match(&apos;#^[0-9a-f]&#123;32&#125;$#iS&apos;, $_COOKIE[$this-&gt;_csrf_cookie_name]) === 1)</span><br><span class="line">        &#123;</span><br><span class="line">            return $this-&gt;_csrf_hash = $_COOKIE[$this-&gt;_csrf_cookie_name];</span><br><span class="line">        &#125;</span><br><span class="line">        $rand = $this-&gt;get_random_bytes(16);</span><br><span class="line">        $this-&gt;_csrf_hash = ($rand === FALSE)</span><br><span class="line">            ? md5(uniqid(mt_rand(), TRUE))</span><br><span class="line">            : bin2hex($rand);</span><br><span class="line">    &#125;</span><br><span class="line">    return $this-&gt;_csrf_hash;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81MjkzNjQwMg==" title="https://blog.csdn.net/Zhihua_W/article/details/52936402">CI框架源码解析十一之安全类文件Security.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter输出类Output.php</title>
      <link href="/2020/02/04/codeigniter-output/"/>
      <url>/2020/02/04/codeigniter-output/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>该类主要功能负责向浏览器输出最终结果，其中包括从缓存加载内容输出，根据控制器方法产生的内容输出，还包括写缓存、设置头信息、加载CI内部分析器。该类有11个成员变量和18个成员方法。下面逐个分析。</p><a id="more"></a><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public $final_output;</span><br><span class="line">public $cache_expiration = 0;</span><br><span class="line">public $headers = array();</span><br><span class="line">public $mimes =array();</span><br><span class="line">protected $mime_type = &apos;text/html&apos;;</span><br><span class="line">public $enable_profiler = FALSE;</span><br><span class="line">protected $_zlib_oc = FALSE;</span><br><span class="line">protected $_compress_output = FALSE;</span><br><span class="line">protected $_profiler_sections =array();</span><br><span class="line">public $parse_exec_vars = TRUE;</span><br><span class="line">protected static $func_overload;</span><br></pre></td></tr></table></figure><p>$final_output表示最终输出结果字符串。<br>$cache_expiration表示缓存有效时间。<br>$headers用于存放头信息。<br>$mimes用于存放从配置文件中读取的mime列表。<br>$mime_type表示当前页面的mime类型。<br>$enable_profiler表示性能分析器开关。<br>$_zlib_oc表示Gzip压缩开关。<br>$_compress_output表示CI压缩开关。<br>$_profiler_sections表示分析器模块。<br>$parse_exec_vars表示分析器解析变量开关，比如解析<code>{elapsed_time}</code>、<code>{memory_usage}</code>等。<br>$func_overload表示启用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvbWJzdHJpbmcub3ZlcmxvYWQucGhw" title="https://www.php.net/manual/zh/mbstring.overload.php">函数重载功能<i class="fa fa-external-link"></i></span>开关。</p><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public function __construct()</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;_zlib_oc = (bool) ini_get(&apos;zlib.output_compression&apos;);</span><br><span class="line">    $this-&gt;_compress_output = (</span><br><span class="line">        $this-&gt;_zlib_oc === FALSE</span><br><span class="line">        &amp;&amp; config_item(&apos;compress_output&apos;) === TRUE</span><br><span class="line">        &amp;&amp; extension_loaded(&apos;zlib&apos;)</span><br><span class="line">    );</span><br><span class="line">    isset(self::$func_overload) OR self::$func_overload = (extension_loaded(&apos;mbstring&apos;) &amp;&amp; ini_get(&apos;mbstring.func_overload&apos;));</span><br><span class="line">    $this-&gt;mimes =&amp; get_mimes();</span><br><span class="line">    log_message(&apos;info&apos;, &apos;Output Class Initialized&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在构造函数中，CI通过ini_get(‘zlib.output_compression’)获取当前php环境是否开启了GZIP压缩。如果PHP环境没有开启，那么判断配置文件中的压缩设置(compress_output=TRUE)，是不是要求框架压缩输出，如果要求的话，只要当前PHP是加载了zlib扩展的，那么就把$_compress_output标记设为TRUE。通常情况下，我们在使用过程中会开启WEB服务器的压缩功能，而关闭程序本身压缩功能。</p><hr><h4 id="get-output"><a href="#get-output" class="headerlink" title="get_output()"></a>get_output()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function get_output()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;final_output;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于获取最终输出信息。</p><hr><h4 id="set-output"><a href="#set-output" class="headerlink" title="set_output()"></a>set_output()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function set_output($output)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;final_output = $output;</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置$this-&gt;final_output允许你手工设置最终的输出字符串</p><hr><h4 id="append-output"><a href="#append-output" class="headerlink" title="append_output()"></a>append_output()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function append_output($output)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;final_output .= $output;</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于向输出字符串附加数据。</p><hr><h4 id="set-header"><a href="#set-header" class="headerlink" title="set_header()"></a>set_header()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public function set_header($header, $replace = TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    if ($this-&gt;_zlib_oc &amp;&amp; strncasecmp($header, &apos;content-length&apos;, 14) === 0)</span><br><span class="line">    &#123;</span><br><span class="line">        return $this;</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;headers[] = array($header, $replace);</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置头信息，如果php开启了zlib.output_compression压缩，就跳过content-length头的设置这样做的理由是当压缩开启后，实际输出字节数比正常少，误设content-length头后，会使得客户端一直等待服务器发送足够字节的文本，造成无法正常响应。</p><hr><h4 id="set-content-type"><a href="#set-content-type" class="headerlink" title="set_content_type()"></a>set_content_type()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">public function set_content_type($mime_type, $charset = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    if (strpos($mime_type, &apos;/&apos;) === FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        $extension = ltrim($mime_type, &apos;.&apos;);</span><br><span class="line">        if (isset($this-&gt;mimes[$extension]))</span><br><span class="line">        &#123;</span><br><span class="line">            $mime_type =&amp; $this-&gt;mimes[$extension];</span><br><span class="line">            if (is_array($mime_type))</span><br><span class="line">            &#123;</span><br><span class="line">                $mime_type = current($mime_type);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;mime_type = $mime_type;</span><br><span class="line">    if (empty($charset))</span><br><span class="line">    &#123;</span><br><span class="line">        $charset = config_item(&apos;charset&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    $header = &apos;Content-Type: &apos;.$mime_type</span><br><span class="line">        .(empty($charset) ? &apos;&apos; : &apos;; charset=&apos;.$charset);</span><br><span class="line"></span><br><span class="line">    $this-&gt;headers[] = array($header, TRUE);</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置页面的 MIME 类型，可以很方便的提供 JSON 数据、JPEG、XML 等等格式,通过$charset设置文档的字符集。$mime_type是要设置MIME信息的文件扩展名，系统从$mimes数组中找出对应扩展名中的MIME信息。</p><hr><h4 id="get-content-type"><a href="#get-content-type" class="headerlink" title="get_content_type()"></a>get_content_type()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public function get_content_type()</span><br><span class="line">&#123;</span><br><span class="line">    for ($i = 0, $c = count($this-&gt;headers); $i &lt; $c; $i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if (sscanf($this-&gt;headers[$i][0], &apos;Content-Type: %[^;]&apos;, $content_type) === 1)</span><br><span class="line">        &#123;</span><br><span class="line">            return $content_type;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return &apos;text/html&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法获取当前正在使用的 HTTP 头 Content-Type ，不包含字符集部分。从一堆header信息中匹配Content-Type信息，找到了就返回其中的MIME值，没找到，就返回默认的text/html。</p><hr><h4 id="get-header"><a href="#get-header" class="headerlink" title="get_header()"></a>get_header()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public function get_header($header)</span><br><span class="line">&#123;</span><br><span class="line">    $headers = array_merge(</span><br><span class="line">        array_map(&apos;array_shift&apos;, $this-&gt;headers),</span><br><span class="line">        headers_list()</span><br><span class="line">    );</span><br><span class="line">    if (empty($headers) OR empty($header))</span><br><span class="line">    &#123;</span><br><span class="line">        return NULL;</span><br><span class="line">    &#125;</span><br><span class="line">    for ($c = count($headers) - 1; $c &gt; -1; $c--)</span><br><span class="line">    &#123;</span><br><span class="line">        if (strncasecmp($header, $headers[$c], $l = self::strlen($header)) === 0)</span><br><span class="line">        &#123;</span><br><span class="line">            return trim(self::substr($headers[$c], $l+1));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return NULL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法返回请求的 HTTP 头，如果 HTTP 头还没设置，返回 NULL。</p><hr><h4 id="set-status-header"><a href="#set-status-header" class="headerlink" title="set_status_header()"></a>set_status_header()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function set_status_header($code = 200, $text = &apos;&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    set_status_header($code, $text);</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法设置头信息状态。</p><hr><h4 id="enable-profiler"><a href="#enable-profiler" class="headerlink" title="enable_profiler()"></a>enable_profiler()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function enable_profiler($val = TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;enable_profiler = is_bool($val) ? $val : TRUE;</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置禁用或开启分析器。</p><hr><h4 id="set-profiler-sections"><a href="#set-profiler-sections" class="headerlink" title="set_profiler_sections()"></a>set_profiler_sections()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public function set_profiler_sections($sections)</span><br><span class="line">&#123;</span><br><span class="line">    if (isset($sections[&apos;query_toggle_count&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_profiler_sections[&apos;query_toggle_count&apos;] = (int) $sections[&apos;query_toggle_count&apos;];</span><br><span class="line">        unset($sections[&apos;query_toggle_count&apos;]);</span><br><span class="line">    &#125;</span><br><span class="line">    foreach ($sections as $section =&gt; $enable)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_profiler_sections[$section] = ($enable !== FALSE);</span><br><span class="line">    &#125;</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置分析器的内容，该类允许你启用或禁用程序分析器，它可以在你的页面底部显示，基准测试的结果或其他一些数据帮助你调试和优化程序。</p><hr><h4 id="cache"><a href="#cache" class="headerlink" title="cache()"></a>cache()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function cache($time)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;cache_expiration = is_numeric($time) ? $time : 0;</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置缓存时长，开启文件缓存。</p><hr><h4 id="display"><a href="#display" class="headerlink" title="_display()"></a>_display()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">public function _display($output = &apos;&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    $BM =&amp; load_class(&apos;Benchmark&apos;, &apos;core&apos;);</span><br><span class="line">    $CFG =&amp; load_class(&apos;Config&apos;, &apos;core&apos;);</span><br><span class="line">    if (class_exists(&apos;CI_Controller&apos;, FALSE))</span><br><span class="line">    &#123;</span><br><span class="line">        $CI =&amp; get_instance();</span><br><span class="line">    &#125;</span><br><span class="line">    if ($output === &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $output =&amp; $this-&gt;final_output;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($this-&gt;cache_expiration &gt; 0 &amp;&amp; isset($CI) &amp;&amp; ! method_exists($CI, &apos;_output&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_write_cache($output);</span><br><span class="line">    &#125;</span><br><span class="line">    $elapsed = $BM-&gt;elapsed_time(&apos;total_execution_time_start&apos;, &apos;total_execution_time_end&apos;);</span><br><span class="line">    if ($this-&gt;parse_exec_vars === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $memory= round(memory_get_usage() / 1024 / 1024, 2).&apos;MB&apos;;</span><br><span class="line">        $output = str_replace(array(&apos;&#123;elapsed_time&#125;&apos;, &apos;&#123;memory_usage&#125;&apos;), array($elapsed, $memory), $output);</span><br><span class="line">    &#125;</span><br><span class="line">    if (isset($CI) // This means that we&apos;re not serving a cache file, if we were, it would already be compressed</span><br><span class="line">        &amp;&amp; $this-&gt;_compress_output === TRUE</span><br><span class="line">        &amp;&amp; isset($_SERVER[&apos;HTTP_ACCEPT_ENCODING&apos;]) &amp;&amp; strpos($_SERVER[&apos;HTTP_ACCEPT_ENCODING&apos;], &apos;gzip&apos;) !== FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        ob_start(&apos;ob_gzhandler&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    if (count($this-&gt;headers) &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        foreach ($this-&gt;headers as $header)</span><br><span class="line">        &#123;</span><br><span class="line">            @header($header[0], $header[1]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if ( ! isset($CI))</span><br><span class="line">    &#123;</span><br><span class="line">        if ($this-&gt;_compress_output === TRUE)</span><br><span class="line">        &#123;</span><br><span class="line">            if (isset($_SERVER[&apos;HTTP_ACCEPT_ENCODING&apos;]) &amp;&amp; strpos($_SERVER[&apos;HTTP_ACCEPT_ENCODING&apos;], &apos;gzip&apos;) !== FALSE)</span><br><span class="line">            &#123;</span><br><span class="line">                header(&apos;Content-Encoding: gzip&apos;);</span><br><span class="line">                header(&apos;Content-Length: &apos;.self::strlen($output));</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                $output = gzinflate(self::substr($output, 10, -8));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        echo $output;</span><br><span class="line">        log_message(&apos;info&apos;, &apos;Final output sent to browser&apos;);</span><br><span class="line">        log_message(&apos;debug&apos;, &apos;Total execution time: &apos;.$elapsed);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($this-&gt;enable_profiler === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $CI-&gt;load-&gt;library(&apos;profiler&apos;);</span><br><span class="line">        if ( ! empty($this-&gt;_profiler_sections))</span><br><span class="line">        &#123;</span><br><span class="line">            $CI-&gt;profiler-&gt;set_sections($this-&gt;_profiler_sections);</span><br><span class="line">        &#125;</span><br><span class="line">        $output = preg_replace(&apos;|&lt;/body&gt;.*?&lt;/html&gt;|is&apos;, &apos;&apos;, $output, -1, $count).$CI-&gt;profiler-&gt;run();</span><br><span class="line">        if ($count &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            $output .= &apos;&lt;/body&gt;&lt;/html&gt;&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if (method_exists($CI, &apos;_output&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        $CI-&gt;_output($output);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        echo $output; // Send it to the browser!</span><br><span class="line">    &#125;</span><br><span class="line">    log_message(&apos;info&apos;, &apos;Final output sent to browser&apos;);</span><br><span class="line">    log_message(&apos;debug&apos;, &apos;Total execution time: &apos;.$elapsed);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的功能主要是将最终结果输出到浏览器。功能实现：</p><ol><li>获取$BM、$CFG，注意这里使用的是load_class()而不直接用$CI =&amp; get_instance()，因为有时候本方法是被缓存机制调用的，这时候$CI超级对象还无法使用。</li><li>当然如果可能的话，获取超级对象$CI。</li><li>获取需要最终输出的字符串$output。当$CI对象存在时证明我们不是在从缓存输出数据，这时如果Controller没有自定义_output方法就需要写缓存(调<code>_write_cache方法</code>)。</li><li>如果分析器解析变量是开着的则替换系统的总体运行时间和内存消耗。</li><li>如果满足条件（$CI对象存在、支持压缩输出、本地服务器支持<code>gzip</code>编码）则打开输出缓冲。当输出缓冲激活后，脚本将不会输出内容（除http标头外），相反需要输出的内容被存储在内部缓冲区中。<code>ob_gzhandler()</code>目的是用在ob_start()中作回调函数，以方便将gz编码的数据发送到支持压缩页面的浏览器。在ob_gzhandler()真正发送压缩过的数据之前，该 函数会确定（判定）浏览器可以接受哪种类型内容编码（”gzip”,”deflate”,或者根本什么都不支持），然后 返回相应的输出。 所有可以发送正确头信息表明他自己可以接受压缩的网页的浏览器，都可以支持。</li><li>如果存放头信息的数组<code>headers</code>不为空则设置头信息。</li><li>如果没有超级控制器，可以证明当前是在处理一个缓存的输出。输出缓存内容并结束本函数。</li><li>如果开启了分析器模块，会生成一些报告到页面尾部用于辅助我们调试。这里使用Profile显示所有基准点的时间消耗，同时还会显示出提交的数据和数据库查询的信息。</li></ol><hr><h4 id="write-cache"><a href="#write-cache" class="headerlink" title="_write_cache()"></a>_write_cache()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">public function _write_cache($output)</span><br><span class="line">&#123;</span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line">    $path = $CI-&gt;config-&gt;item(&apos;cache_path&apos;);</span><br><span class="line">    $cache_path = ($path === &apos;&apos;) ? APPPATH.&apos;cache/&apos; : $path;</span><br><span class="line">    if ( ! is_dir($cache_path) OR ! is_really_writable($cache_path))</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(&apos;error&apos;, &apos;Unable to write cache file: &apos;.$cache_path);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    $uri = $CI-&gt;config-&gt;item(&apos;base_url&apos;)</span><br><span class="line">        .$CI-&gt;config-&gt;item(&apos;index_page&apos;)</span><br><span class="line">        .$CI-&gt;uri-&gt;uri_string();</span><br><span class="line"></span><br><span class="line">    if (($cache_query_string = $CI-&gt;config-&gt;item(&apos;cache_query_string&apos;)) &amp;&amp; ! empty($_SERVER[&apos;QUERY_STRING&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        if (is_array($cache_query_string))</span><br><span class="line">        &#123;</span><br><span class="line">            $uri .= &apos;?&apos;.http_build_query(array_intersect_key($_GET, array_flip($cache_query_string)));</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $uri .= &apos;?&apos;.$_SERVER[&apos;QUERY_STRING&apos;];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $cache_path .= md5($uri);</span><br><span class="line">    if ( ! $fp = @fopen($cache_path, &apos;w+b&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(&apos;error&apos;, &apos;Unable to write cache file: &apos;.$cache_path);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if ( ! flock($fp, LOCK_EX))</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(&apos;error&apos;, &apos;Unable to secure a file lock for file at: &apos;.$cache_path);</span><br><span class="line">        fclose($fp);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($this-&gt;_compress_output === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $output = gzencode($output);</span><br><span class="line"></span><br><span class="line">        if ($this-&gt;get_header(&apos;content-type&apos;) === NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;set_content_type($this-&gt;mime_type);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $expire = time() + ($this-&gt;cache_expiration * 60);</span><br><span class="line">    $cache_info = serialize(array(</span><br><span class="line">        &apos;expire&apos;=&gt; $expire,</span><br><span class="line">        &apos;headers&apos;=&gt; $this-&gt;headers</span><br><span class="line">    ));</span><br><span class="line">    $output = $cache_info.&apos;ENDCI---&gt;&apos;.$output;</span><br><span class="line">    for ($written = 0, $length = self::strlen($output); $written &lt; $length; $written += $result)</span><br><span class="line">    &#123;</span><br><span class="line">        if (($result = fwrite($fp, self::substr($output, $written))) === FALSE)</span><br><span class="line">        &#123;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    flock($fp, LOCK_UN);</span><br><span class="line">    fclose($fp);</span><br><span class="line">    if ( ! is_int($result))</span><br><span class="line">    &#123;</span><br><span class="line">        @unlink($cache_path);</span><br><span class="line">        log_message(&apos;error&apos;, &apos;Unable to write the complete cache content at: &apos;.$cache_path);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    chmod($cache_path, 0640);</span><br><span class="line">    log_message(&apos;debug&apos;, &apos;Cache file written: &apos;.$cache_path);</span><br><span class="line">    $this-&gt;set_cache_header($_SERVER[&apos;REQUEST_TIME&apos;], $expire);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法主要用于将缓存信息写入缓存文件。功能实现：</p><ol><li>获取缓存路径$cache_path并判断如果不是目录或不可写则返回。</li><li>构造$uri，并对$uri进行md5加密，然后放到$cache_path后面作为缓存文件的完整路径。</li><li>判断缓存文件完整路径$cache_path是否可写，不可写或无法上锁则返回。</li><li>根据支持条件将输出内容进行压缩，这里用到了<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uZ3plbmNvZGUucGhw" title="https://www.php.net/manual/zh/function.gzencode.php">gzencode<i class="fa fa-external-link"></i></span>，设置内容类型mime_type头信息。</li><li>将$cache_info<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uc2VyaWFsaXplLnBocA==" title="https://www.php.net/manual/zh/function.serialize.php">序列化<i class="fa fa-external-link"></i></span>，构造成<code>$cache_info.&#39;ENDCI---&gt;&#39;.$output</code>的格式写入到缓存文件中，写入时将文件上锁，写入失败则删除该文件。</li><li>设置缓存文件权限<code>0640</code>， 发送HTTP缓存控制头到浏览器以匹配文件缓存设置。</li></ol><hr><h4 id="display-cache"><a href="#display-cache" class="headerlink" title="_display_cache()"></a>_display_cache()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">public function _display_cache(&amp;$CFG, &amp;$URI)</span><br><span class="line">&#123;</span><br><span class="line">    $cache_path = ($CFG-&gt;item(&apos;cache_path&apos;) === &apos;&apos;) ? APPPATH.&apos;cache/&apos; : $CFG-&gt;item(&apos;cache_path&apos;);</span><br><span class="line">    $uri = $CFG-&gt;item(&apos;base_url&apos;).$CFG-&gt;item(&apos;index_page&apos;).$URI-&gt;uri_string;</span><br><span class="line">    if (($cache_query_string = $CFG-&gt;item(&apos;cache_query_string&apos;)) &amp;&amp; ! empty($_SERVER[&apos;QUERY_STRING&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        if (is_array($cache_query_string))</span><br><span class="line">        &#123;</span><br><span class="line">            $uri .= &apos;?&apos;.http_build_query(array_intersect_key($_GET, array_flip($cache_query_string)));</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $uri .= &apos;?&apos;.$_SERVER[&apos;QUERY_STRING&apos;];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $filepath = $cache_path.md5($uri);</span><br><span class="line">    if ( ! file_exists($filepath) OR ! $fp = @fopen($filepath, &apos;rb&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    flock($fp, LOCK_SH);</span><br><span class="line">    $cache = (filesize($filepath) &gt; 0) ? fread($fp, filesize($filepath)) : &apos;&apos;;</span><br><span class="line">    flock($fp, LOCK_UN);</span><br><span class="line">    fclose($fp);</span><br><span class="line">    if ( ! preg_match(&apos;/^(.*)ENDCI---&gt;/&apos;, $cache, $match))</span><br><span class="line">    &#123;</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    $cache_info = unserialize($match[1]);</span><br><span class="line">    $expire = $cache_info[&apos;expire&apos;];</span><br><span class="line">    $last_modified = filemtime($filepath);</span><br><span class="line">    if ($_SERVER[&apos;REQUEST_TIME&apos;] &gt;= $expire &amp;&amp; is_really_writable($cache_path))</span><br><span class="line">    &#123;</span><br><span class="line">        @unlink($filepath);</span><br><span class="line">        log_message(&apos;debug&apos;, &apos;Cache file has expired. File deleted.&apos;);</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;set_cache_header($last_modified, $expire);</span><br><span class="line">    foreach ($cache_info[&apos;headers&apos;] as $header)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;set_header($header[0], $header[1]);</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;_display(self::substr($cache, self::strlen($match[0])));</span><br><span class="line">    log_message(&apos;debug&apos;, &apos;Cache file is current. Sending it to browser.&apos;);</span><br><span class="line">    return TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法在CodeIgniter.php里面有调用，用来负责缓存的输出，如果在CodeIgniter.php中调用此方法有输出，则本次请求的运行将直接结束，直接以缓存输出作为响应。功能实现：</p><ol><li>获取保存缓存的路径<code>$cache_path</code>，如<code>G:\wamp\www\CodeIgniter_hmvc\application\cache/449a65bd3d6bad1ee34104f01d27cc26</code>。</li><li>构造<code>$uri</code>并进行md5加密，附加在<code>$cache_path</code>后面作为缓存文件的完整路径<code>$filepath</code>。</li><li>如果<code>$filepath</code>不存在或读取失败则返回false。否则读取缓存信息到<code>$cache</code>，读取期间<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uZmxvY2sucGhw" title="https://www.php.net/manual/zh/function.flock.php">flock<i class="fa fa-external-link"></i></span>上锁。</li><li>这个地方可参考_write_cache()方法中构造缓存的部分：<code>$output = $cache_info.&#39;ENDCI---&gt;&#39;.$output;</code>。 <font color="#891717">下面这个ENDCI—&gt;字样，只是因为CI的缓存文件里面的内容是规定以cache_info[‘expire’, ‘headers’]＋ENDCI—&gt;开头而已。</font>如果不符合此结构，可视为非CI的缓存文件，或者文件已损坏，获取缓存内容失败，返回FALSE。$match[0]是除页面内容之外的附加信息:<code>a:2:{s:6:&quot;expire&quot;;i:1566534312;s:7:&quot;headers&quot;;a:0:{}}ENDCI---&gt;</code>，$match[1]是附加信息中和时间有关的信息:<code>a:2:{s:6:&quot;expire&quot;;i:1566534312;s:7:&quot;headers&quot;;a:0:{}}</code>缓存文件开头: <code>a:2:{s:6:&quot;expire&quot;;i:1566534312;s:7:&quot;headers&quot;;a:0:{}}ENDCI---&gt;&lt;!DOCTYPE html&gt;</code>。</li><li>获取$cache_info，这里用到了<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24udW5zZXJpYWxpemUucGhw" title="https://www.php.net/manual/zh/function.unserialize.php">unserialize<i class="fa fa-external-link"></i></span>。可以通过<span class="exturl" data-url="aHR0cHM6Ly93d3cudzNjc2Nob29sLmNuL3Rvb2xzL2luZGV4P25hbWU9dW5zZXJpYWxpemU=" title="https://www.w3cschool.cn/tools/index?name=unserialize">php在线反序列化工具<i class="fa fa-external-link"></i></span>在线反序列化试下，然后拿到<code>$expire</code>。</li><li>使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uZmlsZW10aW1lLnBocA==" title="https://www.php.net/manual/zh/function.filemtime.php">filemtime<i class="fa fa-external-link"></i></span>取得文件修改时间<code>$last_modified</code>。判断缓存是否过期，如果过期并且可写则删除，然后返回false。</li><li>设置缓存头信息，调用<code>_display()</code>方法输出缓冲信息。</li></ol><hr><h4 id="delete-cache"><a href="#delete-cache" class="headerlink" title="delete_cache()"></a>delete_cache()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">public function delete_cache($uri = &apos;&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line">    $cache_path = $CI-&gt;config-&gt;item(&apos;cache_path&apos;);</span><br><span class="line">    if ($cache_path === &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $cache_path = APPPATH.&apos;cache/&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    if ( ! is_dir($cache_path))</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(&apos;error&apos;, &apos;Unable to find cache path: &apos;.$cache_path);</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    if (empty($uri))</span><br><span class="line">    &#123;</span><br><span class="line">        $uri = $CI-&gt;uri-&gt;uri_string();</span><br><span class="line">        if (($cache_query_string = $CI-&gt;config-&gt;item(&apos;cache_query_string&apos;)) &amp;&amp; ! empty($_SERVER[&apos;QUERY_STRING&apos;]))</span><br><span class="line">        &#123;</span><br><span class="line">            if (is_array($cache_query_string))</span><br><span class="line">            &#123;</span><br><span class="line">                $uri .= &apos;?&apos;.http_build_query(array_intersect_key($_GET, array_flip($cache_query_string)));</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                $uri .= &apos;?&apos;.$_SERVER[&apos;QUERY_STRING&apos;];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $cache_path .= md5($CI-&gt;config-&gt;item(&apos;base_url&apos;).$CI-&gt;config-&gt;item(&apos;index_page&apos;).ltrim($uri, &apos;/&apos;));</span><br><span class="line">    if ( ! @unlink($cache_path))</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(&apos;error&apos;, &apos;Unable to delete cache file for &apos;.$uri);</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    return TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法提供删除缓存的功能，前提是已经有缓存了，否则会报错。功能实现：</p><ol><li>从配置文件中读取缓存路径，为空则默认为<code>APPPATH . cache/</code>。</li><li>检查缓存目录是否存在，不存在则报错退出。</li><li>构造缓存文件，然后删除。这里有三个php函数<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uYXJyYXktaW50ZXJzZWN0LWtleS5waHA=" title="https://www.php.net/manual/zh/function.array-intersect-key.php">array_intersect_key<i class="fa fa-external-link"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uYXJyYXktZmxpcC5waHA=" title="https://www.php.net/manual/zh/function.array-flip.php">array_flip<i class="fa fa-external-link"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uaHR0cC1idWlsZC1xdWVyeS5waHA=" title="https://www.php.net/manual/zh/function.http-build-query.php">http_build_query<i class="fa fa-external-link"></i></span>。</li></ol><hr><h4 id="set-cache-header"><a href="#set-cache-header" class="headerlink" title="set_cache_header()"></a>set_cache_header()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public function set_cache_header($last_modified, $expiration)</span><br><span class="line">&#123;</span><br><span class="line">    $max_age = $expiration - $_SERVER[&apos;REQUEST_TIME&apos;];</span><br><span class="line">    if (isset($_SERVER[&apos;HTTP_IF_MODIFIED_SINCE&apos;]) &amp;&amp; $last_modified &lt;= strtotime($_SERVER[&apos;HTTP_IF_MODIFIED_SINCE&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;set_status_header(304);</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">    header(&apos;Pragma: public&apos;);</span><br><span class="line">    header(&apos;Cache-Control: max-age=&apos;.$max_age.&apos;, public&apos;);</span><br><span class="line">    header(&apos;Expires: &apos;.gmdate(&apos;D, d M Y H:i:s&apos;, $expiration).&apos; GMT&apos;);</span><br><span class="line">    header(&apos;Last-modified: &apos;.gmdate(&apos;D, d M Y H:i:s&apos;, $last_modified).&apos; GMT&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置缓存头信息。功能实现：</p><ol><li><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRUUC9IZWFkZXJzL0lmLU1vZGlmaWVkLVNpbmNl" title="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/If-Modified-Since">HTTP_IF_MODIFIED_SINCE<i class="fa fa-external-link"></i></span>表示浏览器缓存页面的最后修改时间，如果设置了HTTP_IF_MODIFIED_SINCE头，且文件最后修改时间没有超过HTTP_IF_MODIFIED_SINCE时间，则直接发304状态码给客户端，让客户端调用本地缓存。</li><li>如果文件修改时间超过了HTTP_IF_MODIFIED_SINCE时间，就重新发送头信息，告诉客户端缓存该次请求的结果到本地。下面是<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRUUC9IZWFkZXJzL1ByYWdtYQ==" title="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Pragma">Pragma<i class="fa fa-external-link"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRUUC9IZWFkZXJzL1ByYWdtYQ==" title="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Pragma">Cache-Control<i class="fa fa-external-link"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRUUC9IZWFkZXJzL0V4cGlyZXM=" title="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Expires">Expires<i class="fa fa-external-link"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRUUC9IZWFkZXJzL0xhc3QtTW9kaWZpZWQ=" title="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Last-Modified">Last-modified<i class="fa fa-external-link"></i></span>的相关说明。</li></ol><hr><h4 id="strlen"><a href="#strlen" class="headerlink" title="strlen()"></a>strlen()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">protected static function strlen($str)</span><br><span class="line">&#123;</span><br><span class="line">    return (self::$func_overload)</span><br><span class="line">        ? mb_strlen($str, &apos;8bit&apos;)</span><br><span class="line">        : strlen($str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于多字节安全处理，功能是获取字符串长度。如果启用了函数重载功能，则返回utf-8编码的字符串长度，详见<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ubWItc3RybGVuLnBocA==" title="https://www.php.net/manual/zh/function.mb-strlen.php">mb_strlen<i class="fa fa-external-link"></i></span>。举个例子，<code>$str=&#39;武汉加油&#39;;</code>，如果使用<code>strlen</code>计算时$str长度为4 x 3 = 12，如果使用的是<code>mb_strlen($str, &#39;8bit&#39;)</code>则长度为4，因为这里会将中文字符当作1来计算而不是3。关于更多多字符的信息可参考[阮先生]的文章<span class="exturl" data-url="aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMDcvMTAvYXNjaWlfdW5pY29kZV9hbmRfdXRmLTguaHRtbA==" title="http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html">字符编码笔记：ASCII，Unicode 和 UTF-8<i class="fa fa-external-link"></i></span>。</p><hr><h4 id="substr"><a href="#substr" class="headerlink" title="substr()"></a>substr()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">protected static function substr($str, $start, $length = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    if (self::$func_overload)</span><br><span class="line">    &#123;</span><br><span class="line">        // mb_substr($str, $start, null, &apos;8bit&apos;) returns an empty</span><br><span class="line">        // string on PHP 5.3</span><br><span class="line">        isset($length) OR $length = ($start &gt;= 0 ? self::strlen($str) - $start : -$start);</span><br><span class="line">        return mb_substr($str, $start, $length, &apos;8bit&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return isset($length)</span><br><span class="line">        ? substr($str, $start, $length)</span><br><span class="line">        : substr($str, $start);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于多字节安全处理，功能是截取字符串，如果开启函数重载功能，则需要先reset长度，然后使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ubWItc3Vic3RyLnBocA==" title="https://www.php.net/manual/zh/function.mb-substr.php">mb_substr<i class="fa fa-external-link"></i></span>；否则使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uc3Vic3RyLnBocA==" title="https://www.php.net/manual/zh/function.substr.php">substr<i class="fa fa-external-link"></i></span>。</p><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81MjkzMTU4MQ==" title="https://blog.csdn.net/Zhihua_W/article/details/52931581">CI框架源码解析十之输出类文件Output.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter路由类文件Router.php</title>
      <link href="/2020/01/20/codeigniter-router/"/>
      <url>/2020/01/20/codeigniter-router/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p><span class="exturl" data-url="aHR0cHM6Ly9wdXJldmVuLmNjLzIwMjAvMDEvMTQvY29kZWlnbml0ZXItdXJpLw==" title="https://pureven.cc/2020/01/14/codeigniter-uri/">上文<i class="fa fa-external-link"></i></span>对URI类进行了原码分析，URI类实现了将URL分段保存到<code>segments</code>数组中。下面对Router类代码进行剖析来看看CodeIgniter是如何利用<code>segments</code>将URI映射到对应控制器、方法的。</p><a id="more"></a><hr><h4 id="路由配置文件routes-php"><a href="#路由配置文件routes-php" class="headerlink" title="路由配置文件routes.php"></a>路由配置文件routes.php</h4><p>从<span class="exturl" data-url="aHR0cHM6Ly9jb2RlaWduaXRlci5vcmcuY24vdXNlcl9ndWlkZS9nZW5lcmFsL3JvdXRpbmcuaHRtbA==" title="https://codeigniter.org.cn/user_guide/general/routing.html">官网<i class="fa fa-external-link"></i></span>可知URI路由的特性有:</p><ol><li><p>自定义路由，即在routes.php文件中使用通配符和正则表达式进行设置，如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$route[&apos;product/(:num)&apos;] = &apos;catalog/product_lookup_by_id/$1&apos;;</span><br><span class="line">$route[&apos;login/(.+)&apos;] = &apos;auth/login/$1&apos;;</span><br></pre></td></tr></table></figure></li><li><p>使用回调函数来处理逆向引用，如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$route[&apos;products/([a-zA-Z]+)/edit/(\d+)&apos;] = function ($product_type, $id)</span><br><span class="line">&#123;</span><br><span class="line">    return &apos;catalog/product_edit/&apos; . strtolower($product_type) . &apos;/&apos; . $id;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>在路由中使用 HTTP 动词。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$route[&apos;products/(:num)&apos;][&apos;DELETE&apos;] = &apos;product/delete/$1&apos;;</span><br></pre></td></tr></table></figure></li><li><p>定义默认路由。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$route[&apos;default_controller&apos;] = &apos;welcome&apos;;</span><br></pre></td></tr></table></figure><p>通过Router类可以实现对这些路由定义方式的解析。</p></li></ol><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public $config;</span><br><span class="line">public $routes =array();</span><br><span class="line">public $class =&apos;&apos;;</span><br><span class="line">public $method =&apos;index&apos;;</span><br><span class="line">public $directory;</span><br><span class="line">public $default_controller;</span><br><span class="line">public $translate_uri_dashes = FALSE;</span><br><span class="line">public $enable_query_strings = FALSE;</span><br></pre></td></tr></table></figure><p>$config表示加载的配置类对象。<br>$routes表示配置的路由数组。<br>$class表示请求的控制器类。<br>$method表示请求的方法。<br>$directory表示<code>index.php</code>中设置的子目录。<br>$default_controller表示默认控制器类。<br>$translate_uri_dashes为true则表示将连字符<code>-</code>转换为下划线<code>_</code>。也是通过路由配置文件进行设置。<br>$enable_query_strings表示是否支持字符串查询。</p><hr><h4 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public function __construct($routing = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;config =&amp; load_class(&apos;Config&apos;, &apos;core&apos;);</span><br><span class="line">    $this-&gt;uri =&amp; load_class(&apos;URI&apos;, &apos;core&apos;);</span><br><span class="line">    $this-&gt;enable_query_strings = ( ! is_cli() &amp;&amp; $this-&gt;config-&gt;item(&apos;enable_query_strings&apos;) === TRUE);</span><br><span class="line">    is_array($routing) &amp;&amp; isset($routing[&apos;directory&apos;]) &amp;&amp; $this-&gt;set_directory($routing[&apos;directory&apos;]);</span><br><span class="line">    $this-&gt;_set_routing();</span><br><span class="line">    if (is_array($routing))</span><br><span class="line">    &#123;</span><br><span class="line">        empty($routing[&apos;controller&apos;]) OR $this-&gt;set_class($routing[&apos;controller&apos;]);</span><br><span class="line">        empty($routing[&apos;function&apos;])   OR $this-&gt;set_method($routing[&apos;function&apos;]);</span><br><span class="line">    &#125;</span><br><span class="line">    log_message(&apos;info&apos;, &apos;Router Class Initialized&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法是Router类功能实现的统一入口，完成该类初始化。功能实现：</p><ol><li>加载Config、URI类，获取查询字符串开关。</li><li>如果存在<code>$routing[&#39;directory&#39;]</code>则使用该值设置子目录。<font color="#891717">该值在index.php文件中定义，包括directory、controller、method优先级高于uri中的directory、controller、method。</font></li><li>调用<code>_set_routing</code>方法完成路由配置读取及解析。</li></ol><hr><h4 id="set-routing"><a href="#set-routing" class="headerlink" title="_set_routing()"></a>_set_routing()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">protected function _set_routing()</span><br><span class="line">&#123;</span><br><span class="line">    if (file_exists(APPPATH.&apos;config/routes.php&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        include(APPPATH.&apos;config/routes.php&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    if (file_exists(APPPATH.&apos;config/&apos;.ENVIRONMENT.&apos;/routes.php&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        include(APPPATH.&apos;config/&apos;.ENVIRONMENT.&apos;/routes.php&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    if (isset($route) &amp;&amp; is_array($route))</span><br><span class="line">    &#123;</span><br><span class="line">        isset($route[&apos;default_controller&apos;]) &amp;&amp; $this-&gt;default_controller = $route[&apos;default_controller&apos;];</span><br><span class="line">        isset($route[&apos;translate_uri_dashes&apos;]) &amp;&amp; $this-&gt;translate_uri_dashes = $route[&apos;translate_uri_dashes&apos;];</span><br><span class="line">        unset($route[&apos;default_controller&apos;], $route[&apos;translate_uri_dashes&apos;]);</span><br><span class="line">        $this-&gt;routes = $route;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($this-&gt;enable_query_strings)</span><br><span class="line">    &#123;</span><br><span class="line">        if ( ! isset($this-&gt;directory))</span><br><span class="line">        &#123;</span><br><span class="line">            $_d = $this-&gt;config-&gt;item(&apos;directory_trigger&apos;);</span><br><span class="line">            $_d = isset($_GET[$_d]) ? trim($_GET[$_d], &quot; \t\n\r\0\x0B/&quot;) : &apos;&apos;;</span><br><span class="line">            if ($_d !== &apos;&apos;)</span><br><span class="line">            &#123;</span><br><span class="line">                $this-&gt;uri-&gt;filter_uri($_d);</span><br><span class="line">                $this-&gt;set_directory($_d);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $_c = trim($this-&gt;config-&gt;item(&apos;controller_trigger&apos;));</span><br><span class="line">        if ( ! empty($_GET[$_c]))</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;uri-&gt;filter_uri($_GET[$_c]);</span><br><span class="line">            $this-&gt;set_class($_GET[$_c]);</span><br><span class="line">            $_f = trim($this-&gt;config-&gt;item(&apos;function_trigger&apos;));</span><br><span class="line">            if ( ! empty($_GET[$_f]))</span><br><span class="line">            &#123;</span><br><span class="line">                $this-&gt;uri-&gt;filter_uri($_GET[$_f]);</span><br><span class="line">                $this-&gt;set_method($_GET[$_f]);</span><br><span class="line">            &#125;</span><br><span class="line">            $this-&gt;uri-&gt;rsegments = array(</span><br><span class="line">                1 =&gt; $this-&gt;class,</span><br><span class="line">                2 =&gt; $this-&gt;method</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;_set_default_controller();</span><br><span class="line">        &#125;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($this-&gt;uri-&gt;uri_string !== &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_parse_routes();</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_set_default_controller();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的功能是读取路由配置文件，确定uri及调用解析路由`_parse_routes方法。功能实现：</p><ol><li>加载路由配置文件，将路由配置数组中的默认控制器和连接线转换下划线开关赋值给该类成员变量后删除。</li><li>如果启用查询字符串则依次对路径、控制器、方法进行获取、特殊字符过滤并赋值给改类成员变量。<font color="#891717">这里路径设置的前提是没有在index.php文件中设置，否则会被覆盖。</font></li><li>如果uri字符串不为空则进行路由解析，否则调用设置默认控制器方法。</li></ol><hr><h4 id="set-request"><a href="#set-request" class="headerlink" title="_set_request()"></a>_set_request()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">protected function _set_request($segments = array())</span><br><span class="line">&#123;</span><br><span class="line">    $segments = $this-&gt;_validate_request($segments);</span><br><span class="line">    if (empty($segments))</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_set_default_controller();</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($this-&gt;translate_uri_dashes === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $segments[0] = str_replace(&apos;-&apos;, &apos;_&apos;, $segments[0]);</span><br><span class="line">        if (isset($segments[1]))</span><br><span class="line">        &#123;</span><br><span class="line">            $segments[1] = str_replace(&apos;-&apos;, &apos;_&apos;, $segments[1]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;set_class($segments[0]);</span><br><span class="line">    if (isset($segments[1]))</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;set_method($segments[1]);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $segments[1] = &apos;index&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    array_unshift($segments, NULL);</span><br><span class="line">    unset($segments[0]);</span><br><span class="line">    $this-&gt;uri-&gt;rsegments = $segments;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的参数由<code>_parse_routes</code>传入，是经过处理后的包含请求控制器及请求方法的数组，该方法的作用是验证请求路由并确定<code>rsegments</code>。功能实现:</p><ol><li>调用<code>_validate_request</code>方法将控制器连字符<code>-</code>转为下划线<code>_</code>，并附加子目录。</li><li>如果参数为空则设置默认路由。</li><li>将情况控制器和方法中存在的连字符<code>-</code>转为下划线<code>_</code>。</li><li>设置控制器，如果存在请求方法则设置方法，不存在则默认<code>index</code>。</li><li><code>array_unshift($segments,NULL)</code>和<code>unset($segments[0])</code>的作用是保证$segments数组有用下标是从1开始。</li><li>最后将处理后的<code>$segments</code>赋值给<code>URI</code>类的<code>rsegments</code>成员变量。</li></ol><hr><h4 id="set-default-controller"><a href="#set-default-controller" class="headerlink" title="_set_default_controller()"></a>_set_default_controller()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">protected function _set_default_controller()</span><br><span class="line">&#123;</span><br><span class="line">    if (empty($this-&gt;default_controller))</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(&apos;Unable to determine what should be displayed. A default route has not been specified in the routing file.&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    if (sscanf($this-&gt;default_controller, &apos;%[^/]/%s&apos;, $class, $method) !== 2)</span><br><span class="line">    &#123;</span><br><span class="line">        $method = &apos;index&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    if ( ! file_exists(APPPATH.&apos;controllers/&apos;.$this-&gt;directory.ucfirst($class).&apos;.php&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;set_class($class);</span><br><span class="line">    $this-&gt;set_method($method);</span><br><span class="line">    $this-&gt;uri-&gt;rsegments = array(</span><br><span class="line">        1 =&gt; $class,</span><br><span class="line">        2 =&gt; $method</span><br><span class="line">    );</span><br><span class="line">    log_message(&apos;debug&apos;, &apos;No URI present. Default controller set.&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置默认控制器，以下几种情况下调用：</p><ol><li>URI开启了查询字符串功能但是没有指定控制器。</li><li>没有指定uri或uri段为空。<br>功能实现：</li><li>如果发现默认控制器为空则直接报错退出，因为调用此方法就说明请求的uri为空或不存在必须走默认控制器给出响应。</li><li>如果没有指定默认方法则统一为<code>index</code>。</li><li>如果指定了默认控制器但是控制器类文件不存在则直接返回。</li><li>调用成员方法设置<strong>类</strong>、<strong>方法</strong>并赋值<code>rsegments</code>。</li></ol><hr><h4 id="validate-request"><a href="#validate-request" class="headerlink" title="_validate_request()"></a>_validate_request()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">protected function _validate_request($segments)</span><br><span class="line">&#123;</span><br><span class="line">    $c = count($segments);</span><br><span class="line">    $directory_override = isset($this-&gt;directory);</span><br><span class="line">    while ($c-- &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        $test = $this-&gt;directory</span><br><span class="line">            .ucfirst($this-&gt;translate_uri_dashes === TRUE ? str_replace(&apos;-&apos;, &apos;_&apos;, $segments[0]) : $segments[0]);</span><br><span class="line">        if ( ! file_exists(APPPATH.&apos;controllers/&apos;.$test.&apos;.php&apos;)</span><br><span class="line">            &amp;&amp; $directory_override === FALSE</span><br><span class="line">            &amp;&amp; is_dir(APPPATH.&apos;controllers/&apos;.$this-&gt;directory.$segments[0])</span><br><span class="line">        )</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;set_directory(array_shift($segments), TRUE);</span><br><span class="line">            continue;</span><br><span class="line">        &#125;</span><br><span class="line">        return $segments;</span><br><span class="line">    &#125;</span><br><span class="line">    return $segments;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于验证<code>$segments</code>段，功能实现:</p><ol><li>获取<code>segments</code>段的个数，如果index.php文件中设置了<code>$routing[&#39;directory&#39;]</code>则使用该值作为子目录。</li><li>如果<code>translate_uri_dashes</code>值为true则将控制器类的连字符<code>-</code>转换为下划线<code>_</code>。</li><li>如果直接在controllers这个目录下找到与第一段相应的控制器名，那就说明找到了控制器，确定路由，返回。</li><li>如果第一段是目录，则设置子目录，CI是允许控制器放在自定义的目录下的。</li></ol><hr><h4 id="parse-routes"><a href="#parse-routes" class="headerlink" title="_parse_routes()"></a>_parse_routes()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">protected function _parse_routes()</span><br><span class="line">&#123;</span><br><span class="line">    $uri = implode(&apos;/&apos;, $this-&gt;uri-&gt;segments);</span><br><span class="line">    $http_verb = isset($_SERVER[&apos;REQUEST_METHOD&apos;]) ? strtolower($_SERVER[&apos;REQUEST_METHOD&apos;]) : &apos;cli&apos;;</span><br><span class="line">    foreach ($this-&gt;routes as $key =&gt; $val)</span><br><span class="line">    &#123;</span><br><span class="line">        if (is_array($val))</span><br><span class="line">        &#123;</span><br><span class="line">            $val = array_change_key_case($val, CASE_LOWER);</span><br><span class="line">            if (isset($val[$http_verb]))</span><br><span class="line">            &#123;</span><br><span class="line">                $val = $val[$http_verb];</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $key = str_replace(array(&apos;:any&apos;, &apos;:num&apos;), array(&apos;[^/]+&apos;, &apos;[0-9]+&apos;), $key);</span><br><span class="line">        if (preg_match(&apos;#^&apos;.$key.&apos;$#&apos;, $uri, $matches))</span><br><span class="line">        &#123;</span><br><span class="line">            if ( ! is_string($val) &amp;&amp; is_callable($val))</span><br><span class="line">            &#123;</span><br><span class="line">                array_shift($matches);</span><br><span class="line">                $val = call_user_func_array($val, $matches);</span><br><span class="line">            &#125;</span><br><span class="line">            elseif (strpos($val, &apos;$&apos;) !== FALSE &amp;&amp; strpos($key, &apos;(&apos;) !== FALSE)</span><br><span class="line">            &#123;</span><br><span class="line">                $val = preg_replace(&apos;#^&apos;.$key.&apos;$#&apos;, $val, $uri);</span><br><span class="line">            &#125;</span><br><span class="line">            $this-&gt;_set_request(explode(&apos;/&apos;, $val));</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;_set_request(array_values($this-&gt;uri-&gt;segments));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于解析路由，功能实现：</p><ol><li>获取uri，即<code>implode(&#39;/&#39;, $this-&gt;uri-&gt;segments)</code>。</li><li>获取请求动词，即<code>$_SERVER[&#39;REQUEST_METHOD&#39;]</code>，为空表示通过cli方式请求的。</li><li>解析$routes数组，如果请求uri对应的是个数组，使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uYXJyYXktY2hhbmdlLWtleS1jYXNlLnBocA==" title="https://www.php.net/manual/zh/function.array-change-key-case.php">array_change_key_case<i class="fa fa-external-link"></i></span>将key转为小写然后匹配请求动词。</li><li>将通配符转为正则表达式，也就是说<code>路由数组中的通配符最终也是通过正则表达式的形式类解析路由的</code>。</li><li>匹配uri，如果$val是回调函数则直接调用(<code>这里解释了路由可以是回调函数</code>)；如果是key中有通配符则进行正则匹配(例如<code>$route[&#39;api/v1/(:any)/(:num)/(:any)&#39;]=&quot;api_v1/$1/$3/$2&quot;</code>)。</li><li>设置路由，通过<code>_set_request</code>方法和<code>$val</code>设置<code>rsegments</code>;若没有匹配到则直接解析<code>uri-&gt;segments</code>来设置<code>rsegments</code>。</li></ol><hr><h4 id="set-class"><a href="#set-class" class="headerlink" title="set_class()"></a>set_class()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function set_class($class)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;class = str_replace(array(&apos;/&apos;, &apos;.&apos;), &apos;&apos;, $class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置请求控制器类。</p><hr><h4 id="fetch-class"><a href="#fetch-class" class="headerlink" title="fetch_class()"></a>fetch_class()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function fetch_class()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;class;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于获取请求控制器类。</p><hr><h4 id="set-method"><a href="#set-method" class="headerlink" title="set_method()"></a>set_method()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function set_method($method)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;method = $method;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置请求方法。</p><hr><h4 id="fetch-method"><a href="#fetch-method" class="headerlink" title="fetch_method()"></a>fetch_method()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function fetch_method()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;method;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于获取请求的方法。</p><hr><h4 id="set-directory"><a href="#set-directory" class="headerlink" title="set_directory()"></a>set_directory()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public function set_directory($dir, $append = FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    if ($append !== TRUE OR empty($this-&gt;directory))</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;directory = str_replace(&apos;.&apos;, &apos;&apos;, trim($dir, &apos;/&apos;)).&apos;/&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;directory .= str_replace(&apos;.&apos;, &apos;&apos;, trim($dir, &apos;/&apos;)).&apos;/&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置子目录。如果<code>directory</code>为空或<code>$append</code>为false，则直接赋值给<code>directory</code>；否则附加到<code>directory</code>后面。</p><hr><h4 id="fetch-directory"><a href="#fetch-directory" class="headerlink" title="fetch_directory()"></a>fetch_directory()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function fetch_directory()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;directory;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于获取子目录。</p><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81MjkxODY2NA==" title="https://blog.csdn.net/Zhihua_W/article/details/52918664">CI框架源码解析九之路由类文件Router.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter解析类文件URI.php</title>
      <link href="/2020/01/14/codeigniter-uri/"/>
      <url>/2020/01/14/codeigniter-uri/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>URI类主要处理地址字符串，将<strong>uri</strong>分解成对应的片段并存到<strong>segments</strong>数组中。启用查询字符串则将<strong>查询字符串</strong>分解后存到<strong>$_GET</strong>数组中。<strong>Router路由类</strong>在之后的解析路由动作中，也主要依靠URI类的segments属性数组来获取当前上下文的请求URI信息。<font color="#891717">在CI框架中如果启用查询字符串，URI类将不做任何处理，Router类也只会匹配目录、控制器、方法。CI框架体系中的方法参数都是从URI片段中取的,并按<strong>顺序</strong>传递给方法参数。不支持将参数中的变量通过方法参数名传给方法，只能用$_GET获取。</font><br>该类包含5个属性及22个方法，下面分别剖析。</p><a id="more"></a><hr><h4 id="类属性"><a href="#类属性" class="headerlink" title="类属性"></a>类属性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public $keyval = array();</span><br><span class="line">public $uri_string = &apos;&apos;;</span><br><span class="line">public $segments = array();</span><br><span class="line">public $rsegments = array();</span><br><span class="line">protected $_permitted_uri_chars;</span><br></pre></td></tr></table></figure><ul><li><code>$keyval</code>用于存放<code>segments</code>和<code>rsegments</code>转换后的关联数组。</li><li><code>$uri_string</code>用于存放uri。</li><li><code>$segments</code>用于将uri解析后以数组形式存放。</li><li><code>$rsegments</code>在URI类中定义，在Router类中赋值，用于存放class和method。</li><li><code>$_permitted_uri_chars</code>表示URI中接受的字符，在config.php中定义:<code>$config[&#39;permitted_uri_chars&#39;] = &#39;a-z 0-9~%.:_\-&#39;;</code>，为空表示允许所有字符！</li></ul><hr><h4 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">public function __construct()</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;config =&amp; load_class(&apos;Config&apos;, &apos;core&apos;);</span><br><span class="line">    if (is_cli() OR $this-&gt;config-&gt;item(&apos;enable_query_strings&apos;) !== TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_permitted_uri_chars = $this-&gt;config-&gt;item(&apos;permitted_uri_chars&apos;);</span><br><span class="line">        if (is_cli())</span><br><span class="line">        &#123;</span><br><span class="line">            $uri = $this-&gt;_parse_argv();</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $protocol = $this-&gt;config-&gt;item(&apos;uri_protocol&apos;);</span><br><span class="line">            empty($protocol) &amp;&amp; $protocol = &apos;REQUEST_URI&apos;;</span><br><span class="line">            switch ($protocol)</span><br><span class="line">            &#123;</span><br><span class="line">                case &apos;AUTO&apos;: // For BC purposes only</span><br><span class="line">                case &apos;REQUEST_URI&apos;:</span><br><span class="line">                    $uri = $this-&gt;_parse_request_uri();</span><br><span class="line">                    break;</span><br><span class="line">                case &apos;QUERY_STRING&apos;:</span><br><span class="line">                    $uri = $this-&gt;_parse_query_string();</span><br><span class="line">                    break;</span><br><span class="line">                case &apos;PATH_INFO&apos;:</span><br><span class="line">                default:</span><br><span class="line">                    $uri = isset($_SERVER[$protocol])</span><br><span class="line">                        ? $_SERVER[$protocol]</span><br><span class="line">                        : $this-&gt;_parse_request_uri();</span><br><span class="line">                    break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $this-&gt;_set_uri_string($uri);</span><br><span class="line">    &#125;</span><br><span class="line">    log_message(&apos;info&apos;, &apos;URI Class Initialized&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法注要是作用在运行在cli模式或未启用字符串查询的条件下。</p><ol><li>从配置文件中获取url允许的字符，即<code>$config[&#39;permitted_uri_chars&#39;]</code>，该属性在<code>filter_uri()</code>方法中用来过滤uri。</li><li>如果是cli模式下则使用<code>_parse_argv()</code>方法解析命令行参数并整合为uri字符串。</li><li>如果uri_protocol是<code>AUTO</code>、<code>REQUEST_URI</code>使用<code>_parse_query_string()</code>方法解析uri，如果是<code>QUERY_STRING</code>使用<code>_parse_query_string()</code>方法解析uri，<code>PATH_INFO</code>以及其他配置则先判断<code>$_SERVER</code>的值是否设置，若设置了则用该值作为uri否则跟<code>AUTO</code>处理一致。</li><li>调用<code>_set_uri_string()</code>方法将$uri赋值给<code>$uri_string</code>变量并解析填充到<code>segments</code>数组中去。</li></ol><h5 id="关于uri-protocol"><a href="#关于uri-protocol" class="headerlink" title="关于uri_protocol"></a>关于uri_protocol</h5><p><code>$config[&#39;uri_protocol&#39;]</code>配置不但决定以哪个函数处理URI，同时决定了从哪个全局变量里获取当前上下文的uri地址。uri_protocol可选项有 <code>AUTO</code>、<code>PATH_INFO</code>、<code>QUERY_STRING</code>、<code>REQUEST_URI</code>、<code>ORIG_PATH_INFO</code>，对应关系是：</p><ol><li><code>&#39;REQUEST_URI&#39;</code>使用 <code>$_SERVER[&#39;REQUEST_URI&#39;]</code>。</li><li><code>&#39;QUERY_STRING&#39;</code>使用 <code>$_SERVER[&#39;QUERY_STRING&#39;]</code>。</li><li><code>&#39;PATH_INFO&#39;</code>使用 <code>$_SERVER[&#39;PATH_INFO&#39;]</code>。</li></ol><p>【注意】: <strong>如果配置为PATH_INFO，则uri需要进行url_decode解码。</strong><br>那么这三个变量有什么区别呢？</p><ol><li><code>$_SERVER[&#39;REQUEST_URI&#39;]</code>获取的是<strong>获取的是url地址中主机头后面所有的字符</strong>。</li><li><code>$_SERVER[&#39;QUERY_STRING&#39;]</code>获取的是<strong>获取的url地址中”?”后面的部分</strong>。</li><li><code>$_SERVER[&#39;PATH_INFO&#39;]</code>获取的是<strong>获取的是url地址中脚本文件($_SERVER[‘SCRIPT_NAME’])之后”?”之前的字符内容</strong>。</li></ol><p><strong>举例说明:</strong>  <code>http://pc.local/index.php/product/pc/summary?a=1</code><br><b><font color="#891717">QUERY_STRING:</font></b> <code>a=1</code><br><b><font color="#891717">REQUEST_URI:</font></b> <code>/index.php/product/pc/summary?a=1</code><br><b><font color="#891717">PATH_INFO:</font></b>  <code>/product/pc/summary</code></p><p>uri_protocol的值决定了<strong>CI路由</strong>和<strong>参数</strong>的获取方式，CI会通过这些值来判断解析到哪一个控制器，所以需要确保服务器配置了正确的值。大部分情况下设置AUTO即可，AUTO会依次检测<code>REQUEST_URI</code>、<code>PATH_INFO</code>、<code>QUERY_STRING</code>、<code>$_GET</code>的值，直到读到内容。</p><hr><h4 id="set-uri-string"><a href="#set-uri-string" class="headerlink" title="_set_uri_string()"></a>_set_uri_string()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">protected function _set_uri_string($str)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;uri_string = trim(remove_invisible_characters($str, FALSE), &apos;/&apos;);</span><br><span class="line">    if ($this-&gt;uri_string !== &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        if (($suffix = (string) $this-&gt;config-&gt;item(&apos;url_suffix&apos;)) !== &apos;&apos;)</span><br><span class="line">        &#123;</span><br><span class="line">            $slen = strlen($suffix);</span><br><span class="line">            if (substr($this-&gt;uri_string, -$slen) === $suffix)</span><br><span class="line">            &#123;</span><br><span class="line">                $this-&gt;uri_string = substr($this-&gt;uri_string, 0, -$slen);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $this-&gt;segments[0] = NULL;</span><br><span class="line">        foreach (explode(&apos;/&apos;, trim($this-&gt;uri_string, &apos;/&apos;)) as $val)</span><br><span class="line">        &#123;</span><br><span class="line">            $val = trim($val);</span><br><span class="line">            $this-&gt;filter_uri($val);</span><br><span class="line">            if ($val !== &apos;&apos;)</span><br><span class="line">            &#123;</span><br><span class="line">                $this-&gt;segments[] = $val;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        unset($this-&gt;segments[0]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法给功能是将$uri赋值给<code>$uri_string</code>变量并解析填充到<code>segments</code>数组中去，功能实现:</p><ol><li>若设置了后缀则移除uri后缀。</li><li>解析uri，用’/‘分段，经<code>filter_uri()</code>检查是否包含无效字符，最后填充到$this-&gt;segments数组中去。</li></ol><hr><h4 id="parse-request-uri"><a href="#parse-request-uri" class="headerlink" title="_parse_request_uri()"></a>_parse_request_uri()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">protected function _parse_request_uri()</span><br><span class="line">&#123;</span><br><span class="line">    if ( ! isset($_SERVER[&apos;REQUEST_URI&apos;], $_SERVER[&apos;SCRIPT_NAME&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        return &apos;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    $uri = parse_url(&apos;http://dummy&apos;.$_SERVER[&apos;REQUEST_URI&apos;]);</span><br><span class="line">    $query = isset($uri[&apos;query&apos;]) ? $uri[&apos;query&apos;] : &apos;&apos;;</span><br><span class="line">    $uri = isset($uri[&apos;path&apos;]) ? $uri[&apos;path&apos;] : &apos;&apos;;</span><br><span class="line">    if (isset($_SERVER[&apos;SCRIPT_NAME&apos;][0]))</span><br><span class="line">    &#123;</span><br><span class="line">        if (strpos($uri, $_SERVER[&apos;SCRIPT_NAME&apos;]) === 0)</span><br><span class="line">        &#123;</span><br><span class="line">            $uri = (string) substr($uri, strlen($_SERVER[&apos;SCRIPT_NAME&apos;]));</span><br><span class="line">        &#125;</span><br><span class="line">        elseif (strpos($uri, dirname($_SERVER[&apos;SCRIPT_NAME&apos;])) === 0)</span><br><span class="line">        &#123;</span><br><span class="line">            $uri = (string) substr($uri, strlen(dirname($_SERVER[&apos;SCRIPT_NAME&apos;])));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if (trim($uri, &apos;/&apos;) === &apos;&apos; &amp;&amp; strncmp($query, &apos;/&apos;, 1) === 0)</span><br><span class="line">    &#123;</span><br><span class="line">        $query = explode(&apos;?&apos;, $query, 2);</span><br><span class="line">        $uri = $query[0];</span><br><span class="line">        $_SERVER[&apos;QUERY_STRING&apos;] = isset($query[1]) ? $query[1] : &apos;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $_SERVER[&apos;QUERY_STRING&apos;] = $query;</span><br><span class="line">    &#125;</span><br><span class="line">    parse_str($_SERVER[&apos;QUERY_STRING&apos;], $_GET);</span><br><span class="line">    if ($uri === &apos;/&apos; OR $uri === &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        return &apos;/&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    return $this-&gt;_remove_relative_directory($uri);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用来解析<code>$_SERVER[&#39;REQUEST_URI&#39;]</code>并返回uri，功能实现：</p><ol><li>如果没用设置全局变量<code>$_SERVER[&#39;REQUEST_URI&#39;]</code>, <code>$_SERVER[&#39;SCRIPT_NAME&#39;]</code>则不做任何处理，直接返回。</li><li>使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ucGFyc2UtdXJsLnBocA==" title="https://www.php.net/manual/zh/function.parse-url.php">parse_url<i class="fa fa-external-link"></i></span>解析URL(<code>&#39;http://dummy&#39;.$_SERVER[&#39;REQUEST_URI&#39;]</code>)之后得到一个关联数组，这里直接将数组赋值给变量$uri了。</li><li>将数组中的<code>query</code>和<code>path</code>部分分别赋值给变量<code>$query</code>和<code>$uri</code>，即表示从<code>$_SERVER[&#39;REQUEST_URI&#39;]</code>取值，解析成<code>$uri</code>和<code>$query</code>两个字符串，分别存储请求的路径和get请求参数。举个栗子: path =&gt; <code>/pear/index.php</code> query =&gt; <code>googleguy=gooley</code>。</li><li>去掉uri包含的<code>$_SERVER[&#39;SCRIPT_NAME&#39;]</code>，举个栗子: 比如uri是<code>/pear/index.php/news/view/crm</code>，经过处理后就变成<code>/news/view/crm</code>了</li><li>对于请求服务器的具体URI包含在查询字符串这种情况，例如$uri以<code>?/</code>开头的 ，实际上if条件换种写法就是if(strncmp($uri, ‘?/‘, 2) === 0))，类似：<code>http://www.example.twm/index.php?/welcome/index</code>。其他情况直接<code>$_SERVER[&#39;QUERY_STRING&#39;] = $query;</code> 如下面这种请求uri：<code>http://www.example.twm/mall/lists?page=7</code>。</li><li>使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ucGFyc2Utc3Ry" title="https://www.php.net/manual/zh/function.parse-str">parse_str()<i class="fa fa-external-link"></i></span>将查询字符串按键名存入<code>_GET</code>数组。</li><li>调用<code>_remove_relative_directory()</code>方法作安全处理，移除$uri中的<code>../</code>相对路径字符和反斜杠<code>////</code>。</li></ol><hr><h4 id="parse-query-string"><a href="#parse-query-string" class="headerlink" title="_parse_query_string()"></a>_parse_query_string()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">protected function _parse_query_string()</span><br><span class="line">&#123;</span><br><span class="line">    $uri = isset($_SERVER[&apos;QUERY_STRING&apos;]) ? $_SERVER[&apos;QUERY_STRING&apos;] : @getenv(&apos;QUERY_STRING&apos;);</span><br><span class="line">    if (trim($uri, &apos;/&apos;) === &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        return &apos;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    elseif (strncmp($uri, &apos;/&apos;, 1) === 0)</span><br><span class="line">    &#123;</span><br><span class="line">        $uri = explode(&apos;?&apos;, $uri, 2);</span><br><span class="line">        $_SERVER[&apos;QUERY_STRING&apos;] = isset($uri[1]) ? $uri[1] : &apos;&apos;;</span><br><span class="line">        $uri = $uri[0];</span><br><span class="line">    &#125;</span><br><span class="line">    parse_str($_SERVER[&apos;QUERY_STRING&apos;], $_GET);</span><br><span class="line">    return $this-&gt;_remove_relative_directory($uri);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用来解析类似<code>http://www.nc.com/index.php?/news/list/fruit?page=2</code>这样的地址，解析过程如下:</p><ol><li>从<code>$_SERVER[&#39;QUERY_STRING&#39;]</code>中取值<code>/news/list/fruit?page=2</code>。</li><li>$uri赋值<code>/news/list/fruit</code>，<code>page=2</code>赋值<code>$_GET</code>。</li><li>去除$uri中的<code>../</code>相对路径字符和反斜杠<code>////</code>。</li></ol><hr><h4 id="parse-argv"><a href="#parse-argv" class="headerlink" title="_parse_argv()"></a>_parse_argv()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">protected function _parse_argv()</span><br><span class="line">&#123;</span><br><span class="line">    $args = array_slice($_SERVER[&apos;argv&apos;], 1);</span><br><span class="line">    return $args ? implode(&apos;/&apos;, $args) : &apos;&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法将CLI默认下传递给脚本的参数数组整合为字符串uri并将其返回。<br><font color="#891717">注意: <span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvcmVzZXJ2ZWQudmFyaWFibGVzLmFyZ3YucGhw" title="https://www.php.net/manual/zh/reserved.variables.argv.php">$_SERVER[‘argv’]<i class="fa fa-external-link"></i></span>第一个参数为脚本文件名，因此从第二个参数开始表示url传参。</font></p><hr><h4 id="remove-relative-directory"><a href="#remove-relative-directory" class="headerlink" title="_remove_relative_directory()"></a>_remove_relative_directory()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">protected function _remove_relative_directory($uri)</span><br><span class="line">&#123;</span><br><span class="line">    $uris = array();</span><br><span class="line">    $tok = strtok($uri, &apos;/&apos;);</span><br><span class="line">    while ($tok !== FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        if (( ! empty($tok) OR $tok === &apos;0&apos;) &amp;&amp; $tok !== &apos;..&apos;)</span><br><span class="line">        &#123;</span><br><span class="line">            $uris[] = $tok;</span><br><span class="line">        &#125;</span><br><span class="line">        $tok = strtok(&apos;/&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    return implode(&apos;/&apos;, $uris);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法主要作用是移除$uri中的<code>../</code>相对路径字符和反斜杠<code>////</code>。功能实现:</p><ol><li>首先使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uc3RydG9r" title="https://www.php.net/manual/zh/function.strtok">strtok<i class="fa fa-external-link"></i></span>标记$uri中的反斜杠<code>/</code>。</li><li>然后对每个字符串进行判断，过滤<code>..</code>和<code>//</code>。</li><li>将过滤后留下的字符串进行整合。</li></ol><hr><h4 id="filter-uri"><a href="#filter-uri" class="headerlink" title="filter_uri()"></a>filter_uri()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public function filter_uri(&amp;$str)</span><br><span class="line">&#123;</span><br><span class="line">    if ( ! empty($str) &amp;&amp; ! empty($this-&gt;_permitted_uri_chars) &amp;&amp; ! preg_match(&apos;/^[&apos;.$this-&gt;_permitted_uri_chars.&apos;]+$/i&apos;.(UTF8_ENABLED ? &apos;u&apos; : &apos;&apos;), $str))</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(&apos;The URI you submitted has disallowed characters.&apos;, 400);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用来判断uri中是否包含允许字符范围之外的字符，若存在保错退出。</p><hr><h4 id="segment"><a href="#segment" class="headerlink" title="segment()"></a>segment()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function segment($n, $no_result = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return isset($this-&gt;segments[$n]) ? $this-&gt;segments[$n] : $no_result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的功能是从<code>segments</code>数组中取出指定的段，没有则返回null。在Pagination和DB_cache类中有使用。</p><hr><h4 id="rsegment"><a href="#rsegment" class="headerlink" title="rsegment()"></a>rsegment()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function rsegment($n, $no_result = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return isset($this-&gt;rsegments[$n]) ? $this-&gt;rsegments[$n] : $no_result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的功能从<code>rsements</code>数组中取出指定的值，若不存在则返回null。</p><hr><h4 id="uri-to-assoc"><a href="#uri-to-assoc" class="headerlink" title="uri_to_assoc()"></a>uri_to_assoc()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function uri_to_assoc($n = 3, $default = array())</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_uri_to_assoc($n, $default, &apos;segment&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法将成员变量<code>segments</code>整合为关联数组并返回该数组。</p><hr><h4 id="ruri-to-assoc"><a href="#ruri-to-assoc" class="headerlink" title="ruri_to_assoc()"></a>ruri_to_assoc()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function ruri_to_assoc($n = 3, $default = array())</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_uri_to_assoc($n, $default, &apos;rsegment&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法将成员变量<code>rsegments</code>整合为关联数组并返回该数组。</p><hr><h4 id="uri-to-assoc-1"><a href="#uri-to-assoc-1" class="headerlink" title="_uri_to_assoc()"></a>_uri_to_assoc()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">protected function _uri_to_assoc($n = 3, $default = array(), $which = &apos;segment&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    if ( ! is_numeric($n))</span><br><span class="line">    &#123;</span><br><span class="line">        return $default;</span><br><span class="line">    &#125;</span><br><span class="line">    if (isset($this-&gt;keyval[$which], $this-&gt;keyval[$which][$n]))</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;keyval[$which][$n];</span><br><span class="line">    &#125;</span><br><span class="line">    $total_segments = &quot;total_&#123;$which&#125;s&quot;;</span><br><span class="line">    $segment_array = &quot;&#123;$which&#125;_array&quot;;</span><br><span class="line">    if ($this-&gt;$total_segments() &lt; $n)</span><br><span class="line">    &#123;</span><br><span class="line">        return (count($default) === 0)</span><br><span class="line">            ? array()</span><br><span class="line">            : array_fill_keys($default, NULL);</span><br><span class="line">    &#125;</span><br><span class="line">    $segments = array_slice($this-&gt;$segment_array(), ($n - 1));</span><br><span class="line">    $i = 0;</span><br><span class="line">    $lastval = &apos;&apos;;</span><br><span class="line">    $retval = array();</span><br><span class="line">    foreach ($segments as $seg)</span><br><span class="line">    &#123;</span><br><span class="line">        if ($i % 2)</span><br><span class="line">        &#123;</span><br><span class="line">            $retval[$lastval] = $seg;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $retval[$seg] = NULL;</span><br><span class="line">            $lastval = $seg;</span><br><span class="line">        &#125;</span><br><span class="line">        $i++;</span><br><span class="line">    &#125;</span><br><span class="line">    if (count($default) &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        foreach ($default as $val)</span><br><span class="line">        &#123;</span><br><span class="line">            if ( ! array_key_exists($val, $retval))</span><br><span class="line">            &#123;</span><br><span class="line">                $retval[$val] = NULL;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    isset($this-&gt;keyval[$which]) OR $this-&gt;keyval[$which] = array();</span><br><span class="line">    $this-&gt;keyval[$which][$n] = $retval;</span><br><span class="line">    return $retval;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的作用是根据指定索引将<code>segments</code>或<code>rsegments</code>进行分割并将剩余的uri段整合为关联数组，然后返回。参数<code>$which</code>可传<code>segment</code>或<code>rsegment</code>，分别对应成员变量<code>segments</code>和<code>rsegments</code>。下面以<code>segment</code>为例进行功能剖析:</p><ol><li><code>$n</code>默认值为3，因为前两个参数一般为<code>class</code>和<code>method</code>。<code>$default</code>数组表示设置默认的键名，这样即使uri中缺少某个键名，也能保证返回的数组中包含该索引。</li><li>如果已经设置过，即成员变量<code>keyval</code>中已存在指定索引的键名则直接返回。</li><li>获取<code>segments</code>数组及数组个数，当数组个数小于指定索引则将<code>$default</code>的键置<code>null</code>，这也很容易理解，因为<code>segments</code>数组中没用这个键值对。</li><li>根据指定索引截取<code>segments</code>数组，对于之后的数组进行键值方式整合: 奇数为键、偶数为值，<code>$default</code>若不为空且整合之后不存则该键则将该键对应值置为null。</li><li>以指定索引为键、整合后的数组为值存入成员变量<code>keyval</code>中，即<code>$this-&gt;keyval[$which][$n] = $retval;</code>并返回整合后的数组。</li></ol><hr><h4 id="assoc-to-uri"><a href="#assoc-to-uri" class="headerlink" title="assoc_to_uri()"></a>assoc_to_uri()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public function assoc_to_uri($array)</span><br><span class="line">&#123;</span><br><span class="line">    $temp = array();</span><br><span class="line">    foreach ((array) $array as $key =&gt; $val)</span><br><span class="line">    &#123;</span><br><span class="line">        $temp[] = $key;</span><br><span class="line">        $temp[] = $val;</span><br><span class="line">    &#125;</span><br><span class="line">    return implode(&apos;/&apos;, $temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的作用是根据给定的关联数组生成一个对应的URI字符串。</p><hr><h4 id="slash-segment"><a href="#slash-segment" class="headerlink" title="slash_segment()"></a>slash_segment()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function slash_segment($n, $where = &apos;trailing&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_slash_segment($n, $where, &apos;segment&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法从<code>segment</code>数组中取出指定的值，并根据<code>$where</code>在值前后加<code>/</code>。</p><hr><h4 id="slash-rsegment"><a href="#slash-rsegment" class="headerlink" title="slash_rsegment()"></a>slash_rsegment()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function slash_rsegment($n, $where = &apos;trailing&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_slash_segment($n, $where, &apos;rsegment&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法从<code>rsegment</code>数组中取出指定的值，并根据<code>$where</code>在值前后加<code>/</code>。</p><hr><h4 id="slash-segment-1"><a href="#slash-segment-1" class="headerlink" title="_slash_segment()"></a>_slash_segment()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">protected function _slash_segment($n, $where = &apos;trailing&apos;, $which = &apos;segment&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    $leading = $trailing = &apos;/&apos;;</span><br><span class="line">    if ($where === &apos;trailing&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $leading= &apos;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    elseif ($where === &apos;leading&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $trailing= &apos;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    return $leading.$this-&gt;$which($n).$trailing;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法去根据<code>$which</code>来获取指定的值，其中<code>$which</code>可能为<code>segment</code>或<code>rsegment</code>。若<code>$where</code>为<code>trailing</code>时则在后面加<code>/</code>，若为<code>leading</code>则在前面加<code>/</code>，若为其他值则两边都加<code>/</code>。</p><hr><h4 id="segment-array"><a href="#segment-array" class="headerlink" title="segment_array()"></a>segment_array()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function segment_array()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;segments;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法返回<code>segments</code>数组。</p><hr><h4 id="rsegment-array"><a href="#rsegment-array" class="headerlink" title="rsegment_array()"></a>rsegment_array()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function rsegment_array()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;rsegments;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法返回<code>rsegments</code>数组。</p><hr><h4 id="total-segments"><a href="#total-segments" class="headerlink" title="total_segments()"></a>total_segments()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function total_segments()</span><br><span class="line">&#123;</span><br><span class="line">    return count($this-&gt;segments);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法返回<code>segments</code>数组中段的个数。</p><hr><h4 id="total-rsegments"><a href="#total-rsegments" class="headerlink" title="total_rsegments()"></a>total_rsegments()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function total_rsegments()</span><br><span class="line">&#123;</span><br><span class="line">    return count($this-&gt;rsegments);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法返回<code>rsegments</code>数组中元素的个数。</p><hr><h4 id="uri-string"><a href="#uri-string" class="headerlink" title="uri_string()"></a>uri_string()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function uri_string()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;uri_string;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法返回<code>uri_string</code>成员变量的值。</p><hr><h4 id="ruri-string"><a href="#ruri-string" class="headerlink" title="ruri_string()"></a>ruri_string()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function ruri_string()</span><br><span class="line">&#123;</span><br><span class="line">    return ltrim(load_class(&apos;Router&apos;, &apos;core&apos;)-&gt;directory, &apos;/&apos;).implode(&apos;/&apos;, $this-&gt;rsegments);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法返回经过路由处理后的uri，如果设置了覆盖目录则加上此目录，没用则返回类似<code>class/method</code>的uri。</p><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjg3MjQwNw==" title="https://blog.csdn.net/Zhihua_W/article/details/52872407">CI框架源码解析八之地址解析类文件URI.php<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9pdG9waWMub3JnL2NvZGVpZ25pdGVyLWNvbmZpZy5odG1s" title="https://itopic.org/codeigniter-config.html">CodeIgniter配置详解<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5qZWVweGllLm5ldC9hcnRpY2xlLzU0Nzc0NS5odG1s" title="http://www.jeepxie.net/article/547745.html">CodeIgniter框架原码笔记(5)–识别多种URI风格：地址解析类URI.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter编码类文件Utf8.php</title>
      <link href="/2020/01/13/codeigniter-utf8/"/>
      <url>/2020/01/13/codeigniter-utf8/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>ASCII字符的编号从1到128 az，AZ，0-9和标点符号。这对于英语很好，但是那里几乎所有其他语言的字符都不适合那里。为了解决这个问题，我们提供了UTF-8，它可以将额外的字符存储为多位，并向后兼容ASCII。CodeIgniter的Utf8类除构造方法外有<code>clean_string()</code>、<code>safe_ascii_for_xml()</code>、<code>convert_to_utf8()</code>、<code>is_ascii()</code>。</p><a id="more"></a><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">public function __construct()</span><br><span class="line">&#123;</span><br><span class="line">    if (</span><br><span class="line">        defined(&apos;PREG_BAD_UTF8_ERROR&apos;)// PCRE must support UTF-8</span><br><span class="line">        &amp;&amp; (ICONV_ENABLED === TRUE OR MB_ENABLED === TRUE)// iconv or mbstring must be installed</span><br><span class="line">        &amp;&amp; strtoupper(config_item(&apos;charset&apos;)) === &apos;UTF-8&apos;// Application charset must be UTF-8</span><br><span class="line">        )</span><br><span class="line">    &#123;</span><br><span class="line">        define(&apos;UTF8_ENABLED&apos;, TRUE);</span><br><span class="line">        log_message(&apos;debug&apos;, &apos;UTF-8 Support Enabled&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        define(&apos;UTF8_ENABLED&apos;, FALSE);</span><br><span class="line">        log_message(&apos;debug&apos;, &apos;UTF-8 Support Disabled&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    log_message(&apos;info&apos;, &apos;Utf8 Class Initialized&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该构造方法的功能首先判断如果正则表达式支持utf8，iconv库或mbstring库已经安装，应用程序字符集是utf8,那么定义常量UTF8_ENABLED 值为 true，记录日志：UTF-8 Support Enabled。否则设置常量UTF8_ENABLED 为false，记录日志：UTF-8 Support Disabled。最后记录日志信息 Utf8 Class Initialized。</p><hr><h4 id="clean-string"><a href="#clean-string" class="headerlink" title="clean_string()"></a>clean_string()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public function clean_string($str)</span><br><span class="line">&#123;</span><br><span class="line">    if ($this-&gt;is_ascii($str) === FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        if (MB_ENABLED)</span><br><span class="line">        &#123;</span><br><span class="line">            $str = mb_convert_encoding($str, &apos;UTF-8&apos;, &apos;UTF-8&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">        elseif (ICONV_ENABLED)</span><br><span class="line">        &#123;</span><br><span class="line">            $str = @iconv(&apos;UTF-8&apos;, &apos;UTF-8//IGNORE&apos;, $str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法默认在输入类<code>Input</code>中使用，用于判断字符串不为ASCII码的情况下使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ubWItY29udmVydC1lbmNvZGluZw==" title="https://www.php.net/manual/zh/function.mb-convert-encoding">mb_convert_encoding()<i class="fa fa-external-link"></i></span>或<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uaWNvbnY=" title="https://www.php.net/manual/zh/function.iconv">iconv()<i class="fa fa-external-link"></i></span>函数将字符串转换为<code>UTF-8</code>。</p><hr><h4 id="safe-ascii-for-xml"><a href="#safe-ascii-for-xml" class="headerlink" title="safe_ascii_for_xml()"></a>safe_ascii_for_xml()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function safe_ascii_for_xml($str)</span><br><span class="line">&#123;</span><br><span class="line">    return remove_invisible_characters($str, FALSE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于删除所有在xml中可能导致问题的ASCII码字符，除了<strong>水平制表符</strong>、<strong>换行</strong>、<strong>回车</strong>。直接调用<span class="exturl" data-url="aHR0cHM6Ly9wdXJldmVuLmNjLzIwMTkvMTIvMjMvY29kZWlnbml0ZXItY29tbW9uLw==" title="https://pureven.cc/2019/12/23/codeigniter-common/">remove_invisible_characters()<i class="fa fa-external-link"></i></span>来删除无效的字符并返回。</p><hr><h4 id="convert-to-utf8"><a href="#convert-to-utf8" class="headerlink" title="convert_to_utf8()"></a>convert_to_utf8()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public function convert_to_utf8($str, $encoding)</span><br><span class="line">&#123;</span><br><span class="line">    if (MB_ENABLED)</span><br><span class="line">    &#123;</span><br><span class="line">        return mb_convert_encoding($str, &apos;UTF-8&apos;, $encoding);</span><br><span class="line">    &#125;</span><br><span class="line">    elseif (ICONV_ENABLED)</span><br><span class="line">    &#123;</span><br><span class="line">        return @iconv($encoding, &apos;UTF-8&apos;, $str);</span><br><span class="line">    &#125;</span><br><span class="line">    return FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于将字符串转换为UTF-8编码，如果支持mbstring则使用mb_convert_encoding()进行转换、否则如果支持iconv则使用iconv()进行转换。</p><hr><h4 id="is-ascii"><a href="#is-ascii" class="headerlink" title="is_ascii()"></a>is_ascii()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function is_ascii($str)</span><br><span class="line">&#123;</span><br><span class="line">    return (preg_match(&apos;/[^\x00-\x7F]/S&apos;, $str) === 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于检测字符串是不是ASCII码。<code>[^\x00-\x7F]</code>匹配ASCII值从0-127的单字节字符，也就是数字、英文字母、半角符号以及某些控制字符。<code>/S</code>表示非空白字符。</p><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjg2ODc4Ng==" title="https://blog.csdn.net/Zhihua_W/article/details/52868786">CI框架源码解析七之编码类文件Utf8.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter配置类文件Config.php</title>
      <link href="/2019/12/31/codeigniter-config/"/>
      <url>/2019/12/31/codeigniter-config/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>CodeIgniter的配置类有跟配置相关的属性和方法，比如:load()方法、item()方法等等。application/config目录下有好多配置文件，这些文件通过手工加载时会用到<code>load()</code>方法；当加载完某个配置文件后，可以通过<code>item()</code>方法获取某个配置项，当然也可以通过<code>set_item()</code>设置配置项。配置类主要完成下面几个功能:</p><ul><li>加载配置文件。</li><li>获取配置项。</li><li>设置配置项。</li><li>一些url辅助函数的函数原型。</li></ul><p>下面对配置类进行详细分析。</p><a id="more"></a><hr><h4 id="相关属性"><a href="#相关属性" class="headerlink" title="相关属性"></a>相关属性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public $config = array();</span><br><span class="line">public $is_loaded =array();</span><br><span class="line">public $_config_paths =array(APPPATH);</span><br></pre></td></tr></table></figure><ul><li>$config: <span class="exturl" data-url="aHR0cHM6Ly9jb2RlaWduaXRlci5vcmcuY24vdXNlcl9ndWlkZS9saWJyYXJpZXMvY29uZmlnLmh0bWw=" title="https://codeigniter.org.cn/user_guide/libraries/config.html">官网<i class="fa fa-external-link"></i></span>的解释为 所有已加载的配置项组成的数组。</li><li>$is_loaded: 所有已加载的配置文件组成的数组。</li><li>$_config_paths: 默认时一个数组<code>array(APPPATH)</code>，当自动加载package时会将package的路径放入该数组中。</li></ul><hr><h4 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">public function __construct()</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;config =&amp; get_config();</span><br><span class="line">    if (empty($this-&gt;config[&apos;base_url&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        if (isset($_SERVER[&apos;SERVER_ADDR&apos;]))</span><br><span class="line">        &#123;</span><br><span class="line">            if (strpos($_SERVER[&apos;SERVER_ADDR&apos;], &apos;:&apos;) !== FALSE)</span><br><span class="line">            &#123;</span><br><span class="line">                $server_addr = &apos;[&apos;.$_SERVER[&apos;SERVER_ADDR&apos;].&apos;]&apos;;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                $server_addr = $_SERVER[&apos;SERVER_ADDR&apos;];</span><br><span class="line">            &#125;</span><br><span class="line">            $base_url = (is_https() ? &apos;https&apos; : &apos;http&apos;).&apos;://&apos;.$server_addr</span><br><span class="line">                .substr($_SERVER[&apos;SCRIPT_NAME&apos;], 0, strpos($_SERVER[&apos;SCRIPT_NAME&apos;], basename($_SERVER[&apos;SCRIPT_FILENAME&apos;])));</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $base_url = &apos;http://localhost/&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">        $this-&gt;set_item(&apos;base_url&apos;, $base_url);</span><br><span class="line">    &#125;</span><br><span class="line">    log_message(&apos;info&apos;, &apos;Config Class Initialized&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的功能实现:</p><ol><li>由<span class="exturl" data-url="aHR0cHM6Ly9wdXJldmVuLmNjLzIwMTkvMTIvMjMvY29kZWlnbml0ZXItY29tbW9uLw==" title="https://pureven.cc/2019/12/23/codeigniter-common/">全局函数库文件<i class="fa fa-external-link"></i></span>可知<code>get_config()</code>函数返回的是config文件中$config的引用。这里在Config组件实例化时，要将所有的配置存放到属性$config中，便于之后的访问和处理。</li><li>如果配置文件中<code>base_url</code>设置为空，即<code>$config[&#39;base_url&#39;] = &#39;&#39;;</code>，这时该方法会根据服务器和执行环境信息来设置此配置项，不满足条件时设置为<code>http://localhost/</code>。</li></ol><hr><h4 id="load"><a href="#load" class="headerlink" title="load()"></a>load()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">public function load($file = &apos;&apos;, $use_sections = FALSE, $fail_gracefully = FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    $file = ($file === &apos;&apos;) ? &apos;config&apos; : str_replace(&apos;.php&apos;, &apos;&apos;, $file);</span><br><span class="line">    $loaded = FALSE;</span><br><span class="line">    foreach ($this-&gt;_config_paths as $path)</span><br><span class="line">    &#123;</span><br><span class="line">        foreach (array($file, ENVIRONMENT.DIRECTORY_SEPARATOR.$file) as $location)</span><br><span class="line">        &#123;</span><br><span class="line">            $file_path = $path.&apos;config/&apos;.$location.&apos;.php&apos;;</span><br><span class="line">            if (in_array($file_path, $this-&gt;is_loaded, TRUE))</span><br><span class="line">            &#123;</span><br><span class="line">                return TRUE;</span><br><span class="line">            &#125;</span><br><span class="line">            if ( ! file_exists($file_path))</span><br><span class="line">            &#123;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">            include($file_path);</span><br><span class="line">            if ( ! isset($config) OR ! is_array($config))</span><br><span class="line">            &#123;</span><br><span class="line">                if ($fail_gracefully === TRUE)</span><br><span class="line">                &#123;</span><br><span class="line">                    return FALSE;</span><br><span class="line">                &#125;</span><br><span class="line">                show_error(&apos;Your &apos;.$file_path.&apos; file does not appear to contain a valid configuration array.&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">            if ($use_sections === TRUE)</span><br><span class="line">            &#123;</span><br><span class="line">                $this-&gt;config[$file] = isset($this-&gt;config[$file])</span><br><span class="line">                    ? array_merge($this-&gt;config[$file], $config)</span><br><span class="line">                    : $config;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                $this-&gt;config = array_merge($this-&gt;config, $config);</span><br><span class="line">            &#125;</span><br><span class="line">            $this-&gt;is_loaded[] = $file_path;</span><br><span class="line">            $config = NULL;</span><br><span class="line">            $loaded = TRUE;</span><br><span class="line">            log_message(&apos;debug&apos;, &apos;Config file loaded: &apos;.$file_path);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($loaded === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        return TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    elseif ($fail_gracefully === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    show_error(&apos;The configuration file &apos;.$file.&apos;.php does not exist.&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的功能是<strong>include</strong>默认或指定的配置文件并将完整路径放入<code>is_loaded</code>。功能实现:</p><ol><li>明确要加载的配置文件名，如果没有指定则为<code>config</code>。这里需要去掉<code>.php</code>扩展名。</li><li>定义局部变量<code>$loaded</code>为FALSE。</li><li>遍历数组<code>_config_paths</code>来判断要加载的文件是否存在，不存在则第三个参数<code>$fail_gracefully</code>为true的情况下返回false，否则<strong>报错</strong>。这里需要加载的文件也可能为对应当前运行环境的配置文件，即<code>ENVIRONMENT.DIRECTORY_SEPARATOR.$file</code>，因此也是要遍历来判断的。</li><li>如果配置文件存在则加载，加载后发现$config遍历不为数组则报错返回，若为数组继续。</li><li>第二个参数<code>$use_sections</code>如果为true会对该配置文件启用独立的key存储，并且对于相同键名的项用新加载的覆盖主配置文件中的，<font color="#891717"><b>注意</b>:这里赋值时指定了文件名<code>$this-&gt;config[$file]</code></font>。然后将文件路径赋值给数组<code>is_loaded</code>便于加载文件的追踪。</li></ol><hr><h4 id="item"><a href="#item" class="headerlink" title="item()"></a>item()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public function item($item, $index = &apos;&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    if ($index == &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        return isset($this-&gt;config[$item]) ? $this-&gt;config[$item] : NULL;</span><br><span class="line">    &#125;</span><br><span class="line">    return isset($this-&gt;config[$index], $this-&gt;config[$index][$item]) ? $this-&gt;config[$index][$item] : NULL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于获取某个配置项。第二个参数<code>$index</code>表示使用<code>load()</code>方法加载文件时<code>$use_sections</code>参数为true，写入config数组用文件名当作key了。因此当$index不为空时表示获取的是<code>$this-&gt;config[$index][$item]</code>。</p><hr><h4 id="slash-item"><a href="#slash-item" class="headerlink" title="slash_item()"></a>slash_item()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public function slash_item($item)</span><br><span class="line">&#123;</span><br><span class="line">    if ( ! isset($this-&gt;config[$item]))</span><br><span class="line">    &#123;</span><br><span class="line">        return NULL;</span><br><span class="line">    &#125;</span><br><span class="line">    elseif (trim($this-&gt;config[$item]) === &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        return &apos;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    return rtrim($this-&gt;config[$item], &apos;/&apos;).&apos;/&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法值判断主配置文件中是否有指定的配置项，并在配置项最后加上反斜杠，通常用于base_url和index_page这两个配置项的处理。</p><hr><h4 id="site-url"><a href="#site-url" class="headerlink" title="site_url()"></a>site_url()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">public function site_url($uri = &apos;&apos;, $protocol = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    $base_url = $this-&gt;slash_item(&apos;base_url&apos;);</span><br><span class="line">    if (isset($protocol))</span><br><span class="line">    &#123;</span><br><span class="line">        if ($protocol === &apos;&apos;)</span><br><span class="line">        &#123;</span><br><span class="line">            $base_url = substr($base_url, strpos($base_url, &apos;//&apos;));</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $base_url = $protocol.substr($base_url, strpos($base_url, &apos;://&apos;));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if (empty($uri))</span><br><span class="line">    &#123;</span><br><span class="line">        return $base_url.$this-&gt;item(&apos;index_page&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    $uri = $this-&gt;_uri_string($uri);</span><br><span class="line">    if ($this-&gt;item(&apos;enable_query_strings&apos;) === FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        $suffix = isset($this-&gt;config[&apos;url_suffix&apos;]) ? $this-&gt;config[&apos;url_suffix&apos;] : &apos;&apos;;</span><br><span class="line">        if ($suffix !== &apos;&apos;)</span><br><span class="line">        &#123;</span><br><span class="line">            if (($offset = strpos($uri, &apos;?&apos;)) !== FALSE)</span><br><span class="line">            &#123;</span><br><span class="line">                $uri = substr($uri, 0, $offset).$suffix.substr($uri, $offset);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                $uri .= $suffix;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return $base_url.$this-&gt;slash_item(&apos;index_page&apos;).$uri;</span><br><span class="line">    &#125;</span><br><span class="line">    elseif (strpos($uri, &apos;?&apos;) === FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        $uri = &apos;?&apos;.$uri;</span><br><span class="line">    &#125;</span><br><span class="line">    return $base_url.$this-&gt;item(&apos;index_page&apos;).$uri;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>官网给出的解释是: 根据配置文件返回你的站点URL。index.php（获取其他你在配置文件中设置的 <strong>index_page</strong> 参数） 将会包含在你的 URL 中，另外再加上你传给函数的 URI 参数，以及配置文件中设置的 <strong>url_suffix</strong> 参数。<font color="#891717">推荐在任何时候都使用这种方法来生成你的 URL ，这样在你的 URL 变动时你的代码将具有可移植性。</font><br>通常通过<span class="exturl" data-url="aHR0cHM6Ly9jb2RlaWduaXRlci5vcmcuY24vdXNlcl9ndWlkZS9oZWxwZXJzL3VybF9oZWxwZXIuaHRtbA==" title="https://codeigniter.org.cn/user_guide/helpers/url_helper.html">URL辅助函数<i class="fa fa-external-link"></i></span>中函数<code>site_url()</code>来访问。例如：<code>echo site_url(&#39;news/local/123&#39;);</code>会返回<code>http://example.com/index.php/news/local/123</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function site_url($uri = &apos;&apos;, $protocol = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return get_instance()-&gt;config-&gt;site_url($uri, $protocol);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>功能实现:</p><ol><li>获取base_url，格式化协议类型。</li><li>如果uri为空，在base_url后面加上index_page并返回，否则格式化uri。</li><li>如果没有开启了查询字符串则判断是否有后缀，如果有后缀则uri后面加上此后缀，然后返回base_url + index_page + uri。</li><li>如果开启了字符串查询则在uri前面加上问号构成类似<code>?0=news&amp;1=local&amp;2=123</code>的uri，然后返回base_uri + index_page + uri。</li></ol><hr><h4 id="base-url"><a href="#base-url" class="headerlink" title="base_url()"></a>base_url()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public function base_url($uri = &apos;&apos;, $protocol = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    $base_url = $this-&gt;slash_item(&apos;base_url&apos;);</span><br><span class="line">    if (isset($protocol))</span><br><span class="line">    &#123;</span><br><span class="line">        // For protocol-relative links</span><br><span class="line">        if ($protocol === &apos;&apos;)</span><br><span class="line">        &#123;</span><br><span class="line">            $base_url = substr($base_url, strpos($base_url, &apos;//&apos;));</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $base_url = $protocol.substr($base_url, strpos($base_url, &apos;://&apos;));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return $base_url.$this-&gt;_uri_string($uri);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法根据配置文件返回你站点的根URL，和<code>site_url()</code>函数相同，只是不会在URL的后面加上<strong>index_page</strong>或<strong>url_suffix</strong>。但也字符串或数组格式的URI段，这是由于调用了<code>_url_string()</code>的缘故。官网举例<code>echo base_url(&quot;blog/post/123&quot;)</code>将会返回<code>http://example.com/blog/post/123</code>。<br>功能实现：</p><ol><li>从配置中获取$base_url，这个$base_url是经过构造方法处理后的。</li><li>如果指定了协议类型则在$base_url中替换为指定的协议。</li><li>给$base_url加上格式化后的$uri。这里参见<code>_uri_string()</code>。</li></ol><hr><h4 id="uri-string"><a href="#uri-string" class="headerlink" title="_uri_string()"></a>_uri_string()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">protected function _uri_string($uri)</span><br><span class="line">&#123;</span><br><span class="line">    if ($this-&gt;item(&apos;enable_query_strings&apos;) === FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        is_array($uri) &amp;&amp; $uri = implode(&apos;/&apos;, $uri);</span><br><span class="line">        return ltrim($uri, &apos;/&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    elseif (is_array($uri))</span><br><span class="line">    &#123;</span><br><span class="line">        return http_build_query($uri);</span><br><span class="line">    &#125;</span><br><span class="line">    return $uri;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的作用是格式化$uri，通常只被<code>site_url()</code>和<code>base_url()</code>调用，参数为URL字符串，也可以是一个数组，比如：<code>news/local/123</code>或<code>[&#39;news&#39;, &#39;local&#39;, &#39;123&#39;]</code>。</p><ol><li>如果没用启用查询字符串，即<code>$config[&#39;enable_query_strings&#39;] = FALSE</code>则返回<span class="exturl" data-url="aHR0cHM6Ly9jb2RlaWduaXRlci5vcmcuY24vdXNlcl9ndWlkZS9nZW5lcmFsL3VybHMuaHRtbD9oaWdobGlnaHQ9ZW5hYmxlX3F1ZXJ5X3N0cmluZ3M=" title="https://codeigniter.org.cn/user_guide/general/urls.html?highlight=enable_query_strings">分段URI<i class="fa fa-external-link"></i></span>，即<code>news/local/123</code>格式。</li><li>如果启用了查询字符串，则使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uaHR0cC1idWlsZC1xdWVyeS5waHA=" title="https://www.php.net/manual/zh/function.http-build-query.php">http_build_query<i class="fa fa-external-link"></i></span>生成 URL-encode 之后的请求字符串，这里为<code>0=news&amp;1=local&amp;2=123</code>格式。</li></ol><hr><h4 id="system-url"><a href="#system-url" class="headerlink" title="system_url()"></a>system_url()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function system_url()</span><br><span class="line">&#123;</span><br><span class="line">    $x = explode(&apos;/&apos;, preg_replace(&apos;|/*(.+?)/*$|&apos;, &apos;\\1&apos;, BASEPATH));</span><br><span class="line">    return $this-&gt;slash_item(&apos;base_url&apos;).end($x).&apos;/&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法返回system目录的url，不安全，已被废弃。<code>\\1</code>参考<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ucHJlZy1yZXBsYWNlLnBocA==" title="https://www.php.net/manual/zh/function.preg-replace.php">preg_replace<i class="fa fa-external-link"></i></span>。</p><hr><h4 id="set-item"><a href="#set-item" class="headerlink" title="set_item()"></a>set_item()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function set_item($item, $value)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;config[$item] = $value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于动态的设置或修改某个已存在的配置项。比如：<code>$this-&gt;config-&gt;set_item(&#39;item_name&#39;, &#39;item_value&#39;);</code>。</p><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjg1OTgyNA==" title="https://blog.csdn.net/Zhihua_W/article/details/52859824">CI框架源码解析六之配置类文件Config.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter钩子类文件Hooks.php</title>
      <link href="/2019/12/29/codeigniter-hooks/"/>
      <url>/2019/12/29/codeigniter-hooks/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>CodeIgniter的钩子特性提供了一种方法来<strong>修改框架的内部运作流程，而无需修改核心文件</strong>。CodeIgniter的运行遵循着一个特定的流程，你可以参考这个页面的<span class="exturl" data-url="aHR0cHM6Ly9jb2RlaWduaXRlci5vcmcuY24vdXNlcl9ndWlkZS9vdmVydmlldy9hcHBmbG93Lmh0bWw=" title="https://codeigniter.org.cn/user_guide/overview/appflow.html">应用程序流程图<i class="fa fa-external-link"></i></span> 。但是，有些时候你可能希望<strong>在执行流程中的某些阶段添加一些动作</strong>，例如在控制器加载之前或之后执行一段脚本， 或者在其他的某些位置触发你的脚本。上面是摘自<span class="exturl" data-url="aHR0cHM6Ly9jb2RlaWduaXRlci5vcmcuY24vdXNlcl9ndWlkZS9nZW5lcmFsL2hvb2tzLmh0bWw=" title="https://codeigniter.org.cn/user_guide/general/hooks.html">官网<i class="fa fa-external-link"></i></span>的描述，在实际应用中见过一个例子: 在控制器实例化之后控制器的任何方法调用前先进行表单验证，即注册一个表单验证的钩子将表单验证从各个控制器方法中分离出来。</p><a id="more"></a><hr><h4 id="CI中的挂钩点"><a href="#CI中的挂钩点" class="headerlink" title="CI中的挂钩点"></a>CI中的挂钩点</h4><p>以下是<span class="exturl" data-url="aHR0cHM6Ly9jb2RlaWduaXRlci5vcmcuY24vdXNlcl9ndWlkZS9nZW5lcmFsL2hvb2tzLmh0bWw=" title="https://codeigniter.org.cn/user_guide/general/hooks.html">官网<i class="fa fa-external-link"></i></span>给出的所有可用挂钩点的一份列表:</p><ul><li><strong>pre_system</strong> 在系统执行的早期调用，这个时候只有 基准测试类 和 钩子类 被加载了， 还没有执行到路由或其他的流程。</li><li><strong>pre_controller</strong> 在你的控制器调用之前执行，所有的基础类都已加载，路由和安全检查也已经完成。</li><li><strong>post_controller_constructor</strong> 在你的控制器实例化之后立即执行，控制器的任何方法都还尚未调用。</li><li><strong>post_controller</strong> 在你的控制器完全运行结束时执行。</li><li><strong>display_override</strong> 覆盖 _display() 方法，该方法用于在系统执行结束时向浏览器发送最终的页面结果。 这可以让你有自己的显示页面的方法。注意你可能需要使用 $this-&gt;CI =&amp; get_instance() 方法来获取 CI 超级对象，以及使用 $this-&gt;CI-&gt;output-&gt;get_output() 方法来 获取最终的显示数据。</li><li><strong>cache_override</strong> 使用你自己的方法来替代 输出类 中的 _display_cache() 方法，这让你有自己的缓存显示机制。</li><li><strong>post_system</strong> 在最终的页面发送到浏览器之后、在系统的最后期被调用。</li></ul><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public $enabled = FALSE;</span><br><span class="line">public $hooks =array();</span><br><span class="line">protected $_objects = array();</span><br><span class="line">protected $_in_progress = FALSE;</span><br></pre></td></tr></table></figure><ol><li><code>$enabled</code>用于判断钩子是否可用。</li><li><code>$hooks</code>用于存储配置文件中定义的钩子列表，是一个数组。</li><li><code>$_objects</code>用于存储钩子类的实例对象。</li><li><code>$_in_progress</code>用于判断钩子是否正在被调用，防止出现死循环。</li></ol><hr><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">public function __construct()</span><br><span class="line">&#123;</span><br><span class="line">    $CFG =&amp; load_class(&apos;Config&apos;, &apos;core&apos;);</span><br><span class="line">    log_message(&apos;info&apos;, &apos;Hooks Class Initialized&apos;);</span><br><span class="line">    if ($CFG-&gt;item(&apos;enable_hooks&apos;) === FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if (file_exists(APPPATH.&apos;config/hooks.php&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        include(APPPATH.&apos;config/hooks.php&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    if (file_exists(APPPATH.&apos;config/&apos;.ENVIRONMENT.&apos;/hooks.php&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        include(APPPATH.&apos;config/&apos;.ENVIRONMENT.&apos;/hooks.php&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    if ( ! isset($hook) OR ! is_array($hook))</span><br><span class="line">    &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;hooks =&amp; $hook;</span><br><span class="line">    $this-&gt;enabled = TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法将完成组件钩子初始化，功能实现:</p><ol><li>加载配置类，检查配置文件中<code>enable_hooks</code>是否开启，该参数可用在<code>APPPATH.config/config.php</code>文件中进行设置。</li><li>如果启用了hook功能，则继续加载<code>hooks.php</code>文件。如果有对应开发环境特定的钩子配置文件则加载。</li><li>此时如果$hook为空或不是数组(<code>即未设置任何hook，或 hook格式有问题</code>)则直接退出。如果正常则将配置文件中的数组赋值给<code>$hooks</code>属性同时<code>$enabled</code>属性置为true表示钩子可用。</li></ol><hr><h4 id="call-hook"><a href="#call-hook" class="headerlink" title="call_hook()"></a>call_hook()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public function call_hook($which = &apos;&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    if ( ! $this-&gt;enabled OR ! isset($this-&gt;hooks[$which]))</span><br><span class="line">    &#123;</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    if (is_array($this-&gt;hooks[$which]) &amp;&amp; ! isset($this-&gt;hooks[$which][&apos;function&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        foreach ($this-&gt;hooks[$which] as $val)</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;_run_hook($val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_run_hook($this-&gt;hooks[$which]);</span><br><span class="line">    &#125;</span><br><span class="line">    return TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法是<span class="exturl" data-url="aHR0cHM6Ly9wdXJldmVuLmNjLzIwMTkvMTIvMTkvY29kZWlnbml0ZXItY29kZWlnbml0ZXIv" title="https://pureven.cc/2019/12/19/codeigniter-codeigniter/">CodeIgniter.php<i class="fa fa-external-link"></i></span>文件中直接调用的接口，功能是判断钩子是否启用，以及被调用的钩子是否被定义，最后调用<code>_run_hook()</code>内部方法执行。功能实现:</p><ul><li>如果钩子未启用或被调用的钩子不存在则直接返回。</li><li>判断钩子的定义类型分别来执行<code>_run_hook()</code>，这里如果钩子数组是一个关联数组存在function键名则执行根据其值执行<code>_run_hook()</code>，如果是多次调用同一个挂钩点或者匿名函数进行调用的则直接执行<code>_run_hook()</code>。</li></ul><p>这里钩子的定义类型有三种：</p><ol><li>钩子数组是一个关联数组，数组的键名可以为<code>class</code>、<code>function</code>、<code>filename</code>、<code>filepath</code>、<code>params</code>。下面是官网例子:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$hook[&apos;pre_controller&apos;] = array(</span><br><span class="line">    &apos;class&apos;    =&gt; &apos;MyClass&apos;,</span><br><span class="line">    &apos;function&apos; =&gt; &apos;Myfunction&apos;,</span><br><span class="line">    &apos;filename&apos; =&gt; &apos;Myclass.php&apos;,</span><br><span class="line">    &apos;filepath&apos; =&gt; &apos;hooks&apos;,</span><br><span class="line">    &apos;params&apos;   =&gt; array(&apos;beer&apos;, &apos;wine&apos;, &apos;snacks&apos;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li>钩子数组用二维数组来实现多次调用同一个挂钩点，多个脚本执行顺序为定义数组的顺序，如:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$hook[&apos;pre_controller&apos;][] = array(</span><br><span class="line">    &apos;class&apos;    =&gt; &apos;MyClass&apos;,</span><br><span class="line">    &apos;function&apos; =&gt; &apos;MyMethod&apos;,</span><br><span class="line">    &apos;filename&apos; =&gt; &apos;Myclass.php&apos;,</span><br><span class="line">    &apos;filepath&apos; =&gt; &apos;hooks&apos;,</span><br><span class="line">    &apos;params&apos;   =&gt; array(&apos;beer&apos;, &apos;wine&apos;, &apos;snacks&apos;)</span><br><span class="line">);</span><br><span class="line">$hook[&apos;pre_controller&apos;][] = array(</span><br><span class="line">    &apos;class&apos;    =&gt; &apos;MyOtherClass&apos;,</span><br><span class="line">    &apos;function&apos; =&gt; &apos;MyOtherMethod&apos;,</span><br><span class="line">    &apos;filename&apos; =&gt; &apos;Myotherclass.php&apos;,</span><br><span class="line">    &apos;filepath&apos; =&gt; &apos;hooks&apos;,</span><br><span class="line">    &apos;params&apos;   =&gt; array(&apos;red&apos;, &apos;yellow&apos;, &apos;blue&apos;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li>闭包(匿名)函数作为钩子，如在系统执行早期<code>使用钩子自动将环境变量.evn加载到getenv()、$_ENV和$_SERVER中</code>。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$hook[&apos;pre_system&apos;][] = function() &#123;</span><br><span class="line">    $dotenv = new Dotenv\Dotenv(FCPATH);</span><br><span class="line">    $dotenv-&gt;load();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ol><hr><h4 id="run-hook"><a href="#run-hook" class="headerlink" title="_run_hook()"></a>_run_hook()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">protected function _run_hook($data)</span><br><span class="line">&#123;</span><br><span class="line">    if (is_callable($data))</span><br><span class="line">    &#123;</span><br><span class="line">        is_array($data)</span><br><span class="line">            ? $data[0]-&gt;&#123;$data[1]&#125;()</span><br><span class="line">            : $data();</span><br><span class="line">        return TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    elseif ( ! is_array($data))</span><br><span class="line">    &#123;</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($this-&gt;_in_progress === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if ( ! isset($data[&apos;filepath&apos;], $data[&apos;filename&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    $filepath = APPPATH.$data[&apos;filepath&apos;].&apos;/&apos;.$data[&apos;filename&apos;];</span><br><span class="line">    if ( ! file_exists($filepath))</span><br><span class="line">    &#123;</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    $class= empty($data[&apos;class&apos;]) ? FALSE : $data[&apos;class&apos;];</span><br><span class="line">    $function= empty($data[&apos;function&apos;]) ? FALSE : $data[&apos;function&apos;];</span><br><span class="line">    $params= isset($data[&apos;params&apos;]) ? $data[&apos;params&apos;] : &apos;&apos;;</span><br><span class="line">    if (empty($function))</span><br><span class="line">    &#123;</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;_in_progress = TRUE;</span><br><span class="line">    if ($class !== FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        // The object is stored?</span><br><span class="line">        if (isset($this-&gt;_objects[$class]))</span><br><span class="line">        &#123;</span><br><span class="line">            if (method_exists($this-&gt;_objects[$class], $function))</span><br><span class="line">            &#123;</span><br><span class="line">                $this-&gt;_objects[$class]-&gt;$function($params);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                return $this-&gt;_in_progress = FALSE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            class_exists($class, FALSE) OR require_once($filepath);</span><br><span class="line">            if ( ! class_exists($class, FALSE) OR ! method_exists($class, $function))</span><br><span class="line">            &#123;</span><br><span class="line">                return $this-&gt;_in_progress = FALSE;</span><br><span class="line">            &#125;</span><br><span class="line">            $this-&gt;_objects[$class] = new $class();</span><br><span class="line">            $this-&gt;_objects[$class]-&gt;$function($params);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        function_exists($function) OR require_once($filepath);</span><br><span class="line">        if ( ! function_exists($function))</span><br><span class="line">        &#123;</span><br><span class="line">            return $this-&gt;_in_progress = FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">        $function($params);</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;_in_progress = FALSE;</span><br><span class="line">    return TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法是钩子的实际执行者，功能实现:</p><ol><li>判断参数如果是个闭包(匿名)函数则直接执行并返回，否则判断参数如果不为数组则直接返回。</li><li>通过<code>_in_progress</code>判断如果正在执行中则返回，防止死循环。</li><li>如果不是匿名函数，则需要根据<code>filepath</code>和<code>filename</code>来确定文件是否存在，因此这两个参数不存在或文件不存在直接返回。</li><li>根据参数确定<code>class</code>、<code>function</code>、<code>params</code>，如果<code>function</code>不存在则直接返回。</li><li>设置<code>_in_progress</code>为true，即表示当前钩子正在执行中。</li><li>如果<code>$class</code>存在则加载相关类文件，<code>_objects</code>属性赋值该类的实例并调用相关方法(<code>function</code>)；不存在<code>$class</code>则直接执行函数<code>function</code>。</li><li>执行完成后，设置<code>_in_progress</code>为false。</li></ol><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjg1MDc3Mw==" title="https://blog.csdn.net/Zhihua_W/article/details/52850773">CI框架源码解析五之钩子类文件Hooks.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter基准测试类文件Benchmark.php</title>
      <link href="/2019/12/29/codeigniter-benchmark/"/>
      <url>/2019/12/29/codeigniter-benchmark/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>基准测试类文件Benchmark.php为CI框架第一个加载的core类组件，该组件的主要功能有:</p><ul><li>记录程序运行时间。</li><li>记录程序运行内存、CPU使用情况。</li></ul><p>该组件由三个方法组成，分别为<code>mark()</code>、<code>elapsed_time()</code>、<code>memory_usage()</code>。</p><a id="more"></a><hr><h4 id="mark"><a href="#mark" class="headerlink" title="mark()"></a>mark()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function mark($name)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;marker[$name] = microtime(TRUE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的作用是对$name做一个标记，以$name为key，使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ubWljcm90aW1l" title="https://www.php.net/manual/zh/function.microtime">microtime(TRUE)<i class="fa fa-external-link"></i></span>获取当前unix时间戳（单位:微秒数）作为value写入<code>$marker</code>数组中。</p><hr><h4 id="elapsed-time"><a href="#elapsed-time" class="headerlink" title="elapsed_time()"></a>elapsed_time()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public function elapsed_time($point1 = &apos;&apos;, $point2 = &apos;&apos;, $decimals = 4)</span><br><span class="line">&#123;</span><br><span class="line">    if ($point1 === &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        return &apos;&#123;elapsed_time&#125;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    if ( ! isset($this-&gt;marker[$point1]))</span><br><span class="line">    &#123;</span><br><span class="line">        return &apos;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    if ( ! isset($this-&gt;marker[$point2]))</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;marker[$point2] = microtime(TRUE);</span><br><span class="line">    &#125;</span><br><span class="line">    return number_format($this-&gt;marker[$point2] - $this-&gt;marker[$point1], $decimals);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的功能是返回两个标记间的运行时间。该方法使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ubnVtYmVyLWZvcm1hdA==" title="https://www.php.net/manual/zh/function.number-format">number_format<i class="fa fa-external-link"></i></span>函数格式化使用时间。功能实现:</p><ul><li>如果没有指定标记则返回整个程序运行的时间。</li><li>如果指定了标记但未在$marker数组中则返回空。</li><li>如果未指定第二个参数则返回第一个标记到运行结束之间的时间。</li></ul><p>mark()、elapsed_time()方法的使用流程如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$BM =&amp; load_class(&apos;Benchmark&apos;, &apos;core&apos;);</span><br><span class="line">$BM-&gt;mark(&apos;total_execution_time_start&apos;);</span><br><span class="line">// 程序执行代码块···</span><br><span class="line">$BM-&gt;mark(&apos;total_execution_time_end&apos;);</span><br><span class="line">$used_time = $BM-&gt;elapsed_time(&apos;total_execution_time_start&apos;, &apos;total_execution_time_end&apos;);</span><br></pre></td></tr></table></figure><hr><h4 id="memory-usage"><a href="#memory-usage" class="headerlink" title="memory_usage()"></a>memory_usage()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function memory_usage()</span><br><span class="line">&#123;</span><br><span class="line">    return &apos;&#123;memory_usage&#125;&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法用来显示占用内存。<font color="#891717"><strong>注意</strong>: {elapsed_time} {memory_usage}是CI中的伪变量。这些伪变量将在Output类中进行解析。</font></p><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjg0NjI3NA==" title="https://blog.csdn.net/Zhihua_W/article/details/52846274">CI框架源码解析四之基准测试类文件Benchmark.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter全局函数库文件Common.php</title>
      <link href="/2019/12/23/codeigniter-common/"/>
      <url>/2019/12/23/codeigniter-common/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>Common.php文件定义了一系列的全局函数，CI引导文件<b>CodeIgniter.php</b>开头加载完常量后最先加载的就是Common.php文件，然后使用全局函数加载后面的组件、判断PHP版本等等一系列操作。全局函数库文件中的函数有: <code>is_php()</code>、<code>is_really_writable()</code>、<code>load_class()</code>、<code>is_loaded()</code>、<code>get_config()</code>、<code>config_item()</code>、<code>get_mimes()</code>、<code>is_https()</code>、<code>is_cli()</code>、<code>show_error()</code>、<code>show_404()</code>、<code>log_message()</code>、<code>set_status_header()</code>、<code>_error_handler()</code>、<code>_exception_handler()</code>、<code>_shutdown_handler()</code>、<code>remove_invisible_characters()</code>、<code>html_escape()</code>、<code>_stringify_attributes()</code>、<code>function_usable()</code>等，下面进行逐一分析。</p><a id="more"></a><hr><h4 id="is-php"><a href="#is-php" class="headerlink" title="is_php()"></a>is_php()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'is_php'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_php</span><span class="params">($version)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> $_is_php;</span><br><span class="line">$version = (string) $version;</span><br><span class="line"><span class="keyword">if</span> ( ! <span class="keyword">isset</span>($_is_php[$version]))</span><br><span class="line">&#123;</span><br><span class="line">$_is_php[$version] = version_compare(PHP_VERSION, $version, <span class="string">'&gt;='</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $_is_php[$version];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数的作用是判断当前环境的PHP版本是否是指定版本<code>$version</code>或更高版本。<font color="#891717">因为CI框架中有一些配置依赖于PHP的版本和行为（如magic_quotes，PHP5.3版本之前，该特性用于指定是否开启转义，而PHP5.3之后，该特性已经被废弃），为了向后兼容，当遇到magic_quotes、register_globals等后来版本已删除的功能时需要先进行版本判断，当运行环境PHP版本小于指定版本时禁用这些功能。在CodeIgniter.php文件中就是这么做的。</font><br>功能实现: </p><ol><li>定义一个静态数组变量<code>$_is_php</code>，用于存放比较结果。当下此再调用该方法比较PHP版本时会先遍历<code>$_is_php</code>数组，如果有记录则直接返回，没用则继续。</li><li>版本比较： 通过<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24udmVyc2lvbi1jb21wYXJlLnBocA==" title="https://www.php.net/manual/zh/function.version-compare.php">version_compare()<i class="fa fa-external-link"></i></span>方法比较当前版本和指定版本的大小关系，并将结果存入<code>$_is_php</code>数组。</li><li>返回比较结果，这里直接返回数组中对应的结果。</li></ol><hr><h4 id="is-really-writable"><a href="#is-really-writable" class="headerlink" title="is_really_writable()"></a>is_really_writable()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'is_really_writable'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_really_writable</span><span class="params">($file)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (DIRECTORY_SEPARATOR === <span class="string">'/'</span> &amp;&amp; (is_php(<span class="string">'5.4'</span>) <span class="keyword">OR</span> ! ini_get(<span class="string">'safe_mode'</span>)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> is_writable($file);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (is_dir($file))</span><br><span class="line">&#123;</span><br><span class="line">$file = rtrim($file, <span class="string">'/'</span>).<span class="string">'/'</span>.md5(mt_rand());</span><br><span class="line"><span class="keyword">if</span> (($fp = @fopen($file, <span class="string">'ab'</span>)) === <span class="keyword">FALSE</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">&#125;</span><br><span class="line">fclose($fp);</span><br><span class="line">@chmod($file, <span class="number">0777</span>);</span><br><span class="line">@unlink($file);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ( ! is_file($file) <span class="keyword">OR</span> ($fp = @fopen($file, <span class="string">'ab'</span>)) === <span class="keyword">FALSE</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">&#125;</span><br><span class="line">fclose($fp);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数用于判断文件或者目录是否真实可写，一般情况下，通过内置函数<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uaXMtd3JpdGFibGU=" title="https://www.php.net/manual/zh/function.is-writable">is_writable()<i class="fa fa-external-link"></i></span>返回的结果是比较可靠的，但是也有一些例外，比如:</p><ol><li>Windows中，如果对文件或者目录设置了只读属性，则is_writable返回结果是true,但是却无法写入。</li><li>Linux系统中，如果开启了Safe Mode，则也会影响is_writable的结果。<br>因此，本函数的处理是：如果是一般的Linux系统且没有开启safe mode，则直接调用is_writable；否则如果是目录则尝试在目录中创建一个文件来检查目录是否可写，如果是文件，则尝试以写入模式打开文件，如果无法打开，则返回false，最后调用fclose关闭句柄。</li></ol><hr><h4 id="load-class"><a href="#load-class" class="headerlink" title="load_class()"></a>load_class()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'load_class'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> &amp;<span class="title">load_class</span><span class="params">($class, $directory = <span class="string">'libraries'</span>, $param = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 定义静态数组`$_classes`，用于存放类的实例。</span></span><br><span class="line"><span class="keyword">static</span> $_classes = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//  判断`$_classes`中是否存在该类的实例，如果存在则返回，该方法避免重复加载类实例，类似于单例模式。</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_classes[$class]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> $_classes[$class];</span><br><span class="line">&#125;</span><br><span class="line">$name = <span class="keyword">FALSE</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果APPPATH目录下存在则加载APPPATH目录下的，如果没有再加载BASEPATH目录下的</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">array</span>(APPPATH, BASEPATH) <span class="keyword">as</span> $path)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (file_exists($path.$directory.<span class="string">'/'</span>.$class.<span class="string">'.php'</span>))</span><br><span class="line">&#123;</span><br><span class="line">$name = <span class="string">'CI_'</span>.$class;</span><br><span class="line"><span class="keyword">if</span> (class_exists($name, <span class="keyword">FALSE</span>) === <span class="keyword">FALSE</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">require_once</span>($path.$directory.<span class="string">'/'</span>.$class.<span class="string">'.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 有前缀则加载带前缀的类，比如MY_Loader，MY_Router等，HMVC实现过程中便是加载的MY_Loader MY_Router</span></span><br><span class="line"><span class="keyword">if</span> (file_exists(APPPATH.$directory.<span class="string">'/'</span>.config_item(<span class="string">'subclass_prefix'</span>).$class.<span class="string">'.php'</span>))</span><br><span class="line">&#123;</span><br><span class="line">$name = config_item(<span class="string">'subclass_prefix'</span>).$class;</span><br><span class="line"><span class="keyword">if</span> (class_exists($name, <span class="keyword">FALSE</span>) === <span class="keyword">FALSE</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">require_once</span>(APPPATH.$directory.<span class="string">'/'</span>.$name.<span class="string">'.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($name === <span class="keyword">FALSE</span>)</span><br><span class="line">&#123;</span><br><span class="line">set_status_header(<span class="number">503</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Unable to locate the specified class: '</span>.$class.<span class="string">'.php'</span>;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用is_loaded()方法将类名存入静态数组$_is_loaded</span></span><br><span class="line">is_loaded($class);</span><br><span class="line">$_classes[$class] = <span class="keyword">isset</span>($param)</span><br><span class="line">? <span class="keyword">new</span> $name($param)</span><br><span class="line">: <span class="keyword">new</span> $name();</span><br><span class="line"><span class="keyword">return</span> $_classes[$class];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>功能实现：</p><ol><li>定义静态数组<code>$_classes</code>，用于存放类的实例。</li><li>判断<code>$_classes</code>中是否存在该类的实例，如果存在则返回，该方法避免重复加载类实例，类似于单例模式。</li><li>分别从<b>APPPATH</b>和<b>BASEPATH</b>目录下寻找指定目录<code>$directory</code>，然后找<code>$class . &#39;php&#39;</code>文件，如果找到则将类名设置为<b color="#891717">‘CI_’.$class</b>，加载该类文件并退出当前循环。</li><li>从<b>APPPATH</b>目录下寻找指定目录<code>$directory</code>，然后寻找带有前缀的<code>config_item(&#39;subclass_prefix&#39;).$class.&#39;.php&#39;</code>文件，也叫扩展类文件，找到后将类名<font color="#891717">重新</font>设置为<b>扩展类文件名</b>并加载该扩展类文件。<b><font color="#891717">注意: 如果找到扩展类文件，后面是对该扩展类进行实例化的，即CI加载的实际上是该扩展类。这意味着，可以对CI的核心进行修改或者扩展。</font></b></li><li>如果不曾找到要加载的类文件，即$name依然为<b>FALSE</b>，则报错退出。</li><li>调用<code>is_loaded()</code>方法将类名存入静态数组<code>$_is_loaded</code>。</li><li>实例化该类并将该实例存入静态数组<code>$_classes</code>。</li></ol><p><b><font color="#891717">注意: 该函数返回的是一个class实例的引用. 对该实例的任何改变，都会影响下一次函数调用的结果。</font></b></p><hr><h4 id="is-loaded"><a href="#is-loaded" class="headerlink" title="is_loaded()"></a>is_loaded()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'is_loaded'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> &amp;<span class="title">is_loaded</span><span class="params">($class = <span class="string">''</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> $_is_loaded = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">if</span> ($class !== <span class="string">''</span>)</span><br><span class="line">&#123;</span><br><span class="line">$_is_loaded[strtolower($class)] = $class;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $_is_loaded;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数定义静态数组<code>$_is_loaded</code>并将<code>load_class()</code>函数实例化后的对象名放入此数组中，最后返回所有已加载的类，在控制器类中使用过此函数获取所有已加载的类。此函数通常用于追踪所有已加载的类。</p><hr><h4 id="get-config"><a href="#get-config" class="headerlink" title="get_config()"></a>get_config()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'get_config'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> &amp;<span class="title">get_config</span><span class="params">(Array $replace = array<span class="params">()</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> $config;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($config))</span><br><span class="line">&#123;</span><br><span class="line">$file_path = APPPATH.<span class="string">'config/config.php'</span>;</span><br><span class="line">$found = <span class="keyword">FALSE</span>;</span><br><span class="line"><span class="keyword">if</span> (file_exists($file_path))</span><br><span class="line">&#123;</span><br><span class="line">$found = <span class="keyword">TRUE</span>;</span><br><span class="line"><span class="keyword">require</span>($file_path);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (file_exists($file_path = APPPATH.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/config.php'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">require</span>($file_path);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ( ! $found)</span><br><span class="line">&#123;</span><br><span class="line">set_status_header(<span class="number">503</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'The configuration file does not exist.'</span>;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ( ! <span class="keyword">isset</span>($config) <span class="keyword">OR</span> ! is_array($config))</span><br><span class="line">&#123;</span><br><span class="line">set_status_header(<span class="number">503</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your config file does not appear to be formatted correctly.'</span>;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span> ($replace <span class="keyword">as</span> $key =&gt; $val)</span><br><span class="line">&#123;</span><br><span class="line">$config[$key] = $val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $config;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>功能实现:</p><ol><li>定义静态数组<code>$config</code>。</li><li>如果数组为空则加载配置文件<code>APPPATH.&#39;config/config.php&#39;</code>，由于这里是静态数组，这意味着该函数支持动态运行的过程中修改Config.php中的条目。</li><li>如果有根据当前运行环境自定义的配置文件则加载对应的配置文件。</li><li>如果没找到配置文件则报错退出，同时由于CI的配置文件中是通过数组形式进行配置的，如:<code>$config[&#39;index_page&#39;] = &#39;index.php&#39;;</code>，因此如果发现<code>$config</code>不是数组同样报错退出。</li><li>这里比较给力，对于配置文件中的配置是可以覆盖的，比如CodeIgniter.php文件中的<code>get_config(array(&#39;subclass_prefix&#39; =&gt; $assign_to_config[&#39;subclass_prefix&#39;]));</code>就是通过这里将子类前缀进行覆盖。</li><li>返回静态数组<code>$config</code>。</li></ol><p><b><font color="#891717">注意: 该函数返回的是config文件中$config的引用。若运行过程中改变了Config的配置文件，由于该函数的缓存原因，无法读取最新的配置。</font></b></p><hr><h4 id="config-item"><a href="#config-item" class="headerlink" title="config_item()"></a>config_item()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'config_item'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">config_item</span><span class="params">($item)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> $_config;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_config))</span><br><span class="line">&#123;</span><br><span class="line">$_config[<span class="number">0</span>] =&amp; get_config();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">isset</span>($_config[<span class="number">0</span>][$item]) ? $_config[<span class="number">0</span>][$item] : <span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数的作用是返回相应的设置条目。需要注意两个地方:</p><ol><li><code>$_config[0] =&amp; get_config();</code>中<code>&amp;</code>不能省略，引用返回需要两边都用<code>&amp;</code>。详见<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvbGFuZ3VhZ2UucmVmZXJlbmNlcy5yZXR1cm4ucGhw" title="https://www.php.net/manual/zh/language.references.return.php">引用返回<i class="fa fa-external-link"></i></span>。</li><li><code>$_config[0] =&amp; get_config();</code> 这里官方的解释是引用不能直接赋值给静态变量，因此使用的是数组的形式。其实原因是引用不是静态存储的，具体可参考<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvbGFuZ3VhZ2UudmFyaWFibGVzLnNjb3BlLnBocCNsYW5ndWFnZS52YXJpYWJsZXMuc2NvcGUuc3RhdGlj" title="https://www.php.net/manual/zh/language.variables.scope.php#language.variables.scope.static">变量范围<i class="fa fa-external-link"></i></span>。</li></ol><hr><h4 id="get-mimes"><a href="#get-mimes" class="headerlink" title="get_mimes()"></a>get_mimes()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'get_mimes'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> &amp;<span class="title">get_mimes</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> $_mimes;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_mimes))</span><br><span class="line">&#123;</span><br><span class="line">$_mimes = file_exists(APPPATH.<span class="string">'config/mimes.php'</span>)</span><br><span class="line">? <span class="keyword">include</span>(APPPATH.<span class="string">'config/mimes.php'</span>)</span><br><span class="line">: <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">if</span> (file_exists(APPPATH.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/mimes.php'</span>))</span><br><span class="line">&#123;</span><br><span class="line">$_mimes = array_merge($_mimes, <span class="keyword">include</span>(APPPATH.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/mimes.php'</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $_mimes;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此函数跟get_config()类似，加载配置目录下mime.php文件并返回静态数组$_mimes的引用。</p><hr><h4 id="is-https"><a href="#is-https" class="headerlink" title="is_https()"></a>is_https()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'is_https'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_https</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ( ! <span class="keyword">empty</span>($_SERVER[<span class="string">'HTTPS'</span>]) &amp;&amp; strtolower($_SERVER[<span class="string">'HTTPS'</span>]) !== <span class="string">'off'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_PROTO'</span>]) &amp;&amp; strtolower($_SERVER[<span class="string">'HTTP_X_FORWARDED_PROTO'</span>]) === <span class="string">'https'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ( ! <span class="keyword">empty</span>($_SERVER[<span class="string">'HTTP_FRONT_END_HTTPS'</span>]) &amp;&amp; strtolower($_SERVER[<span class="string">'HTTP_FRONT_END_HTTPS'</span>]) !== <span class="string">'off'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里满足三个条件中的任何一个就说明是通过请求为https请求:</p><ol><li>$_SERVER[‘HTTPS’]不为空且值不为’off’。</li><li>$_SERVER[‘HTTP_X_FORWARDED_PROTO’]存在且值为’https’。</li><li>$_SERVER[‘HTTP_FRONT_END_HTTPS’]不为空且值不为’off’。</li></ol><hr><h4 id="is-cli"><a href="#is-cli" class="headerlink" title="is_cli()"></a>is_cli()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'is_cli'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_cli</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (PHP_SAPI === <span class="string">'cli'</span> <span class="keyword">OR</span> defined(<span class="string">'STDIN'</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此函数通过<code>PHP_SAPI</code>和是否定义常量<code>STDIN</code>来判断当前运行模式是否为cli模式。</p><hr><h4 id="show-error"><a href="#show-error" class="headerlink" title="show_error()"></a>show_error()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'show_error'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_error</span><span class="params">($message, $status_code = <span class="number">500</span>, $heading = <span class="string">'An Error Was Encountered'</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$status_code = abs($status_code);</span><br><span class="line"><span class="keyword">if</span> ($status_code &lt; <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">$exit_status = $status_code + <span class="number">9</span>;</span><br><span class="line">$status_code = <span class="number">500</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$exit_status = <span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line">$_error =&amp; load_class(<span class="string">'Exceptions'</span>, <span class="string">'core'</span>);</span><br><span class="line"><span class="keyword">echo</span> $_error-&gt;show_error($heading, $message, <span class="string">'error_general'</span>, $status_code);</span><br><span class="line"><span class="keyword">exit</span>($exit_status);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数用来展示错误信息并终止运行，功能实现</p><ul><li>设置状态码。</li><li>加载<code>Exceptions</code>组件，并使用其中的<code>show_error()</code>方法打印错误信息。</li><li>终止程序运行。 </li></ul><hr><h4 id="show-404"><a href="#show-404" class="headerlink" title="show_404()"></a>show_404()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'show_404'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_404</span><span class="params">($page = <span class="string">''</span>, $log_error = TRUE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$_error =&amp; load_class(<span class="string">'Exceptions'</span>, <span class="string">'core'</span>);</span><br><span class="line">$_error-&gt;show_404($page, $log_error);</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">4</span>); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数加载<code>Exceptions</code>组件，并使用其中的<code>show_404()</code>方法返回404页面。</p><hr><h4 id="log-message"><a href="#log-message" class="headerlink" title="log_message()"></a>log_message()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'log_message'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">log_message</span><span class="params">($level, $message)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> $_log;</span><br><span class="line"><span class="keyword">if</span> ($_log === <span class="keyword">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">$_log[<span class="number">0</span>] =&amp; load_class(<span class="string">'Log'</span>, <span class="string">'core'</span>);</span><br><span class="line">&#125;</span><br><span class="line">$_log[<span class="number">0</span>]-&gt;write_log($level, $message);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数调用Log组件的write_log方法记录信息。<font color="#891717">注意: 如果主配置文件中log_threshold被设置为0，则不会记录任何Log信息。</font></p><hr><h4 id="set-status-header"><a href="#set-status-header" class="headerlink" title="set_status_header()"></a>set_status_header()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'set_status_header'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_status_header</span><span class="params">($code = <span class="number">200</span>, $text = <span class="string">''</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (is_cli())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($code) <span class="keyword">OR</span> ! is_numeric($code))</span><br><span class="line">&#123;</span><br><span class="line">show_error(<span class="string">'Status codes must be numeric'</span>, <span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($text))</span><br><span class="line">&#123;</span><br><span class="line">is_int($code) <span class="keyword">OR</span> $code = (int) $code;</span><br><span class="line">$stati = <span class="keyword">array</span>(</span><br><span class="line"><span class="number">100</span>=&gt; <span class="string">'Continue'</span>,</span><br><span class="line"><span class="number">101</span>=&gt; <span class="string">'Switching Protocols'</span>,</span><br><span class="line"><span class="number">200</span>=&gt; <span class="string">'OK'</span>,</span><br><span class="line"><span class="number">201</span>=&gt; <span class="string">'Created'</span>,</span><br><span class="line"><span class="number">202</span>=&gt; <span class="string">'Accepted'</span>,</span><br><span class="line"><span class="number">203</span>=&gt; <span class="string">'Non-Authoritative Information'</span>,</span><br><span class="line"><span class="number">204</span>=&gt; <span class="string">'No Content'</span>,</span><br><span class="line"><span class="number">205</span>=&gt; <span class="string">'Reset Content'</span>,</span><br><span class="line"><span class="number">206</span>=&gt; <span class="string">'Partial Content'</span>,</span><br><span class="line"><span class="number">300</span>=&gt; <span class="string">'Multiple Choices'</span>,</span><br><span class="line"><span class="number">301</span>=&gt; <span class="string">'Moved Permanently'</span>,</span><br><span class="line"><span class="number">302</span>=&gt; <span class="string">'Found'</span>,</span><br><span class="line"><span class="number">303</span>=&gt; <span class="string">'See Other'</span>,</span><br><span class="line"><span class="number">304</span>=&gt; <span class="string">'Not Modified'</span>,</span><br><span class="line"><span class="number">305</span>=&gt; <span class="string">'Use Proxy'</span>,</span><br><span class="line"><span class="number">307</span>=&gt; <span class="string">'Temporary Redirect'</span>,</span><br><span class="line"><span class="number">400</span>=&gt; <span class="string">'Bad Request'</span>,</span><br><span class="line"><span class="number">401</span>=&gt; <span class="string">'Unauthorized'</span>,</span><br><span class="line"><span class="number">402</span>=&gt; <span class="string">'Payment Required'</span>,</span><br><span class="line"><span class="number">403</span>=&gt; <span class="string">'Forbidden'</span>,</span><br><span class="line"><span class="number">404</span>=&gt; <span class="string">'Not Found'</span>,</span><br><span class="line"><span class="number">405</span>=&gt; <span class="string">'Method Not Allowed'</span>,</span><br><span class="line"><span class="number">406</span>=&gt; <span class="string">'Not Acceptable'</span>,</span><br><span class="line"><span class="number">407</span>=&gt; <span class="string">'Proxy Authentication Required'</span>,</span><br><span class="line"><span class="number">408</span>=&gt; <span class="string">'Request Timeout'</span>,</span><br><span class="line"><span class="number">409</span>=&gt; <span class="string">'Conflict'</span>,</span><br><span class="line"><span class="number">410</span>=&gt; <span class="string">'Gone'</span>,</span><br><span class="line"><span class="number">411</span>=&gt; <span class="string">'Length Required'</span>,</span><br><span class="line"><span class="number">412</span>=&gt; <span class="string">'Precondition Failed'</span>,</span><br><span class="line"><span class="number">413</span>=&gt; <span class="string">'Request Entity Too Large'</span>,</span><br><span class="line"><span class="number">414</span>=&gt; <span class="string">'Request-URI Too Long'</span>,</span><br><span class="line"><span class="number">415</span>=&gt; <span class="string">'Unsupported Media Type'</span>,</span><br><span class="line"><span class="number">416</span>=&gt; <span class="string">'Requested Range Not Satisfiable'</span>,</span><br><span class="line"><span class="number">417</span>=&gt; <span class="string">'Expectation Failed'</span>,</span><br><span class="line"><span class="number">422</span>=&gt; <span class="string">'Unprocessable Entity'</span>,</span><br><span class="line"><span class="number">426</span>=&gt; <span class="string">'Upgrade Required'</span>,</span><br><span class="line"><span class="number">428</span>=&gt; <span class="string">'Precondition Required'</span>,</span><br><span class="line"><span class="number">429</span>=&gt; <span class="string">'Too Many Requests'</span>,</span><br><span class="line"><span class="number">431</span>=&gt; <span class="string">'Request Header Fields Too Large'</span>,</span><br><span class="line"><span class="number">500</span>=&gt; <span class="string">'Internal Server Error'</span>,</span><br><span class="line"><span class="number">501</span>=&gt; <span class="string">'Not Implemented'</span>,</span><br><span class="line"><span class="number">502</span>=&gt; <span class="string">'Bad Gateway'</span>,</span><br><span class="line"><span class="number">503</span>=&gt; <span class="string">'Service Unavailable'</span>,</span><br><span class="line"><span class="number">504</span>=&gt; <span class="string">'Gateway Timeout'</span>,</span><br><span class="line"><span class="number">505</span>=&gt; <span class="string">'HTTP Version Not Supported'</span>,</span><br><span class="line"><span class="number">511</span>=&gt; <span class="string">'Network Authentication Required'</span>,</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($stati[$code]))</span><br><span class="line">&#123;</span><br><span class="line">$text = $stati[$code];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">show_error(<span class="string">'No status text available. Please check your status code number or supply your own message text.'</span>, <span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (strpos(PHP_SAPI, <span class="string">'cgi'</span>) === <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">header(<span class="string">'Status: '</span>.$code.<span class="string">' '</span>.$text, <span class="keyword">TRUE</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">$server_protocol = (<span class="keyword">isset</span>($_SERVER[<span class="string">'SERVER_PROTOCOL'</span>]) &amp;&amp; in_array($_SERVER[<span class="string">'SERVER_PROTOCOL'</span>], <span class="keyword">array</span>(<span class="string">'HTTP/1.0'</span>, <span class="string">'HTTP/1.1'</span>, <span class="string">'HTTP/2'</span>), <span class="keyword">TRUE</span>))</span><br><span class="line">? $_SERVER[<span class="string">'SERVER_PROTOCOL'</span>] : <span class="string">'HTTP/1.1'</span>;</span><br><span class="line">header($server_protocol.<span class="string">' '</span>.$code.<span class="string">' '</span>.$text, <span class="keyword">TRUE</span>, $code);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数功能是自定义HTTP协议头信息。功能实现：</p><ol><li>命令行环境下直接退出。</li><li>如果状态码即<code>$code</code>为空或不是数组则设置为<code>500</code>并说明状态码必须为整数。</li><li>如果信息即<code>$text</code>为空则使用默认信息，CI默认支持的状态码。</li><li>如果参数状态码没有出现在表格中则报错500并提示<code>No status text available. Please check your status code number or supply your own message text.</code>。</li><li>检查web服务器和PHP之间的<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ucGhwLXNhcGktbmFtZS5waHA=" title="https://www.php.net/manual/zh/function.php-sapi-name.php">接口类型<i class="fa fa-external-link"></i></span>，如果检测到<code>cgi</code>则根据参数<code>$code</code>、<code>$text</code>设置HTTP头信息；否则从$_SERVER中获取协议信息并输出HTTP头。<table><caption style="text-align:center">CI支持的默认状态码及描述信息</caption><tr><th width="80" style="text-align:center">code</th><th>text</th></tr><tr><td>100</td><td>Continue</td></tr><tr><td>101</td><td>Switching Protocols</td></tr><tr><td>200</td><td>OK</td></tr><tr><td>201</td><td>Created</td></tr><tr><td>202</td><td>Accepted</td></tr><tr><td>203</td><td>Non-Authoritative Information</td></tr><tr><td>204</td><td>No Content</td></tr><tr><td>205</td><td>Reset Content</td></tr><tr><td>206</td><td>Partial Content</td></tr><tr><td>300</td><td>Multiple Choices</td></tr><tr><td>301</td><td>Moved Permanently</td></tr><tr><td>302</td><td>Found</td></tr><tr><td>303</td><td>See Other</td></tr><tr><td>304</td><td>Not Modified</td></tr><tr><td>305</td><td>Use Proxy</td></tr><tr><td>307</td><td>Temporary Redirect</td></tr><tr><td>400</td><td>Bad Request</td></tr><tr><td>401</td><td>Unauthorized</td></tr><tr><td>402</td><td>Payment Required</td></tr><tr><td>403</td><td>Forbidden</td></tr><tr><td>404</td><td>Not Found</td></tr><tr><td>405</td><td>Method Not Allowed</td></tr><tr><td>406</td><td>Not Acceptable</td></tr><tr><td>407</td><td>Proxy Authentication Required</td></tr><tr><td>408</td><td>Request Timeout</td></tr><tr><td>409</td><td>Conflict</td></tr><tr><td>410</td><td>Gone</td></tr><tr><td>411</td><td>Length Required</td></tr><tr><td>412</td><td>Precondition Failed</td></tr><tr><td>413</td><td>Request Entity Too Large</td></tr><tr><td>414</td><td>Request-URI Too Long</td></tr><tr><td>415</td><td>Unsupported Media Type</td></tr><tr><td>416</td><td>Requested Range Not Satisfiable</td></tr><tr><td>417</td><td>Expectation Failed</td></tr><tr><td>422</td><td>Unprocessable Entity</td></tr><tr><td>426</td><td>Upgrade Required</td></tr><tr><td>428</td><td>Precondition Required</td></tr><tr><td>429</td><td>Too Many Requests</td></tr><tr><td>431</td><td>Request Header Fields Too Large</td></tr><tr><td>500</td><td>Internal Server Error</td></tr><tr><td>501</td><td>Not Implemented</td></tr><tr><td>502</td><td>Bad Gateway</td></tr><tr><td>503</td><td>Service Unavailable</td></tr><tr><td>504</td><td>Gateway Timeout</td></tr><tr><td>505</td><td>HTTP Version Not Supported</td></tr><tr><td>511</td><td>Network Authentication Required</td></tr></table></li></ol><hr><h4 id="error-handler"><a href="#error-handler" class="headerlink" title="_error_handler()"></a>_error_handler()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'_error_handler'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_error_handler</span><span class="params">($severity, $message, $filepath, $line)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$is_error = (((E_ERROR | E_PARSE | E_COMPILE_ERROR | E_CORE_ERROR | E_USER_ERROR) &amp; $severity) === $severity);</span><br><span class="line"><span class="keyword">if</span> ($is_error)</span><br><span class="line">&#123;</span><br><span class="line">set_status_header(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (($severity &amp; error_reporting()) !== $severity)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">$_error =&amp; load_class(<span class="string">'Exceptions'</span>, <span class="string">'core'</span>);</span><br><span class="line">$_error-&gt;log_exception($severity, $message, $filepath, $line);</span><br><span class="line"><span class="keyword">if</span> (str_ireplace(<span class="keyword">array</span>(<span class="string">'off'</span>, <span class="string">'none'</span>, <span class="string">'no'</span>, <span class="string">'false'</span>, <span class="string">'null'</span>), <span class="string">''</span>, ini_get(<span class="string">'display_errors'</span>)))</span><br><span class="line">&#123;</span><br><span class="line">$_error-&gt;show_php_error($severity, $message, $filepath, $line);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($is_error)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数作为<code>set_error_handler</code>的回调函数来处理PHP脚本中出现的错误。功能实现:</p><ol><li>当错误类型为<code>E_ERROR</code>、<code>E_EPARSE</code>、<code>E_COMPILE_ERROR</code>、<code>E_CORE_ERROR</code>、<code>E_USER_ERROR</code>时，HTTP头设置为500。相关错误说明请参考<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZXJyb3JmdW5jLmNvbnN0YW50cy5waHA=" title="https://www.php.net/manual/zh/errorfunc.constants.php">PHP预定义常量<i class="fa fa-external-link"></i></span></li><li>错误类型低于错误报告的级别则退出，否则加载<code>Exceptions</code>组件并调用show_php_error()方法显示错误。</li><li>错误类型符合过滤条件则退出。</li></ol><p><font color="#891717"><b>注意</b>: 官网在set_error_handler()函数说明说明以下级别的错误不能由用户定义的函数来处理： E_ERROR、 E_PARSE、 E_CORE_ERROR、 E_CORE_WARNING、 E_COMPILE_ERROR、 E_COMPILE_WARNING，和在 调用 set_error_handler() 函数所在文件中产生的大多数 E_STRICT。即set_error_handler()用来自定义用户级错误 E_USER_ERROR、E_USER_WARNING 、E_USER_NOTICE、E_USER_DEPRECATED 和 部分运行时系统错误、E_WARING、E_NOTICE、E_DEPRECATED 的捕获器</font></p><hr><h4 id="exception-handler"><a href="#exception-handler" class="headerlink" title="_exception_handler()"></a>_exception_handler()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'_exception_handler'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_exception_handler</span><span class="params">($exception)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$_error =&amp; load_class(<span class="string">'Exceptions'</span>, <span class="string">'core'</span>);</span><br><span class="line">$_error-&gt;log_exception(<span class="string">'error'</span>, <span class="string">'Exception: '</span>.$exception-&gt;getMessage(), $exception-&gt;getFile(), $exception-&gt;getLine());</span><br><span class="line">is_cli() <span class="keyword">OR</span> set_status_header(<span class="number">500</span>);</span><br><span class="line"><span class="keyword">if</span> (str_ireplace(<span class="keyword">array</span>(<span class="string">'off'</span>, <span class="string">'none'</span>, <span class="string">'no'</span>, <span class="string">'false'</span>, <span class="string">'null'</span>), <span class="string">''</span>, ini_get(<span class="string">'display_errors'</span>)))</span><br><span class="line">&#123;</span><br><span class="line">$_error-&gt;show_exception($exception);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">1</span>); <span class="comment">// EXIT_ERROR</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数用来记录并显示php异常的信息。功能实现:</p><ol><li>加载Exceptions组件，调用log_exception()方法打印异常信息。</li><li>如果不是命令行环境下则设置500HTTP头信息。</li><li>如果开启了display_errors则通过<code>show_exception()</code>方法显示异常信息，最后退出。</li></ol><hr><h4 id="shutdown-handler"><a href="#shutdown-handler" class="headerlink" title="_shutdown_handler()"></a>_shutdown_handler()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'_shutdown_handler'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_shutdown_handler</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$last_error = error_get_last();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($last_error) &amp;&amp;</span><br><span class="line">($last_error[<span class="string">'type'</span>] &amp; (E_ERROR | E_PARSE | E_CORE_ERROR | E_CORE_WARNING | E_COMPILE_ERROR | E_COMPILE_WARNING)))</span><br><span class="line">&#123;</span><br><span class="line">_error_handler($last_error[<span class="string">'type'</span>], $last_error[<span class="string">'message'</span>], $last_error[<span class="string">'file'</span>], $last_error[<span class="string">'line'</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数在php脚本执行完成或exit()后被调用，用来处理中止后的一些操作。功能实现:</p><ol><li>获取最后法生的错误信息，得到一个数组。该错误的<strong>type</strong>、<strong>message</strong>、<strong>file</strong>、<strong>line</strong>为数组的键。</li><li>如果错误类型为<b>E_ERROR</b>、<b>E_PARSE</b>、<strong>E_CORE_ERROR</strong>、<strong>E_CORE_WARNING</strong>、<strong>E_COMPILE_ERROR</strong>、<strong>E_COMPILE_WARNING</strong>时调用<code>_error_handler</code>函数进行错误处理。</li></ol><hr><h4 id="remove-invisible-characters"><a href="#remove-invisible-characters" class="headerlink" title="remove_invisible_characters()"></a>remove_invisible_characters()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'remove_invisible_characters'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">remove_invisible_characters</span><span class="params">($str, $url_encoded = TRUE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$non_displayables = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">if</span> ($url_encoded)</span><br><span class="line">&#123;</span><br><span class="line">$non_displayables[] = <span class="string">'/%0[0-8bcef]/i'</span>;<span class="comment">// url encoded 00-08, 11, 12, 14, 15</span></span><br><span class="line">$non_displayables[] = <span class="string">'/%1[0-9a-f]/i'</span>;<span class="comment">// url encoded 16-31</span></span><br><span class="line">$non_displayables[] = <span class="string">'/%7f/i'</span>;<span class="comment">// url encoded 127</span></span><br><span class="line">&#125;</span><br><span class="line">$non_displayables[] = <span class="string">'/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]+/S'</span>;<span class="comment">// 00-08, 11, 12, 14-31, 127</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">$str = preg_replace($non_displayables, <span class="string">''</span>, $str, <span class="number">-1</span>, $count);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> ($count);</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数的作用是除去字符串中的不可见字符。功能实现:</p><ul><li>构造过滤条件，即整理一个不可见字符的集合，用于字符串过滤。不可见字符有: 00-08 11 12 14 15 16-31 127，注意过滤时过滤的是对应<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvQVNDSUk=" title="https://zh.wikipedia.org/wiki/ASCII">ASCII码<i class="fa fa-external-link"></i></span>表中的十六进制形式。</li><li>使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ucHJlZy1yZXBsYWNl" title="https://www.php.net/manual/zh/function.preg-replace">preg_replace()<i class="fa fa-external-link"></i></span>函数将搜索并将不可见字符替换为空的方式去除不可见字符。$count为匹配的个数，当字符串中没有不可见字符时停止匹配。</li></ul><hr><h4 id="html-escape"><a href="#html-escape" class="headerlink" title="html_escape()"></a>html_escape()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'html_escape'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">html_escape</span><span class="params">($var, $double_encode = TRUE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($var))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> $var;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (is_array($var))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">foreach</span> (array_keys($var) <span class="keyword">as</span> $key)</span><br><span class="line">&#123;</span><br><span class="line">$var[$key] = html_escape($var[$key], $double_encode);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $var;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> htmlspecialchars($var, ENT_QUOTES, config_item(<span class="string">'charset'</span>), $double_encode);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数的作用时对数组中的元素$var递归调用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uaHRtbHNwZWNpYWxjaGFycw==" title="https://www.php.net/manual/zh/function.htmlspecialchars">htmlspecialchars<i class="fa fa-external-link"></i></span>函数<code>将特殊字符转为HTML实体</code>。<code>ENT_QUOTES</code>表示既转换双引号也转换单引号。</p><hr><h4 id="stringify-attributes"><a href="#stringify-attributes" class="headerlink" title="_stringify_attributes()"></a>_stringify_attributes()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'_stringify_attributes'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_stringify_attributes</span><span class="params">($attributes, $js = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$atts = <span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($attributes))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> $atts;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (is_string($attributes))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">' '</span>.$attributes;</span><br><span class="line">&#125;</span><br><span class="line">$attributes = (<span class="keyword">array</span>) $attributes;</span><br><span class="line"><span class="keyword">foreach</span> ($attributes <span class="keyword">as</span> $key =&gt; $val)</span><br><span class="line">&#123;</span><br><span class="line">$atts .= ($js) ? $key.<span class="string">'='</span>.$val.<span class="string">','</span> : <span class="string">' '</span>.$key.<span class="string">'="'</span>.$val.<span class="string">'"'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> rtrim($atts, <span class="string">','</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数用于将HTML标签熟悉、JavaScript，将字符串、数组或属性的对象转换为字符串。</p><hr><h4 id="function-usable"><a href="#function-usable" class="headerlink" title="function_usable()"></a>function_usable()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ! function_exists(<span class="string">'function_usable'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">function_usable</span><span class="params">($function_name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> $_suhosin_func_blacklist;</span><br><span class="line"><span class="keyword">if</span> (function_exists($function_name))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ( ! <span class="keyword">isset</span>($_suhosin_func_blacklist))</span><br><span class="line">&#123;</span><br><span class="line">$_suhosin_func_blacklist = extension_loaded(<span class="string">'suhosin'</span>)</span><br><span class="line">? explode(<span class="string">','</span>, trim(ini_get(<span class="string">'suhosin.executor.func.blacklist'</span>)))</span><br><span class="line">: <span class="keyword">array</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ! in_array($function_name, $_suhosin_func_blacklist, <span class="keyword">TRUE</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改函数用来判断PHP的内置函数是否可用，如果php启用了<span class="exturl" data-url="aHR0cHM6Ly9zdWhvc2luLm9yZy9zdG9yaWVzL2luZGV4Lmh0bWw=" title="https://suhosin.org/stories/index.html">Subosin扩展<i class="fa fa-external-link"></i></span>，则可以通过<code>suhosin.executor.func.blacklist</code>禁用某些内置函数，如:<code>suhosin.executor.eval.blacklist=phpinfo,fputs,fopen,fwrite</code>。</p><hr><h4 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81MjgzODM1OA==" title="https://blog.csdn.net/Zhihua_W/article/details/52838358">CI框架源码解析三之全局函数库文件Common.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter引导文件CodeIgniter.php</title>
      <link href="/2019/12/19/codeigniter-codeigniter/"/>
      <url>/2019/12/19/codeigniter-codeigniter/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>codeigniter.php是CI框架的引导(BOOTSTRAP)文件，也就是CI的核心文件。主要完成下面五项工作：</p><ul><li>加载框架常量、函数库以及框架初始化</li><li>加载核心类组件</li><li>路由的设置与判断</li><li>解析请求的类，并调用请求的方法</li><li>输出<a id="more"></a></li></ul><hr><h4 id="加载框架常量、函数库以及框架初始化"><a href="#加载框架常量、函数库以及框架初始化" class="headerlink" title="加载框架常量、函数库以及框架初始化"></a>加载框架常量、函数库以及框架初始化</h4><h5 id="唯一入口判断"><a href="#唯一入口判断" class="headerlink" title="唯一入口判断"></a>唯一入口判断</h5><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defined('BASEPATH') OR exit('No direct script access allowed');</span><br></pre></td></tr></table></figure><p>常量<code>BASEPATH</code>在<code>index.php</code>文件中定义，除index.php外其他所有文件都要执行上面代码进行唯一入口判断，保证单一入口进入程序、防止跨站攻击直接访问文件路径等恶意攻击。</p><h5 id="设置版本号"><a href="#设置版本号" class="headerlink" title="设置版本号"></a>设置版本号</h5><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const CI_VERSION = '3.1.10';</span><br></pre></td></tr></table></figure><h5 id="加载常量文件"><a href="#加载常量文件" class="headerlink" title="加载常量文件"></a>加载常量文件</h5><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/constants.php'))</span><br><span class="line">&#123;</span><br><span class="line">    require_once(APPPATH.'config/'.ENVIRONMENT.'/constants.php');</span><br><span class="line">&#125;</span><br><span class="line">if (file_exists(APPPATH.'config/constants.php'))</span><br><span class="line">&#123;</span><br><span class="line">    require_once(APPPATH.'config/constants.php');</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>ENVIRONMENT</code>为index.php文件中定义的运行环境常量，针对某个环境可以在<code>APPPATH . config/</code>下创建对应的目录，然后创建constants.php文件，如<code>application/config/development/constants.php</code>，这个文件为当前运行环境下需要的特殊常量。然后加载CI默认的常量文件<code>APPPATH . config/constants.php</code>。</p><h5 id="加载全局函数库"><a href="#加载全局函数库" class="headerlink" title="加载全局函数库"></a>加载全局函数库</h5><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">require_once(BASEPATH.'core/Common.php');</span><br></pre></td></tr></table></figure><p>这个文件中有很多函数，如<b>get_config()</b>、<b>config_item()</b>这两个方法不是应该由core/Config.php这个组件去做么？那个load_class()不应该由core/Loader.php去做么？把这些函数定义出来貌似感觉架构变得不那么优雅，有点多余。<code>其实是出于这样一种情况：比如说，如果一切和配置有关的动作都由Config组件来完成，一切加载的动作都由Loader来完成，试想一下，如果我要加载Config组件，那么必须得通过Loader来加载，所以Loader必须比Config要更早实例化，但是如果Loader实例化的时候需要一些和Loader有关的配置信息才能实例化呢？那就必须通过Config来为它取得配置信息。这里就出现了鸡和鸡蛋的问题。</code>先定义一些公共的函数就很好地解决了这个问题。</p><h5 id="对全局变量进行安全处理"><a href="#对全局变量进行安全处理" class="headerlink" title="对全局变量进行安全处理"></a>对全局变量进行安全处理</h5><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">if ( ! is_php('5.4'))</span><br><span class="line">&#123;</span><br><span class="line">ini_set('magic_quotes_runtime', 0);</span><br><span class="line">if ((bool) ini_get('register_globals'))</span><br><span class="line">&#123;</span><br><span class="line">$_protected = array(</span><br><span class="line">'_SERVER',</span><br><span class="line">'_GET',</span><br><span class="line">'_POST',</span><br><span class="line">'_FILES',</span><br><span class="line">'_REQUEST',</span><br><span class="line">'_SESSION',</span><br><span class="line">'_ENV',</span><br><span class="line">'_COOKIE',</span><br><span class="line">'GLOBALS',</span><br><span class="line">'HTTP_RAW_POST_DATA',</span><br><span class="line">'system_path',</span><br><span class="line">'application_folder',</span><br><span class="line">'view_folder',</span><br><span class="line">'_protected',</span><br><span class="line">'_registered'</span><br><span class="line">);</span><br><span class="line">$_registered = ini_get('variables_order');</span><br><span class="line">foreach (array('E' =&gt; '_ENV', 'G' =&gt; '_GET', 'P' =&gt; '_POST', 'C' =&gt; '_COOKIE', 'S' =&gt; '_SERVER') as $key =&gt; $superglobal)</span><br><span class="line">&#123;</span><br><span class="line">if (strpos($_registered, $key) === FALSE)</span><br><span class="line">&#123;</span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line">foreach (array_keys($$superglobal) as $var)</span><br><span class="line">&#123;</span><br><span class="line">if (isset($GLOBALS[$var]) &amp;&amp; ! in_array($var, $_protected, TRUE))</span><br><span class="line">&#123;</span><br><span class="line">$GLOBALS[$var] = NULL;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>is_php()</code>是common.php文件中定义的全局函数，用于判断当前判断是否大于等于指定版本，此处通过比较来对php小于5.4版本时做兼容处理。干了两件事：①禁用魔术引号；②删除全局变量。</p><ol><li><p>魔术引号<br>如果<code>magic_quotes_runtime</code>设置为TRUE，则读取数据时会自动对引号进行转义。<font color="#891717">由于此功能在PHP 5.3.0中已 弃用，而在PHP 7.0.0中已删除。因此为了向后兼容，如果小于5.4则禁用此功能。</font>更多信息请参考<span class="exturl" data-url="aHR0cHM6Ly9kb2MuYmNjbnNvZnQuY29tL2RvY3MvcGhwLWRvY3MtNy40LWNuL2Z1bmN0aW9uLnNldC1tYWdpYy1xdW90ZXMtcnVudGltZS5odG1s" title="https://doc.bccnsoft.com/docs/php-docs-7.4-cn/function.set-magic-quotes-runtime.html">设置当前 magic_quotes_runtime 配置选项的激活状态<i class="fa fa-external-link"></i></span>。</p></li><li><p>全局变量<br>如果低于php5.4版本，将进行全局变量安全处理。当开启了register_globals，这就意味着<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvaW5pLmNvcmUucGhwI2luaS52YXJpYWJsZXMtb3JkZXI=" title="https://www.php.net/manual/zh/ini.core.php#ini.variables-order">EGPCS<i class="fa fa-external-link"></i></span>中的变量可以直接用变量名访问，这些全局变量是存储在$GLOBALS数组中的，这是个隐患，虽然5.4及之后消除了，但考虑兼容以前，需要手工清除这些全局变量。那么挑选了最重要的需要特别保护的一些变量名，也就是$_protected数组的值。凡是EGPCS中涉及到变量名称在$_protected数组中的，一律清空。</p></li></ol><h5 id="自定义错误、异常和程序完成的函数"><a href="#自定义错误、异常和程序完成的函数" class="headerlink" title="自定义错误、异常和程序完成的函数"></a>自定义错误、异常和程序完成的函数</h5><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set_error_handler('_error_handler');</span><br><span class="line">set_exception_handler('_exception_handler');</span><br><span class="line">register_shutdown_function('_shutdown_handler');</span><br></pre></td></tr></table></figure><ol><li>设置错误处理：set_error_handler(‘_error_handler’)。处理函数原型：<code>function _error_handler($severity, $message, $filepath, $line)</code>。程序本身原因或手工触发trigger_error(“A custom error has been triggered”);</li><li>设置异常处理：set_exception_handler(‘_exception_handler’)。处理函数原型：<code>function _exception_handler($exception)</code>。当用户抛出异常时触发throw new Exception(‘Exception occurred’);</li><li>千万不要被shutdown迷惑：register_shutdown_function(‘_shutdown_handler’)可以这样理解调用条件：当页面被用户强制停止时、当程序代码运行超时时、当php代码执行完成时。</li></ol><p>函数信息可参考手册<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uc2V0LWVycm9yLWhhbmRsZXIucGhw" title="https://www.php.net/manual/zh/function.set-error-handler.php">set_error_handler()<i class="fa fa-external-link"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uc2V0LWV4Y2VwdGlvbi1oYW5kbGVyLnBocA==" title="https://www.php.net/manual/zh/function.set-exception-handler.php">set_exception_handler()<i class="fa fa-external-link"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ucmVnaXN0ZXItc2h1dGRvd24tZnVuY3Rpb24=" title="https://www.php.net/manual/zh/function.register-shutdown-function">register_shutdown_function()<i class="fa fa-external-link"></i></span></p><h5 id="检查核心class是否被扩展"><a href="#检查核心class是否被扩展" class="headerlink" title="检查核心class是否被扩展"></a>检查核心class是否被扩展</h5><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if ( ! empty($assign_to_config['subclass_prefix']))</span><br><span class="line">&#123;</span><br><span class="line">    get_config(array('subclass_prefix' =&gt; $assign_to_config['subclass_prefix']));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中,$assign_to_config是定义在入口文件Index.php中的配置数组. 通常情况下，CI的核心组件的名称均以<code>CI_</code>开头，而如果更改了或者扩展CI的核心组件，则应该使用不同的subclass_prefix前缀如<code>MY_</code> ,这种情况下，应该通过$assign_to_config[‘subclass_prefix’]指定你的扩展核心的前缀名，便于CI的Loader组件加载该类，或者可能出现找不到文件的错误。另外，subclass_prefix配置项默认是位于APPPATH/Config/config.php配置文件中的，这段代码同样告诉我们，<code>index.php文件中的subclass_prefix具有更高的优先权</code>（也就是，如果两处都设置了subclass_prefix,index.php中的配置项会覆盖配置文件Config.php中的配置）。</p><h5 id="加载composer"><a href="#加载composer" class="headerlink" title="加载composer"></a>加载composer</h5><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">if ($composer_autoload = config_item('composer_autoload'))</span><br><span class="line">&#123;</span><br><span class="line">    if ($composer_autoload === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        file_exists(APPPATH.'vendor/autoload.php')</span><br><span class="line">            ? require_once(APPPATH.'vendor/autoload.php')</span><br><span class="line">            : log_message('error', '$config[\'composer_autoload\'] is set to TRUE but '.APPPATH.'vendor/autoload.php was not found.');</span><br><span class="line">    &#125;</span><br><span class="line">    elseif (file_exists($composer_autoload))</span><br><span class="line">    &#123;</span><br><span class="line">        require_once($composer_autoload);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        log_message('error', 'Could not find the specified $config[\'composer_autoload\'] path: '.$composer_autoload);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>composer_autoload</code>有两种定义方式，一种是Boolean类型，为TRUE时表示composer自动加载，这时需要判断<code>APPPATH . vendor/autoload.php</code>文件是否存在然后再来加载；另外一种时直接定义为加载文件名<code>$config[&#39;composer_autoload&#39;] = &#39;/path/to/vendor/autoload.php&#39;;</code>，具体参考<b>APPPATH . config/config.php</b>。</p><hr><h4 id="加载核心类组件"><a href="#加载核心类组件" class="headerlink" title="加载核心类组件"></a>加载核心类组件</h4><p>通常，CI框架中不同的功能均由不同的组件来完成（如Log组件主要用于记录日志，Input组件则用于处理用户的GET,POST等数据）这种模块化的方式使得各组件之间的耦合性较低，从而也便于扩展。</p><h5 id="基准点组件"><a href="#基准点组件" class="headerlink" title="基准点组件"></a>基准点组件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$BM =&amp; load_class(&apos;Benchmark&apos;, &apos;core&apos;);</span><br><span class="line">$BM-&gt;mark(&apos;total_execution_time_start&apos;);</span><br><span class="line">$BM-&gt;mark(&apos;loading_time:_base_classes_start&apos;);</span><br></pre></td></tr></table></figure><p>Benchmark主要用于记录各种时间点、记录内存使用等参数，便于性能测试和追踪，说白了就是用来计算程序运行消耗的时间和内存。</p><h5 id="钩子组件"><a href="#钩子组件" class="headerlink" title="钩子组件"></a>钩子组件</h5><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$EXT =&amp; load_class('Hooks', 'core');</span><br><span class="line">$EXT-&gt;call_hook('pre_system');</span><br></pre></td></tr></table></figure><p>CI的扩展组件用于在不改变CI核心的基础上改变或者增加系统的核心运行功能。Hook钩子允许在系统运行的各个挂钩点（hook point）添加自定义的功能，如pre_system，pre_controller,post_controller等预定义的挂钩点，具体参考<b>APPPATH . config/hooks.php</b>。这里加载完Hooks后首先调用pre_system钩子。</p><h5 id="配置组件"><a href="#配置组件" class="headerlink" title="配置组件"></a>配置组件</h5><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$CFG =&amp; load_class('Config', 'core');</span><br><span class="line">if (isset($assign_to_config) &amp;&amp; is_array($assign_to_config))</span><br><span class="line">&#123;</span><br><span class="line">    foreach ($assign_to_config as $key =&gt; $value)</span><br><span class="line">    &#123;</span><br><span class="line">        $CFG-&gt;set_item($key, $value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Config配置管理组件主要用于加载配置文件、获取和设置配置项等。这里包含了对$assign_to_config的处理：如果有在index.php定义配置数组，那么就丢给配置组件CFG，以后就由CFG来保管了配置信息了。</p><h5 id="设置默认字符编码"><a href="#设置默认字符编码" class="headerlink" title="设置默认字符编码"></a>设置默认字符编码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$charset = strtoupper(config_item(&apos;charset&apos;));</span><br><span class="line">ini_set(&apos;default_charset&apos;, $charset);</span><br><span class="line">if (extension_loaded(&apos;mbstring&apos;))</span><br><span class="line">&#123;</span><br><span class="line">    define(&apos;MB_ENABLED&apos;, TRUE);</span><br><span class="line">    @ini_set(&apos;mbstring.internal_encoding&apos;, $charset);</span><br><span class="line">    mb_substitute_character(&apos;none&apos;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    define(&apos;MB_ENABLED&apos;, FALSE);</span><br><span class="line">&#125;</span><br><span class="line">if (extension_loaded(&apos;iconv&apos;))</span><br><span class="line">&#123;</span><br><span class="line">    define(&apos;ICONV_ENABLED&apos;, TRUE);</span><br><span class="line">    @ini_set(&apos;iconv.internal_encoding&apos;, $charset);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    define(&apos;ICONV_ENABLED&apos;, FALSE);</span><br><span class="line">&#125;</span><br><span class="line">if (is_php(&apos;5.6&apos;))</span><br><span class="line">&#123;</span><br><span class="line">    ini_set(&apos;php.internal_encoding&apos;, $charset);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里功能如下：</p><ol><li>设置默认字符集，可在配置文件中进行相关配置。</li><li>如果php启用<code>mbstring</code>扩展，则设置常量<code>MB_ENABLED</code>为TRUE；设置默认的内部字符编码使网站成为多语言站点，<font color="#891717">注意：此功能自PHP5.6.0起已被弃用</font>；设置替代字符，当输入字符的编码无效时则替换为null，即不输出。</li><li>如果php启用<code>iconv</code>扩展，则设置常量<code>ICONV_ENABLED</code>为TRUE，<font color="#891717">注意：此功能自PHP5.6.0起已被弃用</font>。</li><li>如果PHP版本 &gt;= 5.6, 使用<code>internal_encoding</code>来设置用于mbstring和iconv等多字节模块。默认为空。如果为空， 则使用<code>default_charset</code>。对于5.6已废弃的特性可参考<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvbWlncmF0aW9uNTYuZGVwcmVjYXRlZC5waHA=" title="https://www.php.net/manual/zh/migration56.deprecated.php">PHP 5.6.x 中已废止的特性<i class="fa fa-external-link"></i></span></li></ol><h5 id="加载兼容性函数"><a href="#加载兼容性函数" class="headerlink" title="加载兼容性函数"></a>加载兼容性函数</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">require_once(BASEPATH.&apos;core/compat/mbstring.php&apos;);</span><br><span class="line">require_once(BASEPATH.&apos;core/compat/hash.php&apos;);</span><br><span class="line">require_once(BASEPATH.&apos;core/compat/password.php&apos;);</span><br><span class="line">require_once(BASEPATH.&apos;core/compat/standard.php&apos;);</span><br></pre></td></tr></table></figure><p>CodeIgniter提供了一组兼容性函数，使您可以使用PHP本身可用的函数，但只能在更高版本或取决于特定扩展名的情况下使用。这些函数是自定义实现，它们自己也将具有一些依赖关系，但是如果您的PHP安装程序没有本地提供它们，它们仍然很有用。<br><font color="#891717">注意: 与通用功能很相似，只要满足依赖关系，兼容性功能便始终可用。</font></p><h5 id="UTF8类"><a href="#UTF8类" class="headerlink" title="UTF8类"></a>UTF8类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$UNI =&amp; load_class(&apos;Utf8&apos;, &apos;core&apos;);</span><br></pre></td></tr></table></figure><p>用于对UTF-8字符集处理的相关支持。其他组件如INPUT组件，需要改组件的支持。</p><h5 id="URI类"><a href="#URI类" class="headerlink" title="URI类"></a>URI类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$URI =&amp; load_class(&apos;URI&apos;, &apos;core&apos;);</span><br></pre></td></tr></table></figure><p>解析URI（Uniform Rescource Identifier）参数等.这个组件与RTR组件关系紧密。</p><h5 id="Router类"><a href="#Router类" class="headerlink" title="Router类"></a>Router类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$RTR =&amp; load_class(&apos;Router&apos;, &apos;core&apos;, isset($routing) ? $routing : NULL);</span><br></pre></td></tr></table></figure><p>路由组件，通过URI组件的参数解析，决定数据流向（路由）。</p><h5 id="Output类"><a href="#Output类" class="headerlink" title="Output类"></a>Output类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$OUT =&amp; load_class(&apos;Output&apos;, &apos;core&apos;);</span><br></pre></td></tr></table></figure><p>最终的输出管理组件，掌管着CI的最终输出。加载完Output类之后，调用<code>cache_override</code>钩子来判断如果有缓存则输出缓存，没用则继续。<br><font color="#891717">注意</font>: <code>cache_override</code>钩子可以调用自己的函数来取代output类中的_display_cache() 函数.这可以使用自己的缓存显示方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if ($EXT-&gt;call_hook(&apos;cache_override&apos;) === FALSE &amp;&amp; $OUT-&gt;_display_cache($CFG, $URI) === TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Security类"><a href="#Security类" class="headerlink" title="Security类"></a>Security类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$SEC =&amp; load_class(&apos;Security&apos;, &apos;core&apos;);</span><br></pre></td></tr></table></figure><p>用于安全性处理，比如防止跨站请求伪造等。</p><h5 id="Input类"><a href="#Input类" class="headerlink" title="Input类"></a>Input类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$IN=&amp; load_class(&apos;Input&apos;, &apos;core&apos;);</span><br></pre></td></tr></table></figure><p>用于获取输入以及表单验证。</p><h5 id="Lang类"><a href="#Lang类" class="headerlink" title="Lang类"></a>Lang类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$LANG =&amp; load_class(&apos;Lang&apos;, &apos;core&apos;);</span><br></pre></td></tr></table></figure><p>用于设置框架语言。</p><h5 id="加载控制器"><a href="#加载控制器" class="headerlink" title="加载控制器"></a>加载控制器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">require_once BASEPATH.&apos;core/Controller.php&apos;;</span><br><span class="line">function &amp;get_instance()</span><br><span class="line">&#123;</span><br><span class="line">    return CI_Controller::get_instance();</span><br><span class="line">&#125;</span><br><span class="line">if (file_exists(APPPATH.&apos;core/&apos;.$CFG-&gt;config[&apos;subclass_prefix&apos;].&apos;Controller.php&apos;))</span><br><span class="line">&#123;</span><br><span class="line">    require_once APPPATH.&apos;core/&apos;.$CFG-&gt;config[&apos;subclass_prefix&apos;].&apos;Controller.php&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处定义的get_instance方法返回一个引用，表明CI控制器拒绝副本，是单例模型。到这部核心组件加载完了，标记一下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$BM-&gt;mark(&apos;loading_time:_base_classes_end&apos;);</span><br></pre></td></tr></table></figure><hr><h4 id="路由的设置与判断"><a href="#路由的设置与判断" class="headerlink" title="路由的设置与判断"></a>路由的设置与判断</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">$e404 = FALSE;</span><br><span class="line">$class = ucfirst($RTR-&gt;class);</span><br><span class="line">$method = $RTR-&gt;method;</span><br><span class="line">if (empty($class) OR ! file_exists(APPPATH.&apos;controllers/&apos;.$RTR-&gt;directory.$class.&apos;.php&apos;))</span><br><span class="line">&#123;</span><br><span class="line">    $e404 = TRUE;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    require_once(APPPATH.&apos;controllers/&apos;.$RTR-&gt;directory.$class.&apos;.php&apos;);</span><br><span class="line">    if ( ! class_exists($class, FALSE) OR $method[0] === &apos;_&apos; OR method_exists(&apos;CI_Controller&apos;, $method))</span><br><span class="line">    &#123;</span><br><span class="line">        $e404 = TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    elseif (method_exists($class, &apos;_remap&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        $params = array($method, array_slice($URI-&gt;rsegments, 2));</span><br><span class="line">        $method = &apos;_remap&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    elseif ( ! method_exists($class, $method))</span><br><span class="line">    &#123;</span><br><span class="line">        $e404 = TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    elseif ( ! is_callable(array($class, $method)))</span><br><span class="line">    &#123;</span><br><span class="line">        $reflection = new ReflectionMethod($class, $method);</span><br><span class="line">        if ( ! $reflection-&gt;isPublic() OR $reflection-&gt;isConstructor())</span><br><span class="line">        &#123;</span><br><span class="line">            $e404 = TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">if ($e404)</span><br><span class="line">&#123;</span><br><span class="line">    if ( ! empty($RTR-&gt;routes[&apos;404_override&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        if (sscanf($RTR-&gt;routes[&apos;404_override&apos;], &apos;%[^/]/%s&apos;, $error_class, $error_method) !== 2)</span><br><span class="line">        &#123;</span><br><span class="line">            $error_method = &apos;index&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">        $error_class = ucfirst($error_class);</span><br><span class="line">        if ( ! class_exists($error_class, FALSE))</span><br><span class="line">        &#123;</span><br><span class="line">            if (file_exists(APPPATH.&apos;controllers/&apos;.$RTR-&gt;directory.$error_class.&apos;.php&apos;))</span><br><span class="line">            &#123;</span><br><span class="line">                require_once(APPPATH.&apos;controllers/&apos;.$RTR-&gt;directory.$error_class.&apos;.php&apos;);</span><br><span class="line">                $e404 = ! class_exists($error_class, FALSE);</span><br><span class="line">            &#125;</span><br><span class="line">            elseif ( ! empty($RTR-&gt;directory) &amp;&amp; file_exists(APPPATH.&apos;controllers/&apos;.$error_class.&apos;.php&apos;))</span><br><span class="line">            &#123;</span><br><span class="line">                require_once(APPPATH.&apos;controllers/&apos;.$error_class.&apos;.php&apos;);</span><br><span class="line">                if (($e404 = ! class_exists($error_class, FALSE)) === FALSE)</span><br><span class="line">                &#123;</span><br><span class="line">                    $RTR-&gt;directory = &apos;&apos;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $e404 = FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if ( ! $e404)</span><br><span class="line">    &#123;</span><br><span class="line">        $class = $error_class;</span><br><span class="line">        $method = $error_method;</span><br><span class="line">        $URI-&gt;rsegments = array(</span><br><span class="line">            1 =&gt; $class,</span><br><span class="line">            2 =&gt; $method</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        show_404($RTR-&gt;directory.$class.&apos;/&apos;.$method);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CI认为下面这几种情况认为是404，如果找不到就调用show_404()函数:</p><ol><li>请求的class为空或class文件不存在:<code>empty($class) OR ! file_exists(APPPATH.&#39;controllers/&#39;.$RTR-&gt;directory.$class.&#39;.php&#39;)</code>   </li><li>请求的class不存在或请求的方法为私有方法或请求的是基类中的方法:<code>! class_exists($class, FALSE) OR $method[0] === &#39;_&#39; OR method_exists(&#39;CI_Controller&#39;, $method)</code>   </li><li>请求的方法不存在:<code>! method_exists($class, $method)</code></li><li>请求的不是公共方法: <code>! $reflection-&gt;isPublic() OR $reflection-&gt;isConstructor()</code><br>如果请求的条件满足上面4个中的任何一个，则被认为是不合法的请求（或者是无法定位的请求），因此会被CI定向到404页面（值得注意的是，如果设置了404_override，并且404_override的class存在，并不会直接调用show_404并退出，而是会像正常的访问一样，实例化：$CI = new $class();）</li></ol><p>获取请求参数:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if ($method !== &apos;_remap&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    $params = array_slice($URI-&gt;rsegments, 2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>路由选择和安全性检查都已完成后，调用pre_controller钩子，在开始执行前进行环境预处理，然后标记运行开始时间点:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$EXT-&gt;call_hook(&apos;pre_controller&apos;);</span><br><span class="line">$BM-&gt;mark(&apos;controller_execution_time_( &apos;.$class.&apos; / &apos;.$method.&apos; )_start&apos;);</span><br></pre></td></tr></table></figure><hr><h4 id="解析请求的类，并调用请求的方法"><a href="#解析请求的类，并调用请求的方法" class="headerlink" title="解析请求的类，并调用请求的方法"></a>解析请求的类，并调用请求的方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$CI = new $class();</span><br><span class="line">$EXT-&gt;call_hook(&apos;post_controller_constructor&apos;);</span><br><span class="line">call_user_func_array(array(&amp;$CI, $method), $params);</span><br></pre></td></tr></table></figure><p>实例化控制器类，然后调用<code>post_controller_constructor</code>钩子，再然后通过<code>call_user_func_array ( callable $callback , array $param_arr )</code>函数调用<code>$CI</code>类中的<code>$method</code>方法，参数为数组<code>$params</code>。</p><p>在控制器运行完成之后标记运行结束并调用<code>post_controller</code>钩子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$BM-&gt;mark(&apos;controller_execution_time_( &apos;.$class.&apos; / &apos;.$method.&apos; )_end&apos;);</span><br><span class="line">$EXT-&gt;call_hook(&apos;post_controller&apos;);</span><br></pre></td></tr></table></figure><hr><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if ($EXT-&gt;call_hook(&apos;display_override&apos;) === FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    $OUT-&gt;_display();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在未定义<code>display_override</code>钩子的情况下使用<code>_display()</code>函数完成最终输出，$this-&gt;load-&gt;view()之后，并不会直接输出，而是放在了缓存区。$Out-&gt;_display之后，才会设置缓存，并最终输出。<br><font color="#891717">注意</font>: <code>display_override</code>钩子的作用是覆盖_display()函数, 用来在系统执行末尾向web浏览器发送最终页面.这允许你用自己的方法来显示.<b>这里需要通过 $this-&gt;CI =&amp; get_instance()引用CI超级对象，然后这样的最终数据可以通过调用 $this-&gt;CI-&gt;output-&gt;get_output() 来获得。</b></p><p>在最终渲染页面发送到浏览器后，浏览器接收完最终数据的系统末尾调用<code>post_system</code>钩子:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$EXT-&gt;call_hook(&apos;post_system&apos;);</span><br></pre></td></tr></table></figure><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81MjgyMTU5OA==" title="https://blog.csdn.net/Zhihua_W/article/details/52821598">CI框架源码解析二之引导文件CodeIgniter.php<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter入口文件index.php</title>
      <link href="/2019/12/16/codeigniter-index/"/>
      <url>/2019/12/16/codeigniter-index/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>index.php是CodeIgniter（简称CI）框架的入口文件，一共完成了四项工作：</p><ul><li>设置框架应用的环境状态</li><li>配置系统、应用、视图等程序目录以及得到其路径</li><li>系统、应用、视图等目录的正确性验证</li><li>载入 core/CodeIgniter.php框架核心文件，启动框架</li></ul><a id="more"></a><hr><h4 id="设置框架应用的环境状态"><a href="#设置框架应用的环境状态" class="headerlink" title="设置框架应用的环境状态"></a>设置框架应用的环境状态</h4><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">define('ENVIRONMENT', isset($_SERVER['CI_ENV']) ? $_SERVER['CI_ENV'] : 'development');</span><br></pre></td></tr></table></figure><p><code>CI_ENV</code>可在<code>.env</code>文件中定义，.env文件位于项目根目录下，作为全局环境配置文件，通过 .env文件 加载环境变量并且能够自动的通过 <code>getenv()</code>, <code>$_ENV</code>和 <code>$_SERVER</code> 自动调用,如文件内容<code>CI_ENV=production</code>表示将运行环境设置为production。如果没有指定则默认为<code>development</code>。</p><p>CI框架设置了三种应用场景状态，分别是：<strong>开发</strong>-<code>development</code>，<strong>测试</strong>-<code>testing</code>，<strong>产品</strong>-<code>production</code>，<strong>开发</strong>-<code>development</code>状态，<strong>默认</strong>的状态下会产生错误报告，<strong>测试</strong>，<strong>产品</strong>状态下则不会产生错误报告，否则CI框架会认为你没有配置好相应的环境，从而退出进程并给出对应的错误信息：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">switch (ENVIRONMENT)</span><br><span class="line">&#123;</span><br><span class="line">case 'development':</span><br><span class="line">error_reporting(-1);</span><br><span class="line">ini_set('display_errors', 1);</span><br><span class="line">break;</span><br><span class="line"></span><br><span class="line">case 'testing':</span><br><span class="line">case 'production':</span><br><span class="line">ini_set('display_errors', 0);</span><br><span class="line">if (version_compare(PHP_VERSION, '5.3', '&gt;='))</span><br><span class="line">&#123;</span><br><span class="line">error_reporting(E_ALL &amp; ~E_NOTICE &amp; ~E_DEPRECATED &amp; ~E_STRICT &amp; ~E_USER_NOTICE &amp; ~E_USER_DEPRECATED);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">error_reporting(E_ALL &amp; ~E_NOTICE &amp; ~E_STRICT &amp; ~E_USER_NOTICE);</span><br><span class="line">&#125;</span><br><span class="line">break;</span><br><span class="line"></span><br><span class="line">default:</span><br><span class="line">header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);</span><br><span class="line">echo 'The application environment is not set correctly.';</span><br><span class="line">exit(1); // EXIT_ERROR</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置ENVIRONMENT的一个好处是：可以很方便的切换系统的配置而不必修改系统代码。例如，在系统进入测试阶段时，database配置为测试的数据库，而在系统测试完毕时，database切换到线上的数据库。这好比是用一个开关控制了系统的环境切换，自然是非常方便的。</p><hr><h4 id="配置系统、应用、视图等程序目录以及得到其路径"><a href="#配置系统、应用、视图等程序目录以及得到其路径" class="headerlink" title="配置系统、应用、视图等程序目录以及得到其路径"></a>配置系统、应用、视图等程序目录以及得到其路径</h4><p> CI框架允许你将系统核心源码和应用程序代码进行分开放置，但是你必须设定好系统的system文件夹和application文件夹（同样，文件夹名字可以是任何合法的文件夹名称，而不一定使用’system’和’application’）的名称、路径等信息：<br> <figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$system_path = 'system';</span><br><span class="line">$application_folder = 'application';</span><br><span class="line">$view_folder = '';</span><br></pre></td></tr></table></figure></p><p>如果时CLI模式，运行的一般像<code>php filename.php</code>这样直接运行php脚本文件，因此需要将php脚本文件所在目录变为当前工作目录，如下：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// Set the current directory correctly for CLI requests</span><br><span class="line">if (defined('STDIN'))</span><br><span class="line">&#123;</span><br><span class="line">    chdir(dirname(__FILE__));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="系统、应用、视图等目录的正确性验证"><a href="#系统、应用、视图等目录的正确性验证" class="headerlink" title="系统、应用、视图等目录的正确性验证"></a>系统、应用、视图等目录的正确性验证</h4><h5 id="系统-system-文件目录的正确性验证"><a href="#系统-system-文件目录的正确性验证" class="headerlink" title="系统(system)文件目录的正确性验证"></a>系统(system)文件目录的正确性验证</h5><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">if (($_temp = realpath($system_path)) !== FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    $system_path = $_temp.DIRECTORY_SEPARATOR;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    // Ensure there's a trailing slash</span><br><span class="line">    $system_path = strtr(</span><br><span class="line">        rtrim($system_path, '/\\'),</span><br><span class="line">        '/\\',</span><br><span class="line">        DIRECTORY_SEPARATOR.DIRECTORY_SEPARATOR</span><br><span class="line">    ).DIRECTORY_SEPARATOR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Is the system path correct?</span><br><span class="line">if ( ! is_dir($system_path))</span><br><span class="line">&#123;</span><br><span class="line">    header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);</span><br><span class="line">    echo 'Your system folder path does not appear to be set correctly. Please open the following file and correct this: '.pathinfo(__FILE__, PATHINFO_BASENAME);</span><br><span class="line">    exit(3); // EXIT_CONFIG</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="应用-application-文件目录的正确性验证"><a href="#应用-application-文件目录的正确性验证" class="headerlink" title="应用(application)文件目录的正确性验证"></a>应用(application)文件目录的正确性验证</h5><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">// The path to the <span class="string">"application"</span> directory</span><br><span class="line">if (is_dir($application_folder))</span><br><span class="line">&#123;</span><br><span class="line">    if (($_temp = realpath($application_folder)) !== FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        $application_folder = $_temp;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $application_folder = strtr(</span><br><span class="line">            rtrim($application_folder, '/\\'),</span><br><span class="line">            '/\\',</span><br><span class="line">            DIRECTORY_SEPARATOR.DIRECTORY_SEPARATOR</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">elseif (is_dir(BASEPATH.$application_folder.DIRECTORY_SEPARATOR))</span><br><span class="line">&#123;</span><br><span class="line">    $application_folder = BASEPATH.strtr(</span><br><span class="line">        trim($application_folder, '/\\'),</span><br><span class="line">        '/\\',</span><br><span class="line">        DIRECTORY_SEPARATOR.DIRECTORY_SEPARATOR</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);</span><br><span class="line">    echo 'Your application folder path does not appear to be set correctly. Please open the following file and correct this: '.SELF;</span><br><span class="line">    exit(3); // EXIT_CONFIG</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="视图-view-文件目录的正确性验证"><a href="#视图-view-文件目录的正确性验证" class="headerlink" title="视图(view)文件目录的正确性验证"></a>视图(view)文件目录的正确性验证</h5><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">// The path to the <span class="string">"views"</span> directory</span><br><span class="line">if ( ! isset($view_folder[0]) &amp;&amp; is_dir(APPPATH.'views'.DIRECTORY_SEPARATOR))</span><br><span class="line">&#123;</span><br><span class="line">    $view_folder = APPPATH.'views';</span><br><span class="line">&#125;</span><br><span class="line">elseif (is_dir($view_folder))</span><br><span class="line">&#123;</span><br><span class="line">    if (($_temp = realpath($view_folder)) !== FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        $view_folder = $_temp;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $view_folder = strtr(</span><br><span class="line">            rtrim($view_folder, '/\\'),</span><br><span class="line">            '/\\',</span><br><span class="line">            DIRECTORY_SEPARATOR.DIRECTORY_SEPARATOR</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">elseif (is_dir(APPPATH.$view_folder.DIRECTORY_SEPARATOR))</span><br><span class="line">&#123;</span><br><span class="line">    $view_folder = APPPATH.strtr(</span><br><span class="line">        trim($view_folder, '/\\'),</span><br><span class="line">        '/\\',</span><br><span class="line">        DIRECTORY_SEPARATOR.DIRECTORY_SEPARATOR</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);</span><br><span class="line">    echo 'Your view folder path does not appear to be set correctly. Please open the following file and correct this: '.SELF;</span><br><span class="line">    exit(3); // EXIT_CONFIG</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="目录相关常量定义"><a href="#目录相关常量定义" class="headerlink" title="目录相关常量定义"></a>目录相关常量定义</h5><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// The name of THIS file</span><br><span class="line">define('SELF', pathinfo(__FILE__, PATHINFO_BASENAME));</span><br><span class="line"></span><br><span class="line">// Path to the system directory</span><br><span class="line">define('BASEPATH', $system_path);</span><br><span class="line"></span><br><span class="line">// Path to the front controller (this file) directory</span><br><span class="line">define('FCPATH', dirname(__FILE__).DIRECTORY_SEPARATOR);</span><br><span class="line"></span><br><span class="line">// Name of the <span class="string">"system"</span> directory</span><br><span class="line">define('SYSDIR', basename(BASEPATH));</span><br><span class="line"></span><br><span class="line">// APPPPATH</span><br><span class="line">define('APPPATH', $application_folder.DIRECTORY_SEPARATOR);</span><br><span class="line"></span><br><span class="line">// VIEWPATH</span><br><span class="line">define('VIEWPATH', $view_folder.DIRECTORY_SEPARATOR);</span><br></pre></td></tr></table></figure><p><code>注</code>: 查看所有常量的方法：<code>var_dump(get_defined_constants());</code></p><hr><h4 id="载入-core-CodeIgniter-php框架核心文件，启动框架"><a href="#载入-core-CodeIgniter-php框架核心文件，启动框架" class="headerlink" title="载入 core/CodeIgniter.php框架核心文件，启动框架"></a>载入 core/CodeIgniter.php框架核心文件，启动框架</h4><p>入口文件的最后一行，引入CodeIgniter.php框架核心文件（也是下一步框架执行的关键）。CodeIgniter.php被称为bootstrap file，也就是它是一个引导文件，是CI框架执行流程的核心文件。</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/<span class="symbol">*</span></span><br><span class="line"> <span class="symbol">*</span> --------------------------------------------------------------------</span><br><span class="line"> <span class="symbol">*</span> LOAD THE BOOTSTRAP FILE</span><br><span class="line"> <span class="symbol">*</span> --------------------------------------------------------------------</span><br><span class="line"> <span class="symbol">*</span></span><br><span class="line"> <span class="symbol">*</span> <span class="keyword">And</span> away we go...</span><br><span class="line"> <span class="symbol">*</span>/</span><br><span class="line">require_once BASEPATH.'core/CodeIgniter.php';</span><br></pre></td></tr></table></figure><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81MjgxNTg5Mg==" title="https://blog.csdn.net/Zhihua_W/article/details/52815892">《CI框架源码解析一之入口文件index.php》<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeIgniter之Loader类原码学习笔记</title>
      <link href="/2019/12/09/codeigniter-loader-learn/"/>
      <url>/2019/12/09/codeigniter-loader-learn/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>2017年5月17日是一个特殊的日子，在这一天我第一次提交代码。这个时期的编码使用的是原生php，每个功能文件开头都需要<code>require(dirname(__FILE__) . &#39;/../config.php&#39;);</code>，<code>config.php</code>的作用主要有: <code>内存上限</code>、<code>设置cookie为httponly</code>、<code>参数安全过滤及拦截</code>、<code>数据库相关设置</code>、<code>语言文件加载</code>等等。基本每个文件开头都是先进行require/require_once/include/include_once等操作。2019年3月首次接触公司重构的业务代码，使用的是CodeIniger + Vue前后端分离架构设计，我负责部分后端API的开发及维护工作。下面是在工作中对CodeIgniter框架中Loader类的原码学习笔记。</p><a id="more"></a><hr><p><marquee direction="left"><font color="#891717" face="隶书" size="+5" behavior="alternate" scrollamount="10" scrolldelay="100">CodeIgniter Loader</font></marquee></p><hr><h4 id="流程控制中加载文件的语句"><a href="#流程控制中加载文件的语句" class="headerlink" title="流程控制中加载文件的语句"></a>流程控制中加载文件的语句</h4><p>工作中常用到加载文件相关的<code>语句</code>有: <code>include</code>、<code>require</code>、<code>include_once</code>、<code>require_once</code>等。下面时<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uaW5jbHVkZS5waHA=" title="https://www.php.net/manual/zh/function.include.php">官网<i class="fa fa-external-link"></i></span>的相关解释：</p><p><strong>include require 语句包含并运行指定文件</strong></p><p>被包含文件先按参数给出的路径寻找，如果没有给出目录（只有文件名）时则按照 <code>include_path</code> 指定的目录寻找。如果在 include_path 下没找到该文件则 include 最后才在调用脚本文件所在的目录和当前工作目录下寻找。如果最后仍未找到文件则 include 结构会发出一条<b><font color="#891717">警告</font></b>。</p><p><strong>如果定义了路径——不管是绝对路径（在 Windows 下以盘符或者 \ 开头，在 Unix/Linux 下以 / 开头）还是当前目录的相对路径（以 . 或者 .. 开头）——include_path 都会被完全忽略。例如一个文件以 ../ 开头，则解析器会在当前目录的父目录下寻找该文件。</strong></p><p><code>当一个文件被包含时，其中所包含的代码继承了 include 所在行的变量范围。从该处开始，调用文件在该行处可用的任何变量在被调用的文件中也都可用。不过所有在包含文件中定义的函数和类都具有全局作用域。</code></p><p><strong>require</strong> 和 include 几乎完全一样，除了处理失败的方式不同之外。require 在出错时产生 E_COMPILE_ERROR 级别的错误。换句话说<code>require将导致脚本中止</code> <strong>而</strong> <code>include 只产生警告（E_WARNING），脚本会继续运行。</code></p><p><strong>include_once require_once</strong></p><p>include_once/require_once语句在脚本执行期间包含并运行指定文件。此行为和 include/require 语句唯一区别是如果该文件中已经被包含过，则不会再次包含。如同此语句名字暗示的那样，只会包含一次。</p><p>include_once/require_once可以用于在脚本执行期间同一个文件有可能被包含超过一次的情况下，想确保它只被包含一次以避免函数重定义，变量重新赋值等问题。</p><p><strong>include_path</strong></p><p>指定目录列表，其中 <code>require</code>，<code>include</code>， <code>fopen（）</code>，<code>file（）</code>， <code>readfile（）</code>和<code>file_get_contents（）</code> 函数在其中查找文件。格式类似于系统的 PATH环境变量：在Unix中用<code>冒号</code>或在Windows中用<code>分号</code>分隔的目录列表。</p><p>当寻找要包含的文件时，PHP会分别考虑包含路径中的每个条目。它将检查第一个路径，如果找不到，请检查下一个路径，直到找到包含的文件或返回警告 或错误为止 。您可以在运行时使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uc2V0LWluY2x1ZGUtcGF0aC5waHA=" title="https://www.php.net/manual/zh/function.set-include-path.php">set_include_path（）<i class="fa fa-external-link"></i></span>修改或设置包含路径。</p><hr><h4 id="CodeIgniter框架中的加载类"><a href="#CodeIgniter框架中的加载类" class="headerlink" title="CodeIgniter框架中的加载类"></a>CodeIgniter框架中的加载类</h4><p>CodeIgniter框架有专门的Loader类专门用于文件加载， 让我们在编程过程中更专注与业务逻辑，从而提高效率。下面是Loader类的学习笔记。</p><h5 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h5><p>从构造方法开始，下面是构造方法的定义：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public function __construct()</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;_ci_ob_level = ob_get_level();</span><br><span class="line">    $this-&gt;_ci_classes =&amp; is_loaded();</span><br><span class="line">    log_message('info', 'Loader Class Initialized');</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里主要干了两件事：</p><ul><li>获取输出缓冲机制的嵌套级别并赋值给<code>_ci_ob_level</code>属性。关于<code>ob系列函数</code>有一篇文章可以细细品味<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZGVhbmNob3BwZXIvcC80Njg4NjY3Lmh0bWw=" title="https://www.cnblogs.com/deanchopper/p/4688667.html">《结合php ob函数理解缓冲机制》<i class="fa fa-external-link"></i></span>;</li><li><code>_ci_classes</code>引用Common函数<code>is_loaded()</code>表示<code>_ci_classes</code>存放已加载的类。</li></ul><h6 id="Common中的is-loaded-函数"><a href="#Common中的is-loaded-函数" class="headerlink" title="Common中的is_loaded()函数"></a>Common中的is_loaded()函数</h6><p>下面来看<code>is_loaded()</code>函数的定义：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function &amp;is_loaded($class = '')</span><br><span class="line">&#123;</span><br><span class="line">    static $_is_loaded = array();</span><br><span class="line"></span><br><span class="line">    if ($class !== '')</span><br><span class="line">    &#123;</span><br><span class="line">        $_is_loaded[strtolower($class)] = $class;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $_is_loaded;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一次调用该函数时会初始化一个静态数组<code>$_is_loaded</code>，若指定了参数$class然后则将参数中给的类名$class<strong>小写</strong>形式作为<code>key</code>、$class作为<code>value</code>保存到数组中，最后返回静态数组$_is_loaded。比如传入一个参数’Test’，则静态数组中会产生一个关于Test类的映射<code>$_is_loaded[&#39;test&#39;] = &#39;Test&#39;;</code>，is_loaded()<b><font color="#891717">函数负责记录哪些类被加载过，返回的是已加载类的集合</font></b>。<b>此处构造函数中并没有指定类名，因此只是获取已加载类的集合。</b></p><p>由此可以判断Loader类构造方法的作用是：</p><ul><li>属性<code>_ci_ob_level</code>表示输出缓冲机制的嵌套级别。</li><li>属性<code>_ci_classes</code>表示已加载类的映射集合。</li></ul><hr><h5 id="initialize"><a href="#initialize" class="headerlink" title="initialize()"></a>initialize()</h5><p>initialize()方法在<code>CI_Controller类</code>中调用，负责将<strong>autoload.php</strong>文件中指定的默认加载项进行加载。其定义为：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function initialize()</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;_ci_autoloader();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着看下_ci_autoloader()的实现，看看_ci_autoloader()是如何将autoload.php文件中指定的默认加载项进行加载的。</p><h6 id="ci-autoloader"><a href="#ci-autoloader" class="headerlink" title="_ci_autoloader()"></a>_ci_autoloader()</h6><ol><li><p>引入autoload.php文件</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if (file_exists(APPPATH.'config/autoload.php'))</span><br><span class="line">&#123;</span><br><span class="line">    include(APPPATH.'config/autoload.php');</span><br><span class="line">&#125;</span><br><span class="line">if (file_exists(APPPATH.'config/'.ENVIRONMENT.'/autoload.php'))</span><br><span class="line">&#123;</span><br><span class="line">    include(APPPATH.'config/'.ENVIRONMENT.'/autoload.php');</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>autoload.php文件结构为：</p><blockquote><p>$autoload = [<br> ‘packages’ =&gt; [APPPATH . ‘third_party/MX’],<br> ‘libraries’ =&gt; [‘my_class’, ‘database’],<br> ‘drivers’ =&gt; [],<br> ‘helper’ =&gt; [‘array’, ‘language’],<br> ‘config’ =&gt; [‘codeigniter’],<br> ‘language’ =&gt; [],<br> ‘model’ =&gt; [],<br>]</p></blockquote></li><li><p>判断是否存在$autoload，也就是如果不存在autoload.php文件，直接return</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if ( ! isset($autoload))</span><br><span class="line">&#123;</span><br><span class="line">    return;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><ol start="3"><li>根据$autoload的分类即keys分别进行加载，首先加载<strong>packages</strong>，代码如下：<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (isset($autoload['packages']))</span><br><span class="line">&#123;</span><br><span class="line">    foreach ($autoload['packages'] as $package_path)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;add_package_path($package_path);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><code>add_package_path()</code>方法代码如下：<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public function add_package_path($path, $view_cascade = TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    $path = rtrim($path, '/').'/';</span><br><span class="line">    array_unshift($this-&gt;_ci_library_paths, $path);</span><br><span class="line">    array_unshift($this-&gt;_ci_model_paths, $path);</span><br><span class="line">    array_unshift($this-&gt;_ci_helper_paths, $path);</span><br><span class="line">    $this-&gt;_ci_view_paths = array($path.'views/' =&gt; $view_cascade) + $this-&gt;_ci_view_paths;</span><br><span class="line">    $config =&amp; $this-&gt;_ci_get_component('config');</span><br><span class="line">    $config-&gt;_config_paths[] = $path;</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>其中_ci_get_component()方法的作用是获取CI实例，CodeIgniter在CI_Controller类中通过<code>self::$instance</code>实现<code>单例化</code>，在第一次实例时，通过静态变量$instance引用了这个实例。 以后都可以通过&amp;get_instance();来获得这个单一实例。构成这样的单例模式的好处就是单例类不会重复占用内存和系统资源而是让应用程序的其他部分更好的使用这些资源。此处通过全局函数get_instance()拿到CI实例。<br>其代码如下：<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">protected function &amp;_ci_get_component($component)</span><br><span class="line">&#123;</span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line">    return $CI-&gt;$component;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>总结add_package_path()的作用如下：</p><ul><li>将$package_path分别加入<code>_ci_library_paths</code>、<code>_ci_model_paths</code>、<code>_ci_helper_paths</code>这几个属性中，<code>array_unshift()</code>的作用是在数组的开头加入新元素。</li><li>使用数组相加的方式将最先出现的值作为结果将$package_path . ‘views/‘加入到<code>_ci_view_paths</code>中。</li><li>获取CI实例，通过CI实例将$package_path加入到<code>$CI-&gt;config-&gt;_config_paths</code>数组中。</li></ul><hr><ol start="4"><li>加载autoload.php中配置的config文件，即$autoload[‘config’]中的内容：<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (count($autoload['config']) &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">    foreach ($autoload['config'] as $val)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;config($val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>config()方法：<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function config($file, $use_sections = FALSE, $fail_gracefully = FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    return get_instance()-&gt;config-&gt;load($file, $use_sections, $fail_gracefully);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>这里<code>get_instance()-&gt;config</code>即<code>CI_Config</code>，在<code>CI_Controller</code>类中已执行过<code>$this-&gt;config = new CI_Config();</code>。 此处$autoload[‘config’] = [‘codeigniter’]，因此此处执行的是CI_Config-&gt;load(‘codeigniter’)进行加载codeigniter.php文件，即<code>include(&#39;codeigniter.php&#39;)</code>。然后将文件名记入CI_Config-&gt;is_loaded数组，方便检查文件是否已加载。</li></ol><hr><ol start="5"><li><p>加载helper、language文件</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">foreach (array('helper', 'language') as $type)</span><br><span class="line">&#123;</span><br><span class="line">    if (isset($autoload[$type]) &amp;&amp; count($autoload[$type]) &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;$type($autoload[$type]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里以变量函数的形式调用了helper()和language()方法：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function language($files, $lang = '')</span><br><span class="line">&#123;</span><br><span class="line">    get_instance()-&gt;lang-&gt;load($files, $lang);</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里执行的时CI_Lang-&gt;load()加载指定的语言包。本例通过helpers()加载[‘array’, ‘language’]</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function helpers($helpers = array())</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;helper($helpers);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>helper()的执行流程：<br>①构造helper文件名：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$filename = basename($helper);</span><br><span class="line">$filepath = ($filename === $helper) ? '' : substr($helper, 0, strlen($helper) - strlen($filename));</span><br><span class="line">$filename = strtolower(preg_replace('<span class="comment">#(_helper)?(\.php)?$#i', '', $filename)).'_helper';// 加后缀 _helper,比如 array_helper</span></span><br><span class="line">$helper   = $filepath.$filename;</span><br></pre></td></tr></table></figure><p>②若已包含则继续下一个</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if (isset($this-&gt;_ci_helpers[$helper]))</span><br><span class="line">&#123;</span><br><span class="line">    continue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>③检查是否有前缀，比如<code>MY_array_helper</code>，前面<code>add_package_path()</code>方法将依赖包依次赋值给$this-&gt;<strong>_ci_helper_paths</strong>属性，此处用到了！</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ext_helper = config_item('subclass_prefix').$filename;</span><br><span class="line">$ext_loaded = FALSE;</span><br><span class="line">foreach ($this-&gt;_ci_helper_paths as $path)</span><br><span class="line">&#123;</span><br><span class="line">    if (file_exists($path.'helpers/'.$ext_helper.'.php'))</span><br><span class="line">    &#123;</span><br><span class="line">        include_once($path.'helpers/'.$ext_helper.'.php');</span><br><span class="line">        $ext_loaded = TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>④如果MY_array_helper.php存在，但是array_helper.php不存在则报错，这里可理解为扩展类存在，基类不存在报错。</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">if ($ext_loaded === TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    $base_helper = BASEPATH.'helpers/'.$helper.'.php';</span><br><span class="line">    if ( ! file_exists($base_helper))</span><br><span class="line">    &#123;</span><br><span class="line">        show_error('Unable to load the requested file: helpers/'.$helper.'.php');</span><br><span class="line">    &#125;</span><br><span class="line">    include_once($base_helper);</span><br><span class="line">    $this-&gt;_ci_helpers[$helper] = TRUE;</span><br><span class="line">    log_message('info', 'Helper loaded: '.$helper);</span><br><span class="line">    continue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>⑤如果前缀文件不存在则加载默认目录下的helper文件，不存在则不成功则报错。如果存在则通过<code>include_once</code>进行加载，然后将helper文件名放入<code>$this-&gt;_ci_helper</code>数组里方便后面加载前判断是否存在。</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">foreach ($this-&gt;_ci_helper_paths as $path)</span><br><span class="line">&#123;</span><br><span class="line">    if (file_exists($path.'helpers/'.$helper.'.php'))</span><br><span class="line">    &#123;</span><br><span class="line">        include_once($path.'helpers/'.$helper.'.php');</span><br><span class="line">        $this-&gt;_ci_helpers[$helper] = TRUE;</span><br><span class="line">        log_message('info', 'Helper loaded: '.$helper);</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">// unable to load the helper</span><br><span class="line">if ( ! isset($this-&gt;_ci_helpers[$helper]))</span><br><span class="line">&#123;</span><br><span class="line">    show_error('Unable to load the requested file: helpers/'.$helper.'.php');</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>加载drivers 数据库驱动器</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if (isset($autoload['drivers']))</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;driver($autoload['drivers']);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>driver()</code>方法有三个参数<code>$library</code> <code>$params</code> <code>$object_name</code>， 具体加载流程如下：<br>① $library如果为数组则走递归，为空则直接return false。默认$autoload并没有指定drivers，因此到这就返回了。<br>② $library不为数组也不为空则判断是否存在<code>CI_Driver_Library</code>类，不存在则<code>require BASEPATH . &#39;libraries/Driver.php&#39;;</code>。这里不是实例化对象，只是使基类可用。<br>③执行<code>$library = ucfirst($library) . &#39;/&#39; . $library;</code>，原因是<code>驱动器位于 system/libraries/ 目录，每个驱动器都有一个独立的目录，目录名和 驱动器父类的类名一致，在该目录下还有一个子目录，命名为 drivers，用于存放所有子类的文件。</code>。<br>④执行<code>return $this-&gt;library($library, $params, $object_name);</code>。library()方法执行的是<code>_ci_load_library()</code>方法进行加载。下面来看_ci_load_library()：</p></li></ol><hr><p><strong>_ci_load_library($class, $params = NULL, $object_name = NULL)</strong></p><ul><li>若$class字符串中存在.php，将其去掉。<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$class = str_replace('.php', '', trim($class, '/'));</span><br></pre></td></tr></table></figure></li><li>$class去掉末尾/后发现还有/就说明在子目录下了，这时要获取子目录<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">if (($last_slash = strrpos($class, '/')) !== FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    // Extract the path</span><br><span class="line">    $subdir = substr($class, 0, ++$last_slash);</span><br><span class="line">    // Get the filename from the path</span><br><span class="line">    $class = substr($class, $last_slash);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    $subdir = '';</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>确保类名首字母大写<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$class = ucfirst($class);</span><br></pre></td></tr></table></figure></li><li></li></ul><hr><h4 id="挑战：不要使用include-once"><a href="#挑战：不要使用include-once" class="headerlink" title="挑战：不要使用include_once"></a>挑战：不要使用include_once</h4><p>读过<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlODMlQTAlRTYlOTYlQjAlRTUlQUUlQjg=" title="https://baike.baidu.com/item/%E6%83%A0%E6%96%B0%E5%AE%B8">laruence<i class="fa fa-external-link"></i></span>前辈的一篇博文<span class="exturl" data-url="aHR0cDovL3d3dy5sYXJ1ZW5jZS5jb20vMjAxMi8wOS8xMi8yNzY1Lmh0bWw=" title="http://www.laruence.com/2012/09/12/2765.html">《再一次, 不要使用(include/require)_once》<i class="fa fa-external-link"></i></span>。其中指出了不要使用include_once的原因并讲解了include_once对文件加载流程：</p><ol><li>尝试解析文件的绝对路径, 如果能解析成功, 则检查EG(included_files), 存在则返回,不存在继续。</li><li>打开文件, 得到文件的打开路径(opened path)。</li><li>拿opened path去EG(included_files)查找, 是否存在, 如果存在则返回, 不存在继续。</li><li>编译文件(compile_file)。</li></ol><p>也就是说include_once需要查询一遍已加载的文件列表, 确认是否存在, 然后再加载。文章最后说<code>你使用include_once, 只能证明, 你对自己的代码没信心.</code>，确实很激励人的！继续加油啦！！</p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wireshark抓包分析TCP的三次握手与四次挥手</title>
      <link href="/2019/12/05/simple-wireshark-tcp-flags/"/>
      <url>/2019/12/05/simple-wireshark-tcp-flags/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p><code>《计算机网络》中说三次握手的目的是防止已失效的连接请求又传送到服务器端，因而产生错误</code>，这句话怎么理解？ 为什么连接的建立需要三次握手，而断开需要四次挥手？</p><a id="more"></a><p>首先介绍下tcp报头中的标识符，tcp的连接与断开由标识符来进行控制的。</p><h4 id="标志符"><a href="#标志符" class="headerlink" title="标志符"></a>标志符</h4><p><code>tcp</code>的标识符占12位，<code>前三位为保留位，需要置为0</code>；剩下九个标志符各占一位，依次为<code>NS</code>、<code>CWR</code>、<code>ECE</code>、<code>URG</code>、<code>ACK</code>、<code>PSH</code>、<code>RST</code>、<code>SYN</code>和<code>FIN</code>。下面通过抓包来分析tcp的三次握手、四次挥手和过程中使用的部分标志位。<br><img src="/2019/12/05/simple-wireshark-tcp-flags/20191205215043.png" class="nofancybox"></p><p>如上图，目前可用的标志位有9位，下面是<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU0JUJDJUEwJUU4JUJFJTkzJUU2JThFJUE3JUU1JTg4JUI2JUU1JThEJThGJUU4JUFFJUFF" title="https://zh.wikipedia.org/wiki/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE">维基百科<i class="fa fa-external-link"></i></span>对于九位标志符的介绍：</p><ul><li>NS—ECN-nonce。ECN显式拥塞通知（Explicit Congestion Notification）是对TCP的扩展，定义于RFC 3168（2001）。ECN允许拥塞控制的端对端通知而避免丢包。ECN为一项可选功能，如果底层网络设施支持，则可能被启用ECN的两个端点使用。在ECN成功协商的情况下，ECN感知路由器可以在IP头中设置一个标记来代替丢弃数据包，以标明阻塞即将发生。数据包的接收端回应发送端的表示，降低其传输速率，就如同在往常中检测到包丢失那样。</li><li>CWR—Congestion Window Reduced。</li><li>ECE—ECN-Echo有两种意思，取决于SYN标志的值。</li><li>URG—为1表示高优先级数据包，紧急指针字段有效。</li><li>ACK—为1表示确认号字段有效</li><li>PSH—为1表示是带有PUSH标志的数据，指示接收方应该尽快将这个报文段交给应用层而不用等待缓冲区装满。</li><li>RST—为1表示出现严重差错。可能需要重新创建TCP连接。还可以用于拒绝非法的报文段和拒绝连接请求。</li><li>SYN—为1表示这是连接请求或是连接接受请求，用于创建连接和使顺序号同步</li><li>FIN—为1表示发送方没有数据要传输了，要求释放连接。</li></ul><hr><h4 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h4><img src="/2019/12/05/simple-wireshark-tcp-flags/20191206210409.png" class="nofancybox" title="第一次握手">上图为由客户端请求的第一次握手的TCP报头信息，大概内容是：<ul><li>标志位<code>SYN</code>置<code>1</code>，告诉端口1688的服务器我要请求建立连接。</li><li>并产生一个序号(<code>Sequence number</code>)等于<code>0</code>， 表示这个包的第一个字节的序号为<code>0</code>。<code>在TCP传输中，每一个字节都是有序号的，从0开始。通过序号的方式保存数据的顺序，接收端接受到之后进行重新排列成为需要的数据</code>。还有一个作用就是万一发生数据包丢失，也可以通过这个序号知道丢失的是哪个包。</li><li>状态：客户端进入<code>SYN_SENT</code>状态。</li></ul><hr><img src="/2019/12/05/simple-wireshark-tcp-flags/20191206211847.png" class="nofancybox" title="第二次握手">上图为由服务端响应的第二次握手的TCP报头信息，大概内容是：<ul><li>标志位<code>ACK</code>(Acknowledgment)置<code>1</code>，表示确认号字段<code>Acknowledgment number</code>有效。</li><li>标志位<code>SYN</code>置<code>1</code>，表示接受连接请求。</li><li>将请求包序号<code>Sequence number</code>的值 <code>+ 1</code>赋给确认号<code>Acknowledgment number</code>，即<code>Acknowledgment number</code>值为<code>1</code>。</li><li>产生一个序号(<code>Sequence number</code>)等于<code>0</code>， 表示响应包的第一个字节的序号为<code>0</code>。</li><li>状态：服务器进入<code>SYN_RCVD</code>状态，握手结束。</li></ul><hr><img src="/2019/12/05/simple-wireshark-tcp-flags/20191206213846.png" class="nofancybox" title="第三次握手">上图为由客户端响应的第三次握手的TCP报头信息，大概内容是：<ul><li>标志位<code>ACK</code>(Acknowledgment)置<code>1</code>，表示确认号字段<code>Acknowledgment number</code>有效。</li><li>将响应包序号<code>Sequence number</code>的值 <code>+ 1</code>赋给确认号<code>Acknowledgment number</code>，即<code>Acknowledgment number</code>值为<code>1</code>。</li><li>序列号<code>Sequence number</code>的值为响应包中确认号<code>Acknowledgment number</code>的值。</li><li>状态：客户端收到服务端的响应包后检查确认号<code>Acknowledgment number</code>是否为请求序号<code>Sequence number</code>的值 + 1，标志位<code>ACK</code>是否为1，如果正确则客户端进入<code>ESTABLISHED</code>状态。</li><li>状态：<font color="red">服务器收到这个tcp数据包之后检查确认号<code>Acknowledgment number</code>是否为响应序号<code>Sequence number</code>的值 + 1，标志位<code>ACK</code>是否为1，如果正确则客户端进入<code>ESTABLISHED</code>状态，否则继续等待！</font></li></ul><hr><h4 id="为什么是三次握手而不是二次握手"><a href="#为什么是三次握手而不是二次握手" class="headerlink" title="为什么是三次握手而不是二次握手"></a>为什么是三次握手而不是二次握手</h4><p>为了实现可靠数据传输， TCP 协议的通信双方， 都必须维护一个序列号， 以标识发送出去的数据包中， 哪些是已经被对方收到的。 三次握手的过程即是通信双方相互告知序列号起始值， 并确认对方已经收到了序列号起始值的必经步骤，如果只是两次握手， 至多只有连接发起方的起始序列号能被确认， 另一方选择的序列号则得不到确认。</p><hr><h4 id="SYN攻击"><a href="#SYN攻击" class="headerlink" title="SYN攻击"></a>SYN攻击</h4><p>了解了三次握手之后，有这么一种情况，当当客户端收到服务器的响应之后，即第二次握手之后如果客户端不发送响应给服务器，也就是说不进行第三次握手。这种情况下服务器会继续发送给客户端的响应包，即继续第二次握手。</p><p>SYN 攻击指的是，攻击客户端在短时间内伪造大量不存在的IP地址，向服务器不断地发送SYN包，服务器回复确认包，并等待客户的确认。由于源地址是不存在的，服务器需要不断的重发直至超时，这些伪造的SYN包将长时间占用未连接队列，正常的SYN请求被丢弃，导致目标系统运行缓慢，严重者会引起网络堵塞甚至系统瘫痪。SYN 攻击是一种典型的 DoS/DDoS 攻击。</p><hr><h4 id="客户端的一次http通信"><a href="#客户端的一次http通信" class="headerlink" title="客户端的一次http通信"></a>客户端的一次http通信</h4><h5 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h5><p><code>HTTP协议</code>作为应用层协议其下层协议是tcp，也就是说http数据包时通过tcp协议进行传输的。这里客户端发送了一个http请求，紧接着服务端返回一个tcp数据包。下面来看详细过程：</p><img src="/2019/12/05/simple-wireshark-tcp-flags/20191207115012.png" class="nofancybox" title="客户端HTTP请求包"><p>上图为端口号为50765的客户端使用postman发起http请求的请求包信息，由上图可以发现：</p><ul><li>序列号<code>Sequence number</code>的值为<code>1</code>，表示该数据包的第一个字节序号为<code>1</code>。</li><li>确认号<code>Acknowledgment number</code>的值为<code>1</code>，这里跟上个包发送的值是一样的，因为这里由第二次握手服务端的<code>Sequence number</code> + 1得来的。</li><li><code>TCP Segment Len</code>的值为365表示该数据包的长度为365个字节，也就是说下个包的<code>Sequence number</code>的值应该为<code>366</code>。</li><li>因为请求包信息365个字节，一个tcp包就能发送完，，因此这里将标志位<code>Push</code>置<code>1</code>，告诉服务端所有信息都在这一个包里，不用等下个包了。</li><li>标志位<code>ACK</code>(Acknowledgment)置<code>1</code>，表示确认号字段<code>Acknowledgment number</code>有效。</li></ul><hr><p>服务端收到来自客户端的HTTP请求包后，会发送一个tcp包告诉客户端已经收到这个包了。tcp包的信息如下图所示：<br><img src="/2019/12/05/simple-wireshark-tcp-flags/20191207120536.png" class="nofancybox" title="服务端返回tcp确认信息"></p><ul><li>首先将标志位<code>ACK</code>(Acknowledgment)置<code>1</code>，表示确认号字段<code>Acknowledgment number</code>有效。</li><li>将htp请求包中序号<code>Sequence number</code>的值加上请求包的长度，即<code>366</code>赋给确认号<code>Acknowledgment number</code>。</li><li>然后自己的序号的<code>Sequence number</code>值还是1。</li><li><code>TCP Segment number</code>的值为0表示下个包的<code>Sequence number</code>的值应该还是1。</li><li>客户端收到这个包之后将<code>确认号跟http请求包的序号 + 1判断是否相等</code>，<code>标志位ACK是否为1</code>，确认没问题就不需要再次发送了。</li></ul><hr><h5 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h5><p>服务端返回http请求的应答后，接着返回http响应：<br><img src="/2019/12/05/simple-wireshark-tcp-flags/20191207132836.png" class="nofancybox" title="服务端返回tcp确认信息"></p><ul><li>首先将标志位<code>ACK</code>(Acknowledgment)置<code>1</code>，表示确认号字段<code>Acknowledgment number</code>有效。</li><li>序列号<code>Sequence number</code>的值为<code>1</code>，表示该数据包的第一个字节序号为<code>1</code>。</li><li>因为响应表包信息1248个字节，<span class="exturl" data-url="aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMTcvMDYvdGNwLXByb3RvY29sLmh0bWw=" title="http://www.ruanyifeng.com/blog/2017/06/tcp-protocol.html">理论上一个tcp包能发送1400字节左右<i class="fa fa-external-link"></i></span>，因此一个tcp包就能发送完，，因此这里将标志位<code>Push</code>置<code>1</code>，告诉客户端所有信息都在这一个包里，不用等下个包了。</li><li><code>TCP Segment Len</code>的值为1248表示该数据包的长度为1248个字节，也就是说下个包的<code>Sequence number</code>的值应该为<code>1249</code>。</li></ul><hr><p>客户端收到来自服务端的HTTP响应包后，会发送一个tcp包告诉服务端已经收到这个包了。tcp包的信息如下图所示：<br><img src="/2019/12/05/simple-wireshark-tcp-flags/20191207135046.png" class="nofancybox" title="服务端返回tcp确认信息"></p><ul><li>首先将标志位<code>ACK</code>(Acknowledgment)置<code>1</code>，表示确认号字段<code>Acknowledgment number</code>有效。</li><li>将htp响应包中序号<code>Sequence number</code>的值 + 1，即<code>1249</code>赋给确认号<code>Acknowledgment number</code>。</li><li>然后自己的序号的<code>Sequence number</code>值是366。</li><li><code>TCP Segment number</code>的值为0表示下个包的<code>Sequence number</code>的值应该还是366。</li><li>服务端收到这个包之后将<code>确认号跟http响应包的序号 + 1判断是否相等</code>，<code>标志位ACK是否为1</code>，确认没问题就不需要再次发送了。</li></ul><hr><h4 id="TCP-Keep-Alive"><a href="#TCP-Keep-Alive" class="headerlink" title="TCP Keep-Alive"></a>TCP Keep-Alive</h4><p>HTTP 1.1默认设置头部字段Connection: keep-alive</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Hypertext Transfer Protocol</span><br><span class="line">    GET /blog?limit=5&amp;page=1 HTTP/1.1</span><br><span class="line">    x-api-key: 68a33910d61a1c9fb44fc0b91349db612bb64873</span><br><span class="line">    Authorization: Basic Y29kZWlnbml0ZXI6Y29kZWlnbml0ZXJAY29kZWlnbml0ZXI=</span><br><span class="line">    User-Agent: PostmanRuntime/7.18.0</span><br><span class="line">    Accept: */*</span><br><span class="line">    Cache-Control: no-cache</span><br><span class="line">    Postman-Token: 86ec238a-f5de-43e2-9ceb-d5d9774af078</span><br><span class="line">    Host: localhost:1688</span><br><span class="line">    Accept-Encoding: gzip, deflate</span><br><span class="line">    Connection: keep-alive</span><br><span class="line">    </span><br><span class="line">    [Full request URI: http://localhost:1688/blog?limit=5&amp;page=1]</span><br><span class="line">    [HTTP request 1/1]</span><br><span class="line">    [Response in frame: 4839]</span><br></pre></td></tr></table></figure><p>客户端收到响应后，如果长时间没有再次请求，一段时间后服务端会给连接对端发送一个探测包。如图：</p><img src="/2019/12/05/simple-wireshark-tcp-flags/20191207154352.png" class="nofancybox" title="客户端进行tcp连接探测"><p>TCP KeepAlive 的基本原理是，隔一段时间给连接对端发送一个探测包，如果收到对方回应的 ACK，则认为连接还是存活的，在超过一定重试次数之后还是没有收到对方的回应，则丢弃该 TCP 连接。</p><p>有关TCP Keepalive的详细内容可参照<span class="exturl" data-url="aHR0cDovL3d3dy50bGRwLm9yZy9IT1dUTy9odG1sX3NpbmdsZS9UQ1AtS2VlcGFsaXZlLUhPV1RPLw==" title="http://www.tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/">TCP-Keepalive-HOWTO<i class="fa fa-external-link"></i></span></p><hr><h4 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h4><p>如果长时间没有再次请求，服务端将发起断开连接请求，触发四次挥手。</p><img src="/2019/12/05/simple-wireshark-tcp-flags/20191207160723.png" class="nofancybox" title="第一次挥手"><p>上图为由服务端发起的第一次挥手的TCP报头信息，大概内容是：</p><ul><li>标志位<code>FIN</code>置1，要求释放连接。</li><li>标志位<code>ACK</code>(Acknowledgment)置<code>1</code>，表示确认号字段<code>Acknowledgment number</code>有效。</li><li>序号<code>Sequence number</code>值为1249。</li><li>确认号<code>Acknowledgment number</code>值为366。</li><li>发送完毕后，服务端进入 <strong>FIN_WAIT_1</strong> 状态。</li></ul><hr><img src="/2019/12/05/simple-wireshark-tcp-flags/20191207162141.png" class="nofancybox" title="第二次挥手"><p>上图为客户端发起的第二次挥手（即给服务器发送一个应答）的TCP报头信息：</p><ul><li>标志位<code>ACK</code>(Acknowledgment)置<code>1</code>，表示确认号字段<code>Acknowledgment number</code>有效。</li><li>序号<code>Sequence number</code>值为366，<code>TCP Segment Len</code>的值为0，表示下次发送时序号不变。</li><li>确认号<code>Acknowledgment number</code>值为1250。</li><li>发送完毕后， 客户端端进入 <strong>CLOSE_WAIT</strong> 状态，表明自己接受到了服务端关闭连接的请求，但还没有准备好关闭连接。服务器收到这个确认包之后进入<strong>FIN_WAIT_2</strong>状态，等待客户端关闭连接。</li></ul><hr><img src="/2019/12/05/simple-wireshark-tcp-flags/20191207162404.png" class="nofancybox" title="第三次挥手"><p>上图为客户端发起的第三次挥手的TCP报头信息：</p><ul><li>标志位<code>ACK</code>(Acknowledgment)置<code>1</code>，表示确认号字段<code>Acknowledgment number</code>有效。</li><li>标志位<code>FIN</code>置1，表示客户端已准备好关闭连接，向服务端发送结束连接请求。</li><li>序号<code>Sequence number</code>值为366。</li><li>确认号<code>Acknowledgment number</code>值为1250。</li><li>发送完毕后， 客户端端进入 <strong>LAST_ACK</strong> 状态，等待来自服务端的最后一个ACK。服务端收到客户端的关闭请求后进入<strong>TIME_WAIT</strong>状态</li></ul><hr><img src="/2019/12/05/simple-wireshark-tcp-flags/20191207162516.png" class="nofancybox" title="第四次挥手"><p>上图为服务端发起的第四次挥手的TCP报头信息：</p><ul><li>标志位<code>ACK</code>(Acknowledgment)置<code>1</code>，表示确认号字段<code>Acknowledgment number</code>有效。</li><li>序号<code>Sequence number</code>值为1250。</li><li>确认号<code>Acknowledgment number</code>值为367。</li><li>发送完毕后，如果客户端收到这个确认包则关闭连接并进入<strong>CLOSED</strong>状态，服务器等待了某个固定时间（两个最大段生命周期，2MSL，2 Maximum Segment Lifetime）之后，没有收到客户端的 ACK ，认为客户端已经正常关闭连接，于是自己也关闭连接，进入 CLOSED 状态。</li></ul><hr><h4 id="为什么是四次挥手"><a href="#为什么是四次挥手" class="headerlink" title="为什么是四次挥手"></a>为什么是四次挥手</h4><p>跟数据传输有关，客户端跟服务端在数据传输的过程中都负责接受数据跟发送数据，接受和发送都需要对停止做声明：</p><ol><li>服务端发起关闭连接请求，表明自己不再发送数据了，但是还是可以接受数据的。</li><li>客户端收到关闭连接请求后，发送应答，表明客户端需要检查是否有数据需要发送给服务端。</li><li>等客户端确认数据发送完成后，再次发送关闭连接应答，表明可以关闭连接了。</li><li>服务端收到关闭应答后，关闭连接。</li></ol><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC81ZDIzNTEwY2YyNjVkYTFiYTg0YWI0ZTc=" title="https://juejin.im/post/5d23510cf265da1ba84ab4e7">凭啥TCP连接要三次握手、四次挥手？<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9oaXQtYWxpYmFiYS5naXRodWIuaW8vaW50ZXJ2aWV3L2Jhc2ljL25ldHdvcmsvVENQLmh0bWw/cT0=" title="https://hit-alibaba.github.io/interview/basic/network/TCP.html?q=">TCP 协议<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLjUxY3RvLmNvbS96eHRvbmcvMTc4ODI1Mg==" title="https://blog.51cto.com/zxtong/1788252">HTTP 的 Keep-Alive模式<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域名解析</title>
      <link href="/2019/12/01/dns-setting/"/>
      <url>/2019/12/01/dns-setting/</url>
      
        <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>在阿里云上注册了一个域名<code>pureven.cc</code>，选择<code>.cc</code>是因为感觉有个性吧。但是注册完成后紧跟着有几个问题：①如何将域名跟我的网站联系起来呢？②我的博客是放到github上面的，并给仓库取名<code>pureven.github.io</code>，如何将注册的域名跟我的博客仓库连接起来，实现当我访问<code>pureven.cc</code>的时候直接访问我的博客？</p><a id="more"></a><h4 id="什么是域名解析"><a href="#什么是域名解析" class="headerlink" title="什么是域名解析"></a>什么是域名解析</h4><p>为了解决上述问题，这里引入域名解析的概念。<code>域名解析</code><strong>就是把域名指向网站所在服务器的IP，让人们通过注册的域名可以访问到网站</strong>。IP地址是网络上标识服务器的数字地址，为了方便记忆，使用域名来代替IP地址。域名解析就是域名到IP地址的转换过程，域名的解析工作由DNS服务器完成。DNS服务器会把域名解析到一个IP地址，然后在此IP地址的主机上将一个子目录与域名绑定。域名解析时会添加解析记录，这些记录有：A记录、AAAA记录、CNAME记录、MX记录、NS记录、TXT记录、SRV记录、URL转发。</p><hr><h4 id="添加记录各选项说明"><a href="#添加记录各选项说明" class="headerlink" title="添加记录各选项说明"></a>添加记录各选项说明</h4><p>以阿里云域名解析记录类型为例，一条记录由<code>记录类型</code>、<code>主机记录</code>、<code>解析线路</code>、<code>记录值</code>和<code>TTL</code>组成，如图：<br><img src="/2019/12/01/dns-setting/20191201145557.png" class="nofancybox"></p><h5 id="记录类型"><a href="#记录类型" class="headerlink" title="记录类型"></a>记录类型</h5><p>记录类型有以下几种：</p><table><thead><tr><th align="right">记录类型</th><th align="right">介绍</th></tr></thead><tbody><tr><td align="right">A</td><td align="right">地址记录，用来指定域名的 IPv4 地址（例如 8.8.8.8），如果需要将域名指向一个 IP 地址（外网地址）</td></tr><tr><td align="right">CNAME</td><td align="right">将域名指向另一个域名，即用来定义域名的别名，方便实现将多个域名解析到同一个 IP 地址</td></tr><tr><td align="right">AAAA</td><td align="right">用来指定主机名（或域名）对应的 IPv6 地址（例如 ff06:0:0:0:0:0:0:c3）记录<code>注意：截止到11月25号，IPV4已经用完</code></td></tr><tr><td align="right">NS</td><td align="right">用来指定域名由哪个DNS服务器进行解析，比如把域名<code>blog.pureven.cc</code>交给<code>12.34.56.78</code>这台服务器进行解析，则需要设置<code>blog.pureven.cc</code>的NS记录，需要注意的是<code>NS的优先级比A/CNAME的高</code></td></tr><tr><td align="right">MX</td><td align="right">用来指定收件人域名的邮件服务器，SMTP 协议会根据 MX 记录的值来决定邮件的路由过程，例如用户所用的邮件是以域名<code>pureven.com</code>为结尾的，则需要在管理界面中添加该域名的MX记录来处理所有以<code>@pureven.com</code>结尾的邮件</td></tr><tr><td align="right">SRV</td><td align="right">记录提供特定的服务的服务器</td></tr><tr><td align="right">SOA</td><td align="right">称为起始授权机构记录，不同于 NS 记录用于标识多台域名解析服务器，SOA 记录用于在多台 NS 记录中哪一台是主 DNS 服务器</td></tr><tr><td align="right">PTR</td><td align="right">常用于反向地址解析，将 IP 地址解析到对应的名称</td></tr><tr><td align="right">TXT</td><td align="right">文本长度限制512，通常做SPF记录(反垃圾邮件)</td></tr><tr><td align="right">CAA</td><td align="right">CA证书颁发机构授权校验</td></tr><tr><td align="right">显性URL</td><td align="right">将域名重定向到另外一个地址，比如将<code>www.pureven.cc</code>显性转发到<code>www.pureven.com</code>后，当访问<code>www.pureven.cc</code>时，地址栏显示的地址是<code>www.pureven.com</code></td></tr><tr><td align="right">隐性URL</td><td align="right">与显性URL类似，但是会隐藏真实目标地址，比如将<code>www.pureven.cc</code>隐性转发到<code>www.pureven.com</code>后，当访问<code>www.pureven.cc</code>时，地址栏显示的是<code>www.pureven.cc</code>，实际访问的是<code>www.pureven.com</code></td></tr></tbody></table><p><strong>说明：</strong> A记录就是把一个域名解析到一个IP地址（Address，特制数字IP地址），而CNAME记录就是把域名解析到另外一个域名。其功能是差不多，CNAME将几个主机名指向一个别名，其实跟指向IP地址是一样的，因为这个别名也要做一个A记录的。但是使用CNAME记录可以很方便地变更IP地址。如果一台服务器有100个网站，他们都做了别名，该台服务器变更IP时，只需要变更别名的A记录就可以了。</p><hr><h5 id="主机记录"><a href="#主机记录" class="headerlink" title="主机记录"></a>主机记录</h5><p>主机记录就是域名前缀，常见用法有：</p><table><thead><tr><th align="center">主机记录</th><th align="center">用法</th></tr></thead><tbody><tr><td align="center">www</td><td align="center">解析后的域名为<code>www.pureven.com</code></td></tr><tr><td align="center">@</td><td align="center">直接解析主域名 <code>pureven.com</code></td></tr><tr><td align="center">*</td><td align="center">泛解析，匹配其他所有域名 <code>*.pureven.com</code></td></tr><tr><td align="center">mail</td><td align="center">将域名解析为<code>mail.pureven.com</code>，通常用于解析邮箱服务器</td></tr><tr><td align="center">二级域名</td><td align="center">如：<code>abc.pureven.com</code>，填写abc</td></tr><tr><td align="center">手机网站</td><td align="center">如：<code>m.pureven.com</code>，填写m</td></tr><tr><td align="center">显性URL</td><td align="center">不支持泛解析（泛解析：将所有子域名解析到同一地址）</td></tr></tbody></table><hr><h5 id="解析线路"><a href="#解析线路" class="headerlink" title="解析线路"></a>解析线路</h5><p>不同套餐支持的解析线路，本域名使用的免费的版，因此支持<strong>默认、境外、移动、电信、联通、教育网、百度、必应、谷歌</strong></p><p>下面时<span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kb2N1bWVudC9wcm9kdWN0LzMwMi84NjQz" title="https://cloud.tencent.com/document/product/302/8643">腾讯<i class="fa fa-external-link"></i></span>的说明：</p><blockquote><p>例如，将 cloud.tencent.com 设置【默认】线路解析到8.8.8.8，【广东】线路解析到9.9.9.9，【广东电信】线路解析到10.10.10.10，则广东的电信运营商用户访问将返回10.10.10.10的 IP 地址，广东非电信运营商用户访问将返回9.9.9.9的 IP 地址，非广东地区用户访问将返回8.8.8.8的 IP 地址。<br>此时若暂停广东电信线路或广东线路的解析，全国地区的解析都不会受到影响，将全部返回8.8.8.8的 IP 地址。所以无论是否添加地区或者运营商的线路，一定需要先添加好【默认】线路的解析。</p><p>搜索引擎线路使用说明<br>搜索引擎线路可以设置百度、谷歌等的蜘蛛抓取不同的 IP 地址。例如，将 cloud.tencent.com 设置【默认】线路解析到8.8.8.8；【百度】线路解析到9.9.9.9；【搜狗】线路解析到10.10.10.10，则用户通过搜狗搜索到站点进行访问，将返回10.10.10.10的 IP 地址；通过百度搜索访问，将返回9.9.9.9的 IP 地址；直接访问站点，将返回8.8.8.8的 IP 地址。</p></blockquote><table><thead><tr><th>解析线路</th><th>说明</th></tr></thead><tbody><tr><td>默认</td><td>若您未设置特定解析线路，则所有线路用户均访问该目标地址</td></tr><tr><td>联通</td><td>单独为用【联通线路】访问的用户指定目标地址，其他用户仍然访问默认的目标地址</td></tr><tr><td>电信</td><td>单独为用【电信线路】访问的用户指定目标地址，其他用户仍然访问默认的目标地址</td></tr><tr><td>移动</td><td>单独为用【移动线路】访问的用户指定目标地址，其他用户仍然访问默认的目标地址</td></tr><tr><td>境外</td><td>单独为用【境外线路】访问的用户指定目标地址，其他用户仍然访问默认的目标地址</td></tr><tr><td>教育网</td><td>单独为用【教育网线路】访问的用户指定目标地址，其他用户仍然访问默认的目标地址</td></tr><tr><td>搜索引擎</td><td>指定一个服务器IP让搜索引擎（谷歌、百度、必应等）蜘蛛抓取</td></tr></tbody></table><hr><h5 id="记录值"><a href="#记录值" class="headerlink" title="记录值"></a>记录值</h5><p><strong>记录值</strong>的设置跟记录类型有关，下面通过表格进行举例：</p><table><thead><tr><th align="center">记录类型</th><th align="center">记录值</th></tr></thead><tbody><tr><td align="center">A</td><td align="center">8.8.8.8</td></tr><tr><td align="center">CNAME</td><td align="center"><code>pureven.github.io</code></td></tr><tr><td align="center">AAAA</td><td align="center">ff06:0:0:0:0:0:0:c3</td></tr><tr><td align="center">NS</td><td align="center"><code>ns.pureven.cc</code></td></tr><tr><td align="center">MX</td><td align="center"><code>mail.pureven.cc</code></td></tr><tr><td align="center">SRV</td><td align="center">1 0 9 <code>srv.pureven.cc</code></td></tr><tr><td align="center">TXT</td><td align="center">2018113000666039ccllnqjav9an2l2zu717m10ovdfp5n972hcj9gzeseklbmt1</td></tr><tr><td align="center">CAA</td><td align="center">假如只允许由 <code>symantec.com</code> 来颁发域名 <code>pureven.cc</code> 的证书，并且发送违规通知到邮箱 <code>admin@pureven.cc</code>，则需要设置为 <code>0 issue &quot;symantec.com&quot;</code> 和 <code>0 iodef &quot;mailto:admin@pureven.cc&quot;</code></td></tr><tr><td align="center">显性URL</td><td align="center"><code>www.pureven.com</code></td></tr><tr><td align="center">隐性URL</td><td align="center"><code>www.pureven.com</code></td></tr></tbody></table><hr><h5 id="TTL"><a href="#TTL" class="headerlink" title="TTL"></a>TTL</h5><p>TTL是英语Time-To-Live的简称，意思为一条域名解析记录在DNS服务器中的存留时间。当各地的DNS服务器接受到解析请求时，就会向域名指定的NS服务器发出解析请求从而获得解析记录；在获得这个记录之后，记录会在DNS服务器中保存一段时间，这段时间内如果再接到这个域名的解析请求，DNS服务器将不再向NS服务器发出请求，而是直接返回刚才获得的记录；而这个记录在DNS服务器上保留的时间，就是TTL值。以阿里云为例，可以设置TTL的值为<code>10分钟</code>、<code>30分钟</code>、<code>1小时</code>、<code>12小时</code>、<code>1天</code>。</p><p>选择时根据需求有两种策略：</p><ul><li><p>增大TTL值，减少域名解析时间。<br>一般情况下，域名解析的各个记录可能很长一段时间内都不会有变化。我们可以增大域名记录的TTL值让记录在各地DNS服务器中缓存的时间加长，这样在更长的一段时间内，我们访问这个网站时，本地ISP的DNS服务器就不需要向域名的DNS服务器发出解析请求，而直接从缓存中返回域名解析记录。不过需要注意的是，如果TTL设置的值过大，当您的网站更换空间时，旧的记录要很久才会更新，有时会造成网站的重要变动不能及时更新。</p></li><li><p>减小TTL值，及时更新网络。<br>更换空间99.9%会有DNS记录更改的问题，因为缓存的问题，新的域名记录在有的地方可能生效了，但在有的地方可能等上一两天甚至更久才生效。结果就是有的人可能访问到了新服务器，有的人访问到了旧服务器。这时我们可以减TTL值，让DNS服务器中的缓存尽快刷新。减少TTL值的操作必须在主机调整/网络调整之前提前进行。这样才能保证在主机/网络调整完成后，能够在最小时间内实现更新。不过如果数值设置太小，会使DNS频繁刷新，有时会造成访问不稳定。</p></li></ul><hr><h4 id="添加记录举例"><a href="#添加记录举例" class="headerlink" title="添加记录举例"></a>添加记录举例</h4><p>下面是本站解析记录，仅供参考：</p><table><tr><th style="text-align:center">name</th><th>value</th></tr><tr><td>记录类型</td><td>CNAME</td></tr><tr><td>主机记录</td><td>@</td></tr><tr><td>解析线路</td><td>默认</td></tr><tr><td>记录值</td><td>pureven.github.io</td></tr><tr><td>TTL</td><td>10分钟</td></tr></table><hr><p>域名仅仅是为了方便人类的记忆而设计的名称，计算机在网络中进行通讯时不能识别域名，只能识别IP地址，所以计算机在进行网络通讯之前需要先完成域名到IP的转化，我们称之为域名解析。添加完域名解析记录，当访问域名时是什么机制让浏览器显示博客内容的呢，下面是对DNS解析过程的记录</p><h4 id="域名解析过程-腾讯示例"><a href="#域名解析过程-腾讯示例" class="headerlink" title="域名解析过程: 腾讯示例"></a>域名解析过程: 腾讯示例</h4><p>早期接入互联网的设备很少，IP的管理比较简单，最开始是是通过<code>本地Hosts文件</code>的方式对域名和IP的映射关系进行管理；后来为了解决本地Host带来的配置不一致的问题，改为<code>Hosts文件由Ftp统一发布</code>，各个设备定时从Ftp更新Hosts 文件；再到后来出现了<code>中心化的DNS服务集群提供域名解析服务</code>；但随着接入互联网的设备增加，域名解析的请求量暴增，中心化的DNS服务集群开始暴露出明显的缺陷。客户机直接将所有查询请求发往中心化的DNS服务器，同时DNS服务器直接对所有查询客户机做出响应，出现了有单点故障，通信容量，远距离通信延迟，维护开销大等问题。为了解决中心化DNS服务存在的问题，出现了<code>分布式DNS层次架构</code>。</p><p>目前DNS服务器分为三种，即<code>根DNS服务器</code>、<code>顶级DNS服务器</code>、<code>权威DNS服务器</code>。当然还可以假设自己<code>本地的DNS服务器</code>，如图：<br><img src="/2019/12/01/dns-setting/20191204103633.png" title="摘自腾讯开发者手册" class="nofancybox"></p><ol><li>当在浏览器中输入URL时，浏览器会先检查<code>自己的缓存</code>是否有域名IP的映射关系，有则直接使用IP进行通信；</li><li>如果浏览器没有缓存，则操作系统会检查<code>本地Hosts文件</code>是否有域名IP的映射关系，有则使用IP进行通信；</li><li>如果hosts里没有这个域名的映射，则查找<code>本地DNS解析器缓存</code>，是否有映射关系，有则直接返回完成域名解析；</li><li>如果至此还未找到映射关系，首先会找TCP/IP参数中设置的<code>首选DNS服务器</code>，也就是常称的<code>本地DNS服务器</code>，如果服务器已缓存了映射关系，则使用这个IP地址映射返回完成域名解析，<code>此时解析不具有权威性</code>；</li><li>如果本地DNS服务器缓存已经失效(以转发模式为例)，本地DNS服务器就把请求发至13组<code>根DNS服务器</code>，根DNS服务器收到请求后会判断这个.com域名是谁管理，并会返回一个负责该<code>顶级域名服务器</code>。本地DNS服务器收到顶级域名服务器信息后，将会联系负责.com域的服务器。该.com域的服务器收到请求后，如果自己无法解析，它就会找一个管理.com域的下一级.tencent.com域DNS服务器给本地DNS服务器。<code>当本地DNS服务器收到该服务器的信息后，就会找向.tencent.com域服务器查询cloud.tencent.com域名指向的主机地址，返回给浏览器并将映射关系缓存，至此完成域名解析的过程。</code><br>整个迭代查询的过程均通过<code>本地DNS服务器</code>进行，最后都是把结果返回给本地DNS服务器，由此DNS服务器再返回给客户机。</li></ol><h4 id="dig命令跟踪解析过程"><a href="#dig命令跟踪解析过程" class="headerlink" title="dig命令跟踪解析过程"></a>dig命令跟踪解析过程</h4><p>执行命令<code>yum install bind-utils</code>安装<code>dig</code>，也可通过<code>docker pull pureven/yum.centos7</code>下载yum镜像然后在容器中运行<code>dig</code>命令。</p><h5 id="dig-pureven-cc-获取-pureven-cc的A地址"><a href="#dig-pureven-cc-获取-pureven-cc的A地址" class="headerlink" title="dig pureven.cc 获取 pureven.cc的A地址"></a>dig pureven.cc 获取 pureven.cc的A地址</h5><p>执行<code>dig pureven.cc</code>获取<code>pureven.cc</code>的IP地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@884df7c06f10 /]# dig pureven.cc</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.4-P2-RedHat-9.11.4-9.P2.el7 &lt;&lt;&gt;&gt; pureven.cc</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 46662</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 512</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;pureven.cc.INA</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">pureven.cc.599INCNAMEpureven.github.io.</span><br><span class="line">pureven.github.io.3599INA185.199.110.153</span><br><span class="line">pureven.github.io.3599INA185.199.108.153</span><br><span class="line">pureven.github.io.3599INA185.199.111.153</span><br><span class="line">pureven.github.io.3599INA185.199.109.153</span><br><span class="line"></span><br><span class="line">;; Query time: 101 msec</span><br><span class="line">;; SERVER: 8.8.8.8#53(8.8.8.8)</span><br><span class="line">;; WHEN: Wed Dec 04 07:16:57 UTC 2019</span><br><span class="line">;; MSG SIZE  rcvd: 134</span><br></pre></td></tr></table></figure><ul><li><code>status</code> 表示查询状态，取值为 <code>NOERROR</code> 表示查询没什么错误；</li><li><code>opcode</code> 表示操作码，取值为 <code>QUERY</code> 表示操作为查询操作；</li><li><code>id</code> 表示查询事务id 46662；</li><li><code>QUERY</code> 表示查询内容的条数，<code>ANSEWER</code> 表示回答内容条数，<code>AUTHORITY</code> 表示权威应答内容的条数，<code>ADDITIONAL</code> 表示附加内容的条数；</li><li><code>QUESTION SECTION</code>：表示需要查询的内容，这里的返回内容表示需要查询域名的 A 记录；</li><li><code>ANSWER SECTION</code> 表示查询结果，包含了五条记录，一条记录表示<code>pureven.cc</code>是 <code>pureven.github.io</code>的别名，第二至五条返回了 A 记录，表明 <code>pureven.github.io</code> 的 IP 地址，其中599和3599分别表示本次查询的缓存时间，分别在这些<code>秒数</code>内容本地 DNS 服务器可以直接从缓存返回结果。</li></ul><h5 id="dig-trace-pureven-cc-查看解析流程"><a href="#dig-trace-pureven-cc-查看解析流程" class="headerlink" title="dig +trace pureven.cc 查看解析流程"></a>dig +trace pureven.cc 查看解析流程</h5><p>执行命令<code>dig +trace pureven.cc</code>跟踪从根名称服务器开始的迭代查询过程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@884df7c06f10 /]# dig +trace pureven.cc</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.4-P2-RedHat-9.11.4-9.P2.el7 &lt;&lt;&gt;&gt; +trace pureven.cc</span><br><span class="line">;; global options: +cmd</span><br><span class="line">.78407INNSa.root-servers.net.</span><br><span class="line">.78407INNSb.root-servers.net.</span><br><span class="line">.78407INNSc.root-servers.net.</span><br><span class="line">.78407INNSd.root-servers.net.</span><br><span class="line">.78407INNSe.root-servers.net.</span><br><span class="line">.78407INNSf.root-servers.net.</span><br><span class="line">.78407INNSg.root-servers.net.</span><br><span class="line">.78407INNSh.root-servers.net.</span><br><span class="line">.78407INNSi.root-servers.net.</span><br><span class="line">.78407INNSj.root-servers.net.</span><br><span class="line">.78407INNSk.root-servers.net.</span><br><span class="line">.78407INNSl.root-servers.net.</span><br><span class="line">.78407INNSm.root-servers.net.</span><br><span class="line">.78407INRRSIGNS 8 0 518400 20191217020000 20191204010000 22545 . Sv7vE9am31rq4zst2ZI/aF44WyBzwZQXqZUhsGJoOxUoI8a5Qo/78uMK xc1tuK0RcSuvq2Au01QkmXD97blwQ0MKntMy3cshIuxy1k6rmV1QqL97 yB/8rFBlLr/S65/E/lFmyL9omqiuzo/aJq/fuUFI3QKZhvyI7ix4KhIe 1QGM1X840XAR33akPM0zKlRGwvAL7hpml3UDCl9190k0gDZVzpj9hXfX rEOFnuK+pJNZr6OHRtVd+0n6EU+OFMMvNhOysPJihnRDGpj/FsjFNYJD 4Bof3YqyC41QDVGufd22UjwigODNzAu6N2FZ4g2xrZUk9E4HVL5tsgTQ aAZ5JQ==</span><br><span class="line">;; Received 525 bytes from 8.8.8.8#53(8.8.8.8) in 47 ms</span><br><span class="line"></span><br><span class="line">cc.172800INNSac1.nstld.com.</span><br><span class="line">cc.172800INNSac2.nstld.com.</span><br><span class="line">cc.172800INNSac3.nstld.com.</span><br><span class="line">cc.172800INNSac4.nstld.com.</span><br><span class="line">cc.86400INDS519 8 1 7285EF05E1B4E679D4F072EEA9B00953E01F3AE2</span><br><span class="line">cc.86400INDS519 8 2 E1EC6495ABD34562E6F433DEE201E6C6A52CB10AF69C04D675DA692D 2D566897</span><br><span class="line">cc.86400INRRSIGDS 8 1 86400 20191217050000 20191204040000 22545 . Q5gyHPvB2jy6ZeXfbhP5/RQ6fYKLtiM8skXeyZfvKJyvcvkJQHCtzdXc eoLtBIC7QTusjTmpHJemMt4HDnKOx/HcucVHZ8ErYZFWE/LEr/T7+TXE 3q57JS1zyUiAzbccoel4vXdNR4CPkvqFjy5fabKPpGH+h+yoFFe3IAUe +IcBB0kSBp2lDG6MWdLq7NpGy4RCjOCByoEsx1sHfDfflTk+QmkhgBHZ 6hB82AUvYQwSY34MjEXt8nI/LlC8FvuuIfh1nzztYVF1nSC5xWOrGWlO 1/S+QadLGDphnOa5va0UQwcSiCZ/cEarT+sFQsLtjjWrOOi7oeIHeDB/ VISe3w==</span><br><span class="line">;; Received 667 bytes from 198.41.0.4#53(a.root-servers.net) in 245 ms</span><br><span class="line"></span><br><span class="line">pureven.cc.172800INNSdns25.hichina.com.</span><br><span class="line">pureven.cc.172800INNSdns26.hichina.com.</span><br><span class="line">RQGAP5UF6Q1NGVCKFNO8RANVDN5ILRIN.cc. 86400 IN NSEC3 1 1 0 - RR9VRBALT8EOD9SAK335LVITNSQII5FL NS SOA RRSIG DNSKEY NSEC3PARAM</span><br><span class="line">RQGAP5UF6Q1NGVCKFNO8RANVDN5ILRIN.cc. 86400 IN RRSIG NSEC3 8 2 86400 20191209152154 20191202152154 31648 cc. VqHIOwVsxuJ6fwH54KenuthJ25iPZR+2g8HNYEKkXLzj/YsefVjugjhv 1AitS5r0Y+LSR4Ope8i2D/D+lquu3/S/A2WzqXyreQodwPT/G0YpAVVC twFuAET4lNIxAeaM1+FOBDCc6JhzwhlHFy/cLqW/pNEQD3R9nrWIV5rS BYHPPit8dQR57i5v3yaRUF7iZpLoaI4qNSVWm74aStNiYQ==</span><br><span class="line">647QGA0JFP99RQ6J0THT7LDCEH8L2S09.cc. 86400 IN NSEC3 1 1 0 - 64BGMELNKRMPIIFKC92FM52GH6A42IQQ NS DS RRSIG</span><br><span class="line">647QGA0JFP99RQ6J0THT7LDCEH8L2S09.cc. 86400 IN RRSIG NSEC3 8 2 86400 20191210092032 20191203092032 31648 cc. GxawAkx6GuhivmZBFinOV2wlXYJqpNuEfIRk9DhY7SKPsGYiFbY8lhw2 arVhYsCFqMPJ75nW8WiHMa7e3R/YUrvN3w9DPd6t4xMsLbSNE2bIPj9z b6CqETnreoLD8QXC1dle6KvhL0LHvOou4UsfaWTarrzCu5BD81haLdeP jcVvMgO8IYtiwUnqVwDzr9dixYCPGlX7fgMbm/3/gcMPhA==</span><br><span class="line">;; Received 637 bytes from 192.42.173.30#53(ac1.nstld.com) in 60 ms</span><br><span class="line"></span><br><span class="line">pureven.cc.600INCNAMEpureven.github.io.</span><br><span class="line">;; Received 70 bytes from 106.11.211.69#53(dns25.hichina.com) in 24 ms</span><br></pre></td></tr></table></figure><ul><li><p>第一部分本地DNS(8.8.8.8)内部记录了13台全球<span class="exturl" data-url="ZnRwOi8vZnRwLmludGVybmljLm5ldC9kb21haW4vbmFtZWQucm9vdA==" title="ftp://ftp.internic.net/domain/named.root">根域名服务器的地址<i class="fa fa-external-link"></i></span>，继续向这13台全球根域名服务器请求.cc顶级域名服务器地址，以最先回复的为准。</p></li><li><p>最先回复的根域名服务器是<code>a.root-servers.net</code>(198.41.0.4)，返回7台.cc顶级域名服务器的域名和地址，继续向这些.cc顶级域名服务器请求查询pureven.cc二级域名服务器地址。</p></li><li><p>最先回复的.cc顶级域名服务器是<code>ac1.nstld.com</code>(192.42.173.30)(Network Solutions top level domain的缩写)，返回2台pureven.cc二级域名服务器的域名及域名解析服务器域名，继续向这2个域名解析服务器获取pureven.cc地址。</p></li><li><p>最先回复的pureven.cc二级域名服务器是<code>dns25.hichina.com</code>(106.11.211.69)，返回的结果是<code>pureven.github.io</code>，其中<strong>CNAME记录代表的是<code>pureven.cc</code>的别名，也就是说要想获取pureven.cc的IP，需要继续跟踪<code>pureven.github.io</code></strong>。</p></li></ul><h5 id="dig-trace-pureven-github-io-获取pureven-cc的A地址"><a href="#dig-trace-pureven-github-io-获取pureven-cc的A地址" class="headerlink" title="dig +trace pureven.github.io 获取pureven.cc的A地址"></a>dig +trace pureven.github.io 获取pureven.cc的A地址</h5><p>继续执行命令<code>dig +trace pureven.github.io</code>跟踪从根名称服务器开始的迭代查询过程:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@884df7c06f10 /]# dig +trace pureven.github.io</span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.4-P2-RedHat-9.11.4-9.P2.el7 &lt;&lt;&gt;&gt; +trace pureven.github.io</span><br><span class="line">;; global options: +cmd</span><br><span class="line">.75118INNSa.root-servers.net.</span><br><span class="line">.75118INNSb.root-servers.net.</span><br><span class="line">.75118INNSc.root-servers.net.</span><br><span class="line">.75118INNSd.root-servers.net.</span><br><span class="line">.75118INNSe.root-servers.net.</span><br><span class="line">.75118INNSf.root-servers.net.</span><br><span class="line">.75118INNSg.root-servers.net.</span><br><span class="line">.75118INNSh.root-servers.net.</span><br><span class="line">.75118INNSi.root-servers.net.</span><br><span class="line">.75118INNSj.root-servers.net.</span><br><span class="line">.75118INNSk.root-servers.net.</span><br><span class="line">.75118INNSl.root-servers.net.</span><br><span class="line">.75118INNSm.root-servers.net.</span><br><span class="line">.75118INRRSIGNS 8 0 518400 20191217020000 20191204010000 22545 . Sv7vE9am31rq4zst2ZI/aF44WyBzwZQXqZUhsGJoOxUoI8a5Qo/78uMK xc1tuK0RcSuvq2Au01QkmXD97blwQ0MKntMy3cshIuxy1k6rmV1QqL97 yB/8rFBlLr/S65/E/lFmyL9omqiuzo/aJq/fuUFI3QKZhvyI7ix4KhIe 1QGM1X840XAR33akPM0zKlRGwvAL7hpml3UDCl9190k0gDZVzpj9hXfX rEOFnuK+pJNZr6OHRtVd+0n6EU+OFMMvNhOysPJihnRDGpj/FsjFNYJD 4Bof3YqyC41QDVGufd22UjwigODNzAu6N2FZ4g2xrZUk9E4HVL5tsgTQ aAZ5JQ==</span><br><span class="line">;; Received 525 bytes from 8.8.8.8#53(8.8.8.8) in 43 ms</span><br><span class="line"></span><br><span class="line">io.172800INNSb0.nic.io.</span><br><span class="line">io.172800INNSc0.nic.io.</span><br><span class="line">io.172800INNSa0.nic.io.</span><br><span class="line">io.172800INNSa2.nic.io.</span><br><span class="line">io.86400INDS57355 8 1 434E91E206134F5B3B0AC603B26F5E029346ABC9</span><br><span class="line">io.86400INDS57355 8 2 95A57C3BAB7849DBCDDF7C72ADA71A88146B141110318CA5BE672057 E865C3E2</span><br><span class="line">io.86400INRRSIGDS 8 1 86400 20191217050000 20191204040000 22545 . cN4eQjUQPI8Osm0qq6YH+nK5RuGI8CUIE9uqX8KH/a3Je/kcUWPgzIAo snHNKsZ26rBwEXs9xhn+QoLsP6QIZBaLlv1Jg/WfPtqMf60gUBHlZdHw TUMrhRTtCAxileEy7DxYo8rUQI5aqApcTmemRYLBU8mKjPA2Qf4IS/hG +2ZpchpO1tvwVK4IaUBInGs2u/lYQ90sTpOF9TS94fhQM/8tqDk92ho3 Mi+QisCyH0iH6vjXY45ruvycfPmfLo3WNs0vk5TGm0OEC5RqHwJDPxdb Y6DCX6qx1QD3oxQLiH5k2V1K4vForADpLkW+dqVifSNyW9JmqnSRx6bO 3otu5A==</span><br><span class="line">;; Received 665 bytes from 202.12.27.33#53(m.root-servers.net) in 55 ms</span><br><span class="line"></span><br><span class="line">github.io.86400INNSns-1339.awsdns-39.org.</span><br><span class="line">github.io.86400INNSns-1622.awsdns-10.co.uk.</span><br><span class="line">github.io.86400INNSns1.p16.dynect.net.</span><br><span class="line">github.io.86400INNSns-692.awsdns-22.net.</span><br><span class="line">github.io.86400INNSns2.p16.dynect.net.</span><br><span class="line">2iui5t1khct6c5o8i2i67rppatgvegqo.io. 900 IN NSEC3 1 1 1 D399EAAB 2IV073DVU92DLMV2H5L9G1PEODM9RDE6 NS SOA RRSIG DNSKEY NSEC3PARAM</span><br><span class="line">2iui5t1khct6c5o8i2i67rppatgvegqo.io. 900 IN RRSIG NSEC3 8 2 900 20191225075606 20191204065606 53658 io. IEHBBraKpWnNEFSKmJLlhPBc3XVfCDIsju/vFg9GlaIlQ0XBfdxAoMNy KPPEEvWY/Qmj4ZLeNQGG1i9hcrDooN+W/ENW0n4WQF2XQWh0vNmJX5Ja eT/EnnXBxGeBtw6Olg5mlWk1zmtMz0ui75Mm50wdo6dM16otHLdyKwWS QdQ=</span><br><span class="line">ldl8iscjau4ngcq5m160b1gbj7je9bj1.io. 900 IN NSEC3 1 1 1 D399EAAB LDN62SC6T38Q0FPNL9L6VNHBR53J840J NS DS RRSIG</span><br><span class="line">ldl8iscjau4ngcq5m160b1gbj7je9bj1.io. 900 IN RRSIG NSEC3 8 2 900 20191222151600 20191201141600 53658 io. T8pm01fOV0JPPkZw/Q7OvR+y9gluPSBLM5j5uOXgkBLe7iSxnM9FOtCL eBBjO53LkLziMcYYXCUkLWT6MiONA5BzX24Ezq4U9EaHOkUQVNxGp/Uo g7S+9uiO3GGAAjIqLBpc4bWi2OR7gphREqmcokfSIYCePfrawIS81NTT lBk=</span><br><span class="line">;; Received 690 bytes from 65.22.162.17#53(c0.nic.io) in 70 ms</span><br><span class="line"></span><br><span class="line">pureven.github.io.3600INA185.199.110.153</span><br><span class="line">pureven.github.io.3600INA185.199.109.153</span><br><span class="line">pureven.github.io.3600INA185.199.108.153</span><br><span class="line">pureven.github.io.3600INA185.199.111.153</span><br><span class="line">github.io.900INNSns-1339.awsdns-39.org.</span><br><span class="line">github.io.900INNSns-1622.awsdns-10.co.uk.</span><br><span class="line">github.io.900INNSns-393.awsdns-49.com.</span><br><span class="line">github.io.900INNSns-692.awsdns-22.net.</span><br><span class="line">github.io.900INNSns1.p16.dynect.net.</span><br><span class="line">github.io.900INNSns2.p16.dynect.net.</span><br><span class="line">github.io.900INNSns3.p16.dynect.net.</span><br><span class="line">github.io.900INNSns4.p16.dynect.net.</span><br><span class="line">;; Received 333 bytes from 205.251.198.86#53(ns-1622.awsdns-10.co.uk) in 231 ms</span><br></pre></td></tr></table></figure><ul><li>第一部分本地DNS(8.8.8.8)内部记录了13台全球根域名服务器的地址，继续向这13台全球根域名服务器请求.io顶级域名服务器地址，以最先回复的为准。</li><li>最先回复的根域名服务器是<code>m.root-servers.net</code>(202.12.27.33)，返回5台.io顶级域名服务器的域名及解析服务器域名，继续向这些.io顶级域名服务器请求查询<code>github.io</code>二级域名服务器地址。</li><li>最先回复的.io顶级域名服务器是<code>c0.nic.io</code>(65.22.162.17)，返回5台<code>github.io</code>二级域名服务器的域名和地址，继续向这5个结果请求查询<code>pureven.github.io</code>三级域名服务器。</li><li>最先回复的github.io二级域名服务器是<code>ns-1622.awsdns-10.co.uk</code>(205.251.198.86)，返回的结果包含跟上一步一样的8台二级域名服务器NS记录，另外还有4个A记录，其中A记录就是最终的解析地址。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器输入url后发生了什么？</title>
      <link href="/2019/11/27/what-happens-aflter-browser-enters-url/"/>
      <url>/2019/11/27/what-happens-aflter-browser-enters-url/</url>
      
        <content type="html"><![CDATA[<p>我们进行网上冲浪时浏览器输入url之后发生了什么？是什么让我们看到了美妙的信息的。这个问题有待整理，目前并没有实际内容，暂时先打个标题以后再来填补。</p><a id="more"></a><hr>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>codeIgniter将字段类型改为null</title>
      <link href="/2019/11/27/codeigniter-modify-table-not-null/"/>
      <url>/2019/11/27/codeigniter-modify-table-not-null/</url>
      
        <content type="html"><![CDATA[<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>因项目需要需要修改字段类型修改为支持null，因为codeigniter添加字段时如果不指定’null’ =&gt; true，则默认是not null类型的，也就是不支持内容为null。当我使用<code>$this-&gt;dbforge-&gt;modify_column()</code>去修改的时候发现不起作用。</p><a id="more"></a><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>去查手册modify_column()为啥不能将字段修改为<code>&#39;null&#39; =&gt; true</code>，手册没有说明：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$fields = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'old_name'</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'name'</span> =&gt; <span class="string">'new_name'</span>,</span><br><span class="line">        <span class="string">'type'</span> =&gt; <span class="string">'TEXT'</span>,</span><br><span class="line">    ),</span><br><span class="line">);</span><br><span class="line"><span class="keyword">$this</span>-&gt;dbforge-&gt;modify_column(<span class="string">'table_name'</span>, $fields);</span><br><span class="line"><span class="comment">// gives ALTER TABLE table_name CHANGE old_name new_name TEXT</span></span><br></pre></td></tr></table></figure><p>没有更多的说明了，下面说下我的解决方案：<code>先删除再添加</code>:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: pureven</span></span><br><span class="line"><span class="comment"> * Date: 2019/11/30</span></span><br><span class="line"><span class="comment"> * Time: 12:51</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">defined(<span class="string">'BASEPATH'</span>) <span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">'No direct script access allowed'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Migration_modify_users_table</span> <span class="keyword">extends</span> <span class="title">CI_Migration</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">up</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;db-&gt;table_exists(<span class="string">'users'</span>)) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;dbforge-&gt;drop_column(<span class="string">'users'</span>, <span class="string">'comment'</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;dbforge-&gt;add_column(<span class="string">'users'</span>, [</span><br><span class="line">                <span class="string">'comment'</span> =&gt; [</span><br><span class="line">                    <span class="string">'type'</span> =&gt; <span class="string">'text'</span>,</span><br><span class="line">                    <span class="string">'null'</span> =&gt; <span class="keyword">true</span>,</span><br><span class="line">                ],</span><br><span class="line">            ]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">down</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Codeigniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二进制学习笔记</title>
      <link href="/2019/11/23/what-is-binary/"/>
      <url>/2019/11/23/what-is-binary/</url>
      
        <content type="html"><![CDATA[<p><code>二进制乃是具有世界普遍性的、最完美的逻辑语言  ——莱布尼茨</code></p><h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>0和1的组合是一种强大的信息编码方式，17世纪的德国数学家<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU2JTg4JTg4JUU3JTg5JUI5JUU1JUJDJTk3JUU5JTg3JThDJUU1JUJFJUI3JUMyJUI3JUU4JThFJUIxJUU1JUI4JTgzJUU1JUIwJUJDJUU4JThDJUE4" title="https://zh.wikipedia.org/wiki/%E6%88%88%E7%89%B9%E5%BC%97%E9%87%8C%E5%BE%B7%C2%B7%E8%8E%B1%E5%B8%83%E5%B0%BC%E8%8C%A8">戈特弗里德·莱布尼茨<i class="fa fa-external-link"></i></span>则是最早认识到这一点的一个人。他从中国的《易经》——探讨阴阳之间的动态平衡的书籍中得到这一灵感。《易经》包含64卦，用来代表不同的状态或过程，正是这些内容激发了莱布尼茨的灵感，从而创造出二进制的数学理论</p><hr><a id="more"></a><h4 id="二进制的由来"><a href="#二进制的由来" class="headerlink" title="二进制的由来"></a>二进制的由来</h4><blockquote><p>通常的算术方法是基于逢十进位的法则。我们使用十个符号，0,1,2,3,4,5,6,7,8,9，来表示零一及随后的数，一直到九的数字。然后当到达十后，再次从一开始循环。十由“10”来表示；十乘十，也就是一百，用“100”表示；十乘一百，也就是一千，用“1000”表示；十乘一千为一万，用“10000”表示；以此类推。<br>然而多年来，我不使用十进制，而是用最简单的进制方式——逢二进位，并发现它对于优化数学科学有重要作用。我只需要<strong>用0和1两个符号，并逢二进位</strong>。在这个系统下，二用“10”表示；二乘二，也就是四，用“100”表示；二乘四为八，用“1000”表示；二乘八为十六，用“10000”表示；以此类推。<br>——摘自《论只使用符号0和1的二进制算术，兼论其用途及它赋予伏羲所使用的古老图形的意义》</p></blockquote><p>莱布尼兹认为易经中的卦象与二进制算术密不可分。莱布尼兹解读了易经中的卦象，并认为这是其作为二进制算术的证据。</p><p>六十四卦，记载于《<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU2JTk4JTkzJUU3JUJCJThG" title="https://zh.wikipedia.org/wiki/%E6%98%93%E7%BB%8F">易经<i class="fa fa-external-link"></i></span>》，每一卦的图像均由两个<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU1JTg1JUFCJUU1JThEJUE2" title="https://zh.wikipedia.org/wiki/%E5%85%AB%E5%8D%A6">八卦<i class="fa fa-external-link"></i></span>上下组合而成，每一卦各有六个<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU3JTg4JUJC" title="https://zh.wikipedia.org/wiki/%E7%88%BB">爻<i class="fa fa-external-link"></i></span>。见下图：<br><img src="/2019/11/23/what-is-binary/20191123175857.png" class="nofancybox"><br>上卦下卦中每个卦由三个爻组成，<code>- -</code>为阴爻，表示二进制中的0；<code>——</code>为阳爻，表示二进制中的1，则八个单卦由二进制表示为：</p><table><thead><tr><th align="center">坤（地）</th><th align="center">艮（山）</th><th align="center">坎（水）</th><th align="center">巽（风）</th><th align="center">震（雷）</th><th align="center">离（火）</th><th align="center">兑（泽）</th><th align="center">乾（天）</th></tr></thead><tbody><tr><td align="center">000</td><td align="center">100</td><td align="center">010</td><td align="center">110</td><td align="center">001</td><td align="center">101</td><td align="center">011</td><td align="center">111</td></tr></tbody></table><p>六十四卦由上卦和下卦组成，这里列举八个卦位：</p><table><thead><tr><th align="center">坤为地</th><th align="center">山天大畜</th><th align="center">水泽节</th><th align="center">风雷益</th><th align="center">雷水解</th><th align="center">火地晋</th><th align="center">泽风大过</th><th align="center">乾为天</th></tr></thead><tbody><tr><td align="center">000000</td><td align="center">010111</td><td align="center">010011</td><td align="center">110001</td><td align="center">001010</td><td align="center">101000</td><td align="center">011110</td><td align="center">111111</td></tr></tbody></table><p>由此会发现六位二进制数从000000到111111共有$2^6$即64种组合方法，正好对应八卦图中64个卦位。</p><p>德国哲学家及数学家莱布尼茨在法国传教士白晋的介绍之下，得到邵雍的伏羲先天六十四卦〈方圆四分四层图〉，认为与他在1679年所创的二进制记数系统相符合并在1703年发表论文《<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpc291cmNlLm9yZy96aC1oYW5zL1RyYW5zbGF0aW9uOiVFOCVBRSVCQSVFNSU4RiVBQSVFNCVCRCVCRiVFNyU5NCVBOCVFNyVBQyVBNiVFNSU4RiVCNzAlRTUlOTIlOEMxJUU3JTlBJTg0JUU0JUJBJThDJUU4JUJGJTlCJUU1JTg4JUI2JUU3JUFFJTk3JUU2JTlDJUFG" title="https://zh.wikisource.org/zh-hans/Translation:%E8%AE%BA%E5%8F%AA%E4%BD%BF%E7%94%A8%E7%AC%A6%E5%8F%B70%E5%92%8C1%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%AE%97%E6%9C%AF">论只使用符号0和1的二进制算术，兼论其用途及它赋予伏羲所使用的古老图形的意义<i class="fa fa-external-link"></i></span>》，由此二进制诞生！</p><hr><h4 id="二进制与十进制"><a href="#二进制与十进制" class="headerlink" title="二进制与十进制"></a>二进制与十进制</h4><p>二进制与十进制是如何相互转换的呢？下面首先说明二进制数如何转换为十进制数。</p><h5 id="位权"><a href="#位权" class="headerlink" title="位权"></a>位权</h5><p>首先介绍一下位权，<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQkQlOEQlRTYlOUQlODM=" title="https://baike.baidu.com/item/%E4%BD%8D%E6%9D%83">百度百科<i class="fa fa-external-link"></i></span>对<code>位权</code>的定义是<strong>位权，是指数制中每一固定位置对应的单位值</strong>，计算方法为<strong>数码本身乘以与它数位有关的常数</strong>。</p><p>例如，十进制数39，9表示的是<code>9 * 1</code>，3表示的是<code>3 * 10</code>。这里和各个数位的数值相乘的<code>1</code>和<code>10</code>，就是位权。数字的位数不同，位权也就不同，第一位的位权是$10^0 = 1$，第二位的位权是$10^1 = 10$，第三位的位权是$10^2 = 100$，以此类推第n位的位权是$10^{n - 1}$。二进制是同样的，第一位的位权是$2^0 = 1$，第二位的位权是$2^1 = 2$，第三位的位权是$2^2 = 4$，以此类推第n位的位权是$2^{n - 1}$。</p><hr><h5 id="二进制转换为十进制"><a href="#二进制转换为十进制" class="headerlink" title="二进制转换为十进制"></a>二进制转换为十进制</h5><p>二进制数转换成十进制数，<code>只需将二进制数的各数位的值和位权相乘，然后将相乘的结果相加即可</code>。这里以<code>00100111</code>为例，如下图：<br><img src="/2019/11/23/what-is-binary/20191128174916.jpg" class="nofancybox"></p><p>二进制同样可以表示<code>小数</code>的，由上文了解到二进制的位权位于数位的关系为$2^{n - 1}$，n表示数位，因此第一位为$2^{1 - 1}$，也就是$2^0$；第二位的位权为$2^{2 - 1}$，也就是$2^1$。那么表示小数也是一样的，小数点后面的位权也是跟位数相关联的，小数点后面的<code>位权</code>跟<code>位数</code>的关系为$w = 2^{-n}$，其中<code>w</code>表示位权，<code>n</code>表示小数点后面第<code>n</code>位，即小数点后面第一位的位权为$2^{- 1}$，这里<code>n = 1</code>；小数点后面第二位的位权为$2^{-2}$，这里<code>n = 2</code>，因此将二进制小数转换为十进制时原理是一样的。下面以二进制数<code>1011.0011</code>为例说明转换方法，如下图：<br><img src="/2019/11/23/what-is-binary/20191128174838.jpg" class="nofancybox"><br>需要注意的是：<b><font color="#891717">二进制整数部分的位权与数位的关系是$2^{n - 1}$，此时n表示小数点左边第n位。小数部分的位权与数位的关系是$2^{-n}$，此时n表示小数点右边第n位。</font></b></p><hr><h5 id="十进制转换为二进制"><a href="#十进制转换为二进制" class="headerlink" title="十进制转换为二进制"></a>十进制转换为二进制</h5><p>十进制数转换成二进制数，有两句口诀：<b><font color="#891717">整数采用”除2取余，逆序排列”法</font>、<font color="#ea36ec">小数采用”乘2取整，顺序排列”法</font></b>。</p><p>下面是<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlOEQlODElRTglQkYlOUIlRTUlODglQjYlRTglQkQlQUMlRTQlQkElOEMlRTglQkYlOUIlRTUlODglQjY=" title="https://baike.baidu.com/item/%E5%8D%81%E8%BF%9B%E5%88%B6%E8%BD%AC%E4%BA%8C%E8%BF%9B%E5%88%B6">百度百科<i class="fa fa-external-link"></i></span>的证明方法：</p><ol><li><p>假设十进制整数<code>w</code>转换位二进制数为<code>abcde</code>，<code>abcde Ɛ [0,1]</code>,即:<br>$w_{(十进制)} = abcde_{(二进制)}$<br>$w = e * 2^0 + d * 2^1 + c * 2^2 + b * 2^3 + a * 2^4$<br>$w * 2^{-1} = e/2 + d * 2^0 + c * 2^1 + b * 2^2 + a * 2^3$，因为<code>e</code>只能取值<code>0、1</code>，所以这里不能被2整除，即此处余数 <code>e</code>，同理<br>$w * 2^{-2} = d/2 + c * 2^0 + b * 2^1 + a * 2^2$，此处余数<code>d</code><br>$w * 2^{-3} = c/2 + b * 2^0 + a * 2^1$,此处余数<code>c</code><br>$w * 2^{-4} = b/2 + a * 2^0$，此处余数<code>b</code><br>$w * 2^{-5} = a/2$，此处余数<code>a</code><br><b><font color="#891717">然后将余数按顺序反过来排列，正好是abcde，整数转换方法”除2取余，逆序排列”证明完成。</font></b></p></li><li><p>假设十进制小数<code>s</code>转换为二进制数为<code>mnxyz</code>, <code>mnxyz Ɛ [0,1]</code>，即:<br>$s_{(十进制)} = mnxyz_{(二进制)}$<br>$s = m * 2^{-1} + n * 2^{-2} + x * 2^{-3} + y * 2^{-4} + z * 2^{-5}$<br>$s * 2^1 = m + n * 2^{-1} + x * 2^{-2} + y * 2^{-3} + z * 2^{-4}$，因为m只能取值<code>0、1</code>，所以这里拿出整数<code>m</code>，同理<br>$s * 2^2 = n + x * 2^{-1} + y * 2^{-2} + z * 2^{-3}$，拿出整数<code>n</code><br>$s * 2^3 = x + y * 2^{-1} + z * 2^{-2}$，拿出整数<code>x</code><br>$s * 2^4 = y + z * 2^{-1}$，拿出整数<code>y</code><br>$s * 2^5 = z$，拿出整数<code>z</code><br><b><font color="#ea36ec">然后将整数按顺序排列，正好是mnxyz，小数转换方法”乘2取整，顺序排列”证明完成。</font></b></p></li></ol><hr><h4 id="二进制与八进制"><a href="#二进制与八进制" class="headerlink" title="二进制与八进制"></a>二进制与八进制</h4><p>将二进制数转八进制数的方法为<strong>取三合一法</strong>，即从二进制的小数点为分界点，向左（向右）每三位取成一位，接着将这三位二进制按权相加，然后，按顺序进行排列，小数点的位置不变，得到的数字就是我们所求的八进制数。如果向左（向右）取三位后，取到最高（最低）位时候，如果无法凑足三位，可以在小数点最左边（最右边），即整数的最高位（最低位）添0，凑足三位。</p><p>下面以<code>11010111.0100111</code>为例进行说明,将二进制数<code>11010111.0100111</code>按照取三合一法进行分割后得</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">11010111.010011</span><br><span class="line"></span><br><span class="line">011 010 111.010 011 100</span><br></pre></td></tr></table></figure><p>根据八卦图所得应该为<code>兑坎乾.坎兑艮</code>，当然这是开玩笑的，将每组二进制转换为十进制为<code>327.234</code>，即<font color="#891717">$11010111.0100111_b = 327.234_o$</font></p><hr><h4 id="二进制与十六进制"><a href="#二进制与十六进制" class="headerlink" title="二进制与十六进制"></a>二进制与十六进制</h4><p>将二进制数转十六进制数的方法跟将二进制转换为八进制的方法类似，只不过将<code>三</code>位改为<code>四</code>位，即<strong>取四合一法</strong>，即从二进制的小数点为分界点，向左（向右）每四位取成一位，接着将这四位二进制按权相加，然后，按顺序进行排列，小数点的位置不变，得到的数字就是我们所求的八进制数。如果向左（向右）取四位后，取到最高（最低）位时候，如果无法凑足四位，可以在小数点最左边（最右边），即整数的最高位（最低位）添0，凑足四位。</p><p>下面仍以<code>11010111.0100111</code>为例进行说明,将二进制数<code>11010111.0100111</code>按照取四合一法进行分割后得</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">11010111.0100111</span><br><span class="line"></span><br><span class="line">1101 0111.0100 1110</span><br></pre></td></tr></table></figure><p>将每组二进制转换为十进制为<code>13 7 . 4 14</code>，当然这是不对的，十六进制由<code>0 1 2 3 4 5 6 7 8 9 A B C D E F</code>组成，<code>13 14对应十六进制中D E</code>，即<font color="#891717">$11010111.0100111_b = D7.4E_h$</font></p><hr><h4 id="二进制与计算机"><a href="#二进制与计算机" class="headerlink" title="二进制与计算机"></a>二进制与计算机</h4><h5 id="计算机为什么使用二进制"><a href="#计算机为什么使用二进制" class="headerlink" title="计算机为什么使用二进制"></a>计算机为什么使用二进制</h5><p>计算机进行指令解析和处理数据的设备是CPU，即<code>中央处理器</code>，CPU是一种大规模集成电路，如图：<br><img src="/2019/11/23/what-is-binary/20191129174838.jpg" class="nofancybox"><br>CPU中的逻辑门或晶体管只有<code>通电</code>和<code>断电</code>两个状态，即一个晶体管只能表示两个状态。这个特性决定了计算机的信息数据只能用二进制数来处理。虽然二进制不是专门为CPU设计的，但是和CPU的特性非常吻合。</p><p>计算机处理信息的最小单位——<code>位</code>，英文名bit是二进制数位<code>(binary digit)</code>的缩写。二进制数的位数一般是8bit、16bit、32bit、64bit……也就是8的倍数，这是因为计算机所处理的信息的基本单位是8位二进制数。8bit二进制数被称为一个<code>字节(byte)</code>，<code>字节是最基本的信息计量单位</code>。<code>位是最小单位</code>，<code>字节是基本单位</code>。内存和磁盘都使用字节单位来存储和读写数据，使用位单位则无法读写数据，因此字节是信息的基本单位。</p><p>core i7处理器是64位的，有64个引脚用于信息的输入和输出，因此酷睿i7处理器一次可以处理64位(64位 = 8字节)的二进制信息，倘若数据只有8位则高位56位补<code>0</code>，程序中使用十进制数和文字等记述信息在编译后也会转换成二进制数的值，所以程序运行时计算机内部处理的也是用二进制表示的信息。</p><hr><h5 id="计算机如何使用二进制"><a href="#计算机如何使用二进制" class="headerlink" title="计算机如何使用二进制"></a>计算机如何使用二进制</h5><p>计算机在处理运算时时如何通过二进制进行表示的呢？</p><p>下面介绍二进制的三种表示方法：<code>原码</code>、<code>反码</code>、<code>补码</code>。</p><blockquote><p>原码：是一种计算机中对数字的二进制定点表示方法。原码表示法在数值前面增加了一位符号位（即最高位为符号位）：正数该位为0，负数该位为1（0有两种表示：+0和-0），其余位表示数值的大小。<br>反码：正数的反码与其原码相同；负数的反码是原码符号位不变，其他位按位取反。<br>补码：正数的补码与其原码相同；负数的补码是在其反码的末位加1。</p></blockquote><p><strong>为什么要使用原码、反码和补码呢？</strong></p><p>原码很容易理解，比如8位二进制数来表示1和-1：</p><blockquote><p>$+1 = 00000001_{原码} $<br>$-1 = 10000001_{原码} $</p></blockquote><p>原码最为符合我们的思考习惯，但是计算机只会做加法运算，不会减法运算，换言之，计算机会将减法转换成加法进行运算。比如<code>1 - 1</code>，计算机会通过<code>1 + (-1)</code>来进行计算。那么使用原码进行计算1 - 1可行吗？<br>$1 - 1 = 1 + (-1) = 00000001 + 10000001$，看出问题了吧，结果为<code>10000010</code>，总之结果不为0是不对的，看来符合我们的思考习惯的运算方法不适合计算机。</p><p><strong>反码</strong>通常是用来由原码求补码或者由补码求原码的过渡码。根据定义：<code>正数的反码与其原码相同；负数的反码是原码符号位不变，其他位按位取反</code>。</p><blockquote><p>$+1 = 00000001_{反码} $<br>$-1 = 11111110_{反码} $</p></blockquote><p>反码是一种<strong>过渡码</strong>，将反码进行加法运算$1 - 1 = 1 + (-1) = 00000001 + 11111110 = 11111111$，结果不为零，也是不正确的，下面看下补码</p><p><strong>补码</strong> 根据定义，<code>正数的补码与其原码相同；负数的补码是在其反码的末位加1</code>，即：</p><blockquote><p>$+1 = 00000001_{补码}$<br>$-1 = 11111111_{补码}$</p></blockquote><p>使用补码相加$1 - 1 = 1 + (-1) = 00000001 + 11111111 =$ <code>1</code> 00000000。对于溢出的位，计算机会直接忽略掉，即00000001 + 11111111 = <code>00000000</code>。从结果可以看出使用补码进行运算逻辑更为严谨，也更为符合计算机。</p><hr><h5 id="计算机中二进制移位运算"><a href="#计算机中二进制移位运算" class="headerlink" title="计算机中二进制移位运算"></a>计算机中二进制移位运算</h5><p>和十进制数一样，四则运算同样也可以使用在二进制数中，只要注意逢2进位即可。下面，我们就来重点看一下二进制数所特有的运算。二进制数所特有的运算——<code>移位运算</code>。移位运算指的是将二进制数值的各数位进行左右移位（shift=移位）的运算。移位有左移（向高位方向）和右移（向低位方向）两种。在一次运算中，可以进行多个数位的移位操作。</p><p>无论程序中使用的是几进制，计算机内部都会将其转换成二进制数来处理，因此都能进行移位操作。但是左移跟右移不同，下面分开说明。</p><p><strong>左移</strong>是向高位方向移动且空出来的低位要进行补0操作，移位操作使最高位或最低位溢出的数字，直接丢弃。左移一位即表示乘2操作。</p><blockquote><p>0 0 1 0 0 1 1 1$_{移位前} = 1 * 2^0 + 1 * 2^1 + 1 * 2^2 + 1 * 2^5 = 39$</p><p>1 0 0 1 1 1 <code>0 0</code>$_{左移两位} = 1 * 2^2 + 1 * 2^3 + 1 * 2^4 + 1 * 2^7 = 156$</p></blockquote><p><strong>右移</strong>则向低位移动，空出来的高位根据标志位进行正数左补0，负数左补1的操作。右移一位即表示除2操作。</p><blockquote><p>0 0 1 0 0 1 1 1$_{移位前} = 1 * 2^0 + 1 * 2^1 + 1 * 2^2 + 1 * 2^5 = 39$</p><p>0 0 1 0 0 1 . <code>1 1</code>$_{移位后} = 1 * 2^{-2} + 1 * 2^{-1} + 1 * 2^0 + 1 * 2^3 = 9.75$</p><p>$1 0 1 0 0 1 1 1_{移位前} =&gt; 1 1 0 1 1 0 0 0_{反码} =&gt; 1 1 0 1 1 0 0 1_{补码} =&gt; -39$ </p><p><code>11</code>$1 1 0 1 1 0 . 0 1_{移位后} =&gt; 1 0 0 0 1 0 0 1 . 1 0_{反码} =&gt; 1 0 0 0 1 0 0 1 . 1 1_{原码} =&gt; -9.75$</p></blockquote><p><strong>注意:</strong>负数的补码转为原码也是通过<code>取反加一</code>。</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用docker创建nginx容器</title>
      <link href="/2019/11/17/docker-nginx-phpfpm/"/>
      <url>/2019/11/17/docker-nginx-phpfpm/</url>
      
        <content type="html"><![CDATA[<h3 id="nginx容器搭建"><a href="#nginx容器搭建" class="headerlink" title="nginx容器搭建"></a>nginx容器搭建</h3><h4 id="获取nginx镜像"><a href="#获取nginx镜像" class="headerlink" title="获取nginx镜像"></a>获取nginx镜像</h4><a id="more"></a><ol><li><p>查看nginx镜像</p><blockquote><p>使用<code>docker search nginx</code>命令查看有哪些nginx镜像</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~$ docker search nginx</span><br><span class="line">NAME                              DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED</span><br><span class="line">nginx                             Official build of Nginx.                        12220               [OK]                </span><br><span class="line">jwilder/nginx-proxy               Automated Nginx reverse proxy for docker con…   1690                                    [OK]</span><br><span class="line">richarvey/nginx-php-fpm           Container running Nginx + PHP-FPM capable of…   745                                     [OK]</span><br><span class="line">linuxserver/nginx                 An Nginx container, brought to you by LinuxS…   82                                      </span><br><span class="line">bitnami/nginx                     Bitnami nginx Docker Image                      72                                      [OK]</span><br><span class="line">tiangolo/nginx-rtmp               Docker image with Nginx using the nginx-rtmp…   60                                      [OK]</span><br><span class="line">nginxdemos/hello                  NGINX webserver that serves a simple page co…   32                                      [OK]</span><br><span class="line">jc21/nginx-proxy-manager          Docker container for managing Nginx proxy ho…   30                                      </span><br><span class="line">jlesage/nginx-proxy-manager       Docker container for Nginx Proxy Manager        27                                      [OK]</span><br><span class="line">nginx/nginx-ingress               NGINX Ingress Controller for Kubernetes         22                                      </span><br><span class="line">privatebin/nginx-fpm-alpine       PrivateBin running on an Nginx, php-fpm &amp; Al…   19                                      [OK]</span><br><span class="line">schmunk42/nginx-redirect          A very simple container to redirect HTTP tra…   17                                      [OK]</span><br><span class="line">blacklabelops/nginx               Dockerized Nginx Reverse Proxy Server.          12                                      [OK]</span><br><span class="line">centos/nginx-18-centos7           Platform for running nginx 1.8 or building n…   12                                      </span><br><span class="line">raulr/nginx-wordpress             Nginx front-end for the official wordpress:f…   12                                      [OK]</span><br><span class="line">nginxinc/nginx-unprivileged       Unprivileged NGINX Dockerfiles                  10                                      </span><br><span class="line">centos/nginx-112-centos7          Platform for running nginx 1.12 or building …   10                                      </span><br><span class="line">nginx/nginx-prometheus-exporter   NGINX Prometheus Exporter                       8                                       </span><br><span class="line">sophos/nginx-vts-exporter         Simple server that scrapes Nginx vts stats a…   5                                       [OK]</span><br><span class="line">1science/nginx                    Nginx Docker images that include Consul Temp…   5                                       [OK]</span><br><span class="line">mailu/nginx                       Mailu nginx frontend                            4                                       [OK]</span><br><span class="line">pebbletech/nginx-proxy            nginx-proxy sets up a container running ngin…   2                                       [OK]</span><br><span class="line">ansibleplaybookbundle/nginx-apb   An APB to deploy NGINX                          1                                       [OK]</span><br><span class="line">wodby/nginx                       Generic nginx                                   0                                       [OK]</span><br><span class="line">centos/nginx-110-centos7          Platform for running nginx 1.10 or building …   0</span><br></pre></td></tr></table></figure></li><li><p>获取镜像</p><blockquote><p>这里选择官方最新镜像，因此直接运行命令<code>docker pull nginx</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~$ docker pull nginx</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/nginx</span><br><span class="line">8d691f585fa8: Pull complete </span><br><span class="line">5b07f4e08ad0: Pull complete </span><br><span class="line">abc291867bca: Pull complete </span><br><span class="line">Digest: sha256:922c815aa4df050d4df476e92daed4231f466acc8ee90e0e774951b0fd7195a4</span><br><span class="line">Status: Downloaded newer image for nginx:latest</span><br><span class="line">docker.io/library/nginx:latest</span><br></pre></td></tr></table></figure></li></ol><hr><h4 id="创建一个简单的nginx容器"><a href="#创建一个简单的nginx容器" class="headerlink" title="创建一个简单的nginx容器"></a>创建一个简单的nginx容器</h4><p>使用命令<code>docker container run</code>命令进行创建：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~$ docker container run \                                                                                                            </span><br><span class="line">&gt; -d \      </span><br><span class="line">&gt; -p 8080:80 \</span><br><span class="line">&gt; --name nginxsvr \</span><br><span class="line">&gt; nginx</span><br><span class="line">a15a9bf298594e0e466257117099cf8b35c5f05197d644fb80725fa7557c8639</span><br></pre></td></tr></table></figure><p>然后通过浏览器<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguOTkuMTAwOjgwODAv6K6/6ZeubmdpbnjmnI3liqHlmajvvIzlpoLlm77vvJo=" title="http://192.168.99.100:8080/访问nginx服务器，如图：">http://192.168.99.100:8080/访问nginx服务器，如图：<i class="fa fa-external-link"></i></span><br><img src="/2019/11/17/docker-nginx-phpfpm/20191117171409.png" alt><br>这种方案进行部署的nginx容器是将供浏览的资源文件放入容器内部的，外部对资源的创建修改很不方便，因此可以通过目录映射的方式将外部资源目录映射到容器内作为nginx的资源目录。</p><hr><h4 id="将资源目录放在外部"><a href="#将资源目录放在外部" class="headerlink" title="将资源目录放在外部"></a>将资源目录放在外部</h4><ol><li>宿主机下创建资源目录html并新建一个index.html:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~/nginx/html$ pwd</span><br><span class="line">/home/docker/nginx/html</span><br><span class="line">docker@default:~/nginx/html$ ls                                                                                                                     </span><br><span class="line">index.html</span><br><span class="line">docker@default:~/nginx/html$ cat index.html                                                                                                         </span><br><span class="line">&lt;h1&gt;hello nginx&lt;/h1&gt;</span><br><span class="line">docker@default:~/nginx/html$</span><br></pre></td></tr></table></figure></li><li>删掉刚才创建的nginx容器，指定html目录重新创建：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~/nginx$ docker container run \                                                                                                      </span><br><span class="line">&gt; -d \  </span><br><span class="line">&gt; -v /home/docker/nginx/html:/usr/share/nginx/html \</span><br><span class="line">&gt; -p 8080:80 \</span><br><span class="line">&gt; --name nginxsvr \</span><br><span class="line">&gt; nginx</span><br><span class="line">ba452c50279e91ae20aaca2bd685ec96681c5354d5dc2f6ce6a2e2c6a17e6151</span><br></pre></td></tr></table></figure></li><li>然后通过浏览器<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguOTkuMTAwOjgwODAv6K6/6ZeubmdpbnjmnI3liqHlmajvvIzlpoLlm77vvJo=" title="http://192.168.99.100:8080/访问nginx服务器，如图：">http://192.168.99.100:8080/访问nginx服务器，如图：<i class="fa fa-external-link"></i></span><br><img src="/2019/11/17/docker-nginx-phpfpm/20191117171855.png" alt><br>这种方案进行部署的nginx容器只能当做静态资源服务器，如果动态交互则需要进一步升级，下面拿动态web脚本PHP语言为例创建一个nginx + php-fpm的web环境</li></ol><hr><h4 id="nginx-php-fpm-环境"><a href="#nginx-php-fpm-环境" class="headerlink" title="nginx + php-fpm 环境"></a>nginx + php-fpm 环境</h4><ol><li><p>获取<code>php-fpm</code>镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~/nginx$ docker search php-fpm                                                                                                       </span><br><span class="line">NAME                         DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED</span><br><span class="line">bitnami/php-fpm              Bitnami PHP-FPM Docker Image                    82                                      [OK]</span><br><span class="line">laradock/php-fpm             LaraDock PHP-FPM Base Image                     22                                      [OK]</span><br><span class="line">devilbox/php-fpm             PHP-FPM Docker images based on original PHP …   13                                      </span><br><span class="line">nanoninja/php-fpm            Docker container to install and run PHP-FPM     10                                      [OK]</span><br><span class="line">crunchgeek/php-fpm           Fully loaded PHP-FPM backend with NewRelic &amp;…   10                                      </span><br><span class="line">cytopia/php-fpm-7.1          PHP-FPM 7.1 on CentOS 7                         3                                       [OK]</span><br><span class="line">cytopia/php-fpm-5.6          PHP-FPM 5.6 on CentOS 7                         3                                       [OK]</span><br><span class="line">erdiko/php-fpm               PHP-FPM container for LAMP/LEMP development …   3                                       [OK]</span><br><span class="line">osminogin/php-fpm            Generic PHP-FPM container for your web apps     3                                       [OK]</span><br><span class="line">cytopia/php-fpm-7.0          PHP-FPM 7.0 on CentOS 7                         2                                       [OK]</span><br><span class="line">mpfmedical/php-fpm           php-fpm                                         1                                       [OK]</span><br><span class="line">cytopia/php-fpm-5.4          PHP-FPM 5.4 on CentOS 7                         1                                       [OK]</span><br><span class="line">camil/php-fpm                PHP-FPM docker image with composer. Ready fo…   1                                       [OK]</span><br><span class="line">sazo/php-fpm                 Php-fpm 7 setup with custom modules             1                                       [OK]</span><br><span class="line">liquidweb/php-fpm-docker     PHP FPM                                         1                                       [OK]</span><br><span class="line">dmiseev/php-fpm7.1           Docker image php-fpm7.1                         1                                       [OK]</span><br><span class="line">hipages/php-fpm_exporter     A prometheus exporter for PHP-FPM.              1                                       </span><br><span class="line">wearemobedia/php-fpm         Generic mobedia PHP-FPM runtime                 0                                       [OK]</span><br><span class="line">spritsail/php-fpm            Php-FPM                                         0                                       [OK]</span><br><span class="line">glorian/php-fpm              PHP-FPM 5.6, 7.0, 7.1, Debian Stretch based     0                                       [OK]</span><br><span class="line">invitado/php-fpm             PHP-FPM with logging.                           0                                       [OK]</span><br><span class="line">jenkler/php-fpm              Docker PHP-fpm package                          0                                       </span><br><span class="line">twentyfifth/php-fpm          No longer maintained - please use https://hu…   0                                       </span><br><span class="line">liquidweb/php-fpm_exporter   A prometheus exporter for PHP-FPM.              0                                       </span><br><span class="line">fezzz/php-fpm                php7.3-fpm(latest) image for nextcloud:  Ser…   0                                       [OK]</span><br><span class="line">docker@default:~/nginx$                                                                                                                             </span><br><span class="line">docker@default:~/nginx$ </span><br><span class="line">docker@default:~/nginx$ docker pull bitnami/php-fpm</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from bitnami/php-fpm</span><br><span class="line">3c9020349340: Pull complete </span><br><span class="line">40733cd5627a: Pull complete </span><br><span class="line">94cd6abee637: Pull complete </span><br><span class="line">5d1a828d2437: Pull complete </span><br><span class="line">fd7d1147b5d0: Pull complete </span><br><span class="line">Digest: sha256:1a159e2303ad4a8da9c371ee2c1e35d98ad76a2db80b4686fd8b4415a7c5cc18</span><br><span class="line">Status: Downloaded newer image for bitnami/php-fpm:latest</span><br><span class="line">docker.io/bitnami/php-fpm:latest</span><br><span class="line">docker@default:~/nginx$</span><br></pre></td></tr></table></figure></li><li><p>接下来要创建<code>php-fpm</code>容器，首先要明确当访问静态资源时由nginx服务器来处理，当访问php脚本时需要php-fpm来解析，因此需要将本地目录映射到php-fpm容器中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~/nginx$ docker container run \                                                                                                      </span><br><span class="line">&gt; -d \</span><br><span class="line">&gt; -v /home/docker/nginx/html:/usr/share/nginx/html \</span><br><span class="line">&gt; -p 9990:9000 \</span><br><span class="line">&gt; --name phpfpm \</span><br><span class="line">&gt; bitnami/php-fpm</span><br><span class="line">c41c968823bb8bc45dc362454a7ceddfa53467e40ff6237e26eded85ea31f16a</span><br></pre></td></tr></table></figure></li><li><p>将nginx配置文件拷贝到宿主机目录方便修改配置文件，然后通过目录映射的方式挂载到nginx容器中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~/nginx$ docker container cp nginxsvr:/etc/nginx .</span><br><span class="line">docker@default:~/nginx$ ls                                                                                                                          </span><br><span class="line">nginx</span><br><span class="line">docker@default:~/nginx$ mv nginx conf</span><br></pre></td></tr></table></figure></li><li><p>修改nginx配置文件，这里注意两点：</p><blockquote><p>① 访问资源多了一种php脚本，当访问php脚本时nginx服务器将交由fastcgi服务器(php-fpm)来解析<br>② 创建php-fpm容器时指定了端口和目录映射，在配置文件中需要进行相应的配置</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~/nginx/conf/conf.d$ cat default.conf </span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    #charset koi8-r;</span><br><span class="line">    #access_log  /var/log/nginx/host.access.log  main;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm index.php;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">    # redirect server error pages to the static page /50x.html</span><br><span class="line">    #</span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">    #</span><br><span class="line">    #location ~ \.php$ &#123;</span><br><span class="line">    #    proxy_pass   http://127.0.0.1;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">    #</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root           html;</span><br><span class="line">        fastcgi_pass   192.168.99.100:9990;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html$fastcgi_script_name;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # deny access to .htaccess files, if Apache&apos;s document root</span><br><span class="line">    # concurs with nginx&apos;s one</span><br><span class="line">    #</span><br><span class="line">    #location ~ /\.ht &#123;</span><br><span class="line">    #    deny  all;</span><br><span class="line">    #&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">docker@default:~/nginx/conf/conf.d$</span><br></pre></td></tr></table></figure></li><li><p>重新创建nginx容器<code>nginxsvr</code>，html目录下添加index.php脚本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~/nginx$ docker container run \</span><br><span class="line">&gt; -d \</span><br><span class="line">&gt; -p 8080:80 \</span><br><span class="line">&gt; -v /home/docker/nginx/html:/usr/share/nginx/html \</span><br><span class="line">&gt; -v /home/docker/nginx/conf:/etc/nginx \</span><br><span class="line">&gt; --name nginxsvr \</span><br><span class="line">&gt; nginx</span><br><span class="line">5e8cc201816afedc66c88eb655aaaffce55615efb467656c76ff08cbb0fd87a6</span><br><span class="line">docker@default:~/nginx$ </span><br><span class="line">docker@default:~/nginx$ cd html/                                                                                                                    </span><br><span class="line">docker@default:~/nginx/html$ cat index.php                                                                                                          </span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">echo phpinfo()</span><br><span class="line">docker@default:~/nginx/html$</span><br></pre></td></tr></table></figure></li><li><p>然后通过浏览器<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguOTkuMTAwOjgwODAv6K6/6ZeubmdpbnjmnI3liqHlmajvvIzlpoLlm77vvJo=" title="http://192.168.99.100:8080/访问nginx服务器，如图：">http://192.168.99.100:8080/访问nginx服务器，如图：<i class="fa fa-external-link"></i></span><br><img src="/2019/11/17/docker-nginx-phpfpm/20191117172549.png" alt></p></li></ol><p>至此，nginx + php-fpm环境搭建完毕！</p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Docker </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将NGINX注册为Windows系统服务</title>
      <link href="/2019/11/16/windows-nginx-svr/"/>
      <url>/2019/11/16/windows-nginx-svr/</url>
      
        <content type="html"><![CDATA[<h3 id="NGINX安装"><a href="#NGINX安装" class="headerlink" title="NGINX安装"></a>NGINX安装</h3><ul><li>首先在<span class="exturl" data-url="aHR0cHM6Ly93d3cubmdpbnguY29tLw==" title="https://www.nginx.com/">nginx官网<i class="fa fa-external-link"></i></span>下载到的压缩包，目前稳定版本为<span class="exturl" data-url="aHR0cHM6Ly9uZ2lueC5vcmcvZG93bmxvYWQvbmdpbngtMS4xNi4xLnppcA==" title="https://nginx.org/download/nginx-1.16.1.zip">nginx-1.16.1<i class="fa fa-external-link"></i></span></li><li>解压后放入D盘<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[D:\nginx]$ pwd</span><br><span class="line">D:\nginx</span><br><span class="line">[D:\nginx]$ dir</span><br><span class="line"> 驱动器 D 中的卷是 LENOVO</span><br><span class="line"> 卷的序列号是 DAB9-EE00</span><br><span class="line"></span><br><span class="line"> D:\nginx 的目录</span><br><span class="line"></span><br><span class="line">2019/11/16  11:32    &lt;DIR&gt;          .</span><br><span class="line">2019/11/16  11:32    &lt;DIR&gt;          ..</span><br><span class="line">2019/11/15  21:30    &lt;DIR&gt;          conf</span><br><span class="line">2019/11/15  21:30    &lt;DIR&gt;          contrib</span><br><span class="line">2019/11/15  21:30    &lt;DIR&gt;          docs</span><br><span class="line">2019/11/15  21:30    &lt;DIR&gt;          html</span><br><span class="line">2019/11/16  11:44    &lt;DIR&gt;          logs</span><br><span class="line">2019/08/13  21:42         3,697,152 nginx.exe</span><br><span class="line">2019/11/16  11:44    &lt;DIR&gt;          temp</span><br><span class="line">               3 个文件      4,068,736 字节</span><br><span class="line">               8 个目录  5,441,527,808 可用字节</span><br></pre></td></tr></table></figure></li><li>运行NGINX，直接双击nginx.exe即可</li></ul><a id="more"></a><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>通过双击运行nginx后，有几点不便：</p><ol><li>启停不方便，修改配置后启停nginx需要cmd操作</li><li>无法开机自启动</li></ol><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p><strong>将nginx加入到windows服务</strong><br>下面介绍使用<code>winsw</code>将nginx加入到windows服务的操作流程：</p><ol><li>下载<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tvaHN1a2Uvd2luc3cvcmVsZWFzZXMvdGFnL3dpbnN3LXYyLjIuMA==" title="https://github.com/kohsuke/winsw/releases/tag/winsw-v2.2.0">winsw<i class="fa fa-external-link"></i></span>,目前稳定版为<code>winsw-v2.2.0</code>，本例下载的为<code>WinSW.NET2.exe</code></li><li>将<code>WinSW.NET2.exe</code>重命名为<code>nginxsvr.exe</code>并放入与<code>nginx.exe</code>相同目录下</li><li>新建配置文件<code>nginxsvr.xml</code>，参考<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tvaHN1a2Uvd2luc3cvYmxvYi9tYXN0ZXIvZG9jL3htbENvbmZpZ0ZpbGUubWQ=" title="https://github.com/kohsuke/winsw/blob/master/doc/xmlConfigFile.md">这里<i class="fa fa-external-link"></i></span>进行配置，本例配置信息为：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;service&gt;</span><br><span class="line">  &lt;id&gt;nginx-pureven&lt;/id&gt;</span><br><span class="line">  &lt;name&gt;nginx-pureven&lt;/name&gt;</span><br><span class="line">  &lt;description&gt;nginx服务，嘿嘿&lt;/description&gt;</span><br><span class="line">  &lt;logpath&gt;D://nginx//logs\&lt;/logpath&gt;</span><br><span class="line">  &lt;executable&gt;D://nginx//nginx.exe&lt;/executable&gt;</span><br><span class="line">  &lt;startmode&gt;Automatic&lt;/startmode&gt;</span><br><span class="line">  &lt;stopexecutable&gt;-p D://nginx//nginx.exe -s stop&lt;/stopexecutable&gt;</span><br><span class="line">  &lt;logpath&gt;D:/nginx/logs/&lt;/logpath&gt;</span><br><span class="line">  &lt;logmode&gt;roll&lt;/logmode&gt;</span><br><span class="line">&lt;/service&gt;</span><br></pre></td></tr></table></figure></li><li>cmd终端运行<code>nginxsvr.exe install</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\nginx&gt;nginxsvr.exe install</span><br><span class="line">2019-11-16 11:43:45,440 INFO  - Installing the service with id &apos;nginx-pureven&apos;</span><br></pre></td></tr></table></figure></li><li>加入服务成功，如图：<br><img src="/2019/11/16/windows-nginx-svr/20191116135032.png" alt></li><li>启动停止可通过服务界面直接操作了，另外配置文件中设置了开机自启，上图可以看到，至此设置完毕！</li></ol>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker container run命令相关解释</title>
      <link href="/2019/11/13/docker-container-run/"/>
      <url>/2019/11/13/docker-container-run/</url>
      
        <content type="html"><![CDATA[<p><code>docker run</code>跟<code>docker container run</code>命令功能是一样的，都是创建一个新的容器并运行一个命令。</p><a id="more"></a><h3 id="选项列表"><a href="#选项列表" class="headerlink" title="选项列表"></a>选项列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">docker@pureven:~$ docker container run --help 或 docker run --help</span><br><span class="line"></span><br><span class="line">Usage:docker container run [OPTIONS] IMAGE [COMMAND] [ARG...]</span><br><span class="line"></span><br><span class="line">Run a command in a new container</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">      --add-host list                  Add a custom host-to-IP mapping (host:ip)</span><br><span class="line">  -a, --attach list                    Attach to STDIN, STDOUT or STDERR</span><br><span class="line">      --blkio-weight uint16            Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)</span><br><span class="line">      --blkio-weight-device list       Block IO weight (relative device weight) (default [])</span><br><span class="line">      --cap-add list                   Add Linux capabilities</span><br><span class="line">      --cap-drop list                  Drop Linux capabilities</span><br><span class="line">      --cgroup-parent string           Optional parent cgroup for the container</span><br><span class="line">      --cidfile string                 Write the container ID to the file</span><br><span class="line">      --cpu-period int                 Limit CPU CFS (Completely Fair Scheduler) period</span><br><span class="line">      --cpu-quota int                  Limit CPU CFS (Completely Fair Scheduler) quota</span><br><span class="line">      --cpu-rt-period int              Limit CPU real-time period in microseconds</span><br><span class="line">      --cpu-rt-runtime int             Limit CPU real-time runtime in microseconds</span><br><span class="line">  -c, --cpu-shares int                 CPU shares (relative weight)</span><br><span class="line">      --cpus decimal                   Number of CPUs</span><br><span class="line">      --cpuset-cpus string             CPUs in which to allow execution (0-3, 0,1)</span><br><span class="line">      --cpuset-mems string             MEMs in which to allow execution (0-3, 0,1)</span><br><span class="line">  -d, --detach                         使用后台模式运行一个容器并打印容器ID 与 it相反，it模式会独占一个终端</span><br><span class="line">      --detach-keys string             Override the key sequence for detaching a container</span><br><span class="line">      --device list                    Add a host device to the container</span><br><span class="line">      --device-cgroup-rule list        Add a rule to the cgroup allowed devices list</span><br><span class="line">      --device-read-bps list           Limit read rate (bytes per second) from a device (default [])</span><br><span class="line">      --device-read-iops list          Limit read rate (IO per second) from a device (default [])</span><br><span class="line">      --device-write-bps list          Limit write rate (bytes per second) to a device (default [])</span><br><span class="line">      --device-write-iops list         Limit write rate (IO per second) to a device (default [])</span><br><span class="line">      --disable-content-trust          Skip image verification (default true)</span><br><span class="line">      --dns list                       Set custom DNS servers</span><br><span class="line">      --dns-option list                Set DNS options</span><br><span class="line">      --dns-search list                Set custom DNS search domains</span><br><span class="line">      --domainname string              Container NIS domain name</span><br><span class="line">      --entrypoint string              Overwrite the default ENTRYPOINT of the image</span><br><span class="line">  -e, --env list                       Set environment variables</span><br><span class="line">      --env-file list                  Read in a file of environment variables</span><br><span class="line">      --expose list                    Expose a port or a range of ports</span><br><span class="line">      --gpus gpu-request               GPU devices to add to the container (&apos;all&apos; to pass all GPUs)</span><br><span class="line">      --group-add list                 Add additional groups to join</span><br><span class="line">      --health-cmd string              Command to run to check health</span><br><span class="line">      --health-interval duration       Time between running the check (ms|s|m|h) (default 0s)</span><br><span class="line">      --health-retries int             Consecutive failures needed to report unhealthy</span><br><span class="line">      --health-start-period duration   Start period for the container to initialize before starting health-retries countdown (ms|s|m|h)</span><br><span class="line">                                       (default 0s)</span><br><span class="line">      --health-timeout duration        Maximum time to allow one check to run (ms|s|m|h) (default 0s)</span><br><span class="line">      --help                           Print usage</span><br><span class="line">  -h, --hostname string                Container host name</span><br><span class="line">      --init                           Run an init inside the container that forwards signals and reaps processes</span><br><span class="line">  -i, --interactive                    允许对容器内的标准输入 ( STDIN ) 进行交互，通常与 -t 同时使用</span><br><span class="line">      --ip string                      IPv4 address (e.g., 172.30.100.104)</span><br><span class="line">      --ip6 string                     IPv6 address (e.g., 2001:db8::33)</span><br><span class="line">      --ipc string                     IPC mode to use</span><br><span class="line">      --isolation string               Container isolation technology</span><br><span class="line">      --kernel-memory bytes            Kernel memory limit</span><br><span class="line">  -l, --label list                     Set meta data on a container</span><br><span class="line">      --label-file list                Read in a line delimited file of labels</span><br><span class="line">      --link list                      Add link to another container</span><br><span class="line">      --link-local-ip list             Container IPv4/IPv6 link-local addresses</span><br><span class="line">      --log-driver string              Logging driver for the container</span><br><span class="line">      --log-opt list                   Log driver options</span><br><span class="line">      --mac-address string             Container MAC address (e.g., 92:d0:c6:0a:29:33)</span><br><span class="line">  -m, --memory bytes                   Memory limit</span><br><span class="line">      --memory-reservation bytes       Memory soft limit</span><br><span class="line">      --memory-swap bytes              Swap limit equal to memory plus swap: &apos;-1&apos; to enable unlimited swap</span><br><span class="line">      --memory-swappiness int          Tune container memory swappiness (0 to 100) (default -1)</span><br><span class="line">      --mount mount                    Attach a filesystem mount to the container</span><br><span class="line">      --name string                    给容器指定一个名称 --name nginxsvr</span><br><span class="line">      --network network                Connect a container to a network</span><br><span class="line">      --network-alias list             Add network-scoped alias for the container</span><br><span class="line">      --no-healthcheck                 Disable any container-specified HEALTHCHECK</span><br><span class="line">      --oom-kill-disable               Disable OOM Killer</span><br><span class="line">      --oom-score-adj int              Tune host&apos;s OOM preferences (-1000 to 1000)</span><br><span class="line">      --pid string                     PID namespace to use</span><br><span class="line">      --pids-limit int                 Tune container pids limit (set -1 for unlimited)</span><br><span class="line">      --privileged                     Give extended privileges to this container</span><br><span class="line">  -p, --publish list                   容器内部端口绑定到指定的主机端口 -p 8080:80</span><br><span class="line">  -P, --publish-all                    容器内部端口随机映射到主机的端口</span><br><span class="line">      --read-only                      Mount the container&apos;s root filesystem as read only</span><br><span class="line">      --restart string                 Restart policy to apply when a container exits (default &quot;no&quot;)</span><br><span class="line">      --rm                             退出时自动删除容器</span><br><span class="line">      --runtime string                 Runtime to use for this container</span><br><span class="line">      --security-opt list              Security Options</span><br><span class="line">      --shm-size bytes                 Size of /dev/shm</span><br><span class="line">      --sig-proxy                      Proxy received signals to the process (default true)</span><br><span class="line">      --stop-signal string             Signal to stop a container (default &quot;SIGTERM&quot;)</span><br><span class="line">      --stop-timeout int               Timeout (in seconds) to stop a container</span><br><span class="line">      --storage-opt list               Storage driver options for the container</span><br><span class="line">      --sysctl map                     Sysctl options (default map[])</span><br><span class="line">      --tmpfs list                     Mount a tmpfs directory</span><br><span class="line">  -t, --tty                            在新容器内指定一个伪终端或终端，通常与 -i 同时使用；</span><br><span class="line">      --ulimit ulimit                  Ulimit options (default [])</span><br><span class="line">  -u, --user string                    Username or UID (format: &lt;name|uid&gt;[:&lt;group|gid&gt;])</span><br><span class="line">      --userns string                  User namespace to use</span><br><span class="line">      --uts string                     UTS namespace to use</span><br><span class="line">  -v, --volume list                    绑定一个卷 --volume /var/www/html:/usr/share/nginx/html</span><br><span class="line">      --volume-driver string           Optional volume driver for the container</span><br><span class="line">      --volumes-from list              Mount volumes from the specified container(s)</span><br><span class="line">  -w, --workdir string                 Working directory inside the container</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux openssl req 生成自签名证书</title>
      <link href="/2019/11/13/openssl-req-help/"/>
      <url>/2019/11/13/openssl-req-help/</url>
      
        <content type="html"><![CDATA[<h3 id="OpenSSL-req-生成自签名证书"><a href="#OpenSSL-req-生成自签名证书" class="headerlink" title="OpenSSL req 生成自签名证书"></a>OpenSSL req 生成自签名证书</h3><p>openssl req 命令的主要功能：</p><ul><li>生成自签名证书</li><li>生成证书请求文件</li><li>查看验证证书请求文件</li></ul><a id="more"></a><p>命令列表如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">openssl req [options] &lt;infile &gt;outfile</span><br><span class="line">where options  are</span><br><span class="line"> -inform arg    input format - DER or PEM</span><br><span class="line"> -outform arg   output format - DER or PEM</span><br><span class="line"> -in arg        input file</span><br><span class="line"> -out arg       output file</span><br><span class="line"> -text          text form of request</span><br><span class="line"> -pubkey        output public key</span><br><span class="line"> -noout         do not output REQ</span><br><span class="line"> -verify        verify signature on REQ</span><br><span class="line"> -modulus       RSA modulus</span><br><span class="line"> -nodes         don&apos;t encrypt the output key</span><br><span class="line"> -engine e      use engine e, possibly a hardware device</span><br><span class="line"> -subject       output the request&apos;s subject</span><br><span class="line"> -passin        private key password source</span><br><span class="line"> -key file      use the private key contained in file</span><br><span class="line"> -keyform arg   key file format</span><br><span class="line"> -keyout arg    file to send the key to</span><br><span class="line"> -rand file:file:...</span><br><span class="line">                load the file (or the files in the directory) into</span><br><span class="line">                the random number generator</span><br><span class="line"> -newkey rsa:bits generate a new RSA key of &apos;bits&apos; in size</span><br><span class="line"> -newkey dsa:file generate a new DSA key, parameters taken from CA in &apos;file&apos;</span><br><span class="line"> -newkey ec:file generate a new EC key, parameters taken from CA in &apos;file&apos;</span><br><span class="line"> -[digest]      Digest to sign with (md5, sha1, md2, mdc2, md4)</span><br><span class="line"> -config file   request template file.</span><br><span class="line"> -subj arg      set or modify request subject</span><br><span class="line"> -multivalue-rdn enable support for multivalued RDNs</span><br><span class="line"> -new           new request.</span><br><span class="line"> -batch         do not ask anything during request generation</span><br><span class="line"> -x509          output a x509 structure instead of a cert. req.</span><br><span class="line"> -days          number of days a certificate generated by -x509 is valid for.</span><br><span class="line"> -set_serial    serial number to use for a certificate generated by -x509.</span><br><span class="line"> -newhdr        output &quot;NEW&quot; in the header lines</span><br><span class="line"> -asn1-kludge   Output the &apos;request&apos; in a format that is wrong but some CA&apos;s</span><br><span class="line">                have been reported as requiring</span><br><span class="line"> -extensions .. specify certificate extension section (override value in config file)</span><br><span class="line"> -reqexts ..    specify request extension section (override value in config file)</span><br><span class="line"> -utf8          input characters are UTF8 (default ASCII)</span><br><span class="line"> -nameopt arg    - various certificate name options</span><br><span class="line"> -reqopt arg    - various request text options</span><br></pre></td></tr></table></figure><p>生成自签名证书需要用到下面几个选项：</p><blockquote><p>x509      生成自签名证书<br>nodes     跳过为证书设置密码的阶段，这样nginx可以直接打开证书<br>days      证书有效期，默认30天<br>newkey    生成证书请求或自签名证书时自动生成密钥，然后生成的密钥名称由keyout参数指定<br>keyout    指定生成私钥文件的文件名<br>out       指定生成的证书请求或者自签名证书名称</p></blockquote><hr><p><strong>生成自签名证书</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~/openssl$ openssl req \</span><br><span class="line">&gt; -x509 \</span><br><span class="line">&gt; -nodes \</span><br><span class="line">&gt; -days 30 \</span><br><span class="line">&gt; -newkey rsa:2048 \</span><br><span class="line">&gt; -keyout pureven.key \</span><br><span class="line">&gt; -out pureven.crt</span><br><span class="line">Generating a 2048 bit RSA private key</span><br><span class="line">......+++++</span><br><span class="line">.....................................+++++</span><br><span class="line">writing new private key to &apos;pureven.key&apos;</span><br><span class="line">-----</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter &apos;.&apos;, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [AU]:    </span><br><span class="line">State or Province Name (full name) [Some-State]:</span><br><span class="line">Locality Name (eg, city) []:</span><br><span class="line">Organization Name (eg, company) [Internet Widgits Pty Ltd]:</span><br><span class="line">Organizational Unit Name (eg, section) []:</span><br><span class="line">Common Name (e.g. server FQDN or YOUR name) []:</span><br><span class="line">Email Address []:</span><br><span class="line">docker@default:~/openssl$ ls</span><br><span class="line">pureven.crt  pureven.key</span><br></pre></td></tr></table></figure><hr><p><strong>查看证书内容</strong></p><p>查看证书信息用到的几个选项：</p><blockquote><p>in       指定证书请求文件，当查看证书请求内容或者生成自签名证书的时候使用<br>noout     输出到屏幕<br>text      用文本方式详细打印出该证书的所有细节<br>subject   打印出证书拥有者的名字<br>issuer    打印证书颁发者名字<br>modulus   打印出公共密钥的系数值</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">docker@default:~/nginx/conf/certs$ openssl x509 -in pureven.crt -noout -text  -subject                                               </span><br><span class="line">Certificate:</span><br><span class="line">    Data:</span><br><span class="line">        Version: 3 (0x2)</span><br><span class="line">        Serial Number:</span><br><span class="line">            86:90:cb:ca:29:a4:3b:96</span><br><span class="line">    Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">        Issuer: C=AU, ST=Some-State, O=Internet Widgits Pty Ltd</span><br><span class="line">        Validity</span><br><span class="line">            Not Before: Nov 13 12:48:23 2019 GMT</span><br><span class="line">            Not After : Dec 13 12:48:23 2019 GMT</span><br><span class="line">        Subject: C=AU, ST=Some-State, O=Internet Widgits Pty Ltd</span><br><span class="line">        Subject Public Key Info:</span><br><span class="line">            Public Key Algorithm: rsaEncryption</span><br><span class="line">                Public-Key: (2048 bit)</span><br><span class="line">                Modulus:</span><br><span class="line">                    00:da:20:76:24:4f:04:0a:9a:2d:6c:60:ca:38:fc:</span><br><span class="line">                    4f:e4:a1:5c:fb:e4:4b:fd:74:1d:9d:ff:13:b1:4a:</span><br><span class="line">                    3c:1d:1a:25:37:2a:23:b1:b9:be:6e:15:c4:38:6e:</span><br><span class="line">                    43:ce:6d:5f:18:67:6e:ef:a1:b7:07:1f:17:17:81:</span><br><span class="line">                    75:fa:c5:a0:09:65:dc:08:81:80:46:c9:a1:21:1a:</span><br><span class="line">                    ed:19:c5:8d:b6:9c:89:40:30:ea:b3:5c:98:6f:6b:</span><br><span class="line">                    74:29:ea:55:33:35:b6:28:7d:2a:4e:5f:7c:6e:44:</span><br><span class="line">                    3c:99:fc:0b:f3:ee:7e:4f:a8:c3:1e:7b:dc:54:27:</span><br><span class="line">                    f1:25:2d:7d:25:de:56:79:81:69:8c:a0:2b:45:9e:</span><br><span class="line">                    de:f6:c6:4c:62:ba:4f:8c:f5:97:72:3c:2c:0b:bf:</span><br><span class="line">                    4a:93:39:ac:b2:f0:30:e8:34:ef:99:60:a6:7e:f2:</span><br><span class="line">                    e0:c5:18:1f:0b:75:be:59:d1:9c:47:70:ee:80:2b:</span><br><span class="line">                    f6:bb:02:b9:73:89:49:b3:1e:58:10:fb:8e:9d:3f:</span><br><span class="line">                    f9:8b:b8:d6:a1:b0:ec:42:94:e7:9f:f8:4f:12:70:</span><br><span class="line">                    e7:f7:13:a4:a6:81:75:17:30:d9:e6:d4:2b:b3:cf:</span><br><span class="line">                    ea:36:12:4b:2d:e1:6e:aa:55:81:18:62:41:71:de:</span><br><span class="line">                    53:69:f6:7a:e7:1e:28:06:47:11:4a:2d:d2:b1:ab:</span><br><span class="line">                    04:79</span><br><span class="line">                Exponent: 65537 (0x10001)</span><br><span class="line">        X509v3 extensions:</span><br><span class="line">            X509v3 Subject Key Identifier: </span><br><span class="line">                67:C4:2B:CA:B4:F6:D0:6E:1E:37:D8:23:D4:8F:82:A4:E8:7A:8D:80</span><br><span class="line">            X509v3 Authority Key Identifier: </span><br><span class="line">                keyid:67:C4:2B:CA:B4:F6:D0:6E:1E:37:D8:23:D4:8F:82:A4:E8:7A:8D:80</span><br><span class="line"></span><br><span class="line">            X509v3 Basic Constraints: </span><br><span class="line">                CA:TRUE</span><br><span class="line">    Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">         7d:da:a3:9a:ea:60:be:48:ca:c7:c6:5b:cf:ac:c9:4f:b9:4d:</span><br><span class="line">         14:8a:93:fb:a8:59:8d:b7:e4:e6:fc:9a:97:66:8a:5b:25:5e:</span><br><span class="line">         fc:70:ec:ed:03:0e:cd:df:1c:ef:1b:42:8f:93:ab:e1:2f:3a:</span><br><span class="line">         f4:82:dc:ed:2d:45:d5:0d:2b:d3:cf:04:38:c3:58:e5:a8:28:</span><br><span class="line">         a9:75:cc:f7:57:9b:94:67:56:5f:ae:c9:4b:7c:a8:a3:1c:cd:</span><br><span class="line">         25:44:0a:ec:ef:ba:49:ec:e8:53:94:1c:38:71:5f:9e:e0:ed:</span><br><span class="line">         b8:36:81:65:60:23:16:2d:7f:67:58:1f:89:f2:ba:a3:a0:1d:</span><br><span class="line">         77:a9:91:6f:a8:11:c4:ac:a5:b0:62:84:01:bf:f9:f4:37:29:</span><br><span class="line">         49:0f:62:b3:7f:d8:40:52:07:4c:70:3d:87:b6:e9:b4:d1:8d:</span><br><span class="line">         4a:2b:b7:81:57:dc:13:78:4e:5c:51:b8:3d:9c:fd:51:07:50:</span><br><span class="line">         38:25:07:ba:76:f0:27:b3:8b:8b:31:19:74:14:82:2c:70:ca:</span><br><span class="line">         05:88:ae:7d:e9:4e:de:d5:54:de:8f:f2:ba:de:3a:1a:3a:fc:</span><br><span class="line">         14:0a:80:f2:31:8d:42:6e:fb:d9:b8:ed:a9:84:34:8b:1c:91:</span><br><span class="line">         03:3b:c7:38:f7:7a:0b:bc:c1:61:e2:fc:b5:98:5e:ef:d6:81:</span><br><span class="line">         5d:ab:c1:81</span><br><span class="line">subject= /C=AU/ST=Some-State/O=Internet Widgits Pty Ltd</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>grep sed awk 入门</title>
      <link href="/2019/11/09/linux-sed-awk-grep/"/>
      <url>/2019/11/09/linux-sed-awk-grep/</url>
      
        <content type="html"><![CDATA[<h3 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h3><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>grep是一个最初用于Unix操作系统的命令行工具。由<code>Kenneth Lane Thompson</code>写成。grep原先是ed下的一个应用程序，名称来自于g/re/p（globally search a regular expression and print，<strong>利用正则表达式在指定文件中进行全局搜索并将搜索到的行打印出来</strong>）。在给出文件列表或标准输入后，grep会对匹配一个或多个正则表达式的文本进行搜索，并只输出匹配（或者不匹配）的行或文本。摘自<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvR3JlcA==" title="https://zh.wikipedia.org/wiki/Grep">维基百科<i class="fa fa-external-link"></i></span>。可以将grep理解为<strong>字符查找工具</strong>，类似于<code>ctrl + F</code>。</p><a id="more"></a><h4 id="语法形式"><a href="#语法形式" class="headerlink" title="语法形式"></a>语法形式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven ~]# grep --help</span><br><span class="line">用法: grep [选项]... PATTERN [FILE]...</span><br><span class="line">在每个 FILE 或是标准输入中查找 PATTERN。</span><br><span class="line">默认的 PATTERN 是一个基本正则表达式(缩写为 BRE)。</span><br><span class="line">例如: grep -i &apos;hello world&apos; menu.h main.c</span><br><span class="line"></span><br><span class="line">正则表达式选择与解释:</span><br><span class="line">  -E, --extended-regexp     PATTERN 是一个可扩展的正则表达式(缩写为 ERE)</span><br><span class="line">  -F, --fixed-strings       PATTERN 是一组由断行符分隔的定长字符串。</span><br><span class="line">  -G, --basic-regexp        PATTERN 是一个基本正则表达式(缩写为 BRE)</span><br><span class="line">  -P, --perl-regexp         PATTERN 是一个 Perl 正则表达式</span><br><span class="line">  -e, --regexp=PATTERN      用 PATTERN 来进行匹配操作</span><br><span class="line">  -f, --file=FILE           从 FILE 中取得 PATTERN</span><br><span class="line">  -i, --ignore-case         忽略大小写</span><br><span class="line">  -w, --word-regexp         强制 PATTERN 仅完全匹配字词</span><br><span class="line">  -x, --line-regexp         强制 PATTERN 仅完全匹配一行</span><br><span class="line">  -z, --null-data           一个 0 字节的数据行，但不是空行</span><br><span class="line"></span><br><span class="line">Miscellaneous:</span><br><span class="line">  -s, --no-messages         suppress error messages</span><br><span class="line">  -v, --invert-match        select non-matching lines</span><br><span class="line">  -V, --version             display version information and exit</span><br><span class="line">      --help                display this help text and exit</span><br><span class="line"></span><br><span class="line">输出控制:</span><br><span class="line">  -m, --max-count=NUM       NUM 次匹配后停止</span><br><span class="line">  -b, --byte-offset         输出的同时打印字节偏移</span><br><span class="line">  -n, --line-number         输出的同时打印行号</span><br><span class="line">      --line-buffered       每行输出清空</span><br><span class="line">  -H, --with-filename       为每一匹配项打印文件名</span><br><span class="line">  -h, --no-filename         输出时不显示文件名前缀</span><br><span class="line">      --label=LABEL         将LABEL 作为标准输入文件名前缀</span><br><span class="line">  -o, --only-matching       show only the part of a line matching PATTERN</span><br><span class="line">  -q, --quiet, --silent     suppress all normal output</span><br><span class="line">      --binary-files=TYPE   assume that binary files are TYPE;</span><br><span class="line">                            TYPE is &apos;binary&apos;, &apos;text&apos;, or &apos;without-match&apos;</span><br><span class="line">  -a, --text                equivalent to --binary-files=text</span><br><span class="line">  -I                        equivalent to --binary-files=without-match</span><br><span class="line">  -d, --directories=ACTION  how to handle directories;</span><br><span class="line">                            ACTION is &apos;read&apos;, &apos;recurse&apos;, or &apos;skip&apos;</span><br><span class="line">  -D, --devices=ACTION      how to handle devices, FIFOs and sockets;</span><br><span class="line">                            ACTION is &apos;read&apos; or &apos;skip&apos;</span><br><span class="line">  -r, --recursive           like --directories=recurse</span><br><span class="line">  -R, --dereference-recursive</span><br><span class="line">                            likewise, but follow all symlinks</span><br><span class="line">      --include=FILE_PATTERN</span><br><span class="line">                            search only files that match FILE_PATTERN</span><br><span class="line">      --exclude=FILE_PATTERN</span><br><span class="line">                            skip files and directories matching FILE_PATTERN</span><br><span class="line">      --exclude-from=FILE   skip files matching any file pattern from FILE</span><br><span class="line">      --exclude-dir=PATTERN directories that match PATTERN will be skipped.</span><br><span class="line">  -L, --files-without-match print only names of FILEs containing no match</span><br><span class="line">  -l, --files-with-matches  print only names of FILEs containing matches</span><br><span class="line">  -c, --count               print only a count of matching lines per FILE</span><br><span class="line">  -T, --initial-tab         make tabs line up (if needed)</span><br><span class="line">  -Z, --null                print 0 byte after FILE name</span><br><span class="line"></span><br><span class="line">文件控制:</span><br><span class="line">  -B, --before-context=NUM  打印以文本起始的NUM 行</span><br><span class="line">  -A, --after-context=NUM   打印以文本结尾的NUM 行</span><br><span class="line">  -C, --context=NUM         打印输出文本NUM 行</span><br><span class="line">  -NUM                      same as --context=NUM</span><br><span class="line">      --group-separator=SEP use SEP as a group separator</span><br><span class="line">      --no-group-separator  use empty string as a group separator</span><br><span class="line">      --color[=WHEN],</span><br><span class="line">      --colour[=WHEN]       use markers to highlight the matching strings;</span><br><span class="line">                            WHEN is &apos;always&apos;, &apos;never&apos;, or &apos;auto&apos;</span><br><span class="line">  -U, --binary              do not strip CR characters at EOL (MSDOS/Windows)</span><br><span class="line">  -u, --unix-byte-offsets   report offsets as if CRs were not there</span><br><span class="line">                            (MSDOS/Windows)</span><br><span class="line"></span><br><span class="line">‘egrep’即‘grep -E’。‘fgrep’即‘grep -F’。</span><br><span class="line">直接使用‘egrep’或是‘fgrep’均已不可行了。</span><br><span class="line">若FILE 为 -，将读取标准输入。不带FILE，读取当前目录，除非命令行中指定了-r 选项。</span><br><span class="line">如果少于两个FILE 参数，就要默认使用-h 参数。</span><br><span class="line">如果有任意行被匹配，那退出状态为 0，否则为 1；</span><br><span class="line">如果有错误产生，且未指定 -q 参数，那退出状态为 2。</span><br><span class="line"></span><br><span class="line">请将错误报告给: bug-grep@gnu.org</span><br><span class="line">GNU Grep 主页: &lt;http://www.gnu.org/software/grep/&gt;</span><br><span class="line">GNU 软件的通用帮助: &lt;http://www.gnu.org/gethelp/&gt;</span><br><span class="line">[root@pureven ~]#</span><br></pre></td></tr></table></figure><hr><h4 id="应用示例"><a href="#应用示例" class="headerlink" title="应用示例"></a>应用示例</h4><h5 id="在文件中查找字符串"><a href="#在文件中查找字符串" class="headerlink" title="在文件中查找字符串"></a>在文件中查找字符串</h5><ul><li>在文件pwd.info中查找“spool”：默认<strong>区分大小写</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat pwd.info </span><br><span class="line">   ROOT:X:0:0:ROOT:/ROOT:/BIN/BASH</span><br><span class="line">   BIN:X:1:1:BIN:/BIN:/SBIN/NOLOGIN</span><br><span class="line">   DAEMON:X:2:2:DAEMON:/SBIN:/SBIN/NOLOGIN</span><br><span class="line">   ADM:X:3:4:ADM:/VAR/ADM:/SBIN/NOLOGIN</span><br><span class="line">   LP:X:4:7:LP:/VAR/SPOOL/LPD:/SBIN/NOLOGIN</span><br><span class="line">   sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">   shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">   halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">   mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">   operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">   [root@pureven Documents]# grep &quot;spool&quot; pwd.info </span><br><span class="line">   mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br></pre></td></tr></table></figure></li></ul><h5 id="不区分大小写-i"><a href="#不区分大小写-i" class="headerlink" title="不区分大小写 -i"></a>不区分大小写 -i</h5><ul><li>在文件pwd.info中查找“spool”及“SPOOL”，使用<code>-i</code><strong>选项</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat pwd.info </span><br><span class="line">ROOT:X:0:0:ROOT:/ROOT:/BIN/BASH</span><br><span class="line">BIN:X:1:1:BIN:/BIN:/SBIN/NOLOGIN</span><br><span class="line">DAEMON:X:2:2:DAEMON:/SBIN:/SBIN/NOLOGIN</span><br><span class="line">ADM:X:3:4:ADM:/VAR/ADM:/SBIN/NOLOGIN</span><br><span class="line">LP:X:4:7:LP:/VAR/SPOOL/LPD:/SBIN/NOLOGIN</span><br><span class="line">sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">[root@pureven Documents]# grep -i &quot;spool&quot; pwd.info </span><br><span class="line">LP:X:4:7:LP:/VAR/SPOOL/LPD:/SBIN/NOLOGIN</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br></pre></td></tr></table></figure></li></ul><h5 id="显示匹配行在文件中的行号-n"><a href="#显示匹配行在文件中的行号-n" class="headerlink" title="显示匹配行在文件中的行号 -n"></a>显示匹配行在文件中的行号 -n</h5><ul><li>在文件pwd.info中查找“spool”，显示匹配行在文件中的行号，使用<code>-n</code><strong>选项</strong> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat pwd.info </span><br><span class="line">ROOT:X:0:0:ROOT:/ROOT:/BIN/BASH</span><br><span class="line">BIN:X:1:1:BIN:/BIN:/SBIN/NOLOGIN</span><br><span class="line">DAEMON:X:2:2:DAEMON:/SBIN:/SBIN/NOLOGIN</span><br><span class="line">ADM:X:3:4:ADM:/VAR/ADM:/SBIN/NOLOGIN</span><br><span class="line">LP:X:4:7:LP:/VAR/SPOOL/LPD:/SBIN/NOLOGIN</span><br><span class="line">sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">[root@pureven Documents]# grep -i -n &quot;spool&quot; pwd.info </span><br><span class="line">5:LP:X:4:7:LP:/VAR/SPOOL/LPD:/SBIN/NOLOGIN</span><br><span class="line">9:mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br></pre></td></tr></table></figure></li></ul><h5 id="获取匹配行数-c"><a href="#获取匹配行数-c" class="headerlink" title="获取匹配行数 -c"></a>获取匹配行数 -c</h5><ul><li>在文件pwd.info中查找“spool”，显示匹配行的总数，使用<code>-c</code><strong>选项</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# grep -i &quot;spool&quot; pwd.info </span><br><span class="line">LP:X:4:7:LP:/VAR/SPOOL/LPD:/SBIN/NOLOGIN</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">[root@pureven Documents]# grep -i -c  &quot;spool&quot; pwd.info </span><br><span class="line">2</span><br></pre></td></tr></table></figure></li></ul><p><strong>注意：</strong><code>-c</code>选项只会打印总行数，不会打印行内容</p><h5 id="显示匹配信息上下文-A-num-B-num-C-num"><a href="#显示匹配信息上下文-A-num-B-num-C-num" class="headerlink" title="显示匹配信息上下文 -A{num}/-B{num}/-C{num}"></a>显示匹配信息上下文 -A{num}/-B{num}/-C{num}</h5><ul><li>当需要了解匹配信息上下文时，需要用到文件控制部分的<code>-A</code>、<code>-B</code>、<code>-C</code>选项:<blockquote><p> -B, –before-context=NUM  打印以文本起始的NUM 行<br> -A, –after-context=NUM   打印以文本结尾的NUM 行<br> -C, –context=NUM         打印输出文本NUM 行<br> 换言之<br> <code>-B2</code>将会输出匹配行以及匹配行下面的2行<br> <code>-A2</code>将会输出匹配行以及匹配行上面的2行<br> <code>-C2</code>将会输出匹配行以及匹配行上下文各2行</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# grep -n &quot;SPOOL&quot; pwd.info </span><br><span class="line">5:LP:X:4:7:LP:/VAR/SPOOL/LPD:/SBIN/NOLOGIN</span><br><span class="line">[root@pureven Documents]# grep -n -A2 &quot;SPOOL&quot; pwd.info </span><br><span class="line">5:LP:X:4:7:LP:/VAR/SPOOL/LPD:/SBIN/NOLOGIN</span><br><span class="line">6-sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">7-shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">[root@pureven Documents]# grep -n -B2 &quot;SPOOL&quot; pwd.info </span><br><span class="line">3-DAEMON:X:2:2:DAEMON:/SBIN:/SBIN/NOLOGIN</span><br><span class="line">4-ADM:X:3:4:ADM:/VAR/ADM:/SBIN/NOLOGIN</span><br><span class="line">5:LP:X:4:7:LP:/VAR/SPOOL/LPD:/SBIN/NOLOGIN</span><br><span class="line">[root@pureven Documents]# grep -n -C2 &quot;SPOOL&quot; pwd.info </span><br><span class="line">3-DAEMON:X:2:2:DAEMON:/SBIN:/SBIN/NOLOGIN</span><br><span class="line">4-ADM:X:3:4:ADM:/VAR/ADM:/SBIN/NOLOGIN</span><br><span class="line">5:LP:X:4:7:LP:/VAR/SPOOL/LPD:/SBIN/NOLOGIN</span><br><span class="line">6-sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">7-shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">[root@pureven Documents]#</span><br></pre></td></tr></table></figure></li></ul><h5 id="words-匹配-w"><a href="#words-匹配-w" class="headerlink" title="words 匹配 -w"></a>words 匹配 -w</h5><ul><li>在文件pwd.info中查找单词“spool”，即<code>spool</code>作为独立的单词存在，使用<code>-w</code><strong>选项</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat pwd.info </span><br><span class="line">hello ROOT:X:0:0:ROOT:/ROOT:/BIN/BASH</span><br><span class="line">world BIN:X:1:1:BIN:/BIN:/SBIN/NOLOGIN</span><br><span class="line">helloDAEMON:X:2:2:DAEMON:/SBIN:/SBIN/NOLOGIN</span><br><span class="line">worldADM:X:3:4:ADM:/VAR/ADM:/SBIN/NOLOGIN</span><br><span class="line">helloLP:X:4:7:LP:/VAR/SPOOL/LPD:/SBIN/NOLOGIN</span><br><span class="line">grep sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">grepshutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">hello halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">grep mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">world operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">[root@pureven Documents]# </span><br><span class="line">[root@pureven Documents]# grep &quot;grep&quot; pwd.info </span><br><span class="line">grep sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">grepshutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">grep mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">[root@pureven Documents]# </span><br><span class="line">[root@pureven Documents]# grep -w &quot;grep&quot; pwd.info </span><br><span class="line">grep sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">grep mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">[root@pureven Documents]#</span><br></pre></td></tr></table></figure></li></ul><h5 id="反向查找-v"><a href="#反向查找-v" class="headerlink" title="反向查找 -v"></a>反向查找 -v</h5><ul><li>在文件pwd.info中查找不包含“spool”的行，使用<code>-v</code><strong>选项</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat pwd.info </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">[root@pureven Documents]# grep -n &quot;sbin&quot; pwd.info </span><br><span class="line">2:bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">3:daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">4:adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">5:lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">6:sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">7:shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">8:halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">9:mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">10:operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">[root@pureven Documents]# grep -v -n &quot;sbin&quot; pwd.info </span><br><span class="line">1:root:x:0:0:root:/root:/bin/bash</span><br></pre></td></tr></table></figure></li></ul><h5 id="同时匹配多个字符串-e"><a href="#同时匹配多个字符串-e" class="headerlink" title="同时匹配多个字符串 -e"></a>同时匹配多个字符串 -e</h5><ul><li>在文件中同时匹配多个字符串，只要有一个字符串匹配就说明此行匹配成功，使用<code>-e</code><strong>选项</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat char.list </span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# grep &quot;a&quot; char.list </span><br><span class="line">a b c d e f g</span><br><span class="line">[root@pureven Documents]# grep &quot;i&quot; char.list </span><br><span class="line">h i j k l m n</span><br><span class="line">[root@pureven Documents]# grep -e &quot;a&quot; -e &quot;i&quot; char.list </span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br></pre></td></tr></table></figure></li></ul><h5 id="静默模式-q"><a href="#静默模式-q" class="headerlink" title="静默模式 -q"></a>静默模式 -q</h5><ul><li>如果不关心在文件中匹配的行信息以及上下文，只关心是否匹配成功，则需要使用<code>-q</code><strong>选项</strong><br>使用-q在文件中进行匹配有三个结果：<blockquote><p>0：匹配成功<br>1：匹配失败<br>2：匹配文件不存在</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat char.list </span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# grep -q &quot;a&quot; char.list </span><br><span class="line">[root@pureven Documents]# echo $?</span><br><span class="line">0</span><br><span class="line">[root@pureven Documents]# grep -q &quot;+&quot; char.list </span><br><span class="line">[root@pureven Documents]# echo $?</span><br><span class="line">1</span><br><span class="line">[root@pureven Documents]# grep -q &quot;a&quot; char.lists</span><br><span class="line">grep: char.lists: 没有那个文件或目录</span><br><span class="line">[root@pureven Documents]# echo $?</span><br><span class="line">2</span><br><span class="line">[root@pureven Documents]#</span><br></pre></td></tr></table></figure></li></ul><h5 id="正则表达式-E-egrep"><a href="#正则表达式-E-egrep" class="headerlink" title="正则表达式 -E/egrep"></a>正则表达式 -E/egrep</h5><ul><li><code>grep</code>支持使用扩展的正则表达式模式来匹配字符串，需要使用<strong>-E</strong>选项或直接使用<code>egrep</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat char.list </span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# grep &quot;a&quot; char.list </span><br><span class="line">a b c d e f g</span><br><span class="line">[root@pureven Documents]# grep &quot;i&quot; char.list </span><br><span class="line">h i j k l m n</span><br><span class="line">[root@pureven Documents]# grep -e &quot;a&quot; -e &quot;i&quot; char.list </span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">[root@pureven Documents]# grep -E &apos;a|i&apos; char.list </span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">[root@pureven Documents]#</span><br></pre></td></tr></table></figure>其中<code>'a|i'</code>表示<code>a或i</code></li></ul><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p>本文归纳的不全，如果不满足自己的需求可参考下列链接:<br><span class="exturl" data-url="aHR0cHM6Ly9saW51eC5jbi9hcnRpY2xlLTY5NDEtMS5odG1s" title="https://linux.cn/article-6941-1.html">https://linux.cn/article-6941-1.html<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly93d3cuenN5dGhpbmsubmV0L2FyY2hpdmVzLzE3MzM=" title="https://www.zsythink.net/archives/1733">https://www.zsythink.net/archives/1733<i class="fa fa-external-link"></i></span></p><hr><h3 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h3><h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>sed是<code>stream editor(流编辑器)</code>的缩写，是一个使用简单紧凑的编程语言来解析和转换文本的Unix实用程序。sed由贝尔实验室的Lee E. McMahon于1973年至1974年开发，并且现在大多数操作系统都可以使用。<br>sed基于交互式编辑器ed（“editor”，1971）和早期qed（“quick editor”，1965-66）的脚本功能。sed是最早支持<strong>正则表达式</strong>的工具之一，至今仍然用于<strong>文本处理</strong>，特别是用于<strong>替换</strong>命令。<br>摘自<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvU2Vk" title="https://zh.wikipedia.org/wiki/Sed">维基百科<i class="fa fa-external-link"></i></span></p><hr><h4 id="语法形式-1"><a href="#语法形式-1" class="headerlink" title="语法形式"></a>语法形式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# sed --help</span><br><span class="line">用法: sed [选项]... &#123;脚本(如果没有其他脚本)&#125; [输入文件]...</span><br><span class="line"></span><br><span class="line">  -n, --quiet, --silent</span><br><span class="line">                 取消自动打印模式空间</span><br><span class="line">  -e 脚本, --expression=脚本</span><br><span class="line">                 添加“脚本”到程序的运行列表</span><br><span class="line">  -f 脚本文件, --file=脚本文件</span><br><span class="line">                 添加“脚本文件”到程序的运行列表</span><br><span class="line">  --follow-symlinks</span><br><span class="line">                 直接修改文件时跟随软链接</span><br><span class="line">  -i[SUFFIX], --in-place[=SUFFIX]</span><br><span class="line">                 edit files in place (makes backup if SUFFIX supplied)</span><br><span class="line">  -c, --copy</span><br><span class="line">                 use copy instead of rename when shuffling files in -i mode</span><br><span class="line">  -b, --binary</span><br><span class="line">                 does nothing; for compatibility with WIN32/CYGWIN/MSDOS/EMX (</span><br><span class="line">                 open files in binary mode (CR+LFs are not treated specially))</span><br><span class="line">  -l N, --line-length=N</span><br><span class="line">                 指定“l”命令的换行期望长度</span><br><span class="line">  --posix</span><br><span class="line">                 关闭所有 GNU 扩展</span><br><span class="line">  -r, --regexp-extended</span><br><span class="line">                 在脚本中使用扩展正则表达式</span><br><span class="line">  -s, --separate</span><br><span class="line">                 将输入文件视为各个独立的文件而不是一个长的连续输入</span><br><span class="line">  -u, --unbuffered</span><br><span class="line">                 从输入文件读取最少的数据，更频繁的刷新输出</span><br><span class="line">  -z, --null-data</span><br><span class="line">                 separate lines by NUL characters</span><br><span class="line">  --help</span><br><span class="line">                 display this help and exit</span><br><span class="line">  --version</span><br><span class="line">                 output version information and exit</span><br><span class="line"></span><br><span class="line">如果没有 -e, --expression, -f 或 --file 选项，那么第一个非选项参数被视为</span><br><span class="line">sed脚本。其他非选项参数被视为输入文件，如果没有输入文件，那么程序将从标准</span><br><span class="line">输入读取数据。</span><br><span class="line">GNU sed home page: &lt;http://www.gnu.org/software/sed/&gt;.</span><br><span class="line">General help using GNU software: &lt;http://www.gnu.org/gethelp/&gt;.</span><br><span class="line">E-mail bug reports to: &lt;bug-sed@gnu.org&gt;.</span><br><span class="line">Be sure to include the word ``sed&apos;&apos; somewhere in the ``Subject:&apos;&apos; field.</span><br></pre></td></tr></table></figure><h4 id="脚本动作"><a href="#脚本动作" class="headerlink" title="脚本动作"></a>脚本动作</h4><h5 id="单词替换"><a href="#单词替换" class="headerlink" title="单词替换"></a>单词替换</h5><ul><li><code>sed</code>的简单使用，<strong>单词替换</strong>功能：将<code>hello</code>替换为<code>world</code>，<code>/hello/</code>表示匹配，<code>/world/</code>表示把匹配替换成<code>world</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker@pureven:~$ cat input.txt                                                                                           </span><br><span class="line">hello world</span><br><span class="line">hello pureven</span><br><span class="line">docker@pureven:~$                                                                                                         </span><br><span class="line">docker@pureven:~$ sed &apos;s/hello/world/&apos; input.txt &gt; output.txt</span><br><span class="line">docker@pureven:~$ cat output.txt                                                                                          </span><br><span class="line">world world</span><br><span class="line">world pureven</span><br><span class="line">docker@pureven:~$</span><br></pre></td></tr></table></figure>从output.txt的内容即可发现，sed已将input.txt文件中的<code>hello</code>替换为<code>world</code>，如果不指定<code>inputfile</code>，sed将会过滤标准输入的内容。<br>一下命令是等效的：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker@pureven:~$ sed &apos;s/hello/world/&apos; input.txt &gt; output.txt</span><br><span class="line">docker@pureven:~$ cat output.txt                                                                                          </span><br><span class="line">world world</span><br><span class="line">world pureven</span><br><span class="line">docker@pureven:~$ sed &apos;s/hello/world/&apos; &lt; input.txt &gt; output.txt                                                           </span><br><span class="line">docker@pureven:~$ cat output.txt                                                                                          </span><br><span class="line">world world</span><br><span class="line">world pureven       </span><br><span class="line">docker@pureven:~$ cat input.txt | sed &apos;s/hello/world/&apos; - &gt; output.txt                                             </span><br><span class="line">docker@pureven:~$ cat output.txt                                                                                          </span><br><span class="line">world world</span><br><span class="line">world pureven</span><br></pre></td></tr></table></figure></li></ul><h5 id="替换-s"><a href="#替换-s" class="headerlink" title="替换 s"></a>替换 s</h5><ul><li>每行替换所有的匹配如何实现<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# clear</span><br><span class="line">[root@pureven Documents]# cat char.list</span><br><span class="line">a b c d a f g</span><br><span class="line">a b c d a f g</span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# sed &apos;s/a/*/&apos; char.list</span><br><span class="line">* b c d a f g</span><br><span class="line">* b c d a f g</span><br><span class="line">* b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# sed &apos;s/a/*/2&apos; char.list</span><br><span class="line">a b c d * f g</span><br><span class="line">a b c d * f g</span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# sed &apos;s/a/*/g&apos; char.list</span><br><span class="line">* b c d * f g</span><br><span class="line">* b c d * f g</span><br><span class="line">* b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]#</span><br></pre></td></tr></table></figure>通过比较可以得出<code>/g</code>的作用是将每行所有的<code>a</code>替换为<code>*</code>。</li></ul><h5 id="增加-删除-插入-a-d-i"><a href="#增加-删除-插入-a-d-i" class="headerlink" title="增加/删除/插入 a/d/i"></a>增加/删除/插入 a/d/i</h5><ul><li>a表示新增，后面接字符串，这些字符串会在指定行的下一行出现</li></ul><p>比如在第二行后增加”hello wrold”，在所有行后增加”hello world”：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat char.list</span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# sed &apos;2a hello world&apos; char.list</span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">hello world</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# sed &apos;a hello world&apos; char.list</span><br><span class="line">a b c d e f g</span><br><span class="line">hello world</span><br><span class="line">h i j k l m n</span><br><span class="line">hello world</span><br><span class="line">o p q r s t</span><br><span class="line">hello world</span><br><span class="line">u v w x y z</span><br><span class="line">hello world</span><br><span class="line">[root@pureven Documents]#</span><br></pre></td></tr></table></figure><ul><li>d表示删除，删除指定行</li></ul><p>比如删除第二行，删除第二至第四行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat char.list</span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# sed &apos;2d&apos; char.list</span><br><span class="line">a b c d e f g</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# sed &apos;2,4d&apos; char.list</span><br><span class="line">a b c d e f g</span><br><span class="line">[root@pureven Documents]#</span><br></pre></td></tr></table></figure><ul><li>i表示插入，后面接字符串，这些字符串会在指定行的上一行出现</li></ul><p>比如在第二行后插入”hello wrold”，在所有行后插入”hello world”：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat char.list</span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# sed &apos;2i hello pureven&apos; char.list</span><br><span class="line">a b c d e f g</span><br><span class="line">hello pureven</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# sed &apos;i hello pureven&apos; char.list</span><br><span class="line">hello pureven</span><br><span class="line">a b c d e f g</span><br><span class="line">hello pureven</span><br><span class="line">h i j k l m n</span><br><span class="line">hello pureven</span><br><span class="line">o p q r s t</span><br><span class="line">hello pureven</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]#</span><br></pre></td></tr></table></figure><h5 id="行替换-c"><a href="#行替换-c" class="headerlink" title="行替换 c"></a>行替换 c</h5><ul><li>c ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat char.list</span><br><span class="line">a b c d e f g</span><br><span class="line">a b c d e f g</span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# sed &apos;1,4c cc cc cc&apos; char.list</span><br><span class="line">cc cc cc</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]#</span><br></pre></td></tr></table></figure></li></ul><h5 id="搜索-p"><a href="#搜索-p" class="headerlink" title="搜索 p"></a>搜索 p</h5><ul><li>p ：打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行～<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat char.list</span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# sed &apos;/o/p&apos; char.list</span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# sed -n &apos;/o/p&apos; char.list</span><br><span class="line">o p q r s t</span><br><span class="line">[root@pureven Documents]#</span><br></pre></td></tr></table></figure></li></ul><h4 id="选项参数"><a href="#选项参数" class="headerlink" title="选项参数"></a>选项参数</h4><h5 id="使用文件中的命令进行替换-f"><a href="#使用文件中的命令进行替换-f" class="headerlink" title="使用文件中的命令进行替换 -f"></a>使用文件中的命令进行替换 -f</h5><ul><li>-f ：添加文件中的命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat char.list</span><br><span class="line">a b c d a f g</span><br><span class="line">a b c d a f g</span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# cat char.sed </span><br><span class="line">s/a/*/g</span><br><span class="line">s/$/…………/</span><br><span class="line">[root@pureven Documents]# sed -f char.sed char.list</span><br><span class="line">* b c d * f g…………</span><br><span class="line">* b c d * f g…………</span><br><span class="line">* b c d e f g…………</span><br><span class="line">h i j k l m n…………</span><br><span class="line">o p q r s t…………</span><br><span class="line">u v w x y z…………</span><br><span class="line">[root@pureven Documents]#</span><br></pre></td></tr></table></figure></li></ul><h5 id="取消自动打印模式-n"><a href="#取消自动打印模式-n" class="headerlink" title="取消自动打印模式 -n"></a>取消自动打印模式 -n</h5><ul><li>-n ：sed默认会打印经过处理后的所有文本信息， <code>-n</code>则取消这种自动打印的信息，一般和p搭配使用<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat char.list</span><br><span class="line">a b c d a f g</span><br><span class="line">a b c d a f g</span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# sed &apos;2,3a hello pureven&apos; char.list</span><br><span class="line">a b c d a f g</span><br><span class="line">a b c d a f g</span><br><span class="line">hello pureven</span><br><span class="line">a b c d e f g</span><br><span class="line">hello pureven</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# sed -n &apos;2,3a hello pureven&apos; char.list</span><br><span class="line">hello pureven</span><br><span class="line">hello pureven</span><br><span class="line">[root@pureven Documents]# sed -n &apos;/x/p&apos; char.list</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]#</span><br></pre></td></tr></table></figure></li></ul><h5 id="直接修改文件内容-i"><a href="#直接修改文件内容-i" class="headerlink" title="直接修改文件内容 -i"></a>直接修改文件内容 -i</h5><ul><li>-i ：直接修改文件内容<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat char.list</span><br><span class="line">a b c d e f g</span><br><span class="line">a b c d e f g</span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# sed -i &apos;2,3s/a/*/&apos; char.list</span><br><span class="line">[root@pureven Documents]# cat char.list</span><br><span class="line">a b c d e f g</span><br><span class="line">* b c d e f g</span><br><span class="line">* b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]#</span><br></pre></td></tr></table></figure></li></ul><h5 id="多个匹配-e"><a href="#多个匹配-e" class="headerlink" title="多个匹配 -e"></a>多个匹配 -e</h5><ul><li>-e : 指定匹配规则，可添加多个<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@pureven Documents]# cat char.list</span><br><span class="line">a b c d a f g</span><br><span class="line">a b c d a f g</span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w x y z</span><br><span class="line">[root@pureven Documents]# sed -e &apos;2,3s/a/*/&apos; -e &apos;s/$/********/&apos; char.list</span><br><span class="line">a b c d a f g********</span><br><span class="line">* b c d a f g********</span><br><span class="line">* b c d e f g********</span><br><span class="line">h i j k l m n********</span><br><span class="line">o p q r s t********</span><br><span class="line">u v w x y z********</span><br><span class="line">[root@pureven Documents]#</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h3><h4 id="前言-1"><a href="#前言-1" class="headerlink" title="前言"></a>前言</h4><p>AWK是一种优良的文本处理工具，Linux及Unix环境中现有的功能最强大的数据处理引擎之一。名称得自于它的创始人<code>Alfred Aho</code>、<code>Peter Weinberger</code>和<code>Brian Kernighan</code>姓氏的首个字母<br>AWK提供了极其强大的功能：可以进行<cdoe>正则表达式的匹配，<code>样式装入</code>、<code>流控制</code>、<code>数学运算符</code>、<code>进程控制语句</code>甚至于<code>内置的变量</code>和<code>函数</code>。下面进行简单介绍</cdoe></p><hr><h4 id="awk的命令格式和选项"><a href="#awk的命令格式和选项" class="headerlink" title="awk的命令格式和选项"></a>awk的命令格式和选项</h4><p><strong>语法形式</strong> </p><blockquote><p><code>awk [options] 'pattern {action}' (filename)</code></p></blockquote><p>选项参数说明:<br><code>options</code>:</p><ul><li>-F fs or –field-separator fs: 指定输入文件折分隔符，fs是一个字符串或者一个正则表达式</li><li>-v var=value or –asign var=value: 赋值一个用户定义变量</li><li>-f scriptfile or –file scriptfile: 从脚本文件中读取awk命令</li><li>-W help or –help, -W usage or –usage: 打印全部awk选项和每个选项的简短说明</li></ul><p><code>pattern</code>:表示模式，即条件<br><code>action</code>:为awk语句，表示每一行的处理动作，只能被单引号包含<br><code>filename</code>:表示awk要处理的文本文件。</p><p><strong>举例说明:</strong></p><p>其信息通过冒号<code>:</code>进行连接，下面通过awk进行格式化显示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@tony Desktop]# cat /etc/passwd | head -n 10 &gt; passwd.info </span><br><span class="line">[root@tony Desktop]# cat passwd.info </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">[root@tony Desktop]# awk -F : &apos;&#123;printf &quot;%02s %-10s %-8s %-8s %-8s %-10s %-16s %-8s\n&quot;, NR,$1,$2,$3,$4,$5,$6,$7&#125;&apos; passwd.info </span><br><span class="line"> 1 root       x        0        0        root       /root            /bin/bash</span><br><span class="line"> 2 bin        x        1        1        bin        /bin             /sbin/nologin</span><br><span class="line"> 3 daemon     x        2        2        daemon     /sbin            /sbin/nologin</span><br><span class="line"> 4 adm        x        3        4        adm        /var/adm         /sbin/nologin</span><br><span class="line"> 5 lp         x        4        7        lp         /var/spool/lpd   /sbin/nologin</span><br><span class="line"> 6 sync       x        5        0        sync       /sbin            /bin/sync</span><br><span class="line"> 7 shutdown   x        6        0        shutdown   /sbin            /sbin/shutdown</span><br><span class="line"> 8 halt       x        7        0        halt       /sbin            /sbin/halt</span><br><span class="line"> 9 mail       x        8        12       mail       /var/spool/mail  /sbin/nologin</span><br><span class="line">10 operator   x        11       0        operator   /root            /sbin/nologin</span><br><span class="line">[root@tony Desktop]#</span><br></pre></td></tr></table></figure><p>其中$1 - $7、 NR为内置变量， -F的作用是设置定界符，这里使用<code>:</code>进行分割后得到的每一列。<br><strong>这里<code>options</code>即<code>-F :</code>,<code>action</code>即<code>printf</code></strong></p><p>多个分隔符示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker@pureven:~$ cat pwd.info </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/bin/sh</span><br><span class="line">docker@pureven:~$ awk -F &apos;[:]&apos; &apos;&#123;print $1,$2,$3,$4,$5&#125;&apos; pwd.info                                                          </span><br><span class="line">root x 0 0 root</span><br><span class="line">lp x 7 7 lp</span><br><span class="line">docker@pureven:~$                                                                                                         </span><br><span class="line">docker@pureven:~$ awk -F &apos;[:|root]&apos; &apos;&#123;print $1,$2,$3,$4,$5&#125;&apos; pwd.info </span><br><span class="line">    </span><br><span class="line">lp x 7 7 lp</span><br><span class="line">docker@pureven:~$ awk -F &apos;[:|root]+&apos; &apos;&#123;print $1,$2,$3,$4,$5&#125;&apos; pwd.info                                                    </span><br><span class="line"> x 0 0 /</span><br><span class="line">lp x 7 7 lp</span><br><span class="line">docker@pureven:~$</span><br></pre></td></tr></table></figure><p>其中的<code>+</code>表示连续出现的分隔符当作一个来处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker@pureven:~$ awk -F : &apos;&#123;printf &quot;NR:%-6s NF:%-6s %-10s %-10s %-16s %-8s\n&quot;, NR,NF,$1,$5,$6,$7&#125;&apos; pwd.info                                                </span><br><span class="line">NR:1      NF:7      root       root       /root            /bin/bash</span><br><span class="line">NR:2      NF:7      lp         lp         /var/spool/lpd   /bin/sh </span><br><span class="line">NR:3      NF:7      nobody     nobody     /nonexistent     /bin/false</span><br><span class="line">NR:4      NF:7      tc         Linux User,,, /home/tc         /bin/sh </span><br><span class="line">NR:5      NF:7      docker     Docker     /home/docker     /bin/bash</span><br><span class="line">NR:6      NF:7      dockremap  Linux User,,, /home/dockremap  /bin/false</span><br><span class="line">docker@pureven:~$ awk -F : &apos;NR == 3 || NR == 5&#123;printf &quot;NR:%-6s NF:%-6s %-10s %-10s %-16s %-8s\n&quot;, NR,NF,$1,$5,$6,$7&#125;&apos; pwd.info                              </span><br><span class="line">NR:3      NF:7      nobody     nobody     /nonexistent     /bin/false</span><br><span class="line">NR:5      NF:7      docker     Docker     /home/docker     /bin/bash</span><br></pre></td></tr></table></figure><p><strong>这里<code>pattern</code> 即’NR == 3 || NR == 5’</strong></p><hr><h4 id="内置变量"><a href="#内置变量" class="headerlink" title="内置变量"></a>内置变量</h4><p>上面用到的$1 - $7及NR均为swk内置的变量，每个内置变量的作用不同，下面列出常用的几个：</p><table><thead><tr><th align="left">变量名</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">$0</td><td align="left">存放整行内容</td></tr><tr><td align="left">$1 - $n</td><td align="left">存放通过FS将内容分割后的第一个到第几个字段</td></tr><tr><td align="left">NR</td><td align="left">已经读出的内容的行号，从1开始，如果有多个文件，这个值也是不断累加</td></tr><tr><td align="left">FNR</td><td align="left">与NR不同之处在于每个文件都从1开始累加</td></tr><tr><td align="left">NF</td><td align="left">记录通过FS将内容分割后的字段数目，也就是列的数目</td></tr><tr><td align="left">FS</td><td align="left">输入的字段分隔符，默认是空格</td></tr><tr><td align="left">OFS</td><td align="left">输出的字段分隔符，默认是空格</td></tr><tr><td align="left">RS</td><td align="left">输入的记录分隔符，默认是换行符</td></tr><tr><td align="left">ORS</td><td align="left">输出的记录分隔符，默认是换行符</td></tr><tr><td align="left">OFMT</td><td align="left">数字输出格式，默认为%.6g，保留6位小数</td></tr><tr><td align="left">FILENAME</td><td align="left">当前文件名</td></tr></tbody></table><p><strong>举例说明:</strong></p><ul><li><p>查看$0内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@tony Desktop]# awk &apos;&#123;print $0&#125;&apos; pwd.info </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">[root@tony Desktop]# </span><br><span class="line">[root@tony Desktop]# cat pwd.info </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br></pre></td></tr></table></figure><p>$0即读取每行内容，这里将每行内容打印出来跟cat pwd.info效果一样</p></li><li><p>FILENAME/NR/FNR/NF 示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@tony Desktop]# awk -F : &apos;&#123;printf &quot;FILENAME:%-12s FNR:%-6s NR:%-6s NF:%-6s %-10s %-10s %-16s %-8s\n&quot;, FILENAME,FNR,NR,NF,$1,$5,$6,$7&#125;&apos; pwd.info shadow.info</span><br><span class="line">FILENAME:pwd.info     FNR:1      NR:1      NF:7      root       root       /root            /bin/bash</span><br><span class="line">FILENAME:pwd.info     FNR:2      NR:2      NF:7      bin        bin        /bin             /sbin/nologin</span><br><span class="line">FILENAME:pwd.info     FNR:3      NR:3      NF:7      daemon     daemon     /sbin            /sbin/nologin</span><br><span class="line">FILENAME:pwd.info     FNR:4      NR:4      NF:7      adm        adm        /var/adm         /sbin/nologin</span><br><span class="line">FILENAME:pwd.info     FNR:5      NR:5      NF:7      lp         lp         /var/spool/lpd   /sbin/nologin</span><br><span class="line">FILENAME:shadow.info  FNR:1      NR:6      NF:9      root       99999      7                        </span><br><span class="line">FILENAME:shadow.info  FNR:2      NR:7      NF:9      bin        99999      7                        </span><br><span class="line">FILENAME:shadow.info  FNR:3      NR:8      NF:9      daemon     99999      7                        </span><br><span class="line">FILENAME:shadow.info  FNR:4      NR:9      NF:9      adm        99999      7                        </span><br><span class="line">FILENAME:shadow.info  FNR:5      NR:10     NF:9      lp         99999      7</span><br></pre></td></tr></table></figure></li><li><p>FS/OFS 示例： 输入<strong>字段</strong>分隔符<code>:</code>, 输出<strong>字段</strong>分隔符<code>**</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">docker@pureven:~$ cat pwd.info                                        </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/bin/sh</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/bin/false</span><br><span class="line">tc:x:1001:50:Linux User,,,:/home/tc:/bin/sh</span><br><span class="line">docker:x:1000:50:Docker:/home/docker:/bin/bash</span><br><span class="line">dockremap:x:100:101:Linux User,,,:/home/dockremap:/bin/false</span><br><span class="line">docker@pureven:~$                                                                                                         </span><br><span class="line">docker@pureven:~$ awk &apos;&#123;FS=&quot;:&quot;,OFS=&quot;**&quot;&#125;&#123;print $1, $2, $3, $4, $5, $6, $7 &#125;&apos; pwd.info </span><br><span class="line">root:x:0:0:root:/root:/bin/bash************</span><br><span class="line">lp**x**7**7**lp**/var/spool/lpd**/bin/sh</span><br><span class="line">nobody**x**65534**65534**nobody**/nonexistent**/bin/false</span><br><span class="line">tc**x**1001**50**Linux User,,,**/home/tc**/bin/sh</span><br><span class="line">docker**x**1000**50**Docker**/home/docker**/bin/bash</span><br><span class="line">dockremap**x**100**101**Linux User,,,**/home/dockremap**/bin/false</span><br></pre></td></tr></table></figure></li><li><p>OFMT 示例：</p><blockquote><p><strong>所有输入都将视为字符串，直到通过使用方式进行隐式转换为止</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker@pureven:~$ echo 3.1415926 | awk &apos;&#123;OFMT=&quot;%.2f&quot;;print 0+$0&#125;&apos;</span><br><span class="line">3.14</span><br><span class="line">docker@pureven:~$ echo 3.1415926 | awk &apos;&#123;OFMT=&quot;%.3f&quot;;print 0+$0&#125;&apos;                                                         </span><br><span class="line">3.142</span><br><span class="line">docker@pureven:~$ echo 3.1415926 | awk &apos;&#123;OFMT=&quot;%.4f&quot;;print 0+$0&#125;&apos;                                                         </span><br><span class="line">3.1416</span><br><span class="line">docker@pureven:~$ echo 3.1415926 | awk &apos;&#123;OFMT=&quot;%.5f&quot;;print 0+$0&#125;&apos;                                                         </span><br><span class="line">3.14159</span><br><span class="line">docker@pureven:~$ echo 3.1415926 | awk &apos;&#123;OFMT=&quot;%d&quot;;print 0+$0&#125;&apos;                                                           </span><br><span class="line">3</span><br><span class="line">docker@pureven:~$ echo 3.1415926 | awk &apos;&#123;OFMT=&quot;%d&quot;;print $0&#125;&apos;                                                             </span><br><span class="line">3.1415926</span><br></pre></td></tr></table></figure></li></ul><hr><h4 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h4><table><thead><tr><th align="left">函数名</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">toupper</td><td align="left">将字符转为大写</td></tr><tr><td align="left">tolower</td><td align="left">将字符转为小写</td></tr><tr><td align="left">length</td><td align="left">长度</td></tr><tr><td align="left">substr</td><td align="left">子字符串</td></tr><tr><td align="left">sin</td><td align="left">正弦</td></tr><tr><td align="left">cos</td><td align="left">余弦</td></tr><tr><td align="left">sqrt</td><td align="left">平方根</td></tr><tr><td align="left">rand</td><td align="left">随机数</td></tr></tbody></table><p>完整列表请参见<span class="exturl" data-url="aHR0cHM6Ly93d3cuZ251Lm9yZy9zb2Z0d2FyZS9nYXdrL21hbnVhbC9odG1sX25vZGUvQnVpbHRfMDAyZGluLmh0bWwjQnVpbHRfMDAyZGlu" title="https://www.gnu.org/software/gawk/manual/html_node/Built_002din.html#Built_002din">手册<i class="fa fa-external-link"></i></span></p><p><strong>举例说明:</strong></p><ul><li><p><code>substr()</code>函数测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@tony Desktop]# awk -F : &apos;&#123;print substr(FILENAME, 5,4), NF, $(NF-1), $0&#125;&apos; pwd.info </span><br><span class="line">info 7 /root root:x:0:0:root:/root:/bin/bash</span><br><span class="line">info 7 /bin bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">info 7 /sbin daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">info 7 /var/adm adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">info 7 /var/spool/lpd lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">[root@tony Desktop]#</span><br></pre></td></tr></table></figure></li><li><p><code>toupper()/tolower()</code>函数测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@tony Desktop]# </span><br><span class="line">[root@tony Desktop]# awk -F : &apos;&#123;print tolower(FILENAME), NF, $(NF-1), $0&#125;&apos; pwd.info </span><br><span class="line">pwd.info 7 /root root:x:0:0:root:/root:/bin/bash</span><br><span class="line">pwd.info 7 /bin bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">pwd.info 7 /sbin daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">pwd.info 7 /var/adm adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">pwd.info 7 /var/spool/lpd lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">[root@tony Desktop]# </span><br><span class="line">[root@tony Desktop]# awk -F : &apos;&#123;print toupper(FILENAME), NF, $(NF-1), $0&#125;&apos; pwd.info </span><br><span class="line">PWD.INFO 7 /root root:x:0:0:root:/root:/bin/bash</span><br><span class="line">PWD.INFO 7 /bin bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">PWD.INFO 7 /sbin daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">PWD.INFO 7 /var/adm adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">PWD.INFO 7 /var/spool/lpd lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br></pre></td></tr></table></figure></li><li><p>对变量进行重新赋值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@tony Desktop]# awk -F : &apos;&#123;print toupper(FILENAME), NF, $(NF-1), $0 = &quot;***&quot;&#125;&apos; pwd.info </span><br><span class="line">PWD.INFO 7 /root ***</span><br><span class="line">PWD.INFO 7 /bin ***</span><br><span class="line">PWD.INFO 7 /sbin ***</span><br><span class="line">PWD.INFO 7 /var/adm ***</span><br><span class="line">PWD.INFO 7 /var/spool/lpd ***</span><br></pre></td></tr></table></figure><p>$0本来是每行内容的，经过赋值变成了***</p></li><li><p>实现单词统计和去重</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">docker@pureven:~$ cat word.list                                                                                             </span><br><span class="line">hello world pureven awk</span><br><span class="line">hello world pureven awk</span><br><span class="line">hello world pureven awk</span><br><span class="line">awk hello world pureven</span><br><span class="line">pureven awk hello world</span><br><span class="line">world pureven awk hello</span><br><span class="line">docker@pureven:~$ awk &apos;&#123;c+=length($0)+1;w+=NF&#125;END&#123;print &quot;row_nums = &quot; NR,&quot;\nword_nums = &quot; w, &quot;\nchar_nums = &quot; c&#125;&apos; word.list                         </span><br><span class="line">row_nums = 6 </span><br><span class="line">word_nums = 24 </span><br><span class="line">char_nums = 144</span><br><span class="line">docker@pureven:~$ awk &apos;!arr[$0]++ &#123;print $0&#125;&apos; word.list                                                                                             </span><br><span class="line">hello world pureven awk</span><br><span class="line">awk hello world pureven</span><br><span class="line">pureven awk hello world</span><br><span class="line">world pureven awk hello</span><br><span class="line">docker@pureven:~$</span><br></pre></td></tr></table></figure><blockquote><p>单词统计：c += leng($0) + 1将每行字符串相加；w += NF 将每行单词数相加。<br>去重：<code>arr[$0]++</code>中$0作为key，初值arr[$0] = 0，当读取重复行后通过arr[$0]++变为arr[$0] = 1，取非后为假就过滤掉了</p></blockquote></li></ul><hr><h4 id="awk-模式"><a href="#awk-模式" class="headerlink" title="awk 模式"></a>awk 模式</h4><p><code>pattern</code>表示模式，用一个比较好理解的单词就是指<strong>条件</strong>，这里介绍awk的模式中的三类：<code>空模式</code>, <code>关系运算模式</code>, <code>BEGIN/END模式</code>。</p><blockquote><p>空模式：表示没有指定任何条件的模式，awk会直接对文本处理。<br>关系运算模式： 如前文中的’NR % 2 == 1’、’$1 == “root”‘、’$1 == “daemon”‘等，awk会根据这些条件对文件进行操作。<br>BEGIN/END模式：BEGIN表示开始处理文本之前需要执行的操作，END表示将所有行都处理完毕之后需要执行的操作。</p></blockquote><h5 id="关系运算模式"><a href="#关系运算模式" class="headerlink" title="关系运算模式"></a><code>关系运算模式</code></h5><p><code>awk</code>允许指定输出条件，只输出符合条件的行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@tony Desktop]# awk -F : &apos;&#123;printf &quot;%02s %-10s %-8s %-8s %-8s %-10s %-16s %-8s\n&quot;, NR,$1,$2,$3,$4,$5,$6,$7&#125;&apos; pwd.info </span><br><span class="line"> 1 root       x        0        0        root       /root            /bin/bash</span><br><span class="line"> 2 bin        x        1        1        bin        /bin             /sbin/nologin</span><br><span class="line"> 3 daemon     x        2        2        daemon     /sbin            /sbin/nologin</span><br><span class="line"> 4 adm        x        3        4        adm        /var/adm         /sbin/nologin</span><br><span class="line"> 5 lp         x        4        7        lp         /var/spool/lpd   /sbin/nologin</span><br><span class="line">[root@tony Desktop]#</span><br><span class="line">[root@tony Desktop]# awk -F : &apos;NR % 2 == 1 &#123;printf &quot;%02s %-10s %-8s %-8s %-8s %-10s %-16s %-8s\n&quot;, NR,$1,$2,$3,$4,$5,$6,$7&#125;&apos; pwd.info </span><br><span class="line"> 1 root       x        0        0        root       /root            /bin/bash</span><br><span class="line"> 3 daemon     x        2        2        daemon     /sbin            /sbin/nologin</span><br><span class="line"> 5 lp         x        4        7        lp         /var/spool/lpd   /sbin/nologin</span><br><span class="line">[root@tony Desktop]# </span><br><span class="line">[root@tony Desktop]# awk -F : &apos;$1 == &quot;root&quot; &#123;printf &quot;%02s %-10s %-8s %-8s %-8s %-10s %-16s %-8s\n&quot;, NR,$1,$2,$3,$4,$5,$6,$7&#125;&apos; pwd.info </span><br><span class="line"> 1 root       x        0        0        root       /root            /bin/bash</span><br><span class="line">[root@tony Desktop]# </span><br><span class="line">[root@tony Desktop]# awk -F : &apos;$1 == &quot;daemon&quot; &#123;printf &quot;%02s %-10s %-8s %-8s %-8s %-10s %-16s %-8s\n&quot;, NR,$1,$2,$3,$4,$5,$6,$7&#125;&apos; pwd.info </span><br><span class="line"> 3 daemon     x        2        2        daemon     /sbin            /sbin/nologin</span><br><span class="line">[root@tony Desktop]#</span><br></pre></td></tr></table></figure><p><code>NR % 2 == 1</code>表示条件，作用是输出时只输出NR为奇数的行,<code>$1 == "root"</code>和<code>$1 == "daemon"</code>分别匹配第一列为<code>root</code>和<code>daemon</code>的行。</p><p>另外<code>awk</code>还支持if … else条件判断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@tony Desktop]# awk -F : &apos;&#123;printf &quot;%02s %-10s %-8s %-8s %-8s %-10s %-16s %-8s\n&quot;, NR,$1,$2,$3,$4,$5,$6,$7&#125;&apos; pwd.info </span><br><span class="line"> 1 root       x        0        0        root       /root            /bin/bash</span><br><span class="line"> 2 bin        x        1        1        bin        /bin             /sbin/nologin</span><br><span class="line"> 3 daemon     x        2        2        daemon     /sbin            /sbin/nologin</span><br><span class="line"> 4 adm        x        3        4        adm        /var/adm         /sbin/nologin</span><br><span class="line"> 5 lp         x        4        7        lp         /var/spool/lpd   /sbin/nologin</span><br><span class="line">[root@tony Desktop]# </span><br><span class="line">[root@tony Desktop]# </span><br><span class="line">[root@tony Desktop]# </span><br><span class="line">[root@tony Desktop]# awk -F : &apos;&#123;if (NR &gt; 3) printf &quot;%02s %-10s %-8s %-8s %-8s %-10s %-16s %-8s\n&quot;, NR,$1,$2,$3,$4,$5,$6,$7; else print NR, $0&#125;&apos; pwd.info </span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line">2 bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">3 daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line"> 4 adm        x        3        4        adm        /var/adm         /sbin/nologin</span><br><span class="line"> 5 lp         x        4        7        lp         /var/spool/lpd   /sbin/nologin</span><br><span class="line">[root@tony Desktop]#</span><br></pre></td></tr></table></figure><h5 id="BEGIN-END模式"><a href="#BEGIN-END模式" class="headerlink" title="BEGIN/END模式"></a><code>BEGIN/END模式</code></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker@pureven:~$ cat input.txt </span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t</span><br><span class="line">u v w z y z</span><br><span class="line">docker@pureven:~$                                                                                                                                           </span><br><span class="line">docker@pureven:~$ awk &apos;BEGIN&#123;print &quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;,&quot;7&quot;&#125;&#123;print $1, $2, $3, $4, $5, $6, $7&#125;END&#123;print &quot;7&quot;,&quot;6&quot;,&quot;5&quot;,&quot;4&quot;,&quot;3&quot;,&quot;2&quot;,&quot;1&quot;&#125;&apos; input.txt </span><br><span class="line">1 2 3 4 5 6 7</span><br><span class="line">a b c d e f g</span><br><span class="line">h i j k l m n</span><br><span class="line">o p q r s t </span><br><span class="line">u v w z y z </span><br><span class="line">7 6 5 4 3 2 1</span><br><span class="line">docker@pureven:~$</span><br></pre></td></tr></table></figure><h4 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMTgvMTEvYXdrLmh0bWw=" title="http://www.ruanyifeng.com/blog/2018/11/awk.html">awk 入门教程<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9jb29sc2hlbGwuY24vYXJ0aWNsZXMvOTEwNC5odG1s" title="https://coolshell.cn/articles/9104.html">sed 简明教程<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Docker Toolbox替换默认docker machine的存储位置</title>
      <link href="/2019/11/07/docker-toolbox-change-default-docker-machine-dir/"/>
      <url>/2019/11/07/docker-toolbox-change-default-docker-machine-dir/</url>
      
        <content type="html"><![CDATA[<h3 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h3><p>安装完Docker Toolbox后，默认docker machine的存储位置为<code>C:\Users\39260.docker\machine\machines</code>，<br>随着对虚机的使用会导虚拟硬盘所占空间越来越大，严重了会导致C盘空间空间告警！</p><a id="more"></a><h3 id="设置默认docker-machine存储目录"><a href="#设置默认docker-machine存储目录" class="headerlink" title="设置默认docker machine存储目录"></a>设置默认docker machine存储目录</h3><p>1.选择一块空间充足的磁盘，新建虚机存储目录，这里选择目录为<code>H:\VM\machines</code>，<br>并将目录添加到系统环境变量<code>MACHINE_STORAGE_PATH</code><br>2.添加环境变量<code>VBOX_INSTALL_PATH</code>,其值为<code>virtual安装目录</code>，这里为<code>C:\Program Files\Oracle\VirtualBox</code><br>3.复制boot2docker.iso到<code>H:\VM\machines\cache</code></p><h3 id="新建docker-machine"><a href="#新建docker-machine" class="headerlink" title="新建docker machine"></a>新建docker machine</h3><p>1.停止并删除已有虚机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\39260&gt; docker-machine.exe stop default</span><br><span class="line">PS C:\Users\39260&gt; docker-machine.exe rm default</span><br></pre></td></tr></table></figure><p>2.以<strong>管理员</strong>身份运行<code>Docker QuickStart Terminal</code>,并等待所有设置完成，这步很重要！<br>3.等待出现下列显示即可关闭<code>Docker QuickStart Terminal</code>终端，并在没有管理员权限的情况下再次运行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">Running pre-create checks...</span><br><span class="line">Creating machine...</span><br><span class="line">(default) Copying H:\VM\machines\cache\boot2docker.iso to H:\VM\machines\machines\default\boot2docker.iso...</span><br><span class="line">(default) Creating VirtualBox VM...</span><br><span class="line">(default) Creating SSH key...</span><br><span class="line">(default) Starting the VM...</span><br><span class="line">(default) Check network to re-create if needed...</span><br><span class="line">(default) Windows might ask for the permission to configure a dhcp server. Sometimes, such confirmation window is minimized in the taskbar.</span><br><span class="line">(default) Waiting for an IP...</span><br><span class="line">Waiting for machine to be running, this may take a few minutes...</span><br><span class="line">Detecting operating system of created instance...</span><br><span class="line">Waiting for SSH to be available...</span><br><span class="line">Detecting the provisioner...</span><br><span class="line">Provisioning with boot2docker...</span><br><span class="line">Copying certs to the local machine directory...</span><br><span class="line">Copying certs to the remote machine...</span><br><span class="line">Setting Docker configuration on the remote daemon...</span><br><span class="line"></span><br><span class="line">This machine has been allocated an IP address, but Docker Machine could not</span><br><span class="line">reach it successfully.</span><br><span class="line"></span><br><span class="line">SSH for the machine should still work, but connecting to exposed ports, such as</span><br><span class="line">the Docker daemon port (usually &lt;ip&gt;:2376), may not work properly.</span><br><span class="line"></span><br><span class="line">You may need to add the route manually, or use another related workaround.</span><br><span class="line"></span><br><span class="line">This could be due to a VPN, proxy, or host file configuration issue.</span><br><span class="line"></span><br><span class="line">You also might want to clear any VirtualBox host only interfaces you are not using.</span><br><span class="line">Checking connection to Docker...</span><br><span class="line">Docker is up and running!</span><br><span class="line">To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: H:\Docker Toolbox\docker-machine.exe env default</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        ##         .</span><br><span class="line">                  ## ## ##        ==</span><br><span class="line">               ## ## ## ## ##    ===</span><br><span class="line">           /&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\___/ ===</span><br><span class="line">      ~~~ &#123;~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~</span><br><span class="line">           \______ o           __/</span><br><span class="line">             \    \         __/</span><br><span class="line">              \____\_______/</span><br><span class="line"></span><br><span class="line">docker is configured to use the default machine with IP 192.168.99.100</span><br><span class="line">For help getting started, check out the docs at https://docs.docker.com</span><br><span class="line"></span><br><span class="line">Start interactive shell</span><br><span class="line"></span><br><span class="line">39260@pureven MINGW64 ~</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>boot2docker用户名和密码：</p><table><thead><tr><th align="center">用户名</th><th align="center">密码</th><th align="center">进入方式</th></tr></thead><tbody><tr><td align="center">docker</td><td align="center">tcuser</td><td align="center">ssh</td></tr><tr><td align="center">root</td><td align="center"></td><td align="center">command:sudo -i(docker用户下执行)</td></tr></tbody></table><p>1.打开<code>Git Bash</code>,启动虚拟机default</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">39260@pureven MINGW64 ~</span><br><span class="line">$ docker-machine.exe  start default</span><br><span class="line">Starting &quot;default&quot;...</span><br><span class="line">(default) Check network to re-create if needed...</span><br><span class="line">(default) Windows might ask for the permission to configure a dhcp server. Sometimes, such confirmation window is minimized in the taskbar.</span><br><span class="line">(default) Waiting for an IP...</span><br><span class="line">Machine &quot;default&quot; was started.</span><br><span class="line">Waiting for SSH to be available...</span><br><span class="line">Detecting the provisioner...</span><br><span class="line">Started machines may have new IP addresses. You may need to re-run the `docker-machine env` command.</span><br></pre></td></tr></table></figure><p>2.执行<code>docker-machine create --driver=virtualbox pureven</code>，创建虚拟机pureven</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">39260@pureven MINGW64 ~</span><br><span class="line">$ docker-machine.exe create --driver=virtualbox pureven</span><br><span class="line">Running pre-create checks...</span><br><span class="line">Creating machine...</span><br><span class="line">(pureven) Copying H:\VM\machines\cache\boot2docker.iso to H:\VM\machines\machines\pureven\boot2docker.iso...</span><br><span class="line">(pureven) Creating VirtualBox VM...</span><br><span class="line">(pureven) Creating SSH key...</span><br><span class="line">(pureven) Starting the VM...</span><br><span class="line">(pureven) Check network to re-create if needed...</span><br><span class="line">(pureven) Windows might ask for the permission to configure a dhcp server. Sometimes, such confirmation window is minimized in the taskbar.</span><br><span class="line">(pureven) Waiting for an IP...</span><br><span class="line">Waiting for machine to be running, this may take a few minutes...</span><br><span class="line">Detecting operating system of created instance...</span><br><span class="line">Waiting for SSH to be available...</span><br><span class="line">Detecting the provisioner...</span><br><span class="line">Provisioning with boot2docker...</span><br><span class="line">Copying certs to the local machine directory...</span><br><span class="line">Copying certs to the remote machine...</span><br><span class="line">Setting Docker configuration on the remote daemon...</span><br><span class="line"></span><br><span class="line">This machine has been allocated an IP address, but Docker Machine could not</span><br><span class="line">reach it successfully.</span><br><span class="line"></span><br><span class="line">SSH for the machine should still work, but connecting to exposed ports, such as</span><br><span class="line">the Docker daemon port (usually &lt;ip&gt;:2376), may not work properly.</span><br><span class="line"></span><br><span class="line">You may need to add the route manually, or use another related workaround.</span><br><span class="line"></span><br><span class="line">This could be due to a VPN, proxy, or host file configuration issue.</span><br><span class="line"></span><br><span class="line">You also might want to clear any VirtualBox host only interfaces you are not using.</span><br><span class="line">Checking connection to Docker...</span><br><span class="line">Docker is up and running!</span><br><span class="line">To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: H:\Docker Toolbox\docker-machine.exe env pureven</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>1.改变docker machine的存储位置之后会导致<code>Windows PowerShell</code>无法使用<code>docker-machine</code>,目前尚未解决！可使用<code>Git Bash</code>代替。</p>]]></content>
      
      
      <categories>
          
          <category> 开发者手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo-Next美化博客</title>
      <link href="/2019/11/04/%E4%BD%BF%E7%94%A8Hexo-Next%E7%BE%8E%E5%8C%96%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/11/04/%E4%BD%BF%E7%94%A8Hexo-Next%E7%BE%8E%E5%8C%96%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="指定站点名、作者以及站点描述"><a href="#指定站点名、作者以及站点描述" class="headerlink" title="指定站点名、作者以及站点描述"></a>指定站点名、作者以及站点描述</h3><p>编辑根目录下_config.yml文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Pureven Home</span><br><span class="line">subtitle: &apos;&apos;</span><br><span class="line">description: 不积跬步•无以至千里</span><br><span class="line">keywords:</span><br><span class="line">author: W E N C H A O</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: Asia/Shanghai</span><br></pre></td></tr></table></figure><p>其中<code>title</code>表示站点标题，<br><code>description</code>表示站点描述，<br><code>author</code>表示站点主人，<br><code>language</code>表示站点语言，这里通过themes/landscape/languages目录下的文件名来确认，这里使用中文即由<code>zh-CN</code>表示，<code>landscape</code>表示默认主题<br><code>timezone</code>表示站点时区，默认为当前电脑所在时区，可参考<span class="exturl" data-url="aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTGlzdF9vZl90el9kYXRhYmFzZV90aW1lX3pvbmVz" title="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">时区列表<i class="fa fa-external-link"></i></span>自行设定</p><h3 id="安装Next主题"><a href="#安装Next主题" class="headerlink" title="安装Next主题"></a>安装Next主题</h3><p>站点根目录下执行命令<code>git clone <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0" title="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next<i class="fa fa-external-link"></i></span> themes/next</code>进行安装</p><a id="more"></a><h3 id="配置Next主题"><a href="#配置Next主题" class="headerlink" title="配置Next主题"></a>配置Next主题</h3><p>编辑<code>themes/next/</code>目录下<code>_config.yml</code>文件，查找<code>scheme</code>,会发现有四种不同的<scheme></scheme></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure><p>这里注释掉<code>Muse</code>,启用Gemini,即博客现在使用的主题。</p><h3 id="首页、分类、归档、标签设置"><a href="#首页、分类、归档、标签设置" class="headerlink" title="首页、分类、归档、标签设置"></a>首页、分类、归档、标签设置</h3><p>1.编辑<code>themes/next/</code>目录下<code>_config.yml</code>文件，查找<code>menu</code>,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  #about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure><p><code>home</code>表示首页，<code>tags</code>表示标签，<code>categories</code>表示分类，<code>archives</code>表示归档<br>去掉前面的<code>#</code>即使用对应的功能，其中<code>||</code>之前的值是目标链接，之后的是分类页面的图标，图标名称来自于FontAwesome icon。若没有配置图标，默认会使用问号图标。</p><p>2.hexo根目录下执行命令<code>hexo new page "categories"</code>,之后会在source文件夹中生成一个categories文件夹，里面有一个<code>index.md</code>文件，编辑此文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: categories</span><br><span class="line">date: 2019-11-03 07:43:34</span><br><span class="line">type: &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>设置<code>type</code>为<code>"categories"</code>,<code>tags</code>,<code>archives</code>配置类似。</p><h3 id="设置站点创建时间"><a href="#设置站点创建时间" class="headerlink" title="设置站点创建时间"></a>设置站点创建时间</h3><p>打开next主题目录下<code>_config.yml</code>,查找<code>since</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">footer:</span><br><span class="line">  # Specify the date when the site was setup. If not defined, current year will be used.</span><br><span class="line">  since: 2019</span><br></pre></td></tr></table></figure><p>去掉<code>since</code>前的注释，如果不设置则显示当前年份。</p><h3 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h3><p>打开next主题目录下<code>_config.yml</code>,查找<code>avatar</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  # Replace the default image and set the url here.</span><br><span class="line">  url: /images/avatar.png</span><br><span class="line">  # If true, the avatar would be dispalyed in circle.</span><br><span class="line">  rounded: true</span><br><span class="line">  # If true, the avatar would be rotated with the cursor.</span><br><span class="line">  rotated: true</span><br></pre></td></tr></table></figure><p><code>url</code>表示图片位置，<br>若将图片放置<code>themes/next/source/images/</code>下，则url为/images/avater.png<br>若将图片放置hexo跟目录下的<code>source/uploads</code>目录下则url为<code>/uploads/avater.png</code><br><code>rounded</code>为true表示头像显示为圆形<br><code>rotated</code>为true表示鼠标移动到头像时否可旋转</p><h3 id="网站图标"><a href="#网站图标" class="headerlink" title="网站图标"></a>网站图标</h3><p>1.制作网站图标，参考图标素材网站：<span class="exturl" data-url="aHR0cHM6Ly93d3cuaWNvbmZvbnQuY24v" title="https://www.iconfont.cn/">iconfont<i class="fa fa-external-link"></i></span>,<span class="exturl" data-url="aHR0cHM6Ly93d3cuZWFzeWljb24ubmV0Lw==" title="https://www.easyicon.net/">easyicon<i class="fa fa-external-link"></i></span><br>2.打开next主题目录下<code>_config.yml</code>,查找<code>favicon</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: /images/avater_16px_16px.ico</span><br><span class="line">  medium: /images/avater_32px_32px.ico</span><br></pre></td></tr></table></figure><p>修改small和medium的路径为下载的图标路径</p><h3 id="背景动画"><a href="#背景动画" class="headerlink" title="背景动画"></a>背景动画</h3><p>1.进入<code>theme/next</code>目录，执行命令<code>git clone <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvdGhlbWUtbmV4dC10aHJlZQ==" title="https://github.com/theme-next/theme-next-three">https://github.com/theme-next/theme-next-three<i class="fa fa-external-link"></i></span> source/lib/three</code><br>2.打开<code>theme/next/config.yml</code>文件,找到<code>theme-next-three</code>将<code>three_waves</code>设置为true即表示显示<code>three_waves</code>背景</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># JavaScript 3D library.</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-three</span><br><span class="line">three:</span><br><span class="line">  enable: true</span><br><span class="line">  three_waves: true</span><br><span class="line">  canvas_lines: false</span><br><span class="line">  canvas_sphere: false</span><br></pre></td></tr></table></figure><h3 id="点击侧栏头像回到首页"><a href="#点击侧栏头像回到首页" class="headerlink" title="点击侧栏头像回到首页"></a>点击侧栏头像回到首页</h3><p>编辑<code>themes/next/layout/_partials/sidebar/site-overview.swig</code>文件，将<code>site-author-image</code>图片放入<code>链接</code>中,如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;/&quot;&gt;</span><br><span class="line">  &lt;img class=&quot;site-author-image&quot; itemprop=&quot;image&quot; alt=&quot;&#123;&#123; author &#125;&#125;&quot;</span><br><span class="line">    src=&quot;&#123;&#123; url_for(theme.avatar.url or theme.images + &apos;/avatar.gif&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">&lt;/a&gt;</span><br></pre></td></tr></table></figure><h3 id="字体设置"><a href="#字体设置" class="headerlink" title="字体设置"></a>字体设置</h3><p>编辑<code>themes/next/_config.yml</code>文件，找到<code>font:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">font:</span><br><span class="line">  enable: true</span><br><span class="line">  host: https://fonts.loli.net</span><br><span class="line">  global:</span><br><span class="line">    external: true</span><br><span class="line">    family: Noto Serif SC</span><br><span class="line">    size: 1</span><br></pre></td></tr></table></figure><h3 id="新建文章时，在相同目录下创建同名文件夹"><a href="#新建文章时，在相同目录下创建同名文件夹" class="headerlink" title="新建文章时，在相同目录下创建同名文件夹"></a>新建文章时，在相同目录下创建同名文件夹</h3><p>1.编辑hexo根目录下<code>_config.yml</code>文件，找到<code>post_asset_folder</code>,设置其属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>2.安装hexo-asset-image:<code>npm install hexo-asset-image --save</code><br>3.编辑<code>node_modules/hexo-asset-image/index.js</code>文件，将内容替换为下面代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&apos;use strict&apos;;</span><br><span class="line">var cheerio = require(&apos;cheerio&apos;);</span><br><span class="line"></span><br><span class="line">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span><br><span class="line">function getPosition(str, m, i) &#123;</span><br><span class="line">  return str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var version = String(hexo.version).split(&apos;.&apos;);</span><br><span class="line">hexo.extend.filter.register(&apos;after_post_render&apos;, function(data)&#123;</span><br><span class="line">  var config = hexo.config;</span><br><span class="line">  if(config.post_asset_folder)&#123;</span><br><span class="line">    var link = data.permalink;</span><br><span class="line">    if(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)</span><br><span class="line">      var beginPos = getPosition(link, &apos;/&apos;, 1) + 1;</span><br><span class="line">    else</span><br><span class="line">      var beginPos = getPosition(link, &apos;/&apos;, 3) + 1;</span><br><span class="line">    // In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span><br><span class="line">    var endPos = link.lastIndexOf(&apos;/&apos;) + 1;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    var toprocess = [&apos;excerpt&apos;, &apos;more&apos;, &apos;content&apos;];</span><br><span class="line">    for(var i = 0; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      var key = toprocess[i];</span><br><span class="line"></span><br><span class="line">      var $ = cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: false,</span><br><span class="line">        xmlMode: false,</span><br><span class="line">        lowerCaseTags: false,</span><br><span class="line">        decodeEntities: false</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(&apos;img&apos;).each(function()&#123;</span><br><span class="line">        if ($(this).attr(&apos;src&apos;))&#123;</span><br><span class="line">          // For windows style path, we replace &apos;\&apos; to &apos;/&apos;.</span><br><span class="line">          var src = $(this).attr(&apos;src&apos;).replace(&apos;\\&apos;, &apos;/&apos;);</span><br><span class="line">          if(!/http[s]*.*|\/\/.*/.test(src) &amp;&amp;</span><br><span class="line">              !/^\s*\//.test(src)) &#123;</span><br><span class="line">            // For &quot;about&quot; page, the first part of &quot;src&quot; can&apos;t be removed.</span><br><span class="line">            // In addition, to support multi-level local directory.</span><br><span class="line">            var linkArray = link.split(&apos;/&apos;).filter(function(elem)&#123;</span><br><span class="line">              return elem != &apos;&apos;;</span><br><span class="line">            &#125;);</span><br><span class="line">            var srcArray = src.split(&apos;/&apos;).filter(function(elem)&#123;</span><br><span class="line">              return elem != &apos;&apos; &amp;&amp; elem != &apos;.&apos;;</span><br><span class="line">            &#125;);</span><br><span class="line">            if(srcArray.length &gt; 1)</span><br><span class="line">              srcArray.shift();</span><br><span class="line">            src = srcArray.join(&apos;/&apos;);</span><br><span class="line">            $(this).attr(&apos;src&apos;, config.root + link + src);</span><br><span class="line">            console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">          console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span><br><span class="line">          console.info&amp;&amp;console.info($(this));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>安装完成后，如果新建文章时就会在<code>/source/_posts</code>目录下创建同名文件夹，好处是将需要插入文章的图片放入同名目录下，在文章中只需使用<code>![](image_name.png)</code>即可插入成功</p><h3 id="添加背景图片"><a href="#添加背景图片" class="headerlink" title="添加背景图片"></a>添加背景图片</h3><ol><li>编辑themes/next/_config.yml文件，找到<code>custom_file_path</code>，取消<code>style: source/_data/styles.styl</code>注释</li><li>站点根目录下新建文件<code>source/_data/style.styl</code>，内容如下:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">      background: url(https://source.unsplash.com/random/1600x900?wallpapers);//自己喜欢的图片地址</span><br><span class="line">      background-size: cover;</span><br><span class="line">      background-repeat: no-repeat;</span><br><span class="line">      background-attachment: fixed;</span><br><span class="line">      background-position: 50% 50%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 修改主体透明度</span><br><span class="line">.main-inner &#123;</span><br><span class="line">      background: #fff;</span><br><span class="line">      opacity: 0.8;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 修改菜单栏透明度</span><br><span class="line">.header-inner &#123;</span><br><span class="line">      opacity: 0.8;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="首页文章摘要设置"><a href="#首页文章摘要设置" class="headerlink" title="首页文章摘要设置"></a>首页文章摘要设置</h3><p>编辑<code>themes/next/_config.yml</code>文件，找到<code>excerpt</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">excerpt_description: true</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: true</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure><h3 id="閲讀全文按鈕設置弧度"><a href="#閲讀全文按鈕設置弧度" class="headerlink" title="閲讀全文按鈕設置弧度"></a>閲讀全文按鈕設置弧度</h3><p>編輯<code>themes/next/source/css/_variables/Pisces.styl</code>將<code>$btn-default-radius</code>置爲16</p><h3 id="文章浏览进度显示"><a href="#文章浏览进度显示" class="headerlink" title="文章浏览进度显示"></a>文章浏览进度显示</h3><p>编辑<code>themes/next/_config.yml</code>文件，找到<code>back2top</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">back2top:</span><br><span class="line">  enable: true</span><br><span class="line">  sidebar: true</span><br><span class="line">  scrollpercent: true</span><br></pre></td></tr></table></figure><h3 id="文章代码块一键复制功能"><a href="#文章代码块一键复制功能" class="headerlink" title="文章代码块一键复制功能"></a>文章代码块一键复制功能</h3><p>编辑<code>themes/next/_config.yml</code>文件，找到<code>codeblock</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">codeblock:</span><br><span class="line">  highlight_theme: normal</span><br><span class="line">  copy_button:</span><br><span class="line">    enable: true</span><br><span class="line">    show_result: true</span><br></pre></td></tr></table></figure><h3 id="文章末尾版权声明设置"><a href="#文章末尾版权声明设置" class="headerlink" title="文章末尾版权声明设置"></a>文章末尾版权声明设置</h3><p>编辑<code>themes/next/_config.yml</code>文件，找到<code>creative_commons</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: false</span><br><span class="line">  post: true</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure><h3 id="文章添加评论"><a href="#文章添加评论" class="headerlink" title="文章添加评论"></a>文章添加评论</h3><p>1.<span class="exturl" data-url="aHR0cHM6Ly9sZWFuY2xvdWQuY24vZGFzaGJvYXJkL2xvZ2luLmh0bWwjL3NpZ251cA==" title="https://leancloud.cn/dashboard/login.html#/signup">注册Leancloud<i class="fa fa-external-link"></i></span><br>2.注册完后添加应用app<br>3.进入应用app，点击设置在基本信息中你会发现<code>应用Keys</code>,点进去拿到<code>AppID</code>和<code>AppKey</code><br>4.编辑<code>themes/next/_config.yml</code>文件，找到<code>valine</code>,将<code>enable</code>置为true，将保存的<code>AppID</code>和<code>AppKey</code>分别赋值给<code>appid</code>和<code>appkey</code><br>5.进入Leancloud app应用的安全中心，将博客域名填入Web 安全域名，完工</p><h3 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h3><p>编辑<code>themes/next/_config.yml</code>文件，找到<code>local_search</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Local Search</span><br><span class="line"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><p>注释说的很明白，此功能依赖hexo-generator-searchdb,执行<code>npm install hexo-generator-search</code>进行安装</p><h3 id="鼠标点击♥形效果"><a href="#鼠标点击♥形效果" class="headerlink" title="鼠标点击♥形效果"></a>鼠标点击♥形效果</h3><p>1.在<code>themes/next/source/js</code>目录下创建<code>src</code>目录，进入<code>src</code>目录，创建<code>click.js</code>文件<br>2.将下列代码贴入<code>click.js</code>文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">!function(e,t,a)&#123;</span><br><span class="line">  function n()&#123;</span><br><span class="line">    c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;&quot; +</span><br><span class="line">      &quot;.heart:after,&quot; +</span><br><span class="line">      &quot;.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;&quot; +</span><br><span class="line">      &quot;.heart:after&#123;top: -5px;&#125;&quot; +</span><br><span class="line">      &quot;.heart:before&#123;left: -5px;&#125;&quot;</span><br><span class="line">    ),</span><br><span class="line">      o(),</span><br><span class="line">      r()</span><br><span class="line">  &#125;</span><br><span class="line">  function r()&#123;</span><br><span class="line">    for(var e=0;e&lt;d.length;e++)</span><br><span class="line">      d[e].alpha&lt;=0</span><br><span class="line">        ?(t.body.removeChild(d[e].el),d.splice(e,1))</span><br><span class="line">        :(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);</span><br><span class="line">    requestAnimationFrame(r)</span><br><span class="line">  &#125;</span><br><span class="line">  function o()&#123;</span><br><span class="line">    var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  function i(e)&#123;</span><br><span class="line">    var a=t.createElement(&quot;div&quot;);</span><br><span class="line">    a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)</span><br><span class="line">  &#125;</span><br><span class="line">  function c(e)&#123;</span><br><span class="line">    var a=t.createElement(&quot;style&quot;);</span><br><span class="line">    a.type=&quot;text/css&quot;;</span><br><span class="line">    try&#123;</span><br><span class="line">      a.appendChild(t.createTextNode(e))</span><br><span class="line">    &#125;catch(t)&#123;</span><br><span class="line">      a.styleSheet.cssText=e</span><br><span class="line">    &#125;</span><br><span class="line">    t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)</span><br><span class="line">  &#125;</span><br><span class="line">  function s()&#123;</span><br><span class="line">    return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  var d=[];</span><br><span class="line">  e.requestAnimationFrame=function()&#123;</span><br><span class="line">    return e.requestAnimationFrame</span><br><span class="line">      ||e.webkitRequestAnimationFrame</span><br><span class="line">      ||e.mozRequestAnimationFrame</span><br><span class="line">      ||e.oRequestAnimationFrame</span><br><span class="line">      ||e.msRequestAnimationFrame</span><br><span class="line">      ||function(e)&#123;setTimeout(e,1e3/60)&#125;</span><br><span class="line">  &#125;(),n()</span><br><span class="line">&#125;(window,document);</span><br></pre></td></tr></table></figure><p>3.编辑<code>themes/next/layout/_layout.swig</code>文件，末尾处添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/click.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="社交栏设置"><a href="#社交栏设置" class="headerlink" title="社交栏设置"></a>社交栏设置</h3><p>编辑<code>themes/next/_config.yml</code>文件，找到<code>social</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  #网站名：网址 || 图标名</span><br><span class="line">  GitHub: https://github.com/yourname || github</span><br><span class="line">  E-Mail: mailto:yourname@gmail.com || envelope</span><br></pre></td></tr></table></figure><h3 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h3><p>编辑<code>themes/next/_config.yml</code>文件，找到<code>Blog rolls</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">links:</span><br><span class="line">  百度: http://baidu.com/</span><br><span class="line">  开源中国: https://www.oschina.net/</span><br></pre></td></tr></table></figure><h3 id="补充功能"><a href="#补充功能" class="headerlink" title="补充功能"></a>补充功能</h3><h4 id="部分图片禁用fancybox"><a href="#部分图片禁用fancybox" class="headerlink" title="部分图片禁用fancybox"></a>部分图片禁用fancybox</h4><p>hexo默认使用fancybox插件，支持点击放大查看。如果不想图片被点击放大，可以使用下面的方法：</p><ol><li>找到<code>theme/next/source/js/utils.js</code>文件中<code>var $image = $(element);</code></li><li>在下一行添加代码<code>if ($(element).hasClass(&#39;nofancybox&#39;)) return;</code><br>如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wrapImageWithFancyBox: function() &#123;</span><br><span class="line">    document.querySelectorAll(&apos;.post-body :not(a) &gt; img, .post-body &gt; img&apos;).forEach(element =&gt; &#123;</span><br><span class="line">      var $image = $(element);</span><br><span class="line">      if ($(element).hasClass(&apos;nofancybox&apos;)) return; // 此后为添加行</span><br><span class="line">      var imageLink = $image.attr(&apos;data-src&apos;) || $image.attr(&apos;src&apos;);</span><br><span class="line">      …………</span><br></pre></td></tr></table></figure></li></ol><h4 id="设置背景图片"><a href="#设置背景图片" class="headerlink" title="设置背景图片"></a>设置背景图片</h4><ol><li>查看当前使用的是哪个next主题，比如这里用的是<code>Gemini</code></li><li>找到<code>themes/next/source/css/_schemes/Gemini/index.styl</code>文件，末尾添加如下代码：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(/images/school.png); <span class="comment">/* school.png 为自定义的图片 */</span></span><br><span class="line">    <span class="attribute">background-attachment</span>: fixed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="内容板块透明设置"><a href="#内容板块透明设置" class="headerlink" title="内容板块透明设置"></a>内容板块透明设置</h4><ol><li>查看当前使用的是哪个next主题，比如这里用的是<code>Gemini</code></li><li>找到<code>themes/next/source/css/_schemes/Gemini/index.styl</code>文件，修改如下代码：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content-wrap</span> &#123;</span><br><span class="line">  background: rgba(255,255,255,0.5); //0.5是透明度</span><br><span class="line">  <span class="selector-tag">box-shadow</span>: <span class="selector-tag">initial</span>;</span><br><span class="line">  <span class="selector-tag">padding</span>: <span class="selector-tag">initial</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.post-block</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(255,255,255,0.1);</span><br><span class="line">  <span class="attribute">border-radius</span>: $border-radius-inner;</span><br><span class="line">  <span class="attribute">box-shadow</span>: $box-shadow-inner;</span><br><span class="line">  <span class="attribute">padding</span>: $content-desktop-padding;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+<span class="selector-tag">tablet</span>() &#123;</span><br><span class="line">  // Posts in blocks.</span><br><span class="line">  <span class="selector-class">.content-wrap</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: $content-tablet-padding;</span><br><span class="line">    background: rgba(255,255,255,0.5); //0.5是透明度</span><br><span class="line">  &#125;</span><br><span class="line">  ………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="灵活设置摘要"><a href="#灵活设置摘要" class="headerlink" title="灵活设置摘要"></a>灵活设置摘要</h4><p>只需在文章任何地方加入代码<code>&lt;!-- more --&gt;</code>，之后的将被屏蔽调，之前的内容作为摘要出现。</p><h4 id="设置行内代码块颜色"><a href="#设置行内代码块颜色" class="headerlink" title="设置行内代码块颜色"></a>设置行内代码块颜色</h4><p>找到<code>/themes/next/source/css/_common/scaffolding/highlight/highlight.styl</code>文件，定位到<code>code</code>定义处，修改为：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  background: #5cb85c; // $code-background;</span><br><span class="line">  border-radius: $code-border-radius;</span><br><span class="line">  color: #891717; // $code-foreground;</span><br><span class="line">  <span class="selector-tag">padding</span>: 2<span class="selector-tag">px</span> 4<span class="selector-tag">px</span>;</span><br><span class="line">  <span class="selector-tag">word-wrap</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="代码块主题"><a href="#代码块主题" class="headerlink" title="代码块主题"></a>代码块主题</h4><p>编辑<code>themes/next/_config.yml</code>文件，找到<code>codeblock</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">highlight_theme: night</span><br></pre></td></tr></table></figure><h4 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h4><p>编辑<code>themes/next/_config.yml</code>文件，找到<code>SEO Settings</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 整合重复的页面，在你的hexo中设置一个权威标签，可以优化博客的seo</span></span><br><span class="line"><span class="comment"># 请参阅：https://support.google.com/webmasters/answer/139066</span></span><br><span class="line"><span class="comment"># 提示：打开此选项之前，请确保在网站配置文件中设置了URL（例如：url:http://yourdomain.com）</span></span><br><span class="line"><span class="attr">canonical:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改网站副标题（网站描述）和所有文章/页面标题的结构，以优化SEO</span></span><br><span class="line"><span class="attr">seo:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果为true，则会在标签页显示副标题，副标题在网站配置文件中设置</span></span><br><span class="line"><span class="comment"># subtitle: Subtitle</span></span><br><span class="line"><span class="attr">index_with_subtitle:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动添加带有base64加密和解密的外部URL</span></span><br><span class="line"><span class="attr">exturl:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="解决某个分类标签显示404"><a href="#解决某个分类标签显示404" class="headerlink" title="解决某个分类标签显示404"></a>解决某个分类标签显示404</h4><p>在hexo根目录下创建批处理文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">@echo</span> <span class="string">off</span></span><br><span class="line"><span class="string">::</span> <span class="string">删除</span> <span class="string">.deploy_git</span> <span class="string">public</span> <span class="string">目录</span></span><br><span class="line"><span class="string">rd</span> <span class="string">/s</span> <span class="string">/q</span> <span class="string">.deploy_git</span> <span class="string">public</span></span><br><span class="line"><span class="string">del</span> <span class="string">db.json</span></span><br><span class="line"><span class="string">del</span> <span class="string">debug.log</span></span><br><span class="line"><span class="string">exit</span></span><br></pre></td></tr></table></figure><p>然后重新<code>hexo g</code></p><hr><h3 id="参考链接-感谢各位"><a href="#参考链接-感谢各位" class="headerlink" title="参考链接 感谢各位"></a>参考链接 感谢各位</h3><p><span class="exturl" data-url="aHR0cHM6Ly9ibHVlbHp5LmNvbS9hcnRpY2xlcy91c2VfdmFsaW5lX2Zvcl95b3VyX2Jsb2cuaHRtbA==" title="https://bluelzy.com/articles/use_valine_for_your_blog.html">BlueLzy的博客<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL2V0ZXJuYWx6dHR6LmNvbS9oZXhvLW5leHQuaHRtbA==" title="http://eternalzttz.com/hexo-next.html">Eternal_zttz的博客<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTM0NTM4NC9hcnRpY2xlL2RldGFpbHMvODA3ODUzNzM=" title="https://blog.csdn.net/weixin_39345384/article/details/80785373">Hunter1023的博客<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmp5dXN1bi5jb20vY29udGVudHMvMjAxOTAzMjAxMTIyMzguaHRtbA==" title="https://blog.jyusun.com/contents/20190320112238.html">evansun的博客<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo Next搭建个人博客</title>
      <link href="/2019/11/03/%E4%BD%BF%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/11/03/%E4%BD%BF%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="创建GitHub-Pages"><a href="#创建GitHub-Pages" class="headerlink" title="创建GitHub Pages"></a>创建GitHub Pages</h1><h2 id="注册GitHub"><a href="#注册GitHub" class="headerlink" title="注册GitHub"></a>注册GitHub</h2><p>如果没有GitHub账号，需要注册<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLw==" title="https://github.com/">GitHub官网<i class="fa fa-external-link"></i></span></p><h2 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h2><p>要将项目放在 GitHub 上，您需要创建一个仓库来存放它。<span class="exturl" data-url="aHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vY24vZ2l0aHViL2dldHRpbmctc3RhcnRlZC13aXRoLWdpdGh1Yi9jcmVhdGUtYS1yZXBv" title="https://help.github.com/cn/github/getting-started-with-github/create-a-repo">官网给出新建仓库的方法<i class="fa fa-external-link"></i></span></p><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>1.现在有很多平台可以注册域名，我是在阿里云注册的域名pureven.cc，这里以阿里云为例，添加解析记录：</p><p><img src="/2019/11/03/%E4%BD%BF%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/20191103221404.png" alt></p><a id="more"></a><p>2.申请ssl证书</p><h2 id="创建GitHub-Pages-1"><a href="#创建GitHub-Pages-1" class="headerlink" title="创建GitHub Pages"></a>创建GitHub Pages</h2><p>使用Jekyll创建GitHub Pages网站<br>您可以使用Jekyll在新的或现有存储库中创建GitHub Pages站点。<span class="exturl" data-url="aHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vY24vZ2l0aHViL3dvcmtpbmctd2l0aC1naXRodWItcGFnZXMvY3JlYXRpbmctYS1naXRodWItcGFnZXMtc2l0ZS13aXRoLWpla3lsbA==" title="https://help.github.com/cn/github/working-with-github-pages/creating-a-github-pages-site-with-jekyll">官网给出的方法是使用Jekyll创建GitHub Pages网站<i class="fa fa-external-link"></i></span></p><p>或根据如下流程创建：<br>1.点击New respository</p><p><img src="/2019/11/03/%E4%BD%BF%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/20191103190931.png" alt></p><p>Repository name 必须是 you_name.github.io</p><p><img src="/2019/11/03/%E4%BD%BF%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/20191103201747.png" alt></p><p>点击 “Create respository”,完成创建。 然后点击Settings，向下拉到最后有个GitHub Pages，Custom domain填写已注册的域名，会变成下面这样：</p><p><img src="/2019/11/03/%E4%BD%BF%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/20191103203159.png" alt></p><p>到这里GitHub Pages设置完成，如何注册并解析域名，请<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMxMzc3MTQx" title="https://www.zhihu.com/question/31377141">参考这里<i class="fa fa-external-link"></i></span></p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>下载并安装Node.js <span class="exturl" data-url="aHR0cDovL25vZGVqcy5jbi9kb3dubG9hZC8=" title="http://nodejs.cn/download/">官网下载地址<i class="fa fa-external-link"></i></span> </p><p>安装Hexo可参考<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvaW5kZXguaHRtbCMlRTUlQUUlODklRTglQTMlODU=" title="https://hexo.io/zh-cn/docs/index.html#%E5%AE%89%E8%A3%85">官网<i class="fa fa-external-link"></i></span><br>或根据如下步骤：</p><p>1.新建用于Hexo项目的目录，比如pureven，然后执行命令<code>npm i hexo-cli</code>进行安装</p><p>2.安装完成后，先通过<code>hexo init</code>初始化hexo,然后通过<code>hexo g</code>生成静态网页，通过<code>hexo s --debug</code>开启服务，<br>然后浏览器输入localhost:4000即可查看默认样式的博客啦。</p><p><img src="/2019/11/03/%E4%BD%BF%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/20191103205806.png" alt></p><p>其他命令可参加<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvY29tbWFuZHM=" title="https://hexo.io/zh-cn/docs/commands">官网命令说明<i class="fa fa-external-link"></i></span></p><h1 id="本地搭建博客"><a href="#本地搭建博客" class="headerlink" title="本地搭建博客"></a>本地搭建博客</h1><p>##连接GitHub<br>1.右键选择git bash here, git窗口中输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;your name&quot;</span><br><span class="line">git config --global user.email &quot;your email&quot;</span><br></pre></td></tr></table></figure><p>然后通过<code>ssh-keygen -t rsa -C "your email"</code>生成密钥SSH key，<br>执行命令<code>cat ~/.ssh/id_rsa.pub</code>，将输出的内容保存到临时文件。</p><p>2.打开GitHub，点击头像下的settings，然后点击SSH and GPG keys，新建一个SSH，名字随意<br>将临时文件中的内容复制到框中，点击保存。</p><p>3.在Bash窗口里输入<code>ssh -T <span class="exturl" data-url="bWFpbHRvOmdpdEBnaXRodWIuY29t" title="mailto:git@github.com">git@github.com<i class="fa fa-external-link"></i></span></code>，如出现下图类似内容则说明成功！</p><p><img src="/2019/11/03/%E4%BD%BF%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/20191103211605.png" alt></p><p>4.进入hexo项目目录，这里是pureven，找到_config.yml文件，设置如下信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &apos;git&apos;</span><br><span class="line">  repository: https://github.com/pureven/pureven_blog.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>到这里完成本地到GitHub的连接</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
