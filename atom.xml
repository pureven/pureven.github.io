<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pureven</title>
  
  <subtitle>行者无疆</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://pureven.cc/"/>
  <updated>2020-04-16T14:21:04.558Z</updated>
  <id>https://pureven.cc/</id>
  
  <author>
    <name>W E N C H A O</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP获取系统详细信息-CPU、内存、磁盘、负载</title>
    <link href="https://pureven.cc/2020/04/16/php-get-system-info/"/>
    <id>https://pureven.cc/2020/04/16/php-get-system-info/</id>
    <published>2020-04-16T06:39:16.000Z</published>
    <updated>2020-04-16T14:21:04.558Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>本文使用PHP获取服务器的状态，包括负载、CPU、磁盘和内存的使用率等信息，另外还支持检查进程是否存在，目前支持Windows和Linux两种平台下使用。</p><a id="more"></a><hr><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">System_info</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $is_win = <span class="keyword">false</span>;<span class="comment">// 是否是Windows操作系统</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果是Linux操作系统则自动获取CPU/内存的使用率</span></span><br><span class="line">    <span class="keyword">protected</span> $lin_cpu_usage = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">protected</span> $lin_mem_usage = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;is_win = is_running_on_windows();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Linux操作系统自动获取CPU(内存)使用率</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_lin_status</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $fp = popen(<span class="string">'top -b -n 2 | grep -E "(Cpu\(s\))|(KiB Mem)"'</span>, <span class="string">"r"</span>);</span><br><span class="line">        $rs = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">while</span> (!feof($fp)) &#123;</span><br><span class="line">            $rs .= fread($fp, <span class="number">1024</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        pclose($fp);</span><br><span class="line"></span><br><span class="line">        $sys_info = explode(<span class="string">'\n'</span>, $rs);</span><br><span class="line">        $cpu_info = explode(<span class="string">','</span>, $sys_info[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;lin_cpu_usage = trim(trim($cpu_info[<span class="number">0</span>], <span class="string">'%Cpu(s): '</span>), <span class="string">'us'</span>);</span><br><span class="line"></span><br><span class="line">        $mem_info = explode(<span class="string">","</span>, $sys_info[<span class="number">3</span>]); <span class="comment">//内存占有量 数组</span></span><br><span class="line">        $mem_total = trim(trim($mem_info[<span class="number">0</span>], <span class="string">'KiB Mem : '</span>), <span class="string">' total'</span>);</span><br><span class="line">        $mem_used = trim(trim($mem_info[<span class="number">2</span>], <span class="string">'used'</span>));</span><br><span class="line">        <span class="keyword">$this</span>-&gt;lin_mem_usage = round(<span class="number">100</span> * intval($mem_used) /     intval($mem_total), <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断指定路径下指定文件是否存在，不存在则创建，Windows环境下使用</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $file_name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_file_path</span><span class="params">($file_name, $content)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">         $path = dirname(<span class="keyword">__FILE__</span>) . <span class="string">"/&#123;$file_name&#125;"</span>;</span><br><span class="line">         <span class="keyword">if</span> (!file_exists($path)) &#123;</span><br><span class="line">             file_put_contents($path, $content);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> $path;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string 返回cpu使用率函数文件路径， Windows环境下使用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_cpu_usage_vbs_path</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get_file_path(</span><br><span class="line">            <span class="string">'cpu_usage.vbs'</span>,</span><br><span class="line">            <span class="string">"On Error Resume Next</span></span><br><span class="line"><span class="string">    Set objProc = GetObject(\"winmgmts:\\\\.\\root\cimv2:win32_processor='cpu0'\")</span></span><br><span class="line"><span class="string">    WScript.Echo(objProc.LoadPercentage)"</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string 返回总内存及可用物理内存函数文件路径， Windows环境下使用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_mem_usage_path</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get_file_path(</span><br><span class="line">            <span class="string">'memory_usage.vbs'</span>,</span><br><span class="line">            <span class="string">"On Error Resume Next</span></span><br><span class="line"><span class="string">    Set objWMI = GetObject(\"winmgmts:\\\\.\\root\cimv2\")</span></span><br><span class="line"><span class="string">    Set colOS = objWMI.InstancesOf(\"Win32_OperatingSystem\")</span></span><br><span class="line"><span class="string">    For Each objOS in colOS</span></span><br><span class="line"><span class="string">     Wscript.Echo(\"&#123;\"\"TotalVisibleMemorySize\"\":\" &amp; objOS.TotalVisibleMemorySize &amp; \",\"\"FreePhysicalMemory\"\":\" &amp; objOS.FreePhysicalMemory &amp; \"&#125;\")</span></span><br><span class="line"><span class="string">    Next"</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed cpu usage， Windows环境下使用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_cpu_usage</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;is_win) &#123;</span><br><span class="line">            $path = <span class="keyword">$this</span>-&gt;get_cpu_usage_vbs_path();</span><br><span class="line">            $retval = <span class="keyword">$this</span>-&gt;exec(<span class="string">"cscript -nologo \"&#123;$path&#125;\""</span>, $usage);</span><br><span class="line">            <span class="keyword">return</span> intval($usage[<span class="number">0</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            is_null(<span class="keyword">$this</span>-&gt;lin_cpu_usage) <span class="keyword">and</span> <span class="keyword">$this</span>-&gt;get_lin_status();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;lin_cpu_usage;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed memory usage</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_mem_usage</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;is_win) &#123;</span><br><span class="line">            $path = <span class="keyword">$this</span>-&gt;get_mem_usage_path();</span><br><span class="line">            $retval = <span class="keyword">$this</span>-&gt;exec(<span class="string">"cscript -nologo \"$path\""</span>, $usage);</span><br><span class="line">            $memory = json_decode($usage[<span class="number">0</span>], <span class="keyword">true</span>);</span><br><span class="line">            <span class="keyword">return</span> Round((($memory[<span class="string">'TotalVisibleMemorySize'</span>] - $memory[<span class="string">'FreePhysicalMemory'</span>]) / $memory[<span class="string">'TotalVisibleMemorySize'</span>]) * <span class="number">100</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            is_null(<span class="keyword">$this</span>-&gt;lin_mem_usage) <span class="keyword">and</span> <span class="keyword">$this</span>-&gt;get_lin_status();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;lin_mem_usage;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array 磁盘使用率</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_hd_usage</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $storage = [];</span><br><span class="line">        $sys_hd = <span class="keyword">$this</span>-&gt;is_win ? <span class="string">'C:'</span> : <span class="string">'/'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 系统盘C: 或 linux下的/</span></span><br><span class="line">        $hdc_free = disk_free_space($sys_hd);</span><br><span class="line">        $hdc_total = disk_total_space($sys_hd);</span><br><span class="line">        array_push($storage, [<span class="string">'label'</span> =&gt; $sys_hd, <span class="string">'value'</span> =&gt; floor(<span class="number">100</span> * $hdc_free / $hdc_total) . <span class="string">'%'</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $storage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed|null 负载</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_load</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $load = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;is_win) &#123;</span><br><span class="line">            $cmd = <span class="string">"WMIC CPU GET LOADPERCENTAGE /ALL"</span>;</span><br><span class="line">            @exec($cmd, $output);<span class="comment">// exp: LoadPercentage 9 4</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ($output)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">foreach</span> ($output <span class="keyword">as</span> $line)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> ($line &amp;&amp; preg_match(<span class="string">"/^[0-9]+\$/"</span>, $line))</span><br><span class="line">                    &#123;</span><br><span class="line">                        $load = $line;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $sys_load = sys_getloadavg();</span><br><span class="line">            $load = $sys_load[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $load;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 检查指定进程是否存在 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check_if_process_exists</span><span class="params">($process_name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $output = <span class="keyword">null</span>;<span class="comment">// init output</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// $process_name: Nginx QQ </span></span><br><span class="line">        $cmd = <span class="keyword">$this</span>-&gt;is_win ? <span class="string">"TASKLIST | FINDSTR &#123;$process_name&#125;"</span> : <span class="string">"ps -ax | grep &#123;$process_name&#125;"</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;is_win) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;exec($cmd, $output);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">empty</span>($output[<span class="number">0</span>])) &#123;</span><br><span class="line">                <span class="keyword">return</span> ON;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;exec($cmd, $output);</span><br><span class="line">            <span class="keyword">if</span> (count($output) &gt;= <span class="number">2</span>) &#123;<span class="comment">// ps查看进程最少会有两个，这里包含查询命令这一条</span></span><br><span class="line">                <span class="keyword">return</span> ON;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> OFF;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 重新实现exec */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">exec</span><span class="params">($cmd, &amp;$out = null)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $desc = <span class="keyword">array</span>(</span><br><span class="line">            <span class="number">1</span> =&gt; <span class="keyword">array</span>(<span class="string">'pipe'</span>, <span class="string">'w'</span>),</span><br><span class="line">            <span class="number">2</span> =&gt; <span class="keyword">array</span>(<span class="string">'pipe'</span>, <span class="string">'w'</span>)</span><br><span class="line">        );</span><br><span class="line">        $proc = proc_open($cmd, $desc, $pipes);</span><br><span class="line"></span><br><span class="line">        $ret = stream_get_contents($pipes[<span class="number">1</span>]);</span><br><span class="line">        $err = stream_get_contents($pipes[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">        fclose($pipes[<span class="number">1</span>]);</span><br><span class="line">        fclose($pipes[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">        $ret_val = proc_close($proc);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (func_num_args() == <span class="number">2</span>) &#123;</span><br><span class="line">            $out = <span class="keyword">array</span>($ret, $err);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $ret_val;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 检查系统类型：True: Windows   false:Linux */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">is_running_on_windows</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (strtoupper(substr(PHP_OS, <span class="number">0</span>, <span class="number">3</span>)) === <span class="string">'WIN'</span></span><br><span class="line">            || substr(php_uname(), <span class="number">0</span>, <span class="number">7</span>) === <span class="string">'Windows'</span></span><br><span class="line">            || DIRECTORY_SEPARATOR == <span class="string">'\\'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$sys = <span class="keyword">new</span> System_info();</span><br><span class="line">$load = $sys-&gt;get_load() . <span class="string">'%'</span>;<span class="comment">// 当前负载</span></span><br><span class="line">$cpu_usage = $sys-&gt;get_cpu_usage() . <span class="string">'%'</span>;<span class="comment">// CPU使用率</span></span><br><span class="line">$mem_usage = $sys-&gt;get_mem_usage() . <span class="string">'%'</span>;<span class="comment">// 内存使用率</span></span><br><span class="line">$storage  =  $sys-&gt;get_hd_usage(); <span class="comment">// 存储</span></span><br><span class="line">$nginx_exists = $sys-&gt;check_if_process_exists(<span class="string">'Nginx'</span>);<span class="comment">// 检查Nginx进程是否存在</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;本文使用PHP获取服务器的状态，包括负载、CPU、磁盘和内存的使用率等信息，另外还支持检查进程是否存在，目前支持Windows和Linux两种平台下使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>CodeIgniter实现HMVC模块扩展</title>
    <link href="https://pureven.cc/2020/03/28/codeigniter-hmvc/"/>
    <id>https://pureven.cc/2020/03/28/codeigniter-hmvc/</id>
    <published>2020-03-28T05:48:07.000Z</published>
    <updated>2020-04-16T14:21:59.959Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>模块扩展让CodeIgniter框架模块化。模块是一组独立的组件（通常有模型、控制器和视图），它们被分类在应用模块的子文件夹中，并且能够直接拖到其他的CodeIgniter应用中。</p><p>HMVC的意思是分层模型视图控制器。</p><p>模块控制器能够作为普通的控制器或者HMVC控制器使用，它们也能够被当做小部件帮助你开发一部分视图。</p><a id="more"></a><hr><h4 id="模块扩展安装"><a href="#模块扩展安装" class="headerlink" title="模块扩展安装"></a>模块扩展安装</h4><ol><li>安装CI框架，下载地址:<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JjaXQtY2kvQ29kZUlnbml0ZXIvYXJjaGl2ZS8zLjEuMTEudGFyLmd6" title="https://github.com/bcit-ci/CodeIgniter/archive/3.1.11.tar.gz">CodeIgniter-3.1.11<i class="fa fa-external-link"></i></span>。</li><li>配置好CI环境，访问URL <code>/index.php/welcome</code>可以看到欢迎界面说明正常。</li><li>下载<span class="exturl" data-url="aHR0cHM6Ly9iaXRidWNrZXQub3JnL3dpcmVkZXNpZ256L2NvZGVpZ25pdGVyLW1vZHVsYXItZXh0ZW5zaW9ucy1obXZjL2dldC9mNzdhM2ZjOWE2ZmQuemlw" title="https://bitbucket.org/wiredesignz/codeigniter-modular-extensions-hmvc/get/f77a3fc9a6fd.zip">模块扩展源码<i class="fa fa-external-link"></i></span>并将模块扩展的third_party文件拖入application/third_party目录。</li><li>修改<code>third_party/MX/Loader.php</code>文件，有个bug需要处理下，要不然会报错，<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3B1cmV2ZW4vQ29kZUlnbml0ZXItSE1WQy9jb21taXQvY2U0ZjY2ZTIyOGU2MTc4ODViZjE3MzU4MDQ1ZDZjM2VhYmEyMDY5MA==" title="https://github.com/pureven/CodeIgniter-HMVC/commit/ce4f66e228e617885bf17358045d6c3eaba20690">参考连接<i class="fa fa-external-link"></i></span>。 </li><li>再次访问URL <code>/index.php/welcome</code>看到欢迎界面。</li><li>创造模块目录结构<code>application/modules/welcome/controllers</code>。</li><li>将控制器文件<strong>application/controllers/welcome.php</strong>移动至<strong>application/modules/welcome/controllers/welcome.php</strong>。</li><li>访问URL <code>/index.php/welcome</code>看到欢迎界面。</li><li>创建目录<code>application/modules/welcome/views</code>。</li><li>将视图文件<font color="#891717">pplication/views/welcome_message.php</font>移动至<font color="#891717">application/modules/welcome/views/welcome_message.php</font>。</li><li>访问URL <code>/index.php/welcome</code>看到欢迎界面</li></ol><p>配置完毕。</p><hr><h4 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h4><p>Q: 什么是模块？我为什么要使用他们？</p><p>A: 参见维基百科：</p><ul><li><span class="exturl" data-url="aHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Nb2R1bGU=" title="http://en.wikipedia.org/wiki/Module">http://en.wikipedia.org/wiki/Module)<i class="fa fa-external-link"></i></span>)</li><li><span class="exturl" data-url="aHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Nb2R1bGFyX3Byb2dyYW1taW5n" title="http://en.wikipedia.org/wiki/Modular_programming">http://en.wikipedia.org/wiki/Modular_programming)<i class="fa fa-external-link"></i></span>)</li><li><span class="exturl" data-url="aHR0cDovL2Jsb2cuZmVkZWNhcmcuY29tLzIwMDgvMDYvMjgvYS1tb2R1bGFyLWFwcHJvYWNoLXRvLXdlYi1kZXZlbG9wbWVudA==" title="http://blog.fedecarg.com/2008/06/28/a-modular-approach-to-web-development">http://blog.fedecarg.com/2008/06/28/a-modular-approach-to-web-development)<i class="fa fa-external-link"></i></span>)</li></ul><p>Q: 什么是模块化HMVC，为什么我应该使用它？</p><p>A: 模块化 HMVC = <code>Multiple MVC triads</code></p><p>当你需要载入视图和视图中的数据的时候，这将是非常有用的。考虑添加一个购物车到一个页面中，这个购物车需要它自己的控制器，这个控制器要调用一个模型来获取购物车数据。然后控制器需要将数据载入到视图中。因此，和在主控制器处理这个页面和购物车不同，购物车MVC能够直接在页面中加载。这个主控制器不需要知道购物车MVC，并且和购物车MVC是完全隔离的。</p><p>在CI框架中，我们不能够在一次请求中调用多个控制器。因此，为了实现HMVC，我们不得不模拟控制器的行为。这用类库可以做到或者使用这个“模块扩展HMVC”。</p><p>使用一个类库和一个“模块扩展HMVC”类不同之处在于：</p><ol><li>不需要在HMVC中获取和使用CI实例</li><li>HMVC类存储在modules目录中而不是类库目录中</li></ol><p>Q: 模块扩展HMVC和模块分离是一样的么？</p><p>A: 是，也可以说不是。和模块分离类似，模块扩展使得模块变得“可便携的”。例如，如果你有一个漂亮的自包含MVC文件集，你能够将你的MVC文件加入到另一个项目中，仅仅通过复制一个目录就行了。所有文件都在同一个地方而不是散布在model、view 和controller文件夹。</p><p>模块化HMVC意味着模块化MVC triads。 模块分离和模块扩展让相关的控制器、模型、类库、视图等等文件能够被打包在模块子目录中，并且能够像一个小型应用那样使用。但是，模块扩展更进一步，它允许这些模块互相通信。你能够不用通过与http交互得到控制器的输出内容。</p><hr><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>所有的控制器都包含一个<code>$autoload</code>类变量，这个类变量拥有一个运行时优先载入的条目（item）数组。这个功能能够和 <code>module/config/autoload.php</code>一起使用，然而，使用<code>$autoload</code>变量仅仅在对应的控制器中起作用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Xyz</span> <span class="keyword">extends</span> <span class="title">MX_Controller</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    $autoload = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'helper'</span>    =&gt; <span class="keyword">array</span>(<span class="string">'url'</span>, <span class="string">'form'</span>),</span><br><span class="line">        <span class="string">'libraries'</span> =&gt; <span class="keyword">array</span>(<span class="string">'email'</span>),</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Modules::$locations</code>可以在<code>application/config.php</code>文件中设置，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$config[<span class="string">'modules_locations'</span>] = <span class="keyword">array</span>(</span><br><span class="line">    APPPATH.<span class="string">'modules/'</span> =&gt; <span class="string">'../modules/'</span>,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><code>Modules::run()</code>输出将会被缓存，因此从任何从控制器返回或者输出的数据将会被捕获并且返回到调用者。特别的，<code>$this-&gt;load-&gt;view()</code>能够在一个普通的控制器中按照你所想的那样使用，而不用返回任何值。</p><p>控制器能够作为别的控制器的类变量载入，使用语句<code>$this-&gt;load-&gt;module(&#39;module/controller&#39;);</code>或者在控制器的名称和模块的名称一致的时候，使用<code>$this-&gt;load-&gt;module(&#39;module&#39;);</code></p><p>任何加载的模块都可以当做一个类库使用，例如<code>$this-&gt;controller-&gt;method()</code>，但是加载的模块拥有自己独立与调用它的类的模块和类库。</p><p>所有模块控制器都能够通过URL（ <code>module/controller/method</code>或者模块名和控制器名称一致的时候使用<code>module/method</code>）访问到。如果你添加了<code>_remap()</code>方法到你的控制器中，你能够阻止不需要的访问然后重定向或者发送一个错误，这些随你。</p><hr><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>要使用HMVC功能，例如<code>Modules::run()</code>，控制器必须继承<code>MX_Controller</code>类。</p><p>仅仅使用分开的模块而不是HMVC功能，控制器可以继承CodeIgniter类。</p><p>你必须在控制器中使用PHP5样式的构造函数，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Xyz</span> <span class="keyword">extends</span> <span class="title">MX_Controller</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::__construct();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造函数并不是必须的，除非你想在控制器创建的时候载入或者处理什么东西。</p><p>所有的<code>MY_extension</code>类库应该包含（需要）他们同等的MX类库文件，并且继承它们同等的<code>MX_class</code>。</p><p>每一个模块可以包含一个<code>config/routes.php</code>文件，在文件中定义该模块的路由和默认控制器：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$route[<span class="string">'module_name'</span>] = <span class="string">'controller_name'</span>;</span><br></pre></td></tr></table></figure><p>控制器可以从<code>application/controllers</code>子目录中载入。</p><p>控制器也可以从<code>module/controllers</code>子目录中载入。</p><p>资源能够能够跨控制器载入，例如： <code>$this-&gt;load-&gt;model(&#39;module/model&#39;);</code></p><p><code>Modules::run()</code>被设计成返回部分视图，并且它将会从控制器返回缓存输出（一个视图）。使用<code>modules::run</code>语法是一个URI类型的片段字符串和无限的变量。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** module and controller names are different, you must include the method name also, including 'index' **/</span></span><br><span class="line">modules::run(<span class="string">'module/controller/method'</span>, $params, $...);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** module and controller names are the same but the method is not 'index' **/</span></span><br><span class="line">modules::run(<span class="string">'module/method'</span>, $params, $...);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** module and controller names are the same and the method is 'index' **/</span></span><br><span class="line">modules::run(<span class="string">'module'</span>, $params, $...);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Parameters are optional, You may pass any number of parameters. **/</span></span><br></pre></td></tr></table></figure><p>在控制器里边调用一个模块控制器，你可以使用<code>$this-&gt;load-&gt;module()</code>或者<code>Modules::load()</code>，PHP5的方法链也可以用在任何被MX加载的对象中，例如： <code>$this-&gt;load-&gt;library(‘validation’)-&gt;run()</code>。</p><p>载入模块的语言文件推荐使用载入方法，该方法将会传递一个激活的模块名称到一个语言实例，例如：<code>$this-&gt;load-&gt;language(&#39;language_file&#39;);</code></p><p>PHP5的spl_autoload特性允许你自由地扩展你的控制器、模块和来自<code>application/core</code>或者<code>application/libraries</code>基本类的的类库，不需要考虑显式包含他们。</p><p>类库加载器也被更新从而适应一些CI的特性，例如：类库别名能够和模块别名一样的方式接受，并且从模块配置目录中载入配置文件作为类库的参数（例如：<code>form_validation.php</code>），这项特性也被加了进来。</p><p><code>$config = $this-&gt;load-&gt;config(‘config_file’)</code>，返回已加载的数组到变量中。</p><p>模块和类库也能够从他们各自的应用目录的子目录中加载。</p><p>在用MX使用表单验证时，你将需要继承<code>CI_Form_validation</code>类，如下所示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** application/libraries/MY_Form_validation **/</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MY_Form_validation</span> <span class="keyword">extends</span> <span class="title">CI_Form_validation</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $CI;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在将目前的控制器作为$CI变量赋值给表单验证类库之前。这将让你的回调函数正常工作。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Xyz</span> <span class="keyword">extends</span> <span class="title">MX_Controller</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::__construct();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;load-&gt;library(<span class="string">'form_validation'</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;form_validation-&gt;CI =&amp; <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAwNDEwNTU2Mw==" title="https://segmentfault.com/a/1190000004105563">【译】CodeIgniter HMVC模块扩展使用文档<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3B1cmV2ZW4vQ29kZUlnbml0ZXItSE1WQw==" title="https://github.com/pureven/CodeIgniter-HMVC">源码分析<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;模块扩展让CodeIgniter框架模块化。模块是一组独立的组件（通常有模型、控制器和视图），它们被分类在应用模块的子文件夹中，并且能够直接拖到其他的CodeIgniter应用中。&lt;/p&gt;
&lt;p&gt;HMVC的意思是分层模型视图控制器。&lt;/p&gt;
&lt;p&gt;模块控制器能够作为普通的控制器或者HMVC控制器使用，它们也能够被当做小部件帮助你开发一部分视图。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
      <category term="Codeigniter" scheme="https://pureven.cc/tags/Codeigniter/"/>
    
  </entry>
  
  <entry>
    <title>使用PHPMailer发送邮件</title>
    <link href="https://pureven.cc/2020/03/27/codeigniter-phpmailer/"/>
    <id>https://pureven.cc/2020/03/27/codeigniter-phpmailer/</id>
    <published>2020-03-27T12:59:31.000Z</published>
    <updated>2020-04-13T00:41:43.039Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>本文通过一个开源的<code>PHPMailer</code>类库来实现邮件发送。PHPMailer 是一个强大的 PHP 编写的邮件发送类，使用它可以更加便捷的发送邮件，并且还能发送附件和 HTML 格式的邮件，同时还能使用<code>SMTP</code>服务器来发送邮件。</p><a id="more"></a><hr><h4 id="部分服务器地址和端口"><a href="#部分服务器地址和端口" class="headerlink" title="部分服务器地址和端口"></a>部分服务器地址和端口</h4><p>在配置发送邮件服务器时会填写服务器地址和端口，而服务器地址不同的服务器的类型和不同的邮箱也不相同。下面参考<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLndwamFtLmNvbS9tL2dtYWlsLXFtYWlsLTE2M21haWwtaW1hcC1zbXRwLXBvcDMv" title="https://blog.wpjam.com/m/gmail-qmail-163mail-imap-smtp-pop3/">WordPress果酱<i class="fa fa-external-link"></i></span>给出<strong>Gmail</strong>, <strong>QMail</strong>, <strong>163邮箱</strong>这三个常用邮箱的这些地址。</p><h5 id="Exmail-的-IMAP-SMTP-POP3-地址"><a href="#Exmail-的-IMAP-SMTP-POP3-地址" class="headerlink" title="Exmail 的 IMAP/SMTP/POP3 地址"></a>Exmail 的 IMAP/SMTP/POP3 地址</h5><table><thead><tr><th align="left">服务器名称</th><th align="left">服务器地址</th><th align="left">SSL协议端口</th><th align="left">非SSL协议端口</th></tr></thead><tbody><tr><td align="left">IMAP</td><td align="left">imap.exmail.qq.com</td><td align="left">993</td><td align="left">-</td></tr><tr><td align="left">SMTP</td><td align="left">smtp.exmail.qq.com</td><td align="left">465</td><td align="left">-</td></tr><tr><td align="left">POP3</td><td align="left">pop.exmail.qq.com</td><td align="left">995</td><td align="left">-</td></tr></tbody></table><h5 id="QMail-的-IMAP-SMTP-POP3-地址"><a href="#QMail-的-IMAP-SMTP-POP3-地址" class="headerlink" title="QMail 的 IMAP/SMTP/POP3 地址"></a>QMail 的 IMAP/SMTP/POP3 地址</h5><p>QMail 的 IMAP/SMTP/POP3 协议默认是不开启的，你需要登陆到 QQ邮箱，然后到“设置” &gt; “账户” 将其开启</p><table><thead><tr><th align="left">服务器名称</th><th align="left">服务器地址</th><th align="left">SSL协议端口</th><th align="left">非SSL协议端口</th></tr></thead><tbody><tr><td align="left">IMAP</td><td align="left">imap.qq.com</td><td align="left">993</td><td align="left">143</td></tr><tr><td align="left">SMTP</td><td align="left">smtp.qq.com</td><td align="left">465或587</td><td align="left">25</td></tr><tr><td align="left">POP3</td><td align="left">pop.qq.com</td><td align="left">995</td><td align="left">110</td></tr></tbody></table><h5 id="Gmail-的-IMAP-SMTP-POP3-地址"><a href="#Gmail-的-IMAP-SMTP-POP3-地址" class="headerlink" title="Gmail 的 IMAP/SMTP/POP3 地址"></a>Gmail 的 IMAP/SMTP/POP3 地址</h5><p>Gmail 的 IMAP/SMTP/POP3 协议默认都是开启，它的详细地址如下</p><table><thead><tr><th align="left">服务器名称</th><th align="left">服务器地址</th><th align="left">SSL协议端口</th><th align="left">非SSL协议端口</th></tr></thead><tbody><tr><td align="left">IMAP</td><td align="left">imap.gmail.com</td><td align="left">993</td><td align="left">-</td></tr><tr><td align="left">SMTP</td><td align="left">smtp.gmail.com</td><td align="left">465</td><td align="left">-</td></tr><tr><td align="left">POP3</td><td align="left">pop.gmail.com</td><td align="left">995</td><td align="left">-</td></tr></tbody></table><h5 id="163邮箱-的-IMAP-SMTP-POP3-地址"><a href="#163邮箱-的-IMAP-SMTP-POP3-地址" class="headerlink" title="163邮箱 的 IMAP/SMTP/POP3 地址"></a>163邮箱 的 IMAP/SMTP/POP3 地址</h5><table><thead><tr><th align="left">服务器名称</th><th align="left">服务器地址</th><th align="left">SSL协议端口</th><th align="left">非SSL协议端口</th></tr></thead><tbody><tr><td align="left">IMAP</td><td align="left">imap.163.com</td><td align="left">993</td><td align="left">143</td></tr><tr><td align="left">SMTP</td><td align="left">smtp.163.com</td><td align="left">465或994</td><td align="left">25</td></tr><tr><td align="left">POP3</td><td align="left">pop.163.com</td><td align="left">995</td><td align="left">110</td></tr></tbody></table><hr><h4 id="PHPMailer简单介绍"><a href="#PHPMailer简单介绍" class="headerlink" title="PHPMailer简单介绍"></a>PHPMailer简单介绍</h4><p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BIUE1haWxlci9QSFBNYWlsZXI=" title="https://github.com/PHPMailer/PHPMailer">PHPMailer<i class="fa fa-external-link"></i></span>，部分功能举例:</p><ul><li>在邮件中包含多个 TO、CC、BCC 和 REPLY-TO。</li><li>平台应用广泛，支持的 SMTP 服务器包括 Sendmail、qmail、Postfix、Gmail、Imail、Exchange 等等。</li><li>支持嵌入图像，附件，HTML 邮件。</li><li>可靠的强大的调试功能。</li><li>支持 SMTP 认证。</li><li>自定义邮件头。</li><li>支持 8bit、base64、binary 和 quoted-printable 编码。</li></ul><h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">defined(<span class="string">'BASEPATH'</span>) <span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">'No direct script access allowed'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">PHPMailer</span>\<span class="title">PHPMailer</span>\<span class="title">PHPMailer</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PHPMailer</span>\<span class="title">PHPMailer</span>\<span class="title">Exception</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PHPMailer</span>\<span class="title">PHPMailer</span>\<span class="title">SMTP</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Notifications</span> <span class="keyword">extends</span> <span class="title">Api</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::__construct();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">email_test_get</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $mail = <span class="keyword">new</span> PHPMailer(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//Server settings</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             *  SMTPDebug 输出信息级别</span></span><br><span class="line"><span class="comment">             *  关闭：DEBUG_OFF</span></span><br><span class="line"><span class="comment">             *  客户端信息：DEBUG_CLIENT</span></span><br><span class="line"><span class="comment">             *  服务器信息：DEBUG_SERVER</span></span><br><span class="line"><span class="comment">             * 所有信息：DEBUG_LOWLEVEL</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            $mail-&gt;SMTPDebug = SMTP::DEBUG_LOWLEVEL;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//设定邮件编码，默认ISO-8859-1，如果发中文此项必须设置为 UTF-8</span></span><br><span class="line">            $mail-&gt;CharSet =<span class="string">"UTF-8"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 使用SMTP</span></span><br><span class="line">            $mail-&gt;isSMTP();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 发送服务器，比如：smtp.exmail.qq.com</span></span><br><span class="line">            $mail-&gt;Host       = <span class="string">'smtp.exmail.qq.com'</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 使用SMTP认证</span></span><br><span class="line">            $mail-&gt;SMTPAuth   = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 发件人账号/密码</span></span><br><span class="line">            $mail-&gt;Username   = <span class="string">'your_name@xxx.com'</span>;</span><br><span class="line">            $mail-&gt;Password   = <span class="string">'your_password'</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 加密技术： tls or ssl</span></span><br><span class="line">            $mail-&gt;SMTPSecure = PHPMailer::ENCRYPTION_SMTPS;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// SMTP服务器端口： SMTPS =&gt; 465  SMTP =&gt; 25</span></span><br><span class="line">            $mail-&gt;Port       = <span class="number">465</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 发件人账号及昵称</span></span><br><span class="line">            $mail-&gt;setFrom(<span class="string">'发件人地址'</span>, <span class="string">'发件人昵称'</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 收件人账号及昵称</span></span><br><span class="line">            $mail-&gt;addAddress(<span class="string">'收件人地址'</span>, <span class="string">'收件人昵称'</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 回复人地址和昵称</span></span><br><span class="line">            $mail-&gt;AddReplyTo(<span class="string">"邮件回复人地址"</span>,<span class="string">"邮件回复人名称"</span>);</span><br><span class="line">            </span><br><span class="line">            $mail-&gt;isHTML(<span class="keyword">true</span>); <span class="comment">// true: 'text/html'  false: 'text/plain'</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 标题</span></span><br><span class="line">            $mail-&gt;Subject = <span class="string">'你的奖品已到账，请查收'</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 正文</span></span><br><span class="line">            $mail-&gt;Body    = <span class="string">'...'</span>;</span><br><span class="line">            $mail-&gt;AltBody = <span class="string">'为了查看该邮件，请切换到支持 HTML 的邮件客户端'</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//$mail-&gt;AddAttachment("images/phpmailer.gif"); // 附件</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 发送</span></span><br><span class="line">            $mail-&gt;send();</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'Message has been sent'</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Message could not be sent. Mailer Error: &#123;$mail-&gt;ErrorInfo&#125;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;本文通过一个开源的&lt;code&gt;PHPMailer&lt;/code&gt;类库来实现邮件发送。PHPMailer 是一个强大的 PHP 编写的邮件发送类，使用它可以更加便捷的发送邮件，并且还能发送附件和 HTML 格式的邮件，同时还能使用&lt;code&gt;SMTP&lt;/code&gt;服务器来发送邮件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>CodeIgniter数据库相关功能的实现机制</title>
    <link href="https://pureven.cc/2020/03/17/codeigniter-database/"/>
    <id>https://pureven.cc/2020/03/17/codeigniter-database/</id>
    <published>2020-03-17T03:02:50.000Z</published>
    <updated>2020-04-13T00:41:43.047Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p><code>PHP</code>操作数据库<code>如MySQL</code>的流程分为<strong>连接数据库</strong>、<strong>设置字符编码</strong>、<strong>选择数据库</strong>、<strong>构造sql语句</strong>、<strong>执行sql语句</strong>、<strong>获取执行结果</strong>、<strong>关闭数据库连接</strong>等。如下面一个分页的例子</p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 连接数据库</span></span><br><span class="line">$link = mysqli_connect(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">'xxxxxx'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$link) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">'connect database faild!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 设置字符编码</span></span><br><span class="line">mysqli_set_charset($link,<span class="string">'utf8'</span>);</span><br><span class="line"><span class="comment">// 选择数据库</span></span><br><span class="line">mysqli_select_db($link,<span class="string">'bbs'</span>);</span><br><span class="line"><span class="comment">// 构造sql</span></span><br><span class="line">$get_count_sql = <span class="string">'select count(*) as count from user'</span>;</span><br><span class="line"><span class="comment">// 执行sql</span></span><br><span class="line">$count = mysqli_fetch_assoc(mysqli_query($link,$get_count_sql));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 分页</span></span><br><span class="line">$page = (<span class="keyword">isset</span>($_GET[<span class="string">'page'</span>]) &amp;&amp; $_GET[<span class="string">'page'</span>] &gt; <span class="number">1</span>) ? $_GET[<span class="string">'page'</span>] : <span class="number">1</span>;</span><br><span class="line">$num = <span class="number">4</span>;</span><br><span class="line">$start = ($page - <span class="number">1</span>) * $num;</span><br><span class="line">$end = ceil($count[<span class="string">'count'</span>]/$num);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构造sql</span></span><br><span class="line">$sql = <span class="string">"select * from user limit $start , $num"</span>;</span><br><span class="line"><span class="comment">// 执行</span></span><br><span class="line">$ret = mysqli_query($link,$sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">// html呈现</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;html&gt;&lt;table width='800' border='2'&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;th&gt;编号&lt;/th&gt;&lt;th&gt;用户名&lt;/th&gt;&lt;th&gt;地址&lt;/th&gt;&lt;th&gt;性别&lt;/th&gt;&lt;th&gt;年龄&lt;/th&gt;"</span>;</span><br><span class="line"><span class="keyword">while</span>($result = mysqli_fetch_assoc($ret)) &#123;    $sex = $result[<span class="string">'sex'</span>] ? <span class="string">"男"</span> : <span class="string">"女"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;tr&gt;&lt;td&gt;"</span>.$result[<span class="string">'id'</span>].<span class="string">"&lt;/td&gt;&lt;td&gt;"</span>.$result[<span class="string">'username'</span>].<span class="string">"&lt;/td&gt;&lt;td&gt;"</span>.$result[<span class="string">'address'</span>].<span class="string">"&lt;/td&gt;&lt;td&gt;"</span>.$sex.<span class="string">"&lt;/td&gt;&lt;td&gt;"</span>.$result[<span class="string">'age'</span>].<span class="string">"&lt;/td&gt;&lt;/tr&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/table&gt;"</span>;</span><br><span class="line">$prev = ($page &gt; <span class="number">1</span>) ? $page - <span class="number">1</span> : <span class="number">1</span>;</span><br><span class="line">$next = ($page &lt; $end) ?  $page + <span class="number">1</span> : $end;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;a href='page.php?page=1'&gt;首页&lt;/a&gt; &lt;a href='page.php?page=$prev'&gt;上页&lt;/a&gt; &lt;a href='page.php?page=$next'&gt;下页&lt;/a&gt; &lt;a href='page.php?page=$end'&gt;尾页&lt;/a&gt;"</span>;</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">1</span>; $i &lt;= $end; $i++) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">" &lt;a href='page.php?page=$i'&gt;$i&lt;/a&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/html&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭连接</span></span><br><span class="line">mysqli_close($link);</span><br></pre></td></tr></table></figure><p>这个例子有很多不足之处，比如分页不是从sql里分页而是拿出数据后使用php的逻辑来分页肯定有效率问题，这里不做讨论，主要是用来显示<code>PHP</code>操作<code>MySQL</code>的流程。明白了上面的流程就可以看CodeIgniter对数据库操作的实现机制了。详细的介绍可参考官网<span class="exturl" data-url="aHR0cHM6Ly9jb2RlaWduaXRlci5vcmcuY24vdXNlcl9ndWlkZS9kYXRhYmFzZS9pbmRleC5odG1s" title="https://codeigniter.org.cn/user_guide/database/index.html">数据库参考<i class="fa fa-external-link"></i></span>。下面从<code>代码</code>的角度学习这部分。</p><hr><h4 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h4><p>APPPATH . ‘config/database.php’为数据库的配置文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">$db[<span class="string">'default'</span>] = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">'dsn'</span>=&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'hostname'</span> =&gt; <span class="string">'localhost'</span>,</span><br><span class="line"><span class="string">'port'</span> =&gt; <span class="number">3306</span>,</span><br><span class="line"><span class="string">'username'</span> =&gt; <span class="string">'root'</span>,</span><br><span class="line"><span class="string">'password'</span> =&gt; <span class="string">'root'</span>,</span><br><span class="line"><span class="string">'database'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'dbdriver'</span> =&gt; <span class="string">'mysqli'</span>,</span><br><span class="line"><span class="string">'dbprefix'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'pconnect'</span> =&gt; <span class="keyword">FALSE</span>,</span><br><span class="line"><span class="string">'db_debug'</span> =&gt; (ENVIRONMENT !== <span class="string">'production'</span>),</span><br><span class="line"><span class="string">'cache_on'</span> =&gt; <span class="keyword">FALSE</span>,</span><br><span class="line"><span class="string">'cachedir'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'char_set'</span> =&gt; <span class="string">'utf8'</span>,</span><br><span class="line"><span class="string">'dbcollat'</span> =&gt; <span class="string">'utf8_general_ci'</span>,</span><br><span class="line"><span class="string">'swap_pre'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'encrypt'</span> =&gt; <span class="keyword">FALSE</span>,</span><br><span class="line"><span class="string">'compress'</span> =&gt; <span class="keyword">FALSE</span>,</span><br><span class="line"><span class="string">'stricton'</span> =&gt; <span class="keyword">FALSE</span>,</span><br><span class="line"><span class="string">'failover'</span> =&gt; <span class="keyword">array</span>(),</span><br><span class="line"><span class="string">'save_queries'</span> =&gt; <span class="keyword">TRUE</span></span><br><span class="line">);</span><br><span class="line">$db[<span class="string">'codeigniter'</span>] = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'dsn'</span>=&gt; <span class="string">''</span>,                   <span class="comment">// DNS连接字符串（该字符串包含了所有的数据库配置信息）</span></span><br><span class="line">    <span class="string">'hostname'</span> =&gt; <span class="string">'localhost'</span>,     <span class="comment">// 数据库的主机名</span></span><br><span class="line">    <span class="string">'port'</span> =&gt; <span class="number">3306</span>,                 <span class="comment">// 数据库端口号</span></span><br><span class="line">    <span class="string">'username'</span> =&gt; <span class="string">'codeigniter'</span>,  <span class="comment">// 需要连接到数据库的用户名</span></span><br><span class="line">    <span class="string">'password'</span> =&gt; <span class="string">'helloworld'</span>,   <span class="comment">// 登录数据库的密码</span></span><br><span class="line">    <span class="string">'database'</span> =&gt; <span class="string">'codeigniter'</span>,  <span class="comment">// 需要连接的数据库名</span></span><br><span class="line">    <span class="string">'dbdriver'</span> =&gt; <span class="string">'mysqli'</span>,       <span class="comment">// 数据库类型: mysqli postgres odbc</span></span><br><span class="line">    <span class="string">'dbprefix'</span> =&gt; <span class="string">''</span>,             <span class="comment">// 当使用查询构造器查询时，可以选择性的为表加个前缀</span></span><br><span class="line">    <span class="string">'pconnect'</span> =&gt; <span class="keyword">FALSE</span>,          <span class="comment">// 是否使用持续连接</span></span><br><span class="line">    <span class="string">'db_debug'</span> =&gt; (ENVIRONMENT !== <span class="string">'production'</span>), <span class="comment">// 是否显示数据库错误信息</span></span><br><span class="line">    <span class="string">'cache_on'</span> =&gt; <span class="keyword">FALSE</span>,             <span class="comment">// 是否开启数据库查询缓存</span></span><br><span class="line">    <span class="string">'cachedir'</span> =&gt; <span class="string">''</span>,                <span class="comment">// 数据库查询缓存目录所在服务器的绝对路径</span></span><br><span class="line">    <span class="string">'char_set'</span> =&gt; <span class="string">'utf8'</span>,           <span class="comment">// 与数据库通信时所使用的字符集</span></span><br><span class="line">    <span class="string">'dbcollat'</span> =&gt; <span class="string">'utf8_general_ci'</span>,<span class="comment">// 只是用与mysql和mysqli数据库驱动</span></span><br><span class="line">    <span class="string">'swap_pre'</span> =&gt; <span class="string">''</span>,     <span class="comment">// 替换默认的 dbprefix 表前缀，该项设置对于分布式应用是非常有用的， 可以在查询中使用由最终用户定制的表前缀。</span></span><br><span class="line">    <span class="string">'encrypt'</span> =&gt; <span class="keyword">FALSE</span>,  <span class="comment">// 是否使用加密连接</span></span><br><span class="line">    <span class="string">'compress'</span> =&gt; <span class="keyword">FALSE</span>, <span class="comment">// 是否使用客户端压缩协议（只用于MySQL）</span></span><br><span class="line">    <span class="string">'stricton'</span> =&gt; <span class="keyword">FALSE</span>, <span class="comment">// 是否强制使用 "Strict Mode" 连接, 在开发程序时，使用 strict SQL 是一个好习惯。</span></span><br><span class="line">    <span class="string">'failover'</span> =&gt; <span class="keyword">array</span>(),</span><br><span class="line">    <span class="string">'save_queries'</span> =&gt; <span class="keyword">TRUE</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">$active_group = <span class="string">'codeigniter'</span>; <span class="comment">// 告訴系统要使用codeigniter数据库</span></span><br><span class="line">$query_builder = <span class="keyword">TRUE</span>;         <span class="comment">// 数据库初始化时对查询构造器类进行全局设定</span></span><br></pre></td></tr></table></figure><p>使用哪款<strong>数据库</strong>，使用哪个<strong>端口</strong>会根据项目需求具体情况具体分析，CodeIgniter将这些信息整合到具体的配置文件中来统一配置。然后根据配置信息选择对应的<code>数据库适配器</code>、<code>查询构造类</code>等。各类数据库适配器目录结构如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">H:\CodeIgniter-3.1.11\system&gt;tree</span><br><span class="line">卷 test 的文件夹 PATH 列表</span><br><span class="line">卷序列号为 AC46-F491</span><br><span class="line">H:.</span><br><span class="line">├─core</span><br><span class="line">│  └─compat</span><br><span class="line">├─database</span><br><span class="line">│  └─drivers</span><br><span class="line">│      ├─cubrid</span><br><span class="line">│      ├─ibase</span><br><span class="line">│      ├─mssql</span><br><span class="line">│      ├─mysql</span><br><span class="line">│      ├─mysqli</span><br><span class="line">│      │      index.html</span><br><span class="line">│      │      mysqli_driver.php</span><br><span class="line">│      │      mysqli_forge.php</span><br><span class="line">│      │      mysqli_result.php</span><br><span class="line">│      │      mysqli_utility.php</span><br><span class="line">│      ├─oci8</span><br><span class="line">│      ├─odbc</span><br><span class="line">│      ├─pdo</span><br><span class="line">│      │  └─subdrivers</span><br><span class="line">│      ├─postgre</span><br><span class="line">│      ├─sqlite</span><br><span class="line">│      ├─sqlite3</span><br><span class="line">│      └─sqlsrv</span><br><span class="line">├─fonts</span><br><span class="line">├─...</span><br></pre></td></tr></table></figure><p>限于篇幅，上面仅<strong>手动</strong>加上了<code>mysqli</code>目录下的文件，其实每个数据库都有相对应的<code>driver</code>, <code>forge</code>, <code>result</code>, <code>utility</code>等文件。CodeIgniter根据配置文件中的数据库信息加载对应的文件。</p><h4 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h4><p>连接数据库有<code>自动连接</code>和<code>手动连接</code>两种方式，其中在加载<code>model</code>时可以设置同时连接数据库，在加载<code>dbutilh</code>和<code>dbforge</code>时则会间接的连接数据库。这里的连接数据库都是执行的<code>$this-&gt;load-&gt;database()</code>语句。</p><h5 id="自动连接"><a href="#自动连接" class="headerlink" title="自动连接"></a>自动连接</h5><p><code>自动连接</code>特性将在每一个页面加载时自动实例化数据库类。要启用<code>自动连接</code>， 可在 <code>application/config/autoload.php</code>中的<code>library</code>数组里添加<code>database</code>:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$autoload[<span class="string">'libraries'</span>] = <span class="keyword">array</span>(<span class="string">'database'</span>);</span><br></pre></td></tr></table></figure><p>配置好后会在<code>初始化Loader类</code>时完成数据库的连接，可参考<a href="https://pureven.cc/2020/02/17/codeigniter-loader/">Loader类</a>中<code>initialize()</code>的方法。通过该方法间接执行了<code>this-&gt;load-&gt;database()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($autoload[<span class="string">'libraries'</span>]) &amp;&amp; count($autoload[<span class="string">'libraries'</span>]) &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Load the database driver. 此处是指初始化时就加载数据库</span></span><br><span class="line">    <span class="keyword">if</span> (in_array(<span class="string">'database'</span>, $autoload[<span class="string">'libraries'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 加载DB类，只有加载了才能使用$this-&gt;db-&gt;...</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;database();</span><br><span class="line">        <span class="comment">// 返回不包含'database'的数组</span></span><br><span class="line">        $autoload[<span class="string">'libraries'</span>] = array_diff($autoload[<span class="string">'libraries'</span>], <span class="keyword">array</span>(<span class="string">'database'</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Load all other libraries</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;library($autoload[<span class="string">'libraries'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="手动连接"><a href="#手动连接" class="headerlink" title="手动连接"></a>手动连接</h5><p><code>手动连接</code>是指可以手动执行<code>$this-&gt;load-&gt;database()</code>语句来连接数据库，详见<span class="exturl" data-url="aHR0cHM6Ly9jb2RlaWduaXRlci5vcmcuY24vdXNlcl9ndWlkZS9kYXRhYmFzZS9jb25uZWN0aW5nLmh0bWwjaWQ1" title="https://codeigniter.org.cn/user_guide/database/connecting.html#id5">手动连接到数据库<i class="fa fa-external-link"></i></span>。</p><hr><h4 id="连接过程分析"><a href="#连接过程分析" class="headerlink" title="连接过程分析"></a>连接过程分析</h4><p>当执行<code>$this-&gt;load-&gt;database()</code>语句时实际上执行的是<code>Loader类</code>中的<code>database()</code>方法，在<a href>Loader类</a>中有相关分析，这里单独拿出database()方法的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@params</span> - 数据库组名称或配置选项</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> - 是否返回加载的数据库对象，false表示将数据库类加载到超级对象，true表示直接返回数据库类实例</span></span><br><span class="line"><span class="comment">* <span class="doctag">@query</span>_builder 是否加载查询构造器</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">database</span><span class="params">($params = <span class="string">''</span>, $return = FALSE, $query_builder = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 获取超级对象</span></span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果要求返回数据库类实例，但是超级对象中已经加载并建立了到数据库的连接则直接返回false</span></span><br><span class="line">    <span class="keyword">if</span> ($return === <span class="keyword">FALSE</span> &amp;&amp; $query_builder === <span class="keyword">NULL</span> &amp;&amp; <span class="keyword">isset</span>($CI-&gt;db) &amp;&amp; is_object($CI-&gt;db) &amp;&amp; ! <span class="keyword">empty</span>($CI-&gt;db-&gt;conn_id))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重点： 加载DB.php文件，该文件中只有一个DB方法，加载数据库类和加载构造器都是通过这个方法来加载的</span></span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/DB.php'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这里判断如果要求返回数据库类的实例则直接通过DB()方法返回</span></span><br><span class="line">    <span class="keyword">if</span> ($return === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> DB($params, $query_builder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Initialize the db variable. Needed to prevent</span></span><br><span class="line">    <span class="comment">// reference errors with some configurations</span></span><br><span class="line">    $CI-&gt;db = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Load the DB class</span></span><br><span class="line">    $CI-&gt;db =&amp; DB($params, $query_builder);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面再来看看DB方法，该方法也就是<code>BASEPATH . &#39;database/DB.php&#39;</code>的内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@params</span> - 数据库连接值，一般为数据库组名称或配置选项</span></span><br><span class="line"><span class="comment">* <span class="doctag">@query</span>_builder_override - 是否加载查询构造器</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> &amp;<span class="title">DB</span><span class="params">($params = <span class="string">''</span>, $query_builder_override = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 如果数据连接值不是DSN字符串则加载配置文件database.php</span></span><br><span class="line">    <span class="keyword">if</span> (is_string($params) &amp;&amp; strpos($params, <span class="string">'://'</span>) === <span class="keyword">FALSE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// database.php文件不存在则报错</span></span><br><span class="line">        <span class="keyword">if</span> ( ! file_exists($file_path = APPPATH.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/database.php'</span>)</span><br><span class="line">            &amp;&amp; ! file_exists($file_path = APPPATH.<span class="string">'config/database.php'</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            show_error(<span class="string">'The configuration file database.php does not exist.'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 加载database.php文件</span></span><br><span class="line">        <span class="keyword">include</span>($file_path);</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// CI_Controller类中会调用$this-&gt;load-&gt;initialize();语句将autoload.php文件设置的默认加载项加载了</span></span><br><span class="line">        <span class="comment">// 因此如果存在CI_Controller说明已经加载了默认加载项</span></span><br><span class="line">        <span class="keyword">if</span> (class_exists(<span class="string">'CI_Controller'</span>, <span class="keyword">FALSE</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果默认加载项包含package，则需要判断package目录下有没有database.php配置文件，有则加载</span></span><br><span class="line">            <span class="keyword">foreach</span> (get_instance()-&gt;load-&gt;get_package_paths() <span class="keyword">as</span> $path)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ($path !== APPPATH)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (file_exists($file_path = $path.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/database.php'</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">include</span>($file_path);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">elseif</span> (file_exists($file_path = $path.<span class="string">'config/database.php'</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">include</span>($file_path);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// database.php文件中定义了$db数组，加载完database.php文件后如果不存在$db数组保存退出</span></span><br><span class="line">        <span class="keyword">if</span> ( ! <span class="keyword">isset</span>($db) <span class="keyword">OR</span> count($db) === <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            show_error(<span class="string">'No database connection settings were found in the database config file.'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// $active_group表示要使用哪个数据库组</span></span><br><span class="line">        <span class="comment">// 如果指定了数据库组就使用指定的，不指定就使用默认的，通常在database.php文件中会通过$active_group = 'default';语句来设置</span></span><br><span class="line">        <span class="keyword">if</span> ($params !== <span class="string">''</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $active_group = $params;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 如果不存在则说明没有指定要连接的数据库，保存退出</span></span><br><span class="line">        <span class="keyword">if</span> ( ! <span class="keyword">isset</span>($active_group))</span><br><span class="line">        &#123;</span><br><span class="line">            show_error(<span class="string">'You have not specified a database connection group via $active_group in your config/database.php file.'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span> ( ! <span class="keyword">isset</span>($db[$active_group]))</span><br><span class="line">        &#123;   <span class="comment">// 如果指定了数据库组，但是这个组内没有连接数据库的相关信息也会报错退出</span></span><br><span class="line">            show_error(<span class="string">'You have specified an invalid database connection group ('</span>.$active_group.<span class="string">') in your config/database.php file.'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 将连接数据库需要的信息赋值给$params， 这里的信息包括hostname、username、password、database、dbdriver、char_set...</span></span><br><span class="line">        $params = $db[$active_group];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (is_string($params))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * DSNs必须有以下属性: $dsn = 'driver://username:password<span class="doctag">@hostname</span>/database';</span></span><br><span class="line"><span class="comment">         * 例如： $dsn = 'pgsql:host=localhost;port=5432;dbname=database_name';</span></span><br><span class="line"><span class="comment">         * 使用parse_url方法解析dsn，并将解析后的关联数组赋值给$dsn，对于严重不合格的URL，将返回false</span></span><br><span class="line"><span class="comment">         * 下面会看到解析失败则报错退出</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (($dsn = @parse_url($params)) === <span class="keyword">FALSE</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            show_error(<span class="string">'Invalid DB Connection String'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        $params = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'dbdriver'</span>=&gt; $dsn[<span class="string">'scheme'</span>],</span><br><span class="line">            <span class="comment">// 这里要注意rawurldecode()方法对已编码的URL字符串进行解码</span></span><br><span class="line">            <span class="string">'hostname'</span>=&gt; <span class="keyword">isset</span>($dsn[<span class="string">'host'</span>]) ? rawurldecode($dsn[<span class="string">'host'</span>]) : <span class="string">''</span>,</span><br><span class="line">            <span class="string">'port'</span>=&gt; <span class="keyword">isset</span>($dsn[<span class="string">'port'</span>]) ? rawurldecode($dsn[<span class="string">'port'</span>]) : <span class="string">''</span>,</span><br><span class="line">            <span class="string">'username'</span>=&gt; <span class="keyword">isset</span>($dsn[<span class="string">'user'</span>]) ? rawurldecode($dsn[<span class="string">'user'</span>]) : <span class="string">''</span>,</span><br><span class="line">            <span class="string">'password'</span>=&gt; <span class="keyword">isset</span>($dsn[<span class="string">'pass'</span>]) ? rawurldecode($dsn[<span class="string">'pass'</span>]) : <span class="string">''</span>,</span><br><span class="line">            <span class="string">'database'</span>=&gt; <span class="keyword">isset</span>($dsn[<span class="string">'path'</span>]) ? rawurldecode(substr($dsn[<span class="string">'path'</span>], <span class="number">1</span>)) : <span class="string">''</span></span><br><span class="line">        );</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 解析问号？之后的参数，如get请求后跟的参数</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($dsn[<span class="string">'query'</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            parse_str($dsn[<span class="string">'query'</span>], $extra);</span><br><span class="line">    </span><br><span class="line">            <span class="keyword">foreach</span> ($extra <span class="keyword">as</span> $key =&gt; $val)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (is_string($val) &amp;&amp; in_array(strtoupper($val), <span class="keyword">array</span>(<span class="string">'TRUE'</span>, <span class="string">'FALSE'</span>, <span class="string">'NULL'</span>)))</span><br><span class="line">                &#123;</span><br><span class="line">                    $val = var_export($val, <span class="keyword">TRUE</span>);</span><br><span class="line">                &#125;</span><br><span class="line">    </span><br><span class="line">                $params[$key] = $val;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 没有指定数据库报错退出</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($params[<span class="string">'dbdriver'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(<span class="string">'You have not selected a database type to connect to.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// $query_builder表示是否加载数据库构造类，一般从database.php定义好，不过可以动态的改变，</span></span><br><span class="line">    <span class="comment">// 比如这里通过$query_builder_override的值来覆盖</span></span><br><span class="line">    <span class="keyword">if</span> ($query_builder_override !== <span class="keyword">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        $query_builder = $query_builder_override;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// $active_record变量在CodeIgniter2版本中设置，CodeIgniter3中删除了，这里做兼容处理</span></span><br><span class="line">    <span class="keyword">elseif</span> ( ! <span class="keyword">isset</span>($query_builder) &amp;&amp; <span class="keyword">isset</span>($active_record))</span><br><span class="line">    &#123;</span><br><span class="line">        $query_builder = $active_record;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 重点： 加载DB_driver.php文件，这个文件是一个抽象类CI_DB_driver</span></span><br><span class="line">    <span class="comment">// 定义了数据库的连接、选择、字符集设置、sql语句执行...一个基本的方法。</span></span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/DB_driver.php'</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">isset</span>($query_builder) <span class="keyword">OR</span> $query_builder === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 如果需要加载数据库构造类则加载BASEPATH.'database/DB_query_builer.php'文件</span></span><br><span class="line">        <span class="comment">// 该文件定义了一个抽象类CI_DB_query_builder，继承自CI_DB_driver</span></span><br><span class="line">        <span class="comment">// 查询构造类增加了查询有关的条件方法，使用起来灰常方便</span></span><br><span class="line">        <span class="comment">// 详情参考官网: https://codeigniter.org.cn/user_guide/database/query_builder.html</span></span><br><span class="line">        <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/DB_query_builder.php'</span>);</span><br><span class="line">        <span class="keyword">if</span> ( ! class_exists(<span class="string">'CI_DB'</span>, <span class="keyword">FALSE</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 这里很明确了，如果加载查询构造类，则CI_DB继承CI_DB_query_builder</span></span><br><span class="line">            <span class="class"><span class="keyword">class</span> <span class="title">CI_DB</span> <span class="keyword">extends</span> <span class="title">CI_DB_query_builder</span> </span>&#123; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> ( ! class_exists(<span class="string">'CI_DB'</span>, <span class="keyword">FALSE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 如果不加载查询构造类则直接继承CI_DB_driver</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">CI_DB</span> <span class="keyword">extends</span> <span class="title">CI_DB_driver</span> </span>&#123; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据配置信息加载对应的driver文件，比如BASEPATH . 'database/drivers/mysqli/mysqli_driver.php'文件</span></span><br><span class="line">    <span class="comment">// 该文件继承自CI_DB，具体实现了数据库的连接、选择、字符集设置、事务相关操作等等重要方法，</span></span><br><span class="line">    <span class="comment">// 因为每种数据库的这些方法不一样需要具体数据库具体设置</span></span><br><span class="line">    $driver_file = BASEPATH.<span class="string">'database/drivers/'</span>.$params[<span class="string">'dbdriver'</span>].<span class="string">'/'</span>.$params[<span class="string">'dbdriver'</span>].<span class="string">'_driver.php'</span>;</span><br><span class="line">    </span><br><span class="line">    file_exists($driver_file) <span class="keyword">OR</span> show_error(<span class="string">'Invalid DB driver'</span>); <span class="comment">// 每种driver文件只能加载一次，重复加载则报错退出</span></span><br><span class="line">    <span class="keyword">require_once</span>($driver_file);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 实例化DB适配器</span></span><br><span class="line">    $driver = <span class="string">'CI_DB_'</span>.$params[<span class="string">'dbdriver'</span>].<span class="string">'_driver'</span>;</span><br><span class="line">    $DB = <span class="keyword">new</span> $driver($params);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果存在subdrivers目录则加载subdrivers目录下的driver文件，比如pdo_mysql_driver.php文件</span></span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">empty</span>($DB-&gt;subdriver))</span><br><span class="line">    &#123;</span><br><span class="line">        $driver_file = BASEPATH.<span class="string">'database/drivers/'</span>.$DB-&gt;dbdriver.<span class="string">'/subdrivers/'</span>.$DB-&gt;dbdriver.<span class="string">'_'</span>.$DB-&gt;subdriver.<span class="string">'_driver.php'</span>;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> (file_exists($driver_file))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">require_once</span>($driver_file);</span><br><span class="line">            $driver = <span class="string">'CI_DB_'</span>.$DB-&gt;dbdriver.<span class="string">'_'</span>.$DB-&gt;subdriver.<span class="string">'_driver'</span>;</span><br><span class="line">            $DB = <span class="keyword">new</span> $driver($params);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 重要： 初始化函数完成了数据库的连接和字符集的设置</span></span><br><span class="line">    $DB-&gt;initialize();</span><br><span class="line">    <span class="keyword">return</span> $DB;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从代码中得知，<strong>首</strong>先通过<code>require_once(BASEPATH.&#39;database/DB_driver.php&#39;);</code>语句加载了抽象类<code>CI_DB_driver</code>，该类中定义了数据库连接、选择、字符集设置、sql语句执行等基本方法，这些方法在数据库适配类中完整实现。<strong>然</strong>后如果加载查询构造器则通过<code>require_once(BASEPATH.&#39;database/DB_query_builder.php&#39;);</code>语句加载<code>CI_DB_query_builder</code>抽象类，该类继承<code>CI_DB_driver</code>并定义了查询有关的方法，使用起来非常方便，<strong>然</strong>后根据是否加载查询构造器来定义<code>CI_DB</code>，<strong>最</strong>后实例化<code>CI_DB</code>。</p><p>如果加载了查询构造器就可以使用<code>$this-&gt;db-&gt;select()-&gt;where()-&gt;like()</code>等方法了，这是因为查询构造器中定义了这类方法。下面再来看看另一个常用数据库类<code>dbforge</code>。</p><hr><h4 id="数据库工厂类"><a href="#数据库工厂类" class="headerlink" title="数据库工厂类"></a>数据库工厂类</h4><p>在migrate文件中经常会用的<code>dbforge</code>，该类默认在迁移类(<code>CI_Migration</code>)中加载，用来对数据表做一些操作，这里的<code>dbforge</code>即<span class="exturl" data-url="aHR0cHM6Ly9jb2RlaWduaXRlci5vcmcuY24vdXNlcl9ndWlkZS9kYXRhYmFzZS9mb3JnZS5odG1sI2lkMQ==" title="https://codeigniter.org.cn/user_guide/database/forge.html#id1">数据库工厂类<i class="fa fa-external-link"></i></span>，该类主要完成一下功能：</p><ul><li>创建和删除数据库</li><li>创建和删除数据表，包括添加字段、添加键、创建表、删除表、重命名表等</li><li>修改表，包括给表添加列、从表中删除列、修改表中的某个列等</li></ul><p>下面来看代码实现：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dbforge</span><span class="params">($db = NULL, $return = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line">    <span class="keyword">if</span> ( ! is_object($db) <span class="keyword">OR</span> ! ($db <span class="keyword">instanceof</span> CI_DB))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 先要连接数据库才能后续操作</span></span><br><span class="line">        class_exists(<span class="string">'CI_DB'</span>, <span class="keyword">FALSE</span>) <span class="keyword">OR</span> <span class="keyword">$this</span>-&gt;database();</span><br><span class="line">        $db =&amp; $CI-&gt;db;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载BASEPATH . 'database/DB_forge.php'文件，即抽象类CI_DB_forge</span></span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/DB_forge.php'</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据选择的数据库从适配器目录下加载对应的forge类，比如CI_DB_mysqli_forge类，该类继承自CI_DB_forge</span></span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/drivers/'</span>.$db-&gt;dbdriver.<span class="string">'/'</span>.$db-&gt;dbdriver.<span class="string">'_forge.php'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">empty</span>($db-&gt;subdriver))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 例如pdo方式操作mysql，则要加载BASEPATH . 'database/drivers/pdo/subdrivers/pdo_mysql_forge.php'</span></span><br><span class="line">        $driver_path = BASEPATH.<span class="string">'database/drivers/'</span>.$db-&gt;dbdriver.<span class="string">'/subdrivers/'</span>.$db-&gt;dbdriver.<span class="string">'_'</span>.$db-&gt;subdriver.<span class="string">'_forge.php'</span>;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($driver_path))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">require_once</span>($driver_path);</span><br><span class="line">            $class = <span class="string">'CI_DB_'</span>.$db-&gt;dbdriver.<span class="string">'_'</span>.$db-&gt;subdriver.<span class="string">'_forge'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $class = <span class="string">'CI_DB_'</span>.$db-&gt;dbdriver.<span class="string">'_forge'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果返回对象则返回CI_DB_mysqli_forge类的实例</span></span><br><span class="line">    <span class="keyword">if</span> ($return === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> $class($db);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 否则将该实例加入超级对象$CI中</span></span><br><span class="line">    $CI-&gt;dbforge = <span class="keyword">new</span> $class($db);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当执行<code>$this-&gt;load-&gt;dbforge();</code>语句后就可以通过<code>$this-&gt;dbforge-&gt;...</code>来管理数据库了。</p><h4 id="数据库工具类"><a href="#数据库工具类" class="headerlink" title="数据库工具类"></a>数据库工具类</h4><p>数据库工具类暂时未用到，后续补上。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;&lt;code&gt;PHP&lt;/code&gt;操作数据库&lt;code&gt;如MySQL&lt;/code&gt;的流程分为&lt;strong&gt;连接数据库&lt;/strong&gt;、&lt;strong&gt;设置字符编码&lt;/strong&gt;、&lt;strong&gt;选择数据库&lt;/strong&gt;、&lt;strong&gt;构造sql语句&lt;/strong&gt;、&lt;strong&gt;执行sql语句&lt;/strong&gt;、&lt;strong&gt;获取执行结果&lt;/strong&gt;、&lt;strong&gt;关闭数据库连接&lt;/strong&gt;等。如下面一个分页的例子&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
      <category term="Codeigniter" scheme="https://pureven.cc/tags/Codeigniter/"/>
    
  </entry>
  
  <entry>
    <title>CodeIgniter迁移类文件Migration.php</title>
    <link href="https://pureven.cc/2020/03/15/codeigniter-migration/"/>
    <id>https://pureven.cc/2020/03/15/codeigniter-migration/</id>
    <published>2020-03-15T06:33:32.000Z</published>
    <updated>2020-04-13T00:41:43.220Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>使用迁移类可以很方便的组织和管理数据库的变更，该类包含8个成员变量和11个成员方法。</p><a id="more"></a><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 启用或禁用迁移，默认为禁用</span></span><br><span class="line"><span class="keyword">protected</span> $_migration_enabled = <span class="keyword">FALSE</span>;</span><br><span class="line"><span class="comment">// 迁移文件的命名规则， 默认为'sequential'， 其实'timestamp'更常用一些</span></span><br><span class="line"><span class="keyword">protected</span> $_migration_type = <span class="string">'sequential'</span>;</span><br><span class="line"><span class="comment">// 迁移目录所在位置，默认为APPPATH . 'migrations/'</span></span><br><span class="line"><span class="keyword">protected</span> $_migration_path = <span class="keyword">NULL</span>;</span><br><span class="line"><span class="comment">// 当前数据库所使用的版本，默认0</span></span><br><span class="line"><span class="keyword">protected</span> $_migration_version = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 用于存储当前版本的数据库表名</span></span><br><span class="line"><span class="keyword">protected</span> $_migration_table = <span class="string">'migrations'</span>;</span><br><span class="line"><span class="comment">// 启用或禁用自动迁移，默认不启用</span></span><br><span class="line"><span class="keyword">protected</span> $_migration_auto_latest = <span class="keyword">FALSE</span>;</span><br><span class="line"><span class="comment">// migrate文件的正则匹配模式，有两种，'/^\d&#123;14&#125;_(\w+)$/'和'/^\d&#123;3&#125;_(\w+)$/'分别对应'timestamp'和'sequential'</span></span><br><span class="line"><span class="keyword">protected</span> $_migration_regex;</span><br><span class="line"><span class="comment">// 表示迁移过程中的错误信息</span></span><br><span class="line"><span class="keyword">protected</span> $_error_string = <span class="string">''</span>;</span><br></pre></td></tr></table></figure><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($config = array<span class="params">()</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 如果不是CI_Migration类或者CI_Migration类的子类则退出，即只能在CI_Migration类及其子类加载该构造方法</span></span><br><span class="line">    <span class="keyword">if</span> ( ! in_array(get_class(<span class="keyword">$this</span>), <span class="keyword">array</span>(<span class="string">'CI_Migration'</span>, config_item(<span class="string">'subclass_prefix'</span>).<span class="string">'Migration'</span>), <span class="keyword">TRUE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可选参数$config用来覆盖成员变量的默认值</span></span><br><span class="line">    <span class="keyword">foreach</span> ($config <span class="keyword">as</span> $key =&gt; $val)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;&#123;<span class="string">'_'</span>.$key&#125; = $val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    log_message(<span class="string">'info'</span>, <span class="string">'Migrations Class Initialized'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果迁移功能处于禁用状态则报错退出</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_migration_enabled !== <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(<span class="string">'Migrations has been loaded but is disabled or set up incorrectly.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取迁移文件路径，默认为APPPATH . 'migrations/'</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_migration_path !== <span class="string">''</span> <span class="keyword">OR</span> <span class="keyword">$this</span>-&gt;_migration_path = APPPATH.<span class="string">'migrations/'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 迁移文件路径格式化</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_migration_path = rtrim(<span class="keyword">$this</span>-&gt;_migration_path, <span class="string">'/'</span>).<span class="string">'/'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载BASEPATH . '/language/english/migration_lang.php'</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;lang-&gt;load(<span class="string">'migration'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载数据库工厂类</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;load-&gt;dbforge();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果数据库中没有migrations表则报错退出</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;_migration_table))</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(<span class="string">'Migrations configuration file (migration.php) must have "migration_table" set.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据迁移文件的命名规则来确定用哪种正则匹配模式</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_migration_regex = (<span class="keyword">$this</span>-&gt;_migration_type === <span class="string">'timestamp'</span>)</span><br><span class="line">        ? <span class="string">'/^\d&#123;14&#125;_(\w+)$/'</span></span><br><span class="line">        : <span class="string">'/^\d&#123;3&#125;_(\w+)$/'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果迁移文件的命名规则既不是'sequential'也不是'timestamp'则报错退出</span></span><br><span class="line">    <span class="keyword">if</span> ( ! in_array(<span class="keyword">$this</span>-&gt;_migration_type, <span class="keyword">array</span>(<span class="string">'sequential'</span>, <span class="string">'timestamp'</span>)))</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(<span class="string">'An invalid migration numbering type was specified: '</span>.<span class="keyword">$this</span>-&gt;_migration_type);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果migrations表不存在则创建</span></span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">$this</span>-&gt;db-&gt;table_exists(<span class="keyword">$this</span>-&gt;_migration_table))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 一般来说，在调用 create_table() 方法的后面使用 $this-&gt;dbforge-&gt;add_field($fields); 方法来添加字段</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;dbforge-&gt;add_field(<span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'version'</span> =&gt; <span class="keyword">array</span>(<span class="string">'type'</span> =&gt; <span class="string">'BIGINT'</span>, <span class="string">'constraint'</span> =&gt; <span class="number">20</span>),</span><br><span class="line">        ));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;dbforge-&gt;create_table(<span class="keyword">$this</span>-&gt;_migration_table, <span class="keyword">TRUE</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;db-&gt;insert(<span class="keyword">$this</span>-&gt;_migration_table, <span class="keyword">array</span>(<span class="string">'version'</span> =&gt; <span class="number">0</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果启用了自动迁移，但是发现当前并不是最新版本则报错退出</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_migration_auto_latest === <span class="keyword">TRUE</span> &amp;&amp; ! <span class="keyword">$this</span>-&gt;latest())</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(<span class="keyword">$this</span>-&gt;error_string());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="version"><a href="#version" class="headerlink" title="version()"></a>version()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">version</span><span class="params">($target_version)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 获取当前版本</span></span><br><span class="line">    $current_version = <span class="keyword">$this</span>-&gt;_get_version();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 格式化目标版本</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_migration_type === <span class="string">'sequential'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        $target_version = sprintf(<span class="string">'%03d'</span>, $target_version);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $target_version = (string) $target_version;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回 migration_path 目录下的所有迁移文件的数组</span></span><br><span class="line">    $migrations = <span class="keyword">$this</span>-&gt;find_migrations();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指定的版本并没有在迁移文件数组中则报错退出</span></span><br><span class="line">    <span class="keyword">if</span> ($target_version &gt; <span class="number">0</span> &amp;&amp; ! <span class="keyword">isset</span>($migrations[$target_version]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_error_string = sprintf(<span class="keyword">$this</span>-&gt;lang-&gt;line(<span class="string">'migration_not_found'</span>), $target_version);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($target_version &gt; $current_version)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 指定的目标版本大于当前版本说明要做升级</span></span><br><span class="line">        $method = <span class="string">'up'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> ($target_version &lt; $current_version)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 小于当前版本说明要做回退</span></span><br><span class="line">        $method = <span class="string">'down'</span>;</span><br><span class="line">        <span class="comment">// 这里按照键名逆向排序， 这里排完序后便于回退处理</span></span><br><span class="line">        krsort($migrations);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 相等则说明不用迁移了</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用来存放要迁移的migrate文件</span></span><br><span class="line">    $pending = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">foreach</span> ($migrations <span class="keyword">as</span> $number =&gt; $file)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ($method === <span class="string">'up'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 这里要做升级，当$number小于等于当前版本时继续下次循环，大于指定版本时退出，也就是说大于当前版本小于指定版本的$number继续下面的流程</span></span><br><span class="line">            <span class="keyword">if</span> ($number &lt;= $current_version)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">elseif</span> ($number &gt; $target_version)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 这里要做回退，当$number大于当前版本时继续下次循环，小于等于指定版本时退出，也就是说小于当前版本大于指定版本的$number继续下面的流程</span></span><br><span class="line">            <span class="keyword">if</span> ($number &gt; $current_version)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">elseif</span> ($number &lt;= $target_version)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_migration_type === <span class="string">'sequential'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 每个迁移文件以数字序列格式递增命名，从 001 开始，每个数字都需要占三位，序列之间不能有间隙。</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($previous) &amp;&amp; abs($number - $previous) &gt; <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;_error_string = sprintf(<span class="keyword">$this</span>-&gt;lang-&gt;line(<span class="string">'migration_sequence_gap'</span>), $number);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 记录当前序列号，跟下次比较时使用</span></span><br><span class="line">            $previous = $number;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 加载migrate文件</span></span><br><span class="line">        <span class="keyword">include_once</span>($file);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// migrate文件跟类名不一致： 20200315195100_add_user_table ==&gt; Migration_add_user_table</span></span><br><span class="line">        <span class="comment">// 这里$class = Migration_Add_user_table，解释了为什么创建migrate文件时要把Migrate改成时间戳或序列号了</span></span><br><span class="line">        $class = <span class="string">'Migration_'</span>.ucfirst(strtolower(<span class="keyword">$this</span>-&gt;_get_migration_name(basename($file, <span class="string">'.php'</span>))));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 不区分大小写，就上面的例子来说所以Migration_add_user_table也能匹配到</span></span><br><span class="line">        <span class="comment">// 如果匹配不到说明加载的migrate文件不包括指定的类，报错退出</span></span><br><span class="line">        <span class="keyword">if</span> ( ! class_exists($class, <span class="keyword">FALSE</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_error_string = sprintf(<span class="keyword">$this</span>-&gt;lang-&gt;line(<span class="string">'migration_class_doesnt_exist'</span>), $class);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span> ( ! is_callable(<span class="keyword">array</span>($class, $method)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 类存在了，但是没有升级(up)或回退(down)对应的方法也要报错</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;_error_string = sprintf(<span class="keyword">$this</span>-&gt;lang-&gt;line(<span class="string">'migration_missing_'</span>.$method.<span class="string">'_method'</span>), $class);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果符合条件，将migrate文件加入到$pending数组中</span></span><br><span class="line">        $pending[$number] = <span class="keyword">array</span>($class, $method);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历执行符合条件的migrate文件</span></span><br><span class="line">    <span class="keyword">foreach</span> ($pending <span class="keyword">as</span> $number =&gt; $migration)</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(<span class="string">'debug'</span>, <span class="string">'Migrating '</span>.$method.<span class="string">' from version '</span>.$current_version.<span class="string">' to version '</span>.$number);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// migration数组首元素时类名，这里改成实际的对象然后调用call_user_func()来执行就ok了</span></span><br><span class="line">        $migration[<span class="number">0</span>] = <span class="keyword">new</span> $migration[<span class="number">0</span>];</span><br><span class="line">        call_user_func($migration);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 执行完成后$number即当前版本了，更新到数据库</span></span><br><span class="line">        $current_version = $number;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_update_version($current_version);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 执行完成后发现当前版本跟指定版本不一致，再次更新数据库，将migrate版本号设置为指定版本</span></span><br><span class="line">    <span class="keyword">if</span> ($current_version &lt;&gt; $target_version)</span><br><span class="line">    &#123;</span><br><span class="line">        $current_version = $target_version;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_update_version($current_version);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    log_message(<span class="string">'debug'</span>, <span class="string">'Finished migrating to '</span>.$current_version);</span><br><span class="line">    <span class="keyword">return</span> $current_version;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>迁移(<code>升级或回退</code>)到指定版本。</p><hr><h4 id="latest"><a href="#latest" class="headerlink" title="latest()"></a>latest()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">latest</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $migrations = <span class="keyword">$this</span>-&gt;find_migrations();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($migrations))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_error_string = <span class="keyword">$this</span>-&gt;lang-&gt;line(<span class="string">'migration_none_found'</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取migrations最后一个元素，也就是最新版本migrate文件</span></span><br><span class="line">    $last_migration = basename(end($migrations));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 升级到最新版本</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;version(<span class="keyword">$this</span>-&gt;_get_migration_number($last_migration));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="current"><a href="#current" class="headerlink" title="current()"></a>current()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">current</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;version(<span class="keyword">$this</span>-&gt;_migration_version);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>升级到指定版本，默认0，可以在配置文件中指定具体版本来覆盖默认版本即可。</p><hr><h4 id="error-string"><a href="#error-string" class="headerlink" title="error_string()"></a>error_string()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">error_string</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_error_string;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回错误信息。</p><hr><h4 id="find-migrations"><a href="#find-migrations" class="headerlink" title="find_migrations()"></a>find_migrations()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">find_migrations</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $migrations = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// globglob — 寻找与模式(*_*.php)匹配的文件路径</span></span><br><span class="line">    <span class="keyword">foreach</span> (glob(<span class="keyword">$this</span>-&gt;_migration_path.<span class="string">'*_*.php'</span>) <span class="keyword">as</span> $file)</span><br><span class="line">    &#123;</span><br><span class="line">        $name = basename($file, <span class="string">'.php'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 拿到文件之后使用migrate文件的正则匹配模式过滤文件</span></span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="keyword">$this</span>-&gt;_migration_regex, $name))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 拿到migrate文件的序列号或时间戳</span></span><br><span class="line">            $number = <span class="keyword">$this</span>-&gt;_get_migration_number($name);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 时间戳或序列号不能重复，否则报错退出</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($migrations[$number]))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;_error_string = sprintf(<span class="keyword">$this</span>-&gt;lang-&gt;line(<span class="string">'migration_multiple_version'</span>), $number);</span><br><span class="line">                show_error(<span class="keyword">$this</span>-&gt;_error_string);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 将过滤后的文件放入$migration数组中，将时间戳或序列号作为key</span></span><br><span class="line">            $migrations[$number] = $file;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据key值排序-顺序排序</span></span><br><span class="line">    ksort($migrations);</span><br><span class="line">    <span class="keyword">return</span> $migrations;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get-migration-number"><a href="#get-migration-number" class="headerlink" title="_get_migration_number()"></a>_get_migration_number()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_get_migration_number</span><span class="params">($migration)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sscanf($migration, <span class="string">'%[0-9]+'</span>, $number)</span><br><span class="line">        ? $number : <span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从migrate文件名中拿到数字部分。</p><hr><h4 id="get-migration-name"><a href="#get-migration-name" class="headerlink" title="_get_migration_name()"></a>_get_migration_name()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_get_migration_name</span><span class="params">($migration)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $parts = explode(<span class="string">'_'</span>, $migration);</span><br><span class="line">    array_shift($parts);</span><br><span class="line">    <span class="keyword">return</span> implode(<span class="string">'_'</span>, $parts);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从migrate文件名中去掉数字部分。</p><hr><h4 id="get-version"><a href="#get-version" class="headerlink" title="_get_version()"></a>_get_version()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_get_version</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $row = <span class="keyword">$this</span>-&gt;db-&gt;select(<span class="string">'version'</span>)-&gt;get(<span class="keyword">$this</span>-&gt;_migration_table)-&gt;row();</span><br><span class="line">    <span class="keyword">return</span> $row ? $row-&gt;version : <span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取数据库中保存的版本号，即当前版本。</p><hr><h4 id="update-version"><a href="#update-version" class="headerlink" title="_update_version()"></a>_update_version()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_update_version</span><span class="params">($migration)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;db-&gt;update(<span class="keyword">$this</span>-&gt;_migration_table, <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'version'</span> =&gt; $migration</span><br><span class="line">    ));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将指定版本更新到数据库中。</p><hr><h4 id="get"><a href="#get" class="headerlink" title="__get()"></a>__get()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($var)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> get_instance()-&gt;$var;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>魔术方法，用于使用超级对象CI。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;使用迁移类可以很方便的组织和管理数据库的变更，该类包含8个成员变量和11个成员方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
      <category term="Codeigniter" scheme="https://pureven.cc/tags/Codeigniter/"/>
    
  </entry>
  
  <entry>
    <title>Phpstorm License</title>
    <link href="https://pureven.cc/2020/03/11/phpstormm-about-license/"/>
    <id>https://pureven.cc/2020/03/11/phpstormm-about-license/</id>
    <published>2020-03-11T00:34:00.000Z</published>
    <updated>2020-04-13T04:06:04.741Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>本文持续跟进phpstorm可用的license。</p><a id="more"></a><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><ol><li><p>将下列配置加入<code>hosts</code>文件。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> <span class="string">https://account.jetbrains.com:443</span></span><br><span class="line"><span class="number">1.2</span><span class="number">.3</span><span class="number">.4</span> <span class="string">account.jetbrains.com</span></span><br><span class="line"><span class="number">1.2</span><span class="number">.3</span><span class="number">.4</span> <span class="string">http://www.jetbrains.com</span></span><br><span class="line"><span class="number">1.2</span><span class="number">.3</span><span class="number">.4</span> <span class="string">www-weighted.jetbrains.com</span></span><br><span class="line"><span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> <span class="string">account.jetbrains.com</span></span><br></pre></td></tr></table></figure></li><li><p>命令行执行<code>ipconfig /flushdns</code>刷新DNS缓存。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Microsoft Windows [版本 10.0.18362.657]</span><br><span class="line">(c) 2019 Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">C:\Users\39260&gt;ipconfig /flushdns</span><br></pre></td></tr></table></figure></li><li><p>打开Phpstorm，选择<code>Enter Key</code>，然后选择<code>Activation code</code>，输入下面License。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E70JHCOV2H-eyJsaWNlbnNlSWQiOiJFNzBKSENPVjJIIiwibGljZW5zZWVOYW1lIjoi5bGx5Lic55CG5bel5aSn5a2mIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAyMS0wMi0xOCJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAyMS0wMi0xOCJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4In0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAyMS0wMi0xOCJ9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjAyMS0wMi0xOCJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4In0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgifSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAyMS0wMi0xOCJ9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgifSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgifV0sImhhc2giOiIxNjc5MTgwMy8wIiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-qlgtO4xVGHX/r45fIKMaR6B9pWQtucrCYVsz0o00crcAiYN1k/kSMygggYl187B0u0jeXQCe4BmQIItKL79x6NwoPn43inreVhZ88f4+Cbl+V/KGeAYeybon+7YoTs8FY4+31ANW/LwBPxkPnlErxYdQ6oc/k6mnxIOm5Nf8WjKRfYYIl5Bhmdt1gHMGgFsocCcTLLiqDUGEcPj5tUIJXwwYaeKAR3YGXm/P73QpnYR/BcGaodBN3jprQRxsS5Ia5y06rrDAJcPSZuttAFpAit/4o/gq2XzhrjaBCtOMxNzk3XEAT82glTlWQOQx6KnRq6D7WUXzd81g44aP+Dca5Q==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</span><br></pre></td></tr></table></figure></li></ol><p><strong>注：该license维保期到<code>2021年2月9号</code>。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;本文持续跟进phpstorm可用的license。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="https://pureven.cc/categories/Tools/"/>
    
    
      <category term="PHPStorm" scheme="https://pureven.cc/tags/PHPStorm/"/>
    
  </entry>
  
  <entry>
    <title>Nginx高级配置</title>
    <link href="https://pureven.cc/2020/03/08/nginx-advanced-conf/"/>
    <id>https://pureven.cc/2020/03/08/nginx-advanced-conf/</id>
    <published>2020-03-08T06:15:46.000Z</published>
    <updated>2020-04-13T00:41:43.128Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p><a href="https://pureven.cc/2020/03/06/nginx-simple-conf-with-php-fpm/">上文</a>对Windows平台下搭建Nginx + PHP环境做了介绍，通过上文的配置通过<code>http://localhost:6688/index.php</code>访问本地的index.php文件。这时index.php文件是通过后端服务器进行解析的，此时Nginx作为代理服务器，本文对Nginx作为代理服务器进行介绍以及一些其他功能。</p><a id="more"></a><hr><h4 id="正向代理与反向代理"><a href="#正向代理与反向代理" class="headerlink" title="正向代理与反向代理"></a>正向代理与反向代理</h4><h5 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h5><p>正向代理也是大家最常接触的到的代理模式，我们会从两个方面来说关于正向代理的处理模式，分别从软件方面和生活方面来解释一下什么叫正向代理。比如我们想要访问facebook，但是因为国内的网络环境我们是访问不了的，我们就会去使用一些翻墙工具，帮助我们访问facebook，那么翻墙工具背后实际上就是一个可以访问国外网站的代理服务器，我们将请求发送给代理服务器，代理服务器去访问国外的网站，然后将访问到的数据传递给我们。 </p><p>上述这样的代理模式称为正向代理，<code>正向代理最大的特点是客户端非常明确要访问的服务器地址；服务器只清楚请求来自哪个代理服务器，而不清楚来自哪个具体的客户端；正向代理模式屏蔽或者隐藏了真实客户端信息。</code><br><img src="/2020/03/08/nginx-advanced-conf/20200308163752.png" alt></p><h5 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h5><p>某宝网站，每天同时连接到网站的访问人数已经爆表，单个服务器远远不能满足人民日益增长的购买欲望了，此时就出现了一个大家耳熟能详的名词：<code>分布式部署，即通过部署多台服务器来解决访问人数限制的问题</code>；某宝网站中大部分功能也是直接使用<code>Nginx</code>进行反向代理实现的。<br><img src="/2020/03/08/nginx-advanced-conf/20200308164312.png" alt><br>多个客户端给服务器发送的请求，Nginx服务器接收到之后，按照一定的规则分发给了后端的业务处理服务器进行处理了。此时~请求的来源也就是客户端是明确的，但是请求具体由哪台服务器处理的并不明确了，Nginx扮演的就是一个反向代理角色。</p><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><p>本地是Windows系统，当访问localhost:6688/index.php时结果如下：<br><img src="https://pureven.cc/2020/03/06/nginx-simple-conf-with-php-fpm/20200306144934.png" alt><br>此时有一个Linux平台，当通过本地Nginx服务器去代理Linux服务器时步骤如下：</p><ol><li><p>修改本地<code>nginx.conf</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">listen</span> <span class="number">6688</span><span class="string">;</span></span><br><span class="line">    <span class="string">server_name</span> <span class="string">localhost;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">location</span> <span class="string">^~</span> <span class="string">/pureven</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">proxy_pass</span> <span class="string">http://192.168.31.3:80/index.php;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>修改Linux(192.168.31.3)服务器<code>nginx.conf</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">listen</span> <span class="number">80</span><span class="string">;</span></span><br><span class="line">    <span class="string">server_name</span> <span class="string">localhost;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">location</span> <span class="string">~</span> <span class="string">\.php$</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">root</span> <span class="string">html;</span> </span><br><span class="line">        <span class="string">fastcgi_pass</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:16688;</span></span><br><span class="line">        <span class="string">fastcgi_index</span> <span class="string">index.php;</span></span><br><span class="line">        <span class="string">fastcgi_param</span> <span class="string">SCRIPT_FILENAME</span> <span class="string">$document_root$fastcgi_script_name;</span></span><br><span class="line">        <span class="string">include</span> <span class="string">fastcgi_params;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>修改Linux(192.168.31.3)服务器<code>www.conf</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">listen</span> <span class="string">=</span> <span class="number">16688</span></span><br></pre></td></tr></table></figure></li><li><p>浏览器访问<code>localhost:6688/pureven</code><br><img src="/2020/03/08/nginx-advanced-conf/20200308170806.png" alt></p></li><li><p>proxy_pass使用方法参考<span class="exturl" data-url="aHR0cHM6Ly94dWV4Yi5naXRodWIuaW8vbGVhcm4tbmdpbngvZXhhbXBsZS9wcm94eV9wYXNzLmh0bWwjdXJsLSVFNSU4RiVBQSVFNiU5OCVBRi1ob3N0" title="https://xuexb.github.io/learn-nginx/example/proxy_pass.html#url-%E5%8F%AA%E6%98%AF-host">proxy_pass url 反向代理的坑<i class="fa fa-external-link"></i></span>。</p></li></ol><hr><h4 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h4><p><strong>当我们的应用单例不能支撑用户请求时，此时就需要扩容，从一台服务器扩容到两台、几十台、几百台，我们需要一个入口，将客户端请求均衡分布在后台的多个服务器上。负载均衡在服务端开发中算是一个比较重要的特性，Nginx提供的负载均衡可以实现<code>上游服务器的负载均衡</code>、<code>故障转移</code>、<code>失败重试</code>、<code>容错</code>、<code>健康检查</code>，当某些上游服务器出现问题时，可以将请求转到其它的上游服务器从而保障高可用。</strong></p><h5 id="upstream指令"><a href="#upstream指令" class="headerlink" title="upstream指令"></a>upstream指令</h5><p>Nginx通过如下配置负载均衡到真实的处理业务的服务器(即<code>上游服务器</code>)：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">upstream</span> <span class="string">backend</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">server</span> <span class="string">backend1.example.com</span>       <span class="string">weight=5;</span></span><br><span class="line">    <span class="string">server</span> <span class="string">backend2.example.com:8080;</span></span><br><span class="line">    <span class="string">server</span> <span class="string">unix:/tmp/backend3;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">server</span> <span class="string">backup1.example.com:8080</span>   <span class="string">backup;</span></span><br><span class="line">    <span class="string">server</span> <span class="string">backup2.example.com:8080</span>   <span class="string">backup;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">proxy_pass</span> <span class="string">http://backend;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p><code>upstream</code>指令当中包含<code>server</code>指令</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">语法:</span><span class="string">server</span> <span class="string">address</span> <span class="string">[parameters];</span></span><br><span class="line"><span class="string">默认值:</span><span class="string">—</span></span><br><span class="line"><span class="string">上下文:</span><span class="string">upstream</span></span><br></pre></td></tr></table></figure><p>下面介绍部分parameters:</p><ul><li><strong>weight</strong>: 设定服务器的<code>权重</code>，默认是1，权重越大被访问机会越大，要根据机器的配置情况来配置</li><li><strong>max_fails</strong>: 设定Nginx与服务器通信的<code>尝试失败的次数</code>。在<code>fail_timeout</code>参数定义的时间段内，如果失败的次数达到此值，Nginx就认为服务器不可用。在下一个fail_timeout时间段，服务器不会再被尝试。 失败的尝试次数默认是1。可以通过指令<code>proxy_next_upstream</code> 和<code>memcached_next_upstream</code>来配置什么是失败的尝试。 <code>默认配置时，http_404状态不被认为是失败的尝试</code>。</li><li><strong>fail_timeout</strong>: <code>统计失败尝试次数的时间段</code>。在这段时间中，服务器失败次数达到指定的尝试次数，服务器就被认为不可用。默认情况下，该超时时间是10秒。</li><li><strong>backup</strong>: 标记为<code>备用服务器</code>。当主服务器不可用以后，请求会被传给这些服务器，配置这个指令可以实现故障转移。</li><li><strong>down</strong>: 标记服务器<code>永久不可用</code>，可以跟<code>ip_hash</code>指令一起使用。</li></ul><h5 id="负载均衡机制"><a href="#负载均衡机制" class="headerlink" title="负载均衡机制"></a>负载均衡机制</h5><h6 id="轮询"><a href="#轮询" class="headerlink" title="轮询"></a>轮询</h6><p>默认的轮询方式，即每一个来自网络中的请求，轮流分配给内部的服务器，从1到N然后重新开始。此种负载均衡算法适合<code>服务器组内部的服务器都具有相同的配置并且平均服务请求相对均衡的情况。</code></p><h6 id="加权轮询"><a href="#加权轮询" class="headerlink" title="加权轮询"></a>加权轮询</h6><p>通过<code>weight</code>参数控制权重，根据服务器的不同处理能力，给每个服务器分配不同的权值，使其能够接受相应权值数的服务请求。例如：服务器A的权值被设计成1，B的权值是3，C的权值是6，则服务器A、B、C将分别接受到10%、30％、60％的服务请求。<code>此种均衡算法能确保高性能的服务器得到更多的使用率，避免低性能的服务器负载过重。</code></p><h6 id="IP-Hash"><a href="#IP-Hash" class="headerlink" title="IP Hash"></a>IP Hash</h6><p>在upstream当中配置ip_hash;<br>这种方式通过生成请求源IP的哈希值，并通过这个哈希值来找到正确的真实服务器。这意味着对于同一主机来说他对应的服务器总是相同。使用这种方式，你不需要保存任何源IP。将客户端会话”沾住”或者”持久化”，以便总是能选择特定服务器，那么可以使用ip-hash负载均衡机制。<code>使用ip-hash时，客户端IP地址作为hash key使用，用来决策选择服务器集群中的哪个服务器来处理这个客户端的请求。这个方法保证从同一个客户端发起的请求总是定向到同一台服务器，除非服务器不可用。</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">upstream</span> <span class="string">backend&#123;</span></span><br><span class="line">    <span class="string">ip_hash;</span></span><br><span class="line">    <span class="string">server</span> <span class="number">192.168</span><span class="number">.128</span><span class="number">.1</span><span class="string">:8080</span> <span class="string">;</span></span><br><span class="line">    <span class="string">server</span> <span class="number">192.168</span><span class="number">.128</span><span class="number">.2</span><span class="string">:8080</span> <span class="string">;</span></span><br><span class="line">    <span class="string">server</span> <span class="number">192.168</span><span class="number">.128</span><span class="number">.3</span><span class="string">:8080</span> <span class="string">down;</span></span><br><span class="line">    <span class="string">server</span> <span class="number">192.168</span><span class="number">.128</span><span class="number">.4</span><span class="string">:8080</span> <span class="string">down;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">listen</span> <span class="number">8081</span><span class="string">;</span></span><br><span class="line">    <span class="string">server_name</span> <span class="string">test.csdn.net;</span></span><br><span class="line">    <span class="string">root</span> <span class="string">/home/system/test.csdn.net/test;</span></span><br><span class="line">    <span class="string">location</span> <span class="string">^~</span> <span class="string">/Upload/upload</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">proxy_pass</span> <span class="string">http://backend;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>当你服务端的一个特定url路径会被同一个用户连续访问时，如果负载均衡策略还是轮询的话，那该用户的多次访问会被打到各台服务器上，<strong>这显然并不高效（会建立多次http链接等问题）</strong>。甚至考虑一种极端情况，<strong>用户需要分片上传文件到服务器下，然后再由服务器将分片合并，这时如果用户的请求到达了不同的服务器，那么分片将存储于不同的服务器目录中，导致无法将分片合并</strong>。所以，此类场景可以考虑采用nginx提供的ip_hash策略。既能满足每个用户请求到同一台服务器，又能满足不同用户之间负载均衡。</p><h6 id="最少连接数"><a href="#最少连接数" class="headerlink" title="最少连接数"></a>最少连接数</h6><p>在upstream当中配置least_conn实现最少连接数，客户端的每一次请求服务在服务器停留的时间可能会有较大的差异，随着工作时间加长，如果采用简单的轮循或随机均衡算法，每一台服务器上的连接进程可能会产生极大的不同，并没有达到真正的负载均衡。<code>最少连接数均衡算法对内部中需负载的每一台服务器都有一个数据记录，记录当前该服务器正在处理的连接数量，当有新的服务连接请求时，将把当前请求分配给连接数最少的服务器，使均衡更加符合实际情况，负载更加均衡。</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">upstream</span> <span class="string">backend</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">server</span> <span class="string">backend1.example.com</span> <span class="string">weight=5;</span></span><br><span class="line">    <span class="string">server</span> <span class="string">backend2.example.com:8080;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">upstream</span> <span class="string">backend</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">ip_hash;</span>   <span class="comment">#哈希</span></span><br><span class="line">    <span class="string">least_conn;</span> <span class="comment">#最少连接数</span></span><br><span class="line">    <span class="string">server</span>  <span class="string">nginx.23673.com:9502</span> <span class="string">max_fails=3</span> <span class="string">fail_timeout=5s;</span></span><br><span class="line">    <span class="string">server</span>  <span class="string">nginx.23673.com:9503</span> <span class="string">backup</span> <span class="string">max_fails=3</span> <span class="string">fail_timeout=5s;</span></span><br><span class="line">    <span class="string">server</span>  <span class="string">nginx.23673.com:9503</span> <span class="string">down</span> <span class="string">max_fails=3</span> <span class="string">fail_timeout=5s;</span></span><br><span class="line">    <span class="string">server</span>  <span class="string">nginx.23673.com:9502</span> <span class="string">max_fails=3</span> <span class="string">fail_timeout=5s;</span></span><br><span class="line">    <span class="string">server</span>  <span class="string">nginx.23673.com:9502</span> <span class="string">max_fails=3</span> <span class="string">fail_timeout=5s;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h6 id="URL-Hash"><a href="#URL-Hash" class="headerlink" title="URL Hash"></a>URL Hash</h6><p>一般来讲，要用到url hash，是要配合缓存命中来使用。例如：有一个服务器集群A，需要对外提供文件下载，由于文件上传量巨大，没法存储到服务器磁盘中，所以用到了第三方云存储来做文件存储。服务器集群A收到客户端请求之后，需要从云存储中下载文件然后返回，为了省去不必要的网络带宽和下载耗时，在服务器集群A上做了一层临时缓存（缓存一个月）。<strong>由于是服务器集群，所以同一个资源多次请求，可能会到达不同的服务器上，导致不必要的多次下载，缓存命中率不高，以及一些资源时间的浪费</strong>。在此类场景下，<code>为了使得缓存命中率提高，很适合使用url_hash策略，同一个url（也就是同一个资源请求）会到达同一台机器，一旦缓存住了资源，再此收到请求，就可以从缓存中读取，既减少了带宽，也减少的下载时间。</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">upstream</span> <span class="string">somestream</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">hash</span> <span class="string">$request_uri;</span></span><br><span class="line">    <span class="string">server</span> <span class="number">192.168</span><span class="number">.244</span><span class="number">.1</span><span class="string">:8080;</span></span><br><span class="line">    <span class="string">server</span> <span class="number">192.168</span><span class="number">.244</span><span class="number">.2</span><span class="string">:8080;</span></span><br><span class="line">    <span class="string">server</span> <span class="number">192.168</span><span class="number">.244</span><span class="number">.3</span><span class="string">:8080;</span></span><br><span class="line">    <span class="string">server</span> <span class="number">192.168</span><span class="number">.244</span><span class="number">.4</span><span class="string">:8080;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">listen</span> <span class="number">8081</span> <span class="string">default;</span></span><br><span class="line">    <span class="string">server_name</span> <span class="string">test.csdn.net;</span></span><br><span class="line">    <span class="string">charset</span> <span class="string">utf-8;</span></span><br><span class="line">    <span class="string">location</span> <span class="string">/get</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">proxy_pass</span> <span class="string">http://somestream;</span></span><br><span class="line">    <span class="string">&#125;</span>  </span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><hr><h4 id="失败重试"><a href="#失败重试" class="headerlink" title="失败重试"></a>失败重试</h4><h5 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h5><p>通过配置上游服务器<code>max_fails</code>和<code>fail_timeout</code>，指定每个上游服务器，当fail_timeout时间内失败了max_fails次请求，则认为该上游服务器不可用/不存活，然后这段时间将不会访问这台上游服务器，fail_timeout时间后会再次进行重试。<br>max_fails=2 fail_timeout=30s 这2个一起搭配使用表示<code>当失败2次的时候，就停止使30秒</code>，<code>这样既可以避免重复请求，不能访问或者暂时不能访问的服务，增大服务器的压力，也可以灵活的做到当服务器可用时再次访问。</code></p><p><code>proxy_next_upstream</code>定义了什么情况下算作请求失败</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">语法:</span> <span class="string">proxy_next_upstream</span> <span class="string">error</span> <span class="string">|</span> <span class="string">timeout</span> <span class="string">|</span> <span class="string">invalid_header</span> <span class="string">|</span> <span class="string">http_500</span> <span class="string">|</span> <span class="string">http_502</span> <span class="string">http_503</span> <span class="string">|</span> <span class="string">http_504</span> <span class="string">|http_404</span> <span class="string">|</span> <span class="string">off</span> <span class="string">...;</span> </span><br><span class="line"><span class="string">默认值:</span> <span class="string">proxy_next_upstream</span> <span class="string">error</span> <span class="string">timeout;</span> </span><br><span class="line"><span class="string">上下文:</span> <span class="string">http,</span> <span class="string">server,</span> <span class="string">location</span></span><br></pre></td></tr></table></figure><ul><li><strong>error</strong> 表示和后端服务器建立连接时，或者向后端服务器发送请求时，或者从后端服务器接收响应头时，出现错误。</li><li><strong>timeout</strong> 表示和后端服务器建立连接时，或者向后端服务器发送请求时，或者从后端服务器接收响应头时，出现超时。</li><li><strong>invalid_header</strong> 表示后端服务器返回空响应或者非法响应头。</li><li><strong>http_500</strong> 表示后端服务器返回的响应状态码为500。</li><li><strong>off</strong> 表示停止将请求发送给下一台后端服务器。</li></ul><p><strong>重试不能无限制进行，因此，需要控制重试次数和重试超时时间的指令。</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置重试次数，默认0表示不限制，注意此重试次数指的是所有请求次数（包括第一次和之后的重试次数之和）。</span></span><br><span class="line"><span class="string">proxy_next_upstream_tries</span> <span class="string">number</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置重试最大超时时间，默认0表示不限制，即在proxy_next_upstream_timeout时间内允许proxy_next_upstream_tries次重试。</span></span><br><span class="line"><span class="comment"># 如果超过了其中一个设置，则Nginx也会结束重试并返回客户端响应（可能是错误码）。</span></span><br><span class="line"><span class="string">proxy_next_upstream_timeout</span> <span class="string">time</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 后端服务器数据回传时间(代理发送超时时间)</span></span><br><span class="line"><span class="string">proxy_send_timeout</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接成功后，后端服务器响应时间(代理接收超时时间)</span></span><br><span class="line"><span class="string">proxy_read_timeout</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx连接后端的超时时间，一般不超过75s</span></span><br><span class="line"><span class="string">proxy_connect_timeout</span></span><br></pre></td></tr></table></figure><h5 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="comment">#proxy_next_upstream timeout; #超时切换到下一台服务器,注意备用服务器切换问题</span></span><br><span class="line">    <span class="comment">#超时时间</span></span><br><span class="line">    <span class="string">proxy_connect_timeout</span> <span class="number">20</span><span class="string">;</span></span><br><span class="line">    <span class="string">proxy_send_timeout</span> <span class="number">30</span><span class="string">;</span></span><br><span class="line">    <span class="string">proxy_read_timeout</span> <span class="number">30</span><span class="string">;</span></span><br><span class="line">    <span class="string">proxy_next_upstream_tries</span> <span class="number">1</span><span class="string">;</span> <span class="comment">#代理请求的重试次数</span></span><br><span class="line">    <span class="string">proxy_next_upstream_timeout</span> <span class="number">1</span><span class="string">;</span> <span class="comment">#重试的超时时间</span></span><br><span class="line">    <span class="string">proxy_pass</span>   <span class="string">http://backend;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><hr><h4 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h4><p>基于IP的访问控制，基于Nginx的http_access_module模块，是Nginx本身内置的模块，不需要安装的时候配置。也就是允许哪些IP访问，不允许哪些IP访问。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">  <span class="string">listen</span>       <span class="number">80</span><span class="string">;</span></span><br><span class="line">  <span class="string">server_name</span> <span class="string">example.com;</span></span><br><span class="line">  <span class="string">access_log</span> <span class="string">logs/access.log</span> <span class="string">main;</span></span><br><span class="line"></span><br><span class="line">  <span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">       <span class="string">deny</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span><span class="string">;</span></span><br><span class="line">       <span class="string">allow</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span><span class="string">/24;</span></span><br><span class="line">       <span class="string">allow</span> <span class="number">10.1</span><span class="number">.1</span><span class="number">.0</span><span class="string">/16;</span></span><br><span class="line">       <span class="string">allow</span> <span class="number">2001</span><span class="string">:0db8::/32;</span></span><br><span class="line">       <span class="string">deny</span> <span class="string">all;</span></span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>从上到下的顺序，类似iptables。匹配到了便跳出。如上的例子先禁止了192.16.1.1，接下来允许了3个网段，其中包含了一个ipv6，最后未匹配的IP全部禁止访问.被deny的将返回403状态码。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">  <span class="string">listen</span>       <span class="number">80</span><span class="string">;</span></span><br><span class="line">  <span class="string">server_name</span> <span class="string">example.com;</span></span><br><span class="line">  <span class="string">access_log</span> <span class="string">logs/access.log</span> <span class="string">main;</span></span><br><span class="line"></span><br><span class="line">  <span class="string">location</span> <span class="string">~</span> <span class="string">^/phpmyadmin/</span> <span class="string">&#123;</span></span><br><span class="line">      <span class="string">allow</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span><span class="string">/24;</span></span><br><span class="line">      <span class="string">deny</span> <span class="string">all;</span></span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>只允许局域网访问。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">  <span class="string">listen</span>       <span class="number">80</span><span class="string">;</span></span><br><span class="line">  <span class="string">server_name</span> <span class="string">example.com;</span></span><br><span class="line">  <span class="string">access_log</span> <span class="string">logs/access.log</span> <span class="string">main;</span></span><br><span class="line">   <span class="string">location</span> <span class="string">/project</span> <span class="string">&#123;</span>  </span><br><span class="line">       <span class="string">allow</span>   <span class="number">220.178</span><span class="number">.25</span><span class="number">.22</span><span class="string">;</span>  </span><br><span class="line">       <span class="string">allow</span>   <span class="number">172.2</span><span class="number">.2</span><span class="number">.0</span><span class="string">/24;</span>  </span><br><span class="line">       <span class="string">allow</span>   <span class="number">192.2</span><span class="number">.2</span><span class="number">.0</span><span class="string">/24;</span>  </span><br><span class="line">       <span class="string">deny</span>    <span class="string">all;</span>  </span><br><span class="line">       <span class="string">proxy_pass</span> <span class="string">http://172.2.2.20:8080/project/;</span>  </span><br><span class="line">       <span class="string">proxy_set_header</span>   <span class="string">Host</span>    <span class="string">$host:$server_port;</span>  </span><br><span class="line">       <span class="string">proxy_set_header</span>   <span class="string">X-Real-IP</span>   <span class="string">$remote_addr;</span>   </span><br><span class="line">       <span class="string">proxy_set_header</span>   <span class="string">X-Forwarded-For</span> <span class="string">$proxy_add_x_forwarded_for;</span>  </span><br><span class="line">       <span class="string">client_max_body_size</span>    <span class="string">10m;</span>  </span><br><span class="line">   <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>以上配置的作用是允许IP为220.178.25.22，以及172和192网段的机器可以访问这个location地址，其他IP的客户端访问均是403。其中，24是指子网掩码为255.255.255.0。</p><hr><h4 id="防盗链"><a href="#防盗链" class="headerlink" title="防盗链"></a>防盗链</h4><h5 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h5><p>盗链是一种损害原有网站合法利益，给原网站所在服务器造成额外负担的非法行为。要采取防盗链的措施，首先需要了解盗链的实现原理。 客户端向服务器请求资源时，为了减少网络带宽，提高响应时间，服务器一般不会一次将所有资源完整地传回给客户端。比如在请求一个网页时，首先会传回该网页的文本内容，当客户端浏览器在解析文本的过程中发现有图片存在时，会再次向服务器发起对该图片资源的请求，服务器将存储的图片资源再发送给客户端。在这个过程中，如果该服务器上只包含了网页的文本内容，并没有存储相关的图片资源，而是将图片资源链接到其他站点的服务器上去了，这就形成了盗链行为。</p><p>比如内网用户通过Internet访问域名为<code>www.test.com</code>这个服务器上的WEB服务，而该服务器没有存储图片资源，而是将图片链接到域名为<code>www.fz.com</code>服务器上，这就形成了盗链行为。这种情况下客户端请求图片资源实际上是来自其他的服务器。<code>要实现防盗链，需要了解HTTP协议中的请求头部的Referer头域和采用URL的格式表示访问当前网页或者文件的源地址。通过该头域的值，我们可以检测到访问目标资源的源地址。这样，如果我们检测到Referer头域中的值并不是自己站点内的URL，就采取组织措施，实现防盗链。</code><strong>需要注意是，由于Referer头域中的值可以被更改的，因此该方法不能完全阻止所有盗链行为。</strong></p><h5 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h5><p>一般来说，遵照HTTP协议实现的浏览器，在从A网站访问B网站时，都会带上当前网站的URL，以表明此次点击是从何而起的。因此， Nginx的这个模块也是依靠这个来实现，所以，如果不加此头部，还是没法愉快的防盗图。</p><p>Nginx配置中有一个指令<code>valid_referers</code>，用来获取Referer头域中的值，并且根据该值的情况给Nginx全局变量<code>$invalid_referer</code>的值，<code>如果Referer头域中没有符合valid_referers指令配置的值，$invalid_referer变量将会被赋值为1</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">语法:</span> <span class="string">valid_referers</span> <span class="string">none</span> <span class="string">|</span> <span class="string">blocked</span> <span class="string">|</span> <span class="string">server_names</span> <span class="string">|</span> <span class="string">string</span> <span class="string">...;</span></span><br><span class="line"><span class="string">默认值:</span> <span class="string">—</span></span><br><span class="line"><span class="string">上下文:</span> <span class="string">server,</span> <span class="string">location</span></span><br></pre></td></tr></table></figure><ul><li><code>none</code> 请求标头中缺少<code>Referer</code>字段，也就是说Referer为空，<code>浏览器直接访问的时候Referer一般为空</code>。比如直接从浏览器输入资源的链接地址访问资源时没有<code>Referer头域</code>的。</li><li><code>blocked</code> <code>Referer</code>字段出现在请求标头中，但其值已被防火墙或代理服务器删除; 这些值是不以<code>http://</code> 或 <code>https://</code> 开头的字符串。</li><li><code>server_names</code> 服务器名称，也就是域名列表。设置一个或多个URL,检测<code>Referer头域</code>的值是否是域名列表中的某个。从nginx 0.5.33以后支持使用通配符<code>*</code>。</li></ul><h5 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">location</span> <span class="string">~*</span> <span class="string">^.+\.(jpg|gif|png|swf|flv|wma|wmv|asf|mp3|mmf|zip|rar)$</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">valid_referers</span> <span class="string">none</span> <span class="string">blocked</span> <span class="string">www.pureven.com</span> <span class="string">pureven.com</span> <span class="string">server_names</span> <span class="string">~\.google\.;</span></span><br><span class="line">    <span class="string">if</span> <span class="string">($invalid_referer)</span> <span class="string">&#123;</span></span><br><span class="line">       <span class="string">return</span> <span class="number">404</span><span class="string">;</span></span><br><span class="line">       <span class="comment"># rewrite ^/ http://www.pureven.com/404.jpg;</span></span><br><span class="line">     <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>以上所有来自<code>pureven.com</code>和域名中包含<code>google</code>的站点都可以访问当前站点的图片。</p><ol><li>如果域名不在这个列表中，那么<code>$invalid_referer</code>的值为<code>1</code>，在if语句中返回404给用户，如果使用下面的<code>rewrite</code>，那么会返回一个404含义的图片。</li><li>如果用户直接在浏览器中输入资源的地址是可以访问该资源的，因为符合<code>none</code>的规则，即Referer头域不存在。</li></ol><hr><h4 id="限流"><a href="#限流" class="headerlink" title="限流"></a>限流</h4><p>电商平台营销时候，经常会碰到的大流量问题，除了做流量分流处理，可能还要做用户黑白名单、信誉分析，进而根据用户ip信誉权重做相应的流量拦截、限制流量。Nginx自身有的请求限制模块<span class="exturl" data-url="aHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfbGltaXRfcmVxX21vZHVsZS5odG1s" title="http://nginx.org/en/docs/http/ngx_http_limit_req_module.html">ngx_http_limit_req_module<i class="fa fa-external-link"></i></span>、流量限制模块<span class="exturl" data-url="aHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfbGltaXRfY29ubl9tb2R1bGUuaHRtbA==" title="http://nginx.org/en/docs/http/ngx_http_limit_conn_module.html">ngx_stream_limit_conn_module<i class="fa fa-external-link"></i></span>基于<strong>漏桶算法</strong>，可以方便的控制请求速率，自定义调节限流，实现基本的限流控制。对于提供下载的网站，肯定是要进行流量控制的，例如软件下载站、视频服务等。它也可以减少一些爬虫程序或者<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLWNuLyVFOSU5OCVCQiVFNiU5NiVCNyVFNiU5QyU4RCVFNSU4QiU5OSVFNiU5NCVCQiVFNiU5MyU4QQ==" title="https://zh.wikipedia.org/zh-cn/%E9%98%BB%E6%96%B7%E6%9C%8D%E5%8B%99%E6%94%BB%E6%93%8A">DDOS的攻击<i class="fa fa-external-link"></i></span>。</p><h5 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h5><p>漏桶算法要解决的一个核心问题，便是如何<code>将不断变化的访问量，变成相对稳定的一个访问量</code>。这么说可能太过抽象，举一个实际的例子，NGINX 接收到互联网上的请求，速率是 n requests/second，或者说 n RPS，但这个 n 是不可控制的，可能是 0.1，也可能是 10 万。NGINX 需要将这些请求发送给后台的 PHP-FPM 服务去处理。假如被访问的 PHP 脚本，能稳定处理的 RPS 是 1 万，而实际的访问量正不断在 0.1 RPS 和 10 万 RPS 之间徘徊，那么有什么办法可以让 PHP-FPM 接受到来自 NGINX 的请求能相对稳定，这就是漏桶算法需要解决的问题。</p><p>漏桶这个名字，其实就非常形象的描述了算法本身的原理。大家都知道，一个身上打了 n 个眼儿的桶，无论你倒进桶里的水多还是少，漏出来的水的流速也会保持稳定，这就是此算法的本质。再以 NGINX + PHP-FPM 为例，<code>我们在 NGINX 配置里定义一个最大处理请求的速度，如果 PHP-FPM 的稳定处理速度峰值是 1000 RPS，那就在 NGINX 里定义处理请求速度最大为 1000 RPS。当 RPS 已经大于这个值的时候，多出来的请求就被 NGINX 这个桶暂时储存起来，排着队等待处理。在 NGINX 的精心照料下，PHP-FPM 会相对稳定的处理来自 NGINX 的请求，而不会出现突然暴增的请求让 PHP-FPM 处理不过来，甚至挂掉。然而桶也有大小，NGINX 也一样，假如请求太多太多，桶都装不下了，那么桶将会把多出来的请求直接漏掉，返回 503 错误。</code>而如果用户浏览器发起请求时，服务器的 RPS 还在 1000 以内，那就看不出什么变化；但如果发起请求的时候正好赶上访问高峰期，那么浏览器会一直等待响应，直到请求“漏”给了 PHP-FPM 处理；极端情况，如果赶上访问多得服务器无法承受时，用户就只能得到一个 503 错误。精心呵护 PHP-FPM 避免出现因压力突然增大而导致的雪崩效应，是漏桶的一种用法。然而，没有网站愿意返回 503 错误信息给用户。不过有一种访问，叫恶意访问，以不让服务器罢工不罢休为目的，这种恶意访问叫 <code>DDOS（Distributed Denial of Service）</code>，而漏桶更多是用在防止 DDOS 攻击上。</p><p>大部分 DDOS，都属于低成本 DDOS 攻击，也就是通过一台或者几台机器，不断向服务器发起请求来实现的。<code>我们只要给每一个 IP 设置一个“桶”，并做一个限制：每个 IP 一秒最多只能有 10 次请求，否则视为有问题的请求。</code>在 NGINX 的配置上体现为：10 RPS，桶的大小为 0，如果一秒内有超过 10 个请求被处理，多出来的请求会立马返回 503。当然这种处理方式也是略显粗暴，配置不好会误伤小区宽带内的正常访问。</p><h5 id="关于漏桶算法"><a href="#关于漏桶算法" class="headerlink" title="关于漏桶算法"></a>关于漏桶算法</h5><p>漏桶(Leaky Bucket)算法思路很简单,水(请求)先进入到漏桶里,漏桶以一定的速度出水(接口有响应速率),当水流入速度过大会直接溢出(访问频率超过接口响应速率),然后就拒绝请求,可以看出漏桶算法能强行限制数据的传输速率.示意图如下<br><img src="/2020/03/08/nginx-advanced-conf/20200310204402.png" alt><br>可见这里有两个变量,一个是桶的大小,支持流量突发增多时可以存多少的水(burst),另一个是水桶漏洞的大小(rate)。</p><p>我们假设系统是一个漏桶，当请求到达时，就是往漏桶里“加水”，而当请求被处理掉，就是水从漏桶的底部漏出。水漏出的速度是固定的，当“加水”太快，桶就会溢出，也就是“拒绝请求”。从而使得桶里的水的体积不可能超出桶的容量。主要目的是控制数据注入到网络的速率，平滑网络上的突发流量。漏桶算法提供了一种机制，通过它，突发流量可以被整形以便为网络提供一个稳定的流量。</p><h5 id="相关指令"><a href="#相关指令" class="headerlink" title="相关指令"></a>相关指令</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">limit_req_zone</span>  <span class="string">$binary_remote_addr</span>  <span class="string">zone=req_one:20m</span> <span class="string">rate=10r/s;</span></span><br></pre></td></tr></table></figure><p>该指令只能在<code>http块</code>中使用，作用是限制<strong>请求数</strong>。其中 <code>rate</code> 就是上面所说的 <code>RPS</code>，而且不仅可以设置 n r/s，也可以设置 n r/m；另外 <code>burst</code> 参数，就是我们的桶大小了。</p><ol><li><code>zone</code>表示容器名，是针对每个变量(这里指IP，即<code>$binary_remote_addr</code>)定义一个存储session状态的容器。这个示例中定义了一个20m的容器，按照<code>32bytes/session</code>，可以处理640000个session。使用<code>$binary_remote_addr</code>变量，可以将每条状态记录的大小减少到64个字节，这样1M的内存可以保存大约1万6千个64字节的记录。如果限制域的存储空间耗尽了，对于后续所有请求，服务器都会返回<code>503 (Service Temporarily Unavailable)</code>错误。</li><li><code>rate</code>表示请求频率. 每秒允许10个请求。速度可以设置为每<strong>秒</strong>处理请求数和每<strong>分钟</strong>处理请求数，其值必须是整数，所以如果需要指定每秒处理少于1个的请求，2秒处理一个请求，可以使用 <code>30r/m</code>。</li></ol><br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">limit_conn</span> <span class="string">req_one</span> <span class="number">10</span><span class="string">;</span></span><br><span class="line"><span class="string">limit_req</span> <span class="string">zone=req_one</span> <span class="string">burst=5</span> <span class="string">nodelay;</span></span><br></pre></td></tr></table></figure><ol><li><code>limit_conn</code> 表示限制一个IP能发起10个并发连接数。</li><li><code>limit_req</code> 与<code>limit_req_zone</code>对应。<code>burst</code>表示缓存住的请求数。可选参数<code>burst=5</code>表示允许超过频率限制的请求数不多于5个(<code>rate=10r/s</code>)，假设1、2、3、4秒请求为每秒9个，那么第5秒内请求15个是允许的，反之，如果第一秒内请求15个，会将5个请求放到第二秒，第二秒内超过10的请求直接<code>503</code>，类似多秒内平均速率限制。<code>nodelay</code>表示超过的请求不被延迟处理，设置后15个请求在1秒内处理。</li><li>可以在http, server, location配置。</li></ol><h5 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line">    <span class="string">limit_req_zone</span>  <span class="string">$binary_remote_addr</span>  <span class="string">zone=req_one:20m</span> <span class="string">rate=10r/s;</span></span><br><span class="line">    <span class="string">limit_conn</span>  <span class="string">req_one</span>  <span class="number">10</span><span class="string">;</span></span><br><span class="line">    <span class="string">limit_req</span>   <span class="string">zone=req_one</span> <span class="string">burst=5;</span></span><br><span class="line">    <span class="string">server</span>  <span class="string">&#123;</span></span><br><span class="line">            <span class="string">listen</span>          <span class="number">80</span><span class="string">;</span></span><br><span class="line">            <span class="string">server_name</span>     <span class="string">localhost</span> <span class="string">;</span></span><br><span class="line">            <span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">                <span class="string">limit_req</span> <span class="string">zone=one</span> <span class="string">burst=5</span> <span class="string">nodelay;</span></span><br><span class="line">                <span class="string">root</span>   <span class="string">html;</span></span><br><span class="line">                <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span></span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><hr><h4 id="白名单"><a href="#白名单" class="headerlink" title="白名单"></a>白名单</h4><p>限流的配置会对所有的ip都进行限制，有些时候我们不希望对搜索引擎的蜘蛛或者某些自己的代理机过来的请求进行限制。</p><h5 id="geo指令"><a href="#geo指令" class="headerlink" title="geo指令"></a>geo指令</h5><p>geo是Nginx的地域模块， 可以通过用户的IP信息查询到地理位置，再根据地理位置提供更好的服务。对于特定的白名单ip我们可以借助<span class="exturl" data-url="aHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfZ2VvX21vZHVsZS5odG1s" title="http://nginx.org/en/docs/http/ngx_http_geo_module.html">geo<i class="fa fa-external-link"></i></span>指令创建变量，并根据客户端IP地址对变量赋值。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Syntax:</span><span class="string">geo</span> <span class="string">[$address]</span> <span class="string">$variable</span> <span class="string">&#123;</span> <span class="string">...</span> <span class="string">&#125;</span></span><br><span class="line"><span class="attr">Default:</span><span class="string">—</span></span><br><span class="line"><span class="attr">Context:</span><span class="string">http</span></span><br></pre></td></tr></table></figure><p>定义从指定的变量获取客户端的IP地址。默认情况下，Nginx从<code>$remote_addr</code>变量取得客户端IP地址。下面配置会根据不同区域的用户访问不同的服务器进行负载。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">upstream</span> <span class="string">US</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">server</span> <span class="number">172.22</span><span class="number">.23</span><span class="number">.1</span><span class="string">:80</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    <span class="string">upstream</span> <span class="string">RU</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">server</span> <span class="number">172.22</span><span class="number">.23</span><span class="number">.2</span><span class="string">:80</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    <span class="string">upstream</span> <span class="string">UK</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">server</span> <span class="number">172.22</span><span class="number">.23</span><span class="number">.3</span><span class="string">:80</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    <span class="string">upstream</span> <span class="string">ZZ</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">server</span> <span class="number">172.22</span><span class="number">.23</span><span class="number">.4</span><span class="string">:80</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 根据不同区域的用户访问不同的服务器进行负载</span></span><br><span class="line">    <span class="string">geo</span> <span class="string">$country</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">default</span> <span class="string">ZZ;</span> <span class="comment"># $country默认为ZZ</span></span><br><span class="line">        <span class="string">include</span> <span class="string">conf/geo.conf;</span></span><br><span class="line">        <span class="string">delete</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16;</span>     <span class="comment"># 删除指定网络</span></span><br><span class="line">        <span class="string">proxy</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.0</span><span class="string">/24;</span></span><br><span class="line">        <span class="string">proxy</span> <span class="number">2001</span><span class="string">:0db8::/32;</span></span><br><span class="line">    </span><br><span class="line">        <span class="number">127.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">/24</span> <span class="string">US;</span>  <span class="string">设置$contry为US</span></span><br><span class="line">        <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">/32</span> <span class="string">RU;</span>  <span class="string">设置$contry为RU</span></span><br><span class="line">        <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span><span class="string">/24</span> <span class="string">UK;设置$contry为UK</span></span><br><span class="line">        </span><br><span class="line">        <span class="number">10.1</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span> <span class="number">0</span><span class="string">;</span> <span class="comment"># 表示正常访问</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">proxy_redirect</span> <span class="string">off;</span> <span class="comment"># 参数off将在这个字段中禁止所有的proxy_redirect指令</span></span><br><span class="line">        <span class="string">proxy_set_header</span> <span class="string">Host</span> <span class="string">$host;</span> <span class="comment"># 重新定义或添加字段传递给代理服务器的请求头。</span></span><br><span class="line">        <span class="string">proxy_set_header</span> <span class="string">X-Real-IP</span> <span class="string">$remote_addr;</span> <span class="comment"># 重新定义或添加字段传递给代理服务器的请求头。</span></span><br><span class="line">        <span class="string">proxy_pass</span> <span class="string">http://$country;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>Nginx通过CIDR或者地址段来描述地址，同时支持下面的特殊参数：</p><ol><li><code>delete</code> 删除指定的网络。</li><li><code>default</code> 如果客户端地址不能匹配任意一个定义的地址，Nginx将使用此值。如果使用CIDR，可以用<code>0.0.0.0/0</code>代替default。</li><li><code>include</code> 包含一个定义地址和值的文件。可以多次包含。</li><li><code>proxy</code> 定义可信地址， 如果请求来自可信地址，Nginx将使用其<code>X-Forwarded-For</code>头来获得地址。 相对于普通地址，可信地址是顺序检测的。</li><li><code>proxy_recursive</code> 开启递归查找地址， 如果关闭递归查找，在客户端地址与某个可信地址匹配时，Nginx将使用<code>X-Forwarded-For</code>中的最后一个地址来代替原始客户端地址。如果开启递归查找，在客户端地址与某个可信地址匹配时，Nginx将使用<code>X-Forwarded-For</code>中最后一个与所有可信地址都不匹配的地址来代替原始客户端地址。</li><li><code>ranges</code> 指示地址将定义为地址段的形式，这个参数必须放在首位。为了加速装载地址库，地址应按升序定义。</li></ol><h5 id="http-x-forwarded-for和-remote-addr参数过滤"><a href="#http-x-forwarded-for和-remote-addr参数过滤" class="headerlink" title="$http_x_forwarded_for和$remote_addr参数过滤"></a>$http_x_forwarded_for和$remote_addr参数过滤</h5><p>通过$remote_addr参数和$http_x_forwarded_for参数进行访问的分发限制</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">listen</span>       <span class="number">80</span><span class="string">;</span></span><br><span class="line">    <span class="string">server_name</span>  <span class="string">testwww.wangshibo.com;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">##白名单设置，只允许下面三个来源ip的客户端以及本地能访问该站。主要是下面这三行</span></span><br><span class="line">    <span class="string">if</span> <span class="string">($remote_addr</span> <span class="string">!~</span> <span class="string">^(172.20.0.1|172.20.0.2|172.20.0.3|127.0.0.1))</span> <span class="string">&#123;</span></span><br><span class="line">     <span class="string">rewrite</span> <span class="string">^.*$</span> <span class="string">/index.php</span> <span class="string">last;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#白名单设置，只允许下面三个来源ip的客户端以及本地能访问该站。</span></span><br><span class="line">   <span class="string">if</span> <span class="string">($http_x_forwarded_for</span> <span class="string">!~</span> <span class="string">^(172.20.0.4|172.20.0.5|172.20.0.6|127.0.0.1))</span> <span class="string">&#123;</span></span><br><span class="line">       <span class="string">rewrite</span> <span class="string">^.*$</span>  <span class="string">/index.php</span> <span class="string">last;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">location</span> <span class="string">~</span> <span class="string">\.php$</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">fastcgi_pass</span>   <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:16688;</span></span><br><span class="line">        <span class="string">fastcgi_read_timeout</span> <span class="number">30</span><span class="string">;</span></span><br><span class="line">        <span class="string">fastcgi_index</span>  <span class="string">index.php;</span></span><br><span class="line">        <span class="string">fastcgi_param</span>  <span class="string">SCRIPT_FILENAME</span>  <span class="string">$document_root$fastcgi_script_name;</span></span><br><span class="line">        <span class="string">include</span>        <span class="string">fastcgi_params;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><hr><h4 id="支持HTTPS"><a href="#支持HTTPS" class="headerlink" title="支持HTTPS"></a>支持HTTPS</h4><h5 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">include</span>       <span class="string">mime.types;</span> </span><br><span class="line">    <span class="string">default_type</span>  <span class="string">application/octet-stream;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="comment"># 监听时指定ssl</span></span><br><span class="line">        <span class="string">listen</span> <span class="number">16688</span> <span class="string">ssl;</span></span><br><span class="line">        <span class="string">server_name</span> <span class="string">localhost;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 证书文件</span></span><br><span class="line">        <span class="string">ssl_certificate</span> <span class="string">"G:/Nginx+php+mysql/etc/ssl/server.crt"</span><span class="string">;</span></span><br><span class="line">        <span class="comment"># 密钥文件</span></span><br><span class="line">        <span class="string">ssl_certificate_key</span> <span class="string">"G:/Nginx+php+mysql/etc/ssl/server.key"</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># ssl_protocols ssl_ciphers用来限制连接只包含SSL/TLS的加强版本和算法</span></span><br><span class="line">        <span class="string">ssl_protocols</span> <span class="string">TLSv1</span> <span class="string">TLSv1.1</span> <span class="string">TLSv1.2;</span></span><br><span class="line">        <span class="string">ssl_ciphers</span>   <span class="string">HIGH:!aNULL:!MD5;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">root</span> <span class="string">"E:/personal/CodeIgniter_hmvc"</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">location</span> <span class="string">^~</span> <span class="string">/api</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="string">index</span> <span class="string">index.php;</span></span><br><span class="line"></span><br><span class="line">            <span class="string">try_files</span> <span class="string">$uri</span> <span class="string">$uri/</span> <span class="string">/api/index.php;</span></span><br><span class="line"></span><br><span class="line">            <span class="string">location</span> <span class="string">=</span> <span class="string">/api/index.php</span> <span class="string">&#123;</span></span><br><span class="line">                <span class="string">fastcgi_pass</span>   <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8888;</span></span><br><span class="line">                <span class="string">fastcgi_index</span>  <span class="string">index.php;</span></span><br><span class="line">                <span class="string">fastcgi_param</span> <span class="string">SCRIPT_FILENAME</span> <span class="string">$document_root$fastcgi_script_name;</span></span><br><span class="line">                <span class="string">include</span>        <span class="string">fastcgi_params;</span></span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm</span> <span class="string">index.php;</span></span><br><span class="line"></span><br><span class="line">            <span class="string">location</span> <span class="string">~</span> <span class="string">\.php$</span> <span class="string">&#123;</span></span><br><span class="line">                <span class="string">root</span>           <span class="string">E:\personal\CodeIgniter_hmvc;</span></span><br><span class="line">                <span class="string">fastcgi_pass</span>   <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8888;</span></span><br><span class="line">                <span class="string">fastcgi_index</span>  <span class="string">index.php;</span></span><br><span class="line">                <span class="string">fastcgi_param</span> <span class="string">SCRIPT_FILENAME</span> <span class="string">$document_root$fastcgi_script_name;</span></span><br><span class="line">                <span class="string">include</span>        <span class="string">fastcgi_params;</span></span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h5><h6 id="减少CPU运算量"><a href="#减少CPU运算量" class="headerlink" title="减少CPU运算量"></a>减少CPU运算量</h6><p>进程数量最少为CPU核数</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">worker_processes</span>  <span class="number">4</span><span class="string">;</span></span><br></pre></td></tr></table></figure><p>激活keepalive长连接</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">keepalive_timeout</span> <span class="number">300</span><span class="string">;</span></span><br></pre></td></tr></table></figure><p>复用SSL会话</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置共享会话缓存大小</span></span><br><span class="line"><span class="string">ssl_session_cache</span>   <span class="string">shared:SSL:10m;</span></span><br><span class="line"><span class="comment">#配置会话超时时间</span></span><br><span class="line"><span class="string">ssl_session_timeout</span> <span class="string">10m;</span></span><br></pre></td></tr></table></figure><hr><h4 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h4><p>根据学习进展不定期更新。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://pureven.cc/2020/03/06/nginx-simple-conf-with-php-fpm/&quot;&gt;上文&lt;/a&gt;对Windows平台下搭建Nginx + PHP环境做了介绍，通过上文的配置通过&lt;code&gt;http://localhost:6688/index.php&lt;/code&gt;访问本地的index.php文件。这时index.php文件是通过后端服务器进行解析的，此时Nginx作为代理服务器，本文对Nginx作为代理服务器进行介绍以及一些其他功能。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="Nginx" scheme="https://pureven.cc/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx配置入门-WNMP(Win10+Nginx+MySQL+PHP)</title>
    <link href="https://pureven.cc/2020/03/06/nginx-simple-conf-with-php-fpm/"/>
    <id>https://pureven.cc/2020/03/06/nginx-simple-conf-with-php-fpm/</id>
    <published>2020-03-06T01:15:26.000Z</published>
    <updated>2020-04-13T00:41:43.205Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p><a href="https://pureven.cc/2020/02/29/nginx-simple-conf-with-static-site/">上一篇</a>学习了Nginx配置文件中的基本指令，然后配置了一个静态网站。通过这个网站可以访问指定目录中的静态资源，但是如果向php脚本这样的文件还是无法访问，这是因为php脚本只能由特定的解析器(php解析器)来解析，本文学习Win10环境下配置Nginx和PHP-FPM的环境然后通过Nginx来访问指定目录中的动态资源(php脚本)，同时安装配置并调试MySQL。</p><a id="more"></a><hr><h4 id="PHP下载"><a href="#PHP下载" class="headerlink" title="PHP下载"></a>PHP下载</h4><p>下载PHP的<strong>非线程安全版本：</strong><span class="exturl" data-url="aHR0cHM6Ly93aW5kb3dzLnBocC5uZXQvZG93bmxvYWQjcGhwLTcuNC1udHMtdmMxNS14NjQ=" title="https://windows.php.net/download#php-7.4-nts-vc15-x64">php-7.4.3-nts-Win32-vc15-x64.zip<i class="fa fa-external-link"></i></span>。</p><h5 id="关于线程安全和非线程安全"><a href="#关于线程安全和非线程安全" class="headerlink" title="关于线程安全和非线程安全"></a>关于线程安全和非线程安全</h5><p>Windows版的PHP从版本5.2.1开始有<code>Thread Safe</code>。这两者不同在于何处？到底应该用哪种？这里做一个简单的介绍。</p><p>从2000年10月20日发布的第一个Windows版的PHP3.0.17开始的都是线程安全的版本，这是由于与Linux/Unix系统是采用<code>多进程</code>的工作方式不同的是Windows系统是采用<code>多线程</code>的工作方式。如果在IIS下以CGI方式运行PHP会非常慢，这是由于CGI模式是建立在多进程 的基础之上的，而非多线程。一般我们会把PHP配置成以<code>ISAPI</code>的方式来运行，ISAPI是多线程的方式，这样就快多了。但存在一个问题，很多常用的 PHP扩展是以Linux/Unix的多进程思想来开发的，这些扩展在ISAPI的方式运行时就会出错搞垮IIS。而用线程安全版本的话顶多只是搞跨某个 线程，而不会影响到整个IIS的安全。</p><p>当然在IIS下CGI模式才是 PHP运行的最安全方式，但CGI模式对于每个HTTP请求都需要重新加载和卸载整个PHP环境，其消耗是巨大的。为了兼顾IIS下PHP的效率和安全， 有人给出了FastCGI的解决方案。FastCGI可以让PHP的进程重复利用而不是每一个新的请求就重开一个进程。同时FastCGI也可以允许几个 进程同时执行。这样既解决了CGI进程模式消耗太大的问题，又利用上了CGI进程模式不存在线程安全问题的优势。</p><p><code>因此，如果是使用ISAPI的方式来运行PHP就必须用Thread Safe(线程安全)的版本；而用FastCGI模式运行PHP的话就没有必要用线程安全检查了，用None Thread Safe(NTS，非线程安全)的版本能够更好的提高效率。</code></p><hr><h4 id="PHP配置"><a href="#PHP配置" class="headerlink" title="PHP配置"></a>PHP配置</h4><ol><li>进入<code>php-7.4.3-nts-Win32-vc15-x64</code>目录，拷贝一份<code>php.ini-development</code>并将文件名修改为<code>php.ini</code>。</li><li>修改<code>php.ini</code>:<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">;</span> <span class="attr">On windows:</span></span><br><span class="line"><span class="string">extension_dir</span> <span class="string">=</span> <span class="string">"G:\Nginx+php+mysql\php-7.4.3-nts-Win32-vc15-x64\ext"</span></span><br><span class="line"></span><br><span class="line"><span class="string">extension=curl</span></span><br><span class="line"><span class="string">extension=mbstring</span></span><br><span class="line"><span class="string">extension=exif</span>      <span class="string">;</span> <span class="string">Must</span> <span class="string">be</span> <span class="string">after</span> <span class="string">mbstring</span> <span class="string">as</span> <span class="string">it</span> <span class="string">depends</span> <span class="string">on</span> <span class="string">it</span></span><br><span class="line"><span class="string">extension=mysqli</span></span><br><span class="line"><span class="string">extension=pdo_mysql</span></span><br><span class="line"></span><br><span class="line"><span class="string">;</span> <span class="string">http://php.net/cgi.fix-pathinfo</span></span><br><span class="line"><span class="string">cgi.fix_pathinfo=1</span></span><br><span class="line"></span><br><span class="line"><span class="string">[Date]</span></span><br><span class="line"><span class="string">;</span> <span class="string">Defines</span> <span class="string">the</span> <span class="string">default</span> <span class="string">timezone</span> <span class="string">used</span> <span class="string">by</span> <span class="string">the</span> <span class="string">date</span> <span class="string">functions</span></span><br><span class="line"><span class="string">;</span> <span class="string">http://php.net/date.timezone</span></span><br><span class="line"><span class="string">date.timezone</span> <span class="string">=</span> <span class="string">'Asia/Shanghai'</span></span><br></pre></td></tr></table></figure></li></ol><hr><h4 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">listen</span>       <span class="number">6688</span><span class="string">;</span></span><br><span class="line">    <span class="string">server_name</span>  <span class="string">localhost;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 定义与FastCGI服务器建立连接的超时时间。应该指出的是，这个超时通常不能超过75秒。</span></span><br><span class="line">    <span class="string">fastcgi_connect_timeout</span> <span class="string">120s;</span></span><br><span class="line">    <span class="comment"># 定义从FastCGI服务器读取响应的超时时间。超时只在两次连续的读操作之间设置，而不是用于传输整个响应。</span></span><br><span class="line">    <span class="comment"># 如果FastCGI服务器在此时间内没有传输任何内容，则连接将被关闭。</span></span><br><span class="line">    <span class="string">fastcgi_read_timeout</span> <span class="string">300s;</span></span><br><span class="line">    <span class="comment"># 设置向FastCGI服务器发送请求的超时时间。超时只在两次连续写入操作之间设置，而不是用于传输整个请求。</span></span><br><span class="line">    <span class="comment"># 如果FastCGI服务器在此时间内没有收到任何内容，则连接将关闭。</span></span><br><span class="line">    <span class="string">fastcgi_send_timeout</span> <span class="string">300s;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 设置number和size用于读取从FastCGI的服务器的响应，供用于单个连接的缓冲器。</span></span><br><span class="line">    <span class="comment"># 默认情况下，缓冲区大小等于一个内存页面。这是4K或8K，取决于平台。</span></span><br><span class="line">    <span class="string">fastcgi_buffers</span> <span class="number">256</span> <span class="string">16k;</span> </span><br><span class="line">    <span class="string">fastcgi_buffer_size</span> <span class="string">128k;</span> </span><br><span class="line">    <span class="comment"># 当启用FastCGI服务器的响应缓冲时，限制size可能正忙于向客户端发送响应的缓冲区总数，而响应尚未完全读取。</span></span><br><span class="line">    <span class="comment"># 同时，其余的缓冲区可以用于读取响应，并且如果需要的话，缓冲部分对临时文件的响应。</span></span><br><span class="line">    <span class="comment"># 默认情况下，size受fastcgi_buffer_size和fastcgi_buffers指令设置的两个缓冲区大小的限制。</span></span><br><span class="line">    <span class="string">fastcgi_busy_buffers_size</span> <span class="string">256k;</span> </span><br><span class="line">    <span class="comment"># size一旦启用了从FastCGI服务器到临时文件的缓存响应，就一次限制写入临时文件的数据。</span></span><br><span class="line">    <span class="comment"># 默认情况下，size由fastcgi_buffer_size和fastcgi_buffers指令设置的两个缓冲区限制。</span></span><br><span class="line">    <span class="comment"># 临时文件的最大大小由fastcgi_max_temp_file_size指令设置。</span></span><br><span class="line">    <span class="string">fastcgi_temp_file_write_size</span> <span class="string">256k;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">root</span> <span class="string">"E:/CodeIgniter_hmvc"</span><span class="string">;</span></span><br><span class="line">    <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:8888</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="string">location</span> <span class="string">~</span> <span class="string">\.php$</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">root</span>           <span class="string">G:\Nginx+php+mysql\html;</span></span><br><span class="line">        <span class="comment"># 设置FastCGI服务器的地址。该地址可以指定为域名或IP地址，以及端口：localhost:9000;</span></span><br><span class="line">        <span class="comment"># 或者作为UNIX域套接字路径：unix:/tmp/fastcgi.socket;</span></span><br><span class="line">        <span class="string">fastcgi_pass</span>   <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8888;</span></span><br><span class="line">        <span class="comment"># 在$fastcgi_script_name变量的值中设置一个文件名，该文件名将附加在以斜杠结尾的URI后面。</span></span><br><span class="line">        <span class="string">fastcgi_index</span>  <span class="string">index.php;</span></span><br><span class="line">        <span class="comment"># 设置一个parameter应该传递给FastCGI服务器的应用程序。该value可以包含文本，变量，他们的组合。</span></span><br><span class="line">        <span class="comment"># 当且仅当没有fastcgi_param在当前级别上定义的指令时，这些指令才从前一级继承。</span></span><br><span class="line">        <span class="string">fastcgi_param</span> <span class="string">SCRIPT_FILENAME</span> <span class="string">$document_root$fastcgi_script_name;</span> <span class="comment"># 针对当前请求的根路径设置值 . 脚本名称</span></span><br><span class="line">        <span class="string">include</span>        <span class="string">fastcgi_params;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 这里使用try_files</span></span><br><span class="line">    <span class="comment"># ① 当请求localhost:6688/api/migrate时先在root下找api文件</span></span><br><span class="line">    <span class="comment"># ② 找不到就在root/api/下找migrate文件</span></span><br><span class="line">    <span class="comment"># ③ 找不到就请求root/api/index.php并将migrate作为参数传递给fastcgi</span></span><br><span class="line">    <span class="string">location</span> <span class="string">^~</span> <span class="string">/api</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">index</span> <span class="string">index.php;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">try_files</span> <span class="string">$uri</span> <span class="string">$uri/</span> <span class="string">/api/index.php;</span></span><br><span class="line">        </span><br><span class="line">        <span class="string">location</span> <span class="string">=</span> <span class="string">/api/index.php</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="string">fastcgi_pass</span>   <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8888;</span></span><br><span class="line">            <span class="string">fastcgi_index</span>  <span class="string">index.php;</span></span><br><span class="line">            <span class="string">fastcgi_param</span> <span class="string">SCRIPT_FILENAME</span> <span class="string">$document_root$fastcgi_script_name;</span></span><br><span class="line">            <span class="string">include</span>        <span class="string">fastcgi_params;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p><code>fastcig</code>相关指令参考<span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvc2VjdGlvbi8xMjU5MTQ2" title="https://cloud.tencent.com/developer/section/1259146">ngx_http_fastcgi_module<i class="fa fa-external-link"></i></span></p><hr><h4 id="开启PHP-fpm服务"><a href="#开启PHP-fpm服务" class="headerlink" title="开启PHP-fpm服务"></a>开启PHP-fpm服务</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[G:\Nginx+php+mysql]$</span> <span class="string">cd</span> <span class="string">php-7.4.3-nts-Win32-vc15-x64</span></span><br><span class="line"><span class="string">[G:\Nginx+php+mysql\php-7.4.3-nts-Win32-vc15-x64]$</span> <span class="string">php-cgi.exe</span> <span class="string">-b</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8888</span> <span class="string">-c</span> <span class="string">php.ini</span></span><br></pre></td></tr></table></figure><hr><h4 id="重启Nginx"><a href="#重启Nginx" class="headerlink" title="重启Nginx"></a>重启Nginx</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[G:\Nginx+php+mysql\nginx-1.17.8]$</span> <span class="string">nginx.exe</span> <span class="string">-s</span> <span class="string">reload</span></span><br></pre></td></tr></table></figure><hr><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><ol><li>创建index.php文件<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[G:\Nginx+php+mysql]$</span> <span class="string">cd</span> <span class="string">html</span></span><br><span class="line"><span class="string">[G:\Nginx+php+mysql\html]$</span> <span class="string">dir</span></span><br><span class="line"> <span class="string">驱动器</span> <span class="string">G</span> <span class="string">中的卷是</span> <span class="string">研发专用</span></span><br><span class="line"> <span class="string">卷的序列号是</span> <span class="number">5861</span><span class="string">-182A</span></span><br><span class="line"></span><br><span class="line"> <span class="string">G:\Nginx+php+mysql\html</span> <span class="string">的目录</span></span><br><span class="line"></span><br><span class="line"><span class="number">2020</span><span class="string">/03/06</span>  <span class="number">08</span><span class="string">:51</span>    <span class="string">&lt;DIR&gt;</span>          <span class="string">.</span></span><br><span class="line"><span class="number">2020</span><span class="string">/03/06</span>  <span class="number">08</span><span class="string">:51</span>    <span class="string">&lt;DIR&gt;</span>          <span class="string">..</span></span><br><span class="line"><span class="number">2020</span><span class="string">/01/21</span>  <span class="number">21</span><span class="string">:39</span>               <span class="number">494</span> <span class="string">50x.html</span></span><br><span class="line"><span class="number">2020</span><span class="string">/03/06</span>  <span class="number">08</span><span class="string">:51</span>    <span class="string">&lt;DIR&gt;</span>          <span class="string">ci</span></span><br><span class="line"><span class="number">2020</span><span class="string">/01/21</span>  <span class="number">21</span><span class="string">:39</span>               <span class="number">612</span> <span class="string">index.html</span></span><br><span class="line"><span class="number">2020</span><span class="string">/03/06</span>  <span class="number">14</span><span class="string">:24</span>                <span class="number">24</span> <span class="string">index.php</span></span><br><span class="line">               <span class="number">3</span> <span class="string">个文件</span>          <span class="number">1</span><span class="string">,130</span> <span class="string">字节</span></span><br><span class="line">               <span class="number">3</span> <span class="string">个目录</span> <span class="number">31</span><span class="string">,849,316,352</span> <span class="string">可用字节</span></span><br><span class="line"></span><br><span class="line"><span class="string">[G:\Nginx+php+mysql\html]$</span> <span class="string">type</span> <span class="string">index.php</span></span><br><span class="line"><span class="string">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="string">echo</span> <span class="string">phpinfo();</span></span><br><span class="line"><span class="string">[G:\Nginx+php+mysql\html]$</span></span><br></pre></td></tr></table></figure></li><li>访问index.php<br><img src="/2020/03/06/nginx-simple-conf-with-php-fpm/20200306144934.png" alt></li></ol><hr><h4 id="将PHP-fpm注册为服务"><a href="#将PHP-fpm注册为服务" class="headerlink" title="将PHP-fpm注册为服务"></a>将PHP-fpm注册为服务</h4><p>下面介绍使用<code>winsw</code>将nginx加入到windows服务的操作流程：</p><ol><li>下载<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tvaHN1a2Uvd2luc3cvcmVsZWFzZXMvdGFnL3dpbnN3LXYyLjIuMA==" title="https://github.com/kohsuke/winsw/releases/tag/winsw-v2.2.0">winsw<i class="fa fa-external-link"></i></span>,目前稳定版为<code>winsw-v2.2.0</code>，本例下载的为<code>WinSW.NET2.exe</code></li><li>将<code>WinSW.NET2.exe</code>重命名为<code>php-pureven.exe</code>并放入与<code>php-cgi.exe</code>相同目录下</li><li>新建配置文件<code>php-pureven.xml</code>，参考<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tvaHN1a2Uvd2luc3cvYmxvYi9tYXN0ZXIvZG9jL3htbENvbmZpZ0ZpbGUubWQ=" title="https://github.com/kohsuke/winsw/blob/master/doc/xmlConfigFile.md">这里<i class="fa fa-external-link"></i></span>进行配置，本例配置信息为：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- ID of the service. It should be unique accross the Windows system--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>PHP-pureven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Display name of the service --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>PHPCGI-pureven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Service description --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>Serve PHPCGI on 8888 by pureven<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- Path to the executable, which should be started --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">executable</span>&gt;</span>G:\Nginx+php+mysql\php-7.4.3-nts-Win32-vc15-x64\php-cgi.exe<span class="tag">&lt;/<span class="name">executable</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">onfailure</span> <span class="attr">action</span>=<span class="string">"restart"</span> <span class="attr">delay</span>=<span class="string">"20 sec"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">arguments</span>&gt;</span>-b 127.0.0.1:8888 -c "G:\Nginx+php+mysql\php-7.4.3-nts-Win32-vc15-x64\php.ini"<span class="tag">&lt;/<span class="name">arguments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  &lt;startarguments&gt;-b 127.0.0.1:8888 -c "G:\Nginx+php+mysql\php-7.4.3-nts-Win32-vc15-x64\php.ini"&lt;/startarguments&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">priority</span>&gt;</span>Normal<span class="tag">&lt;/<span class="name">priority</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">stoptimeout</span>&gt;</span>30 sec<span class="tag">&lt;/<span class="name">stoptimeout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">stopparentprocessfirst</span>&gt;</span>false<span class="tag">&lt;/<span class="name">stopparentprocessfirst</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">stopexecutable</span>&gt;</span>taskkill<span class="tag">&lt;/<span class="name">stopexecutable</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">stoparguments</span>&gt;</span>/f /IM php-cgi.exe<span class="tag">&lt;/<span class="name">stoparguments</span>&gt;</span>--&gt;</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">startmode</span>&gt;</span>Automatic<span class="tag">&lt;/<span class="name">startmode</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  &lt;delayedAutoStart/&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">waithint</span>&gt;</span>15 sec<span class="tag">&lt;/<span class="name">waithint</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">sleeptime</span>&gt;</span>1 sec<span class="tag">&lt;/<span class="name">sleeptime</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">logpath</span>&gt;</span>G:\Nginx+php+mysql\php-7.4.3-nts-Win32-vc15-x64\logs<span class="tag">&lt;/<span class="name">logpath</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">log</span> <span class="attr">mode</span>=<span class="string">"roll-by-size"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sizeThreshold</span>&gt;</span>10240<span class="tag">&lt;/<span class="name">sizeThreshold</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">keepFiles</span>&gt;</span>8<span class="tag">&lt;/<span class="name">keepFiles</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">log</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">env</span> <span class="attr">name</span>=<span class="string">"PHP_FCGI_MAX_REQUESTS"</span> <span class="attr">value</span>=<span class="string">"3000"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">env</span> <span class="attr">name</span>=<span class="string">"PHP_FCGI_CHILDREN"</span> <span class="attr">value</span>=<span class="string">"12"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">env</span> <span class="attr">name</span>=<span class="string">"CI_ENV"</span> <span class="attr">value</span>=<span class="string">"production"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">beeponshutdown</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>管理员权限通过cmd终端运行<code>php-pureven.exe install</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">G:\Nginx+php+mysql\php-7.4.3-nts-Win32-vc15-x64&gt;php-pureven.exe install</span><br><span class="line">2020-03-06 15:26:50,233 INFO  - Installing the service with id &apos;PHP-pureven&apos;</span><br></pre></td></tr></table></figure></li><li>加入服务成功，如图：<br><img src="/2020/03/06/nginx-simple-conf-with-php-fpm/20200306153358.png" alt></li><li>启动停止可通过服务界面直接操作了，另外配置文件中设置了开机自启，上图可以看到，至此设置完毕！</li></ol><hr><h4 id="Linux下安装配置Nginx-PHP-fpm"><a href="#Linux下安装配置Nginx-PHP-fpm" class="headerlink" title="Linux下安装配置Nginx + PHP-fpm"></a>Linux下安装配置Nginx + PHP-fpm</h4><p>请参考<span class="exturl" data-url="aHR0cHM6Ly93aXphcmRmb3JjZWwuZ2l0Ym9va3MuaW8vbmdpbngtZG9jL2NvbnRlbnQvVGV4dC82LjVfbmdpbnhfcGhwX2ZwbS5odG1s" title="https://wizardforcel.gitbooks.io/nginx-doc/content/Text/6.5_nginx_php_fpm.html">Nginx中文官方文档-nginx php-fpm安装配置<i class="fa fa-external-link"></i></span></p><hr><h4 id="MySQL下载配置"><a href="#MySQL下载配置" class="headerlink" title="MySQL下载配置"></a>MySQL下载配置</h4><h5 id="下载MySQL-5-7-28安装包并解压到目录G-Nginx-php-mysql"><a href="#下载MySQL-5-7-28安装包并解压到目录G-Nginx-php-mysql" class="headerlink" title="下载MySQL-5.7.28安装包并解压到目录G:\Nginx+php+mysql"></a>下载<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9teXNxbC8=" title="https://dev.mysql.com/downloads/mysql/">MySQL-5.7.28<i class="fa fa-external-link"></i></span>安装包并解压到目录<code>G:\Nginx+php+mysql</code></h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[G:\Nginx+php+mysql]$ cd mysql-5.7.28-winx64</span><br><span class="line">[G:\Nginx+php+mysql\mysql-5.7.28-winx64]$ dir</span><br><span class="line"> 驱动器 G 中的卷是 研发专用</span><br><span class="line"> 卷的序列号是 5861-182A</span><br><span class="line"></span><br><span class="line"> G:\Nginx+php+mysql\mysql-5.7.28-winx64 的目录</span><br><span class="line"></span><br><span class="line">2020/03/12  08:40    <span class="xml"><span class="tag">&lt;<span class="name">DIR</span>&gt;</span></span>          .</span><br><span class="line">2020/03/12  08:40    <span class="xml"><span class="tag">&lt;<span class="name">DIR</span>&gt;</span></span>          ..</span><br><span class="line">2020/03/12  08:40    <span class="xml"><span class="tag">&lt;<span class="name">DIR</span>&gt;</span></span>          bin</span><br><span class="line">2020/03/12  08:40    <span class="xml"><span class="tag">&lt;<span class="name">DIR</span>&gt;</span></span>          docs</span><br><span class="line">2020/03/12  08:40    <span class="xml"><span class="tag">&lt;<span class="name">DIR</span>&gt;</span></span>          include</span><br><span class="line">2020/03/12  08:40    <span class="xml"><span class="tag">&lt;<span class="name">DIR</span>&gt;</span></span>          lib</span><br><span class="line">2019/12/10  03:53           405,571 LICENSE</span><br><span class="line">2019/12/10  03:53               687 README</span><br><span class="line">2020/03/12  08:40    <span class="xml"><span class="tag">&lt;<span class="name">DIR</span>&gt;</span></span>          share</span><br><span class="line"><span class="code">               2 个文件        406,258 字节</span></span><br><span class="line"><span class="code">               7 个目录 30,955,925,504 可用字节</span></span><br></pre></td></tr></table></figure><h5 id="在G-Nginx-php-mysql-mysql-5-7-28-winx64目录下新建文件my-ini"><a href="#在G-Nginx-php-mysql-mysql-5-7-28-winx64目录下新建文件my-ini" class="headerlink" title="在G:\Nginx+php+mysql\mysql-5.7.28-winx64目录下新建文件my.ini"></a>在<code>G:\Nginx+php+mysql\mysql-5.7.28-winx64</code>目录下新建文件<code>my.ini</code></h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[G:\Nginx+php+mysql\mysql-5.7.28-winx64]$</span> <span class="string">type</span> <span class="string">my.ini</span></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="comment"># 设置3306端口</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"><span class="string">basedir=G:\Nginx+php+mysql\mysql-5.7.28-winx64</span></span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line"><span class="string">datadir=G:\Nginx+php+mysql\mysql-5.7.28-winx64\data</span></span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="string">max_connections=200</span></span><br><span class="line"><span class="comment"># 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统</span></span><br><span class="line"><span class="string">max_connect_errors=10</span></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为UTF8</span></span><br><span class="line"><span class="string">character-set-server=utf8</span></span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="string">default-storage-engine=INNODB</span></span><br><span class="line"><span class="comment"># 默认使用“mysql_native_password”插件认证</span></span><br><span class="line"><span class="string">default_authentication_plugin=mysql_native_password</span></span><br><span class="line"><span class="string">[mysql]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"><span class="string">default-character-set=utf8</span></span><br><span class="line"><span class="string">[client]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端连接服务端时默认使用的端口</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string">default-character-set=utf8</span></span><br></pre></td></tr></table></figure><h5 id="环境变量设置"><a href="#环境变量设置" class="headerlink" title="环境变量设置"></a>环境变量设置</h5><p><strong>将MySQL解压后的目录加入环境变量<code>MYSQL_HOME</code></strong><br><img src="/2020/03/06/nginx-simple-conf-with-php-fpm/20200312085658.png" alt></p><p><strong>将bin目录绝对路径加入系统变量<code>path</code></strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">%MYSQL_HOME\bin%</span> <span class="string">==&gt;</span> <span class="string">path</span> <span class="comment"># 此处不是代码，理解万岁</span></span><br></pre></td></tr></table></figure><h5 id="数据库服务初始化"><a href="#数据库服务初始化" class="headerlink" title="数据库服务初始化"></a>数据库服务初始化</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">G:\Nginx+php+mysql\mysql-5.7.28-winx64\bin&gt;mysqld.exe</span> <span class="string">--initialize</span> <span class="string">--console</span></span><br><span class="line"><span class="number">2020</span><span class="number">-03</span><span class="string">-11T13:33:52.368829Z</span> <span class="number">0</span> <span class="string">[System]</span> <span class="string">[MY-013169]</span> <span class="string">[Server]</span> <span class="string">G:\Nginx+php+mysql\mysql-5.7.28-winx64\bin\mysqld.exe</span> <span class="string">(mysqld</span> <span class="number">5.7</span><span class="number">.28</span><span class="string">)</span> <span class="string">initializing</span> <span class="string">of</span> <span class="string">server</span> <span class="string">in</span> <span class="string">progress</span> <span class="string">as</span> <span class="string">process</span> <span class="number">12704</span></span><br><span class="line"><span class="number">2020</span><span class="number">-03</span><span class="string">-11T13:33:52.370320Z</span> <span class="number">0</span> <span class="string">[Warning]</span> <span class="string">[MY-013242]</span> <span class="string">[Server]</span> <span class="string">--character-set-server:</span> <span class="string">'utf8'</span> <span class="string">is</span> <span class="string">currently</span> <span class="string">an</span> <span class="string">alias</span> <span class="string">for</span> <span class="string">the</span> <span class="string">character</span> <span class="string">set</span> <span class="string">UTF8MB3,</span> <span class="string">but</span> <span class="string">will</span> <span class="string">be</span> <span class="string">an</span> <span class="string">alias</span> <span class="string">for</span> <span class="string">UTF8MB4</span> <span class="string">in</span> <span class="string">a</span> <span class="string">future</span> <span class="string">release.</span> <span class="string">Please</span> <span class="string">consider</span> <span class="string">using</span> <span class="string">UTF8MB4</span> <span class="string">in</span> <span class="string">order</span> <span class="string">to</span> <span class="string">be</span> <span class="string">unambiguous.</span></span><br><span class="line"><span class="number">2020</span><span class="number">-03</span><span class="string">-11T13:34:00.541307Z</span> <span class="number">5</span> <span class="string">[Note]</span> <span class="string">[MY-010454]</span> <span class="string">[Server]</span> <span class="string">A</span> <span class="string">temporary</span> <span class="string">password</span> <span class="string">is</span> <span class="string">generated</span> <span class="string">for</span> <span class="string">root@localhost:</span> <span class="string">iw.r)rhp)7jX</span></span><br></pre></td></tr></table></figure><p>注意最后一行中的<code>iw.r)rhp)7jX</code>是默认生成的密码。</p><h5 id="安装并启动MySQL服务"><a href="#安装并启动MySQL服务" class="headerlink" title="安装并启动MySQL服务"></a>安装并启动MySQL服务</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">G:\Nginx+php+mysql\mysql-5.7.28-winx64\bin&gt;mysqld.exe</span> <span class="string">install</span> <span class="string">pureven-MySQL-5.7.28</span></span><br><span class="line"><span class="string">Service</span> <span class="string">successfully</span> <span class="string">installed.</span></span><br><span class="line"></span><br><span class="line"><span class="string">G:\Nginx+php+mysql\mysql-5.7.28-winx64\bin&gt;net</span> <span class="string">start</span> <span class="string">mysql</span></span><br><span class="line"><span class="string">MySQL</span> <span class="string">服务正在启动</span> <span class="string">..</span></span><br><span class="line"><span class="string">MySQL</span> <span class="string">服务已经启动成功。</span></span><br></pre></td></tr></table></figure><p><strong>注：可通过<code>sc delete pureven-MySQL-5.7.28</code>命令删除<code>pureven-MySQL</code>服务。</strong></p><h5 id="登录数据库并修改密码"><a href="#登录数据库并修改密码" class="headerlink" title="登录数据库并修改密码"></a>登录数据库并修改密码</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">G:\Nginx+php+mysql\mysql-5.7.28-winx64\bin&gt;mysql.exe</span> <span class="string">-u</span> <span class="string">root</span> <span class="string">-p</span></span><br><span class="line"><span class="attr">Enter password:</span> <span class="string">************</span> <span class="comment"># 这里使用的密码是上面初始化后系统生成的密码：iw.r)rhp)7jX</span></span><br><span class="line"><span class="string">Welcome</span> <span class="string">to</span> <span class="string">the</span> <span class="string">MySQL</span> <span class="string">monitor.</span>  <span class="string">Commands</span> <span class="string">end</span> <span class="string">with</span> <span class="string">;</span> <span class="string">or</span> <span class="string">\g.</span></span><br><span class="line"><span class="string">Your</span> <span class="string">MySQL</span> <span class="string">connection</span> <span class="string">id</span> <span class="string">is</span> <span class="number">8</span></span><br><span class="line"><span class="attr">Server version:</span> <span class="number">5.7</span><span class="number">.28</span></span><br><span class="line"></span><br><span class="line"><span class="string">Copyright</span> <span class="string">(c)</span> <span class="number">2000</span><span class="string">,</span> <span class="number">2020</span><span class="string">,</span> <span class="string">Oracle</span> <span class="string">and/or</span> <span class="string">its</span> <span class="string">affiliates.</span> <span class="string">All</span> <span class="string">rights</span> <span class="string">reserved.</span></span><br><span class="line"></span><br><span class="line"><span class="string">Oracle</span> <span class="string">is</span> <span class="string">a</span> <span class="string">registered</span> <span class="string">trademark</span> <span class="string">of</span> <span class="string">Oracle</span> <span class="string">Corporation</span> <span class="string">and/or</span> <span class="string">its</span></span><br><span class="line"><span class="string">affiliates.</span> <span class="string">Other</span> <span class="string">names</span> <span class="string">may</span> <span class="string">be</span> <span class="string">trademarks</span> <span class="string">of</span> <span class="string">their</span> <span class="string">respective</span></span><br><span class="line"><span class="string">owners.</span></span><br><span class="line"></span><br><span class="line"><span class="string">Type</span> <span class="string">'help;'</span> <span class="string">or</span> <span class="string">'\h'</span> <span class="string">for</span> <span class="string">help.</span> <span class="string">Type</span> <span class="string">'\c'</span> <span class="string">to</span> <span class="string">clear</span> <span class="string">the</span> <span class="string">current</span> <span class="string">input</span> <span class="string">statement.</span></span><br><span class="line"></span><br><span class="line"><span class="string">mysql&gt;</span> <span class="string">set</span> <span class="string">password</span> <span class="string">for</span> <span class="string">root@localhost='xxxxxx';</span> <span class="comment"># 修改密码为6个x，即xxxxxx</span></span><br><span class="line"><span class="string">Query</span> <span class="string">OK,</span> <span class="number">0</span> <span class="string">rows</span> <span class="string">affected</span> <span class="string">(0.03</span> <span class="string">sec)</span></span><br><span class="line"></span><br><span class="line"><span class="string">mysql&gt;</span> <span class="string">show</span> <span class="string">databases;</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="string">|</span> <span class="string">Database</span>           <span class="string">|</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="string">|</span> <span class="string">information_schema</span> <span class="string">|</span></span><br><span class="line"><span class="string">|</span> <span class="string">mysql</span>              <span class="string">|</span></span><br><span class="line"><span class="string">|</span> <span class="string">performance_schema</span> <span class="string">|</span></span><br><span class="line"><span class="string">|</span> <span class="string">sys</span>                <span class="string">|</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="number">4</span> <span class="string">rows</span> <span class="string">in</span> <span class="string">set</span> <span class="string">(0.01</span> <span class="string">sec)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://pureven.cc/2020/02/29/nginx-simple-conf-with-static-site/&quot;&gt;上一篇&lt;/a&gt;学习了Nginx配置文件中的基本指令，然后配置了一个静态网站。通过这个网站可以访问指定目录中的静态资源，但是如果向php脚本这样的文件还是无法访问，这是因为php脚本只能由特定的解析器(php解析器)来解析，本文学习Win10环境下配置Nginx和PHP-FPM的环境然后通过Nginx来访问指定目录中的动态资源(php脚本)，同时安装配置并调试MySQL。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
      <category term="Nginx" scheme="https://pureven.cc/tags/Nginx/"/>
    
      <category term="MySQL" scheme="https://pureven.cc/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Nginx配置入门-nginx.conf文件学习笔记</title>
    <link href="https://pureven.cc/2020/02/29/nginx-simple-conf-with-static-site/"/>
    <id>https://pureven.cc/2020/02/29/nginx-simple-conf-with-static-site/</id>
    <published>2020-02-29T07:27:04.000Z</published>
    <updated>2020-04-13T00:41:43.150Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>本文为nginx.conf文件中配置指令学习的相关笔记，并试着配置了一个静态网站。本文介绍：</p><ul><li>nginx.conf文件结构</li><li>配置允许允许Nginx服务器的用户和用户组</li><li>配置允许生成的worker process数</li><li>配置Nginx服务器的错误日志</li><li>设置网络连接的序列化</li><li>设置是否允许同时接收多个网络连接</li><li>选择事件驱动模型</li><li>配置最大连接数</li><li>引入文件配置</li><li>配置默认处理前端请求的MIME类型</li><li>设置服务日志的格式、大学、输出及Nginx服务日志<br>……</li></ul><a id="more"></a><hr><h4 id="nginx-conf文件结构"><a href="#nginx-conf文件结构" class="headerlink" title="nginx.conf文件结构"></a>nginx.conf文件结构</h4><p><img src="/2020/02/29/nginx-simple-conf-with-static-site/20200229155600.png" alt></p><p>nginx.conf一共由三部分组成，分别为<code>全局块</code>、<code>events块</code>和<code>http块</code>。在http块中，又包含http全局块、多个server块。每个server块中，可以包含server全局块和多个location块。在同一配置块中嵌套的配置块，各个之间不存在次序关系。</p><p>配置文件支持大量可配置的指令，绝大多数指令不是特定属于某一个块的。同一个指令放在不同层级的块中，其作用域也不同，一般情况下，高一级块中的指令可以作用于自身所在的块和此块包含的所有低层级块。如果某个指令在两个不同层级的块中同时出现，则采用“<strong>就近原则</strong>”，即<code>以较低层级块中的配置为准</code>。比如，某指令同时出现在http全局块中和server块中，并且配置不同，则应该以server块中的配置为准。</p><hr><h4 id="全局块"><a href="#全局块" class="headerlink" title="全局块"></a>全局块</h4><h5 id="配置允许运行Nginx服务器的用户和用户组"><a href="#配置允许运行Nginx服务器的用户和用户组" class="headerlink" title="配置允许运行Nginx服务器的用户和用户组"></a>配置允许运行Nginx服务器的用户和用户组</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">user</span>  <span class="string">nobody;</span></span><br></pre></td></tr></table></figure><ul><li>配置允许运行Nginx服务器的用户和用户组， <code>user user [group];</code></li><li>只有被设置的用户或用户组成员才有权限启动Nginx进程，如果是其他用户尝试启动Nginx进程则报错</li><li>如果希望所有用户都可以启动Nginx进程则将此指令注释掉或者将用户(和用户组)设置为nobody</li></ul><h5 id="配置允许生成的worker-process数"><a href="#配置允许生成的worker-process数" class="headerlink" title="配置允许生成的worker process数"></a>配置允许生成的worker process数</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">worker_processes</span>  <span class="number">2</span><span class="string">;</span></span><br></pre></td></tr></table></figure><ul><li>配置允许生成的worker process数的指令， <code>worker_process number | auto;</code></li><li>number 表示指定Nginx进程最多可以产生的workder process数; auto 表示Nginx进程将自动检测;</li><li>number值理论上越大可支持的并发处理量越多，但实际上会受到来自软件本身、操作系统本身资源和能力、硬件设备(CPU和磁盘驱动器)的制约</li></ul><h5 id="配置错误输出"><a href="#配置错误输出" class="headerlink" title="配置错误输出"></a>配置错误输出</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br></pre></td></tr></table></figure><ul><li><code>err_log file | stderr [debug | info | notice | warn | error | crit | alert | emerg];</code>，Nginx服务器的日志支持输出到某一固定的文件或输出到标准错误输出stderr;日志级别是可选项;</li><li>全局快、http块和server块中都可以对Nginx服务器的日志进行相关配置; </li></ul><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#user  nobody; </span></span><br><span class="line"></span><br><span class="line"><span class="string">worker_processes</span>  <span class="number">2</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pid file; 用于保存当前运行程序的主进程号;</span></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br></pre></td></tr></table></figure><p>全局块是默认配置文件从开始到events块之间的一部分内容，主要设置一些影响<code>Nginx服务器整体运行的配置指令</code>，因此，这些指令的作用域是Nginx服务器全局。<br>通常包括配置运行Nginx服务器的用户（组）、允许生成的worker process数、Nginx进程PID存放路径、日志的存放路径和类型以及配置文件引入等。</p><hr><p><code>worker_process 2</code>表示Nginx进程最多产生两个worker进程，Windows下可利用<code>netstat -ano | findstr 8080</code>通过端口号查看进程PID和<code>tasklist | findstr $PID</code>通过PID查看进程。<br><img src="/2020/02/29/nginx-simple-conf-with-static-site/20200303094534.png" alt></p><hr><h4 id="events块"><a href="#events块" class="headerlink" title="events块"></a>events块</h4><h5 id="设置网络连接的序列化"><a href="#设置网络连接的序列化" class="headerlink" title="设置网络连接的序列化"></a>设置网络连接的序列化</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">accept_mutex</span> <span class="string">on</span> <span class="string">|</span> <span class="string">off;</span></span><br></pre></td></tr></table></figure><ul><li>设置网络连接的序列化，当开启时将会对多个Nginx进程接收连接进行序列化，防止多个进程对连接的争抢，杜绝<strong>惊群</strong>问题; 默认on;</li></ul><h5 id="设置是否允许同时接受多个网络连接"><a href="#设置是否允许同时接受多个网络连接" class="headerlink" title="设置是否允许同时接受多个网络连接"></a>设置是否允许同时接受多个网络连接</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">multi_accept</span> <span class="string">on</span> <span class="string">|</span> <span class="string">off;</span></span><br></pre></td></tr></table></figure><ul><li>设置是否允许同时接受多个网络连接。默认off，即每个worker process一次只能接受一个新到达的网络连接</li></ul><h5 id="选择事件驱动模型"><a href="#选择事件驱动模型" class="headerlink" title="选择事件驱动模型"></a>选择事件驱动模型</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">use</span> <span class="string">epoll;</span></span><br></pre></td></tr></table></figure><ul><li>选择事件驱动模型: <code>use method;</code> 其中method可选择select、poll、kqueue、epoll、rtsig、/dev/poll以及eventport。</li></ul><h5 id="配置最大连接数"><a href="#配置最大连接数" class="headerlink" title="配置最大连接数"></a>配置最大连接数</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">worker_connections</span>  <span class="number">1024</span><span class="string">;</span></span><br></pre></td></tr></table></figure><ul><li>配置最大连接数，用来设置允许每一个worker process同时开启的最大连接数: <code>worker_connections number;</code>，number值不能大于操作系统支持打开的最大文件句柄数量;</li></ul><h5 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">events</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="comment"># accept_mutex on | off;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># multi_accept on | off;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># use epoll; </span></span><br><span class="line">    </span><br><span class="line">    <span class="string">worker_connections</span>  <span class="number">1024</span><span class="string">;</span> </span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>events块涉及的指令主要影响Nginx服务器与用户的网络连接。常用到的设置包括是否开启对多worker process下的网络连接进行序列化，是否允许同时接收多个网络连接，选取哪种事件驱动模型处理连接请求，每个worker process可以同时支持的最大连接数等。</p><hr><h4 id="http块"><a href="#http块" class="headerlink" title="http块"></a>http块</h4><h5 id="引入配置文件"><a href="#引入配置文件" class="headerlink" title="引入配置文件"></a>引入配置文件</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">include</span> <span class="string">mime.types;</span> <span class="comment"># 定义MIME-Type;</span></span><br><span class="line"><span class="string">default_type</span>  <span class="string">application/octet-stream;</span></span><br></pre></td></tr></table></figure><ul><li>引入配置文件: <code>include file;</code>可以在任意地方引入;</li><li>可在http块、server块或者location块中进行配置;</li><li>配置用于处理前端请求的MIME类型，结构: <code>default_type mime-type;</code>默认<code>text/plain;</code></li></ul><h5 id="设置服务日志的格式、大小、输出等和设置Nginx服务日志"><a href="#设置服务日志的格式、大小、输出等和设置Nginx服务日志" class="headerlink" title="设置服务日志的格式、大小、输出等和设置Nginx服务日志"></a>设置服务日志的格式、大小、输出等和设置Nginx服务日志</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">log_format</span>  <span class="string">main</span>  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                  <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                  <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span><span class="string">;</span></span><br><span class="line"><span class="string">access_log</span>  <span class="string">logs/access.log</span>  <span class="string">main;</span></span><br></pre></td></tr></table></figure><ul><li>设置Nginx服务日志，即用于存放前端请求的日志;格式为<code>access_log path [format [buffer=size]];</code></li><li>可在http块、server块或者location块中进行配置;默认的配置为: <code>access_log logs/access.log combined;</code></li></ul><h5 id="用于开启或关闭使用sendfile-传输文件"><a href="#用于开启或关闭使用sendfile-传输文件" class="headerlink" title="用于开启或关闭使用sendfile()传输文件"></a>用于开启或关闭使用sendfile()传输文件</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">sendfile</span>        <span class="string">on;</span></span><br></pre></td></tr></table></figure><ul><li>用于开启或关闭使用sendfile()传输文件;可在http块、server块或者location块中进行配置;</li></ul><h5 id="设置worker-process进程每次调用sendfile-传输数据量上限"><a href="#设置worker-process进程每次调用sendfile-传输数据量上限" class="headerlink" title="设置worker process进程每次调用sendfile()传输数据量上限"></a>设置worker process进程每次调用sendfile()传输数据量上限</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">sendfile_max_chunk</span> <span class="number">0</span><span class="string">;</span></span><br></pre></td></tr></table></figure><ul><li><code>sendfile_max_chunk size;</code>用于设置Nginx进程的每个worker process每次调用<code>sendfile()</code>传输的数据量最大不能超过这个值;<code>如果为0则表示无限制;</code></li><li>可在http块、server块或者location块中进行配置;</li></ul><h5 id="配置连接超时时间"><a href="#配置连接超时时间" class="headerlink" title="配置连接超时时间"></a>配置连接超时时间</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">keepalive_timeout</span>  <span class="number">65</span><span class="string">;</span></span><br></pre></td></tr></table></figure><ul><li>配置连接超时时间: <code>keepalive_timeout  timeout [header_timeout];</code>，即与用户建立会话连接后可以保持这些连接持续打开的时间。</li><li><strong>header_timeout</strong> 为可选项，表示在应答报文头部的<code>Keep-Alive</code>域设置超时时间: <code>&quot;Keep-Alive:timeout=header_timeout&quot;</code>，比如: <code>keepalive_timeout 120 100;</code></li><li>可在http块、server块或者location块中进行配置;</li></ul><h5 id="单连接请求数上限"><a href="#单连接请求数上限" class="headerlink" title="单连接请求数上限"></a>单连接请求数上限</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">keepalive_requests</span> <span class="number">100</span><span class="string">;</span></span><br></pre></td></tr></table></figure><ul><li>单连接请求数上限: <code>keepalive_requests number;</code>，用于限制用户通过某一连接向Nginx服务器发送请求的次数;</li><li>可在http块、server块或者location块中进行配置;</li></ul><h5 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">include</span> <span class="string">mime.types;</span></span><br><span class="line">    <span class="string">default_type</span>  <span class="string">application/octet-stream;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">    <span class="comment">#                  '$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">    <span class="comment">#                  '"$http_user_agent" "$http_x_forwarded_for"';</span></span><br><span class="line"></span><br><span class="line">    <span class="string">access_log</span>  <span class="string">logs/access.log</span>  <span class="string">main;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">sendfile</span>        <span class="string">on;</span></span><br><span class="line">    <span class="string">sendfile_max_chunk</span> <span class="number">0</span><span class="string">;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">keepalive_timeout</span>  <span class="number">65</span><span class="string">;</span></span><br><span class="line">    <span class="string">keepalive_requests</span> <span class="number">100</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">......</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>http块是Nginx服务器配置中的重要部分，<code>代理</code>、<code>缓存</code>和<code>日志定义</code>等绝大多数的功能和<code>第三方模块的配置</code>都可以放在这个模块中。http块中可以包含自己的全局块，也可以包含<code>server块</code>，server块中又可以进一步包含location块，“http全局块”用来表示http中自己的全局块，即http块中不包含在server块中的部分。可以在http全局块中配置的指令包括<code>文件引入</code>、<code>MIME-Type定义</code>、<code>日志自定义</code>、<code>是否使用sendfile传输文件</code>、<code>连接超时时间</code>、<code>单连接请求数上限</code>等。</p><hr><h4 id="server块"><a href="#server块" class="headerlink" title="server块"></a>server块</h4><h5 id="配置网络监听"><a href="#配置网络监听" class="headerlink" title="配置网络监听"></a>配置网络监听</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">listen</span>       <span class="number">80</span><span class="string">;</span></span><br></pre></td></tr></table></figure><ul><li><code>listen 192.168.1.10:8000;</code> 监听具体IP和具体端口的连接</li><li><code>listen 192.168.1.10;</code> 监听具体IP所有端口的连接</li><li><code>listen 8000;</code> 监听具体端口的所有IP连接，等同于listen *:8000</li></ul><h5 id="基于名称的虚拟主机配置"><a href="#基于名称的虚拟主机配置" class="headerlink" title="基于名称的虚拟主机配置"></a>基于名称的虚拟主机配置</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server_name</span>  <span class="string">localhost;</span></span><br></pre></td></tr></table></figure><ul><li>基于名称的虚拟主机配置: 这里的“主机”，就是指此server块对外提供的虚拟主机。</li><li>设置了主机的名称并配置好DNS，用户就可以使用这个名称向此虚拟主机发送请求了。</li><li>比如： <code>server_name ~^www\.(.+)\.come$;</code> 或<code>server_name *.myserver.com  www.myserver.*;</code></li><li>匹配优先级: 准确匹配 &gt;&gt; 通配符在开始时匹配server_name成功 &gt;&gt; 通配符在结尾时匹配server_name成功 &gt;&gt; 正则表达式匹配server_name成功</li></ul><h5 id="基于IP的虚拟主机配置"><a href="#基于IP的虚拟主机配置" class="headerlink" title="基于IP的虚拟主机配置"></a>基于IP的虚拟主机配置</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server_name</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.10</span><span class="string">;</span></span><br></pre></td></tr></table></figure><h5 id="设置网站的错误页面"><a href="#设置网站的错误页面" class="headerlink" title="设置网站的错误页面"></a>设置网站的错误页面</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  <span class="string">/50x.html;</span></span><br></pre></td></tr></table></figure><ul><li>设置网站的错误页面: 当请求资源出现问题时服务器会返回响应的HTTP错误，此时可以通过配置响应的错误页面进行友好提示，这样显得更人性化。</li></ul><h5 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">listen</span>       <span class="number">80</span><span class="string">;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">server_name</span>  <span class="string">localhost;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># server_name 192.168.1.10;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">root</span>   <span class="string">html;</span></span><br><span class="line">        <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line">    <span class="string">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  <span class="string">/50x.html;</span></span><br><span class="line">    <span class="string">location</span> <span class="string">=</span> <span class="string">/50x.html</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">root</span>   <span class="string">html;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>server块和“虚拟主机”的概念有密切联系。为了加深对相关配置的理解，在介绍server块之前，我们简单了解一下虚拟主机的相关内容。</p><p>虚拟主机，又称虚拟服务器、主机空间或是网页空间，它是一种技术。该技术是为了节省互联网服务器硬件成本而出现的。这里的“主机”或“空间”是由实体的服务器延伸而来，硬件系统可以基于服务器群，或者单个服务器等。虚拟主机技术主要应用于HTTP、FTP及EMAIL等多项服务，将一台服务器的某项或者全部服务内容逻辑划分为多个服务单位，对外表现为多个服务器，从而充分利用服务器硬件资源。从用户角度来看，一台虚拟主机和一台独立的硬件主机是完全一样的。</p><p><code>在使用Nginx服务器提供Web服务时，利用虚拟主机的技术就可以避免为每一个要运行的网站提供单独的Nginx服务器，也无需为每个网站对应运行一组Nginx进程。</code>虚拟主机技术使得Nginx服务器可以在同一台服务器上只运行一组Nginx进程，就可以运行多个网站。那么，如何对Nginx进行配置才能达到这种效果呢？server块就是用来完成这个功能的。</p><p>每一个http块都可以包含多个server块，而每个server块就相当于一台虚拟主机，它内部可有多台主机联合提供服务，一起对外提供在逻辑上关系密切的一组服务（或网站）。server全局块指令的作用域为本server块，其不会影响到其他的server块。和http块相同，server块也可以包含自己的全局块，同时可以包含多个<code>location块</code>。在server全局块中，最常见的两个配置项是本虚拟主机的监听配置和本虚拟主机的名称或IP配置。</p><hr><h4 id="location块"><a href="#location块" class="headerlink" title="location块"></a>location块</h4><h5 id="location结构"><a href="#location结构" class="headerlink" title="location结构"></a>location结构</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">location</span> <span class="string">[</span> <span class="string">=</span> <span class="string">|</span> <span class="string">~</span> <span class="string">|</span> <span class="string">~*</span> <span class="string">|</span> <span class="string">^~</span> <span class="string">]</span> <span class="string">uri</span> </span><br><span class="line"><span class="string">&#123;</span> </span><br><span class="line">    <span class="string">...</span> </span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>其中方括号中的部分是可选项，用来改变请求字符串与uri的匹配方式。在不添加可选项时： Nginx服务器首先在server块的多个location块中搜索是否有标准uri和请求字符串匹配，如果有多个可以匹配，就记录匹配度最高的一个。然后，服务器再用location块中的正则uri和请求字符串匹配，当第一个正则uri匹配成功，结束搜索，并使用这个location块处理此请求；如果正则匹配全部失败，就使用刚才记录的匹配度最高的location块处理此请求。</p><h5 id="location-可选项优先级"><a href="#location-可选项优先级" class="headerlink" title="location: 可选项优先级"></a>location: 可选项优先级</h5><p>如果添加了可选项，需要清楚各个可选项的作用：</p><ul><li><code>=</code>： 用于标准uri前，要求请求字符串与uri严格匹配。如果匹配成功则停止继续向下搜索并立即处理此请求。</li><li><code>~</code>： 用于表示uri包含正则表达式，并且区分大小写。</li><li><code>~*</code>： 用于表示uri包含正则表达式，并且不区分大小写。如果uri包含正则表达式，就必须要使用<code>~</code>或者<code>~*</code>标识。</li><li><code>^~</code>： 用于标准uri前，要求Nginx服务器找到标识uri和请求字符串匹配度最高的location后，立即使用此location处理请求而不再使用location块中的正则uri和请求字符串做匹配。</li><li>可选项优先级：<b>(location <code>=</code>) &gt;&gt; (location <code>完整路径</code>) &gt;&gt; (location <code>^~ 路径</code>) &gt;&gt; (location <code>~</code>,<code>~*</code> 正则顺序) &gt;&gt; (location <code>部分起始路径</code>)</b></li></ul><h5 id="配置请求的根目录"><a href="#配置请求的根目录" class="headerlink" title="配置请求的根目录"></a>配置请求的根目录</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">root</span>   <span class="string">html;</span></span><br></pre></td></tr></table></figure><ul><li>web服务器接收到网络请求之后，首先要在服务器端指定目录中寻找请求资源。</li><li>配置请求的根目录：root， <code>root path;</code> 其中path为Nginx服务器接收到请求以后查找资源的根目录路径。</li><li>可在http块、server块或者location块中进行配置;</li><li>比如设置为<code>location /data/ { root /location_test1; }</code>时,当location块接收到<code>/data/index.html</code>的请求时，将在<code>location_test1/data/</code>目录下找到<code>index.html</code>响应请求。</li></ul><h5 id="更改location的URI"><a href="#更改location的URI" class="headerlink" title="更改location的URI"></a>更改location的URI</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">alias</span> <span class="string">"C:\CodeIgniter-3.1.10\user_guide"</span><span class="string">;</span></span><br></pre></td></tr></table></figure><ul><li>更改location的URI， <code>alias path;</code>，alias用来改变location接收到的URI的请求路径，path即为修改后的根路径。</li><li>当此location块收到<code>/codeigniter/index.html</code>时，匹配成功，之后根据alia指令的配置，Nginx服务器将到<code>C:/Codeigniter-3.1.10/user_guide</code>目录下找到<code>index.html</code>并响应请求。</li></ul><h5 id="设置网站的默认首页"><a href="#设置网站的默认首页" class="headerlink" title="设置网站的默认首页"></a>设置网站的默认首页</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span></span><br></pre></td></tr></table></figure><ul><li>设置网站的默认首页: <code>index file1 file2 . . .;</code> 当location块接收到”/“时匹配成功后会按照index的配置次序<strong>依次寻找</strong>index.html页和index.htm页。首先找到哪个页面就使用哪个页面响应请求。</li></ul><h5 id="基于IP配置Nginx的访问权限"><a href="#基于IP配置Nginx的访问权限" class="headerlink" title="基于IP配置Nginx的访问权限"></a>基于IP配置Nginx的访问权限</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">deny</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span><span class="string">;</span></span><br><span class="line">    <span class="string">allow</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span><span class="string">/24;</span></span><br><span class="line">    <span class="string">deny</span> <span class="string">all;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>基于IP配置Nginx的访问权限: <code>allow address | CIDR | all;</code> ，<code>deny address | CIDR | all;</code>其中address为允许(或拒绝)访问的客户端IP，不支持同时配置多个。CIDR表示CIDR地址，如<code>192.168.1.11/25</code>，25表示IP地址中前25位是网络部分。下面例子表示首先禁止192.168.1.1访问Nginx，然后配置允许192.168.1.0/24访问Nginx，最后使用all配置禁止所有IP访问。通过上面的顺序192.168.1.0/24是可以访问的。因为Nginx配置在解析的过程中，遇到deny指令或者allow指令是按照顺序对当前客户端的连接进行访问权限检查的。如果遇到匹配的配置时，则停止继续向下搜索相关配置。因此，当192.168.1.0/24客户端访问时，Nginx在第3行解析配置发现允许该客户端访问，就不会继续向下解析第4行了。</li></ul><h5 id="示例-4"><a href="#示例-4" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">root</span>   <span class="string">html;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="string">location</span> <span class="string">/codeigniter</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">alias</span> <span class="string">"C:\CodeIgniter-3.1.10\user_guide"</span><span class="string">;</span></span><br><span class="line">    <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">location</span> <span class="string">=</span> <span class="string">/50x.html</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">root</span>   <span class="string">html;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">deny</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span><span class="string">;</span></span><br><span class="line">    <span class="string">allow</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span><span class="string">/24;</span></span><br><span class="line">    <span class="string">deny</span> <span class="string">all;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>每个server块中可以包含多个location块。从严格意义上说，location其实是server块的一个指令，只是由于其在整个Nginx配置文档中起着重要的作用，而且Nginx服务器在许多功能上的灵活性往往在location指令的配置中体现出来，这些location块的主要作用是，<code>基于Nginx服务器接收到的请求字符串(例如， server_name/uri-string)，对除虚拟主机名称(也可以是IP别名)之外的字符串进行匹配，对特定的请求进行处理</code>。<code>地址定向</code>、<code>数据缓存</code>和<code>应答控制</code>等功能都是在这部分实现。许多<code>第三方模块的配置</code>也是在location块中提供功能。</p><hr><h4 id="一个简单的静态站点配置实例"><a href="#一个简单的静态站点配置实例" class="headerlink" title="一个简单的静态站点配置实例"></a>一个简单的静态站点配置实例</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">############################### 全局块 开始 ############################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置允许运行Nginx服务器的用户和用户组</span></span><br><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置允许Nginx进程生成的worker process数 </span></span><br><span class="line"><span class="string">worker_processes</span>  <span class="number">3</span><span class="string">;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置Nginx服务器运行对错误日志存放路径</span></span><br><span class="line"><span class="string">error_log</span>  <span class="string">logs/my-nginx-error.log;</span> </span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置Nginx服务器运行时的pid文件存放路径和名称</span></span><br><span class="line"><span class="comment"># pid        logs/my-nginx.pid; </span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################### 全局块 结束 ############################################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################### events块 开始 ##########################################</span></span><br><span class="line"></span><br><span class="line"><span class="string">events</span> <span class="string">&#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 配置事件驱动模型</span></span><br><span class="line">    <span class="comment"># use epoll; </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置最大连接数</span></span><br><span class="line">    <span class="string">worker_connections</span>  <span class="number">1024</span><span class="string">;</span> </span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################### events块 结束 ##########################################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################### http块 开始 ############################################</span></span><br><span class="line"></span><br><span class="line"><span class="string">http</span> <span class="string">&#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义MIME-Type</span></span><br><span class="line">    <span class="string">include</span>       <span class="string">mime.types;</span> </span><br><span class="line">    <span class="string">default_type</span>  <span class="string">application/octet-stream;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义日志格式， main为日志格式的默认名称，也可以自定义名称，比如'access_lf'</span></span><br><span class="line">    <span class="string">log_format</span>  <span class="string">main</span>  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 配置请求处理日志存放路径</span></span><br><span class="line">    <span class="string">access_log</span>  <span class="string">logs/access.log</span>  <span class="string">main;</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 配置允许使用sendfile方式传输</span></span><br><span class="line">    <span class="string">sendfile</span>        <span class="string">on;</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 配置连接超时时间</span></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    <span class="string">keepalive_timeout</span>  <span class="number">65</span><span class="string">;</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">####################### server块 开始 ############################</span></span><br><span class="line">    <span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="comment"># 配置监听端口和主机名称(基于名称)</span></span><br><span class="line">        <span class="string">listen</span>       <span class="number">80</span><span class="string">;</span></span><br><span class="line">        <span class="string">server_name</span>  <span class="string">localhost;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 配置请求日志存放路径</span></span><br><span class="line">        <span class="string">access_log</span>  <span class="string">logs/80.host.access.log</span>  <span class="string">main;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 配置错误页面</span></span><br><span class="line">        <span class="string">error_page</span>  <span class="number">404</span>              <span class="string">/404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 配置处理localhost/codeigniter请求的location， 对location的URI进行更改</span></span><br><span class="line"><span class="comment"># 静态文件目录</span></span><br><span class="line">        <span class="string">location</span> <span class="string">/codeigniter</span> <span class="string">&#123;</span></span><br><span class="line"><span class="string">alias</span> <span class="string">"E:\personal\CodeIgniter-3.1.10\user_guide"</span><span class="string">;</span></span><br><span class="line">            <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 静态文件目录</span></span><br><span class="line">        <span class="string">location</span> <span class="string">/ci</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="string">root</span> <span class="string">html;</span></span><br><span class="line">            <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 默认 静态文件目录</span></span><br><span class="line">        <span class="string">location</span> <span class="string">/</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="string">root</span>   <span class="string">html;</span></span><br><span class="line">            <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># root 和 alias的区别</span></span><br><span class="line">        <span class="comment"># root:  最上层目录的定义, 当访问localhost/ci时访问的是html/ci/index.html，即root路径 + location路径。</span></span><br><span class="line">        <span class="comment"># alias: 目录别名的定义(仅能用于location上下文)，当访问localhost/codeigniter时访问的是E:/personal/CodeIgniter-3.1.10/user_guide/index.html，即使用alias路径替换location路径。</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 对错误页面 500 502 503 504做了定向配置</span></span><br><span class="line">        <span class="string">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  <span class="string">/50x.html;</span></span><br><span class="line">        <span class="string">location</span> <span class="string">=</span> <span class="string">/50x.html</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="string">root</span>   <span class="string">html;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    root           html;</span></span><br><span class="line">        <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">        <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">        <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx's one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#    deny  all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    <span class="comment">####################### server块 结束 ############################</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################### http块 结束 ############################################</span></span><br></pre></td></tr></table></figure><h4 id="附：部分Nginx内置变量"><a href="#附：部分Nginx内置变量" class="headerlink" title="附：部分Nginx内置变量"></a>附：部分Nginx内置变量</h4><table><thead><tr><th align="center">内置变量名</th><th align="center">介绍</th></tr></thead><tbody><tr><td align="center">$arg_PARAMETER</td><td align="center">客户端GET请求中PARAMETER字段的值，如<code>/index.php?site=www.ttlsa.com</code>，可以用<code>$arg_site</code>取得<code>www.ttlsa.com</code>这个值</td></tr><tr><td align="center">$args</td><td align="center"><strong>HTTP</strong>请求中的完整参数。例如，在请求<code>/index.php?width=400&amp;height=200</code>中，<code>$args</code>表示字符串<code>width=400&amp;height=200</code></td></tr><tr><td align="center">$binary_remote_addr</td><td align="center">二进制格式的客户端地址。例如：<code>\x0A\xE0B\x0E</code></td></tr><tr><td align="center">$body_bytes_sent</td><td align="center">表示在向客户端发送的http响应中，<strong>消息体部分</strong>的字节数</td></tr><tr><td align="center">$content_length</td><td align="center">表示客户端请求头部中的<code>Content-Length</code>字段</td></tr><tr><td align="center">$content_type</td><td align="center">表示客户端请求头部中的<code>Content-Type</code>字段</td></tr><tr><td align="center">$cookie_COOKIE</td><td align="center">表示在客户端请求头部中的<code>cookie</code>字段</td></tr><tr><td align="center">$document_root</td><td align="center">表示当前请求所使用的<code>root</code>配置项的值, 即在<code>server</code>配置中<code>root</code>指令中指定的值</td></tr><tr><td align="center">$document_uri</td><td align="center">与<code>$uri</code>相同，表示当前请求的URI，不带任何参数</td></tr><tr><td align="center">$host</td><td align="center">表示客户端请求头部中的<code>Host</code>字段。如果Host字段不存在，则以实际处理的server（虚拟主机）名称代替。<code>如果Host字段中带有端口，如IP:PORT，那么$host是去掉端口的，它的值为IP。</code>$host 是全小写的。这些特性与http_HEADER中的http_host不同，http_host只取出Host头部对应的值。</td></tr><tr><td align="center">$hostname</td><td align="center">表示<code>Nginx所在机器的名称</code>，与 <code>gethostbyname</code>调用返回的值相同</td></tr><tr><td align="center">$http_HEADER</td><td align="center">表示<code>当前HTTP请求中相应头部的值</code>。HEADER名称全小写。例如，请求中 Host头部对应的值用$http_host表示</td></tr><tr><td align="center">$http_host</td><td align="center">与<code>$host相同</code>，但如果请求信息中没有Host行，则可能不同</td></tr><tr><td align="center">$http_cookie</td><td align="center">客户端的cookie信息</td></tr><tr><td align="center">$http_referer</td><td align="center">引用地址</td></tr><tr><td align="center">$http_user_agent</td><td align="center">客户端代理信息</td></tr><tr><td align="center">$http_via</td><td align="center">最后一个访问服务器的IP地址</td></tr><tr><td align="center">$http_x_forwarded_for</td><td align="center">相当于网络访问路径</td></tr><tr><td align="center">$is_args</td><td align="center">表示返回客户端的 HTTP响应中相应头部的值。HEADER名称全小写。例如，用<code>$sent_ http_content_type</code>表示响应中<code>Content-Type</code>头部对应的值</td></tr><tr><td align="center">$limit_rate</td><td align="center">表示当前连接的限速是多少，0表示无限速</td></tr><tr><td align="center">$nginx_version</td><td align="center">当前Nginx服务器的版本</td></tr><tr><td align="center">$pid</td><td align="center">当前Nginx服务器主进程的进程ID</td></tr><tr><td align="center">$query_string</td><td align="center">请求URI中的参数，与<code>$args</code>相同，然而<code>$query_string</code>是只读的不会改变</td></tr><tr><td align="center">$remote_addr</td><td align="center">表示客户端的地址</td></tr><tr><td align="center">$remote_port</td><td align="center">表示客户端连接使用的端口</td></tr><tr><td align="center">$remote_user</td><td align="center">表示使用<code>Auth Basic Module</code>时定义的用户名</td></tr><tr><td align="center">$request</td><td align="center">客户端请求</td></tr><tr><td align="center">$request_body</td><td align="center">表示HTTP请求中的消息体，该参数只在<code>proxy_pass</code>或<code>fastcgi_pass</code>中有意义</td></tr><tr><td align="center">$request_body_file</td><td align="center">发往后端服务器的本地临时缓存文件的名称</td></tr><tr><td align="center">$request_completion</td><td align="center">当请求已经全部完成时，其值为<code>ok</code>。若没有完成，就要返回客户端，则其值为<code>空字符串</code>;或者在断点续传等情况下使用 <code>HTTP range</code>访问的并不是文件的最后一块，那么其值也是空字符串。</td></tr><tr><td align="center">$request_filename</td><td align="center">表示用户请求中的<strong>URI</strong>经过<code>root</code>或<code>alias</code>转换后的文件路径</td></tr><tr><td align="center">$request_method</td><td align="center">请求的方法，比如GET、POST等</td></tr><tr><td align="center">$request_uri</td><td align="center">请求的URI，带参数，不包含主机名。表示客户端发来的原始请求URI，带完整的参数。<code>$uri和$document_uri未必是用户的原始请求，在内部重定向后可能是重定向后的URI，而$request_uri 永远不会改变，始终是客户端的原始URI</code></td></tr><tr><td align="center">$scheme</td><td align="center">所用的协议，如<code>http</code>或者<code>https</code>，比如<code>rewrite^(.+)$$scheme://mysite.name$1redirect</code></td></tr><tr><td align="center">$sent_http_HEADER</td><td align="center">表示返回客户端的HTTP响应中相应头部的值。HEADER名称全小写。例如，用 <code>$sent_ http_content_type</code>表示响应中<code>Content-Type</code>头部对应的值</td></tr><tr><td align="center">$server_addr</td><td align="center">服务器地址，如果没有用listen指明服务器地址，使用这个变量将发起一次系统调用以取得地址（这样会造成资源浪费）$server_name请求到达的服务器名</td></tr><tr><td align="center">$server_port</td><td align="center">请求到达的服务器端口号</td></tr><tr><td align="center">$server_name</td><td align="center">服务器名称</td></tr><tr><td align="center">$server_protocol</td><td align="center">请求的协议版本，<code>HTTP/1.0</code>或<code>HTTP/1.1</code></td></tr><tr><td align="center">$uri</td><td align="center">请求的不带请求参数的URI，可能和最初的值有不同，比如经过重定向之类的</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;本文为nginx.conf文件中配置指令学习的相关笔记，并试着配置了一个静态网站。本文介绍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nginx.conf文件结构&lt;/li&gt;
&lt;li&gt;配置允许允许Nginx服务器的用户和用户组&lt;/li&gt;
&lt;li&gt;配置允许生成的worker process数&lt;/li&gt;
&lt;li&gt;配置Nginx服务器的错误日志&lt;/li&gt;
&lt;li&gt;设置网络连接的序列化&lt;/li&gt;
&lt;li&gt;设置是否允许同时接收多个网络连接&lt;/li&gt;
&lt;li&gt;选择事件驱动模型&lt;/li&gt;
&lt;li&gt;配置最大连接数&lt;/li&gt;
&lt;li&gt;引入文件配置&lt;/li&gt;
&lt;li&gt;配置默认处理前端请求的MIME类型&lt;/li&gt;
&lt;li&gt;设置服务日志的格式、大学、输出及Nginx服务日志&lt;br&gt;……&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="Nginx" scheme="https://pureven.cc/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>CodeIgniter日志类文件Log.php</title>
    <link href="https://pureven.cc/2020/02/22/codeigniter-log/"/>
    <id>https://pureven.cc/2020/02/22/codeigniter-log/</id>
    <published>2020-02-22T10:27:35.000Z</published>
    <updated>2020-04-13T00:41:43.234Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>日志记录类用于记录CI框架信息的一些操作日志(错误日志、调试日志、信息日志等等)。</p><a id="more"></a><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> $_log_path; <span class="comment">// 日志存放路径</span></span><br><span class="line"><span class="keyword">protected</span> $_file_permissions = <span class="number">0644</span>; <span class="comment">// 写入的日志文件权限，默认0644，即rw-r--r--</span></span><br><span class="line"><span class="keyword">protected</span> $_threshold = <span class="number">1</span>;           <span class="comment">// 允许写日志的阈值，默认为1。</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 0 = Disables logging, Error logging TURNED OFF</span></span><br><span class="line"><span class="comment">* 1 = Error Messages (including PHP errors)</span></span><br><span class="line"><span class="comment">* 2 = Debug Messages</span></span><br><span class="line"><span class="comment">* 3 = Informational Messages</span></span><br><span class="line"><span class="comment">* 4 = All Messages</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 也是允许写日志的阀值，但与$_threshold有些不同。</span></span><br><span class="line"><span class="comment">// 比如设置配置文件$config['log_threshold'] = 3，这个值会读到$_threshold属性中。</span></span><br><span class="line"><span class="comment">// 那么写日志允许的level可以是1，2，3；可是如果设置$config['log_threshold'] = [3],</span></span><br><span class="line"><span class="comment">// 那么系统会把这个3读到$_threshold_array数组中，写日志level只允许3，其它的1和2不允许。</span></span><br><span class="line"><span class="keyword">protected</span> $_threshold_array = <span class="keyword">array</span>();</span><br><span class="line"><span class="comment">// 日志的时间格式，由$config['log_date_format']决定。默认'Y-m-d H:i:s'。</span></span><br><span class="line"><span class="comment">// 主要用于$date-&gt;format的参数。</span></span><br><span class="line"><span class="keyword">protected</span> $_date_fmt = <span class="string">'Y-m-d H:i:s'</span>;</span><br><span class="line"><span class="keyword">protected</span> $_file_ext; <span class="comment">// 日志文件的扩展名</span></span><br><span class="line"><span class="keyword">protected</span> $_enabled = <span class="keyword">TRUE</span>; <span class="comment">// 标记字段。标记是否有权限写日志。</span></span><br><span class="line"><span class="comment">// 预定义的level级别数组。</span></span><br><span class="line"><span class="keyword">protected</span> $_levels = <span class="keyword">array</span>(<span class="string">'ERROR'</span> =&gt; <span class="number">1</span>, <span class="string">'DEBUG'</span> =&gt; <span class="number">2</span>, <span class="string">'INFO'</span> =&gt; <span class="number">3</span>, <span class="string">'ALL'</span> =&gt; <span class="number">4</span>);</span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> $func_overload;<span class="comment">// 表示启用函数重载功能。</span></span><br></pre></td></tr></table></figure><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $config =&amp; get_config();<span class="comment">// 读取配置文件，获取$config数组。</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">isset</span>(<span class="keyword">self</span>::$func_overload) <span class="keyword">OR</span> <span class="keyword">self</span>::$func_overload = (extension_loaded(<span class="string">'mbstring'</span>) &amp;&amp; ini_get(<span class="string">'mbstring.func_overload'</span>)); <span class="comment">// 确定是否支持函数重载</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 确定日志文件路径</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_log_path = ($config[<span class="string">'log_path'</span>] !== <span class="string">''</span>) ? $config[<span class="string">'log_path'</span>] : APPPATH.<span class="string">'logs/'</span>;</span><br><span class="line">    <span class="comment">// 确定日志文件扩展名</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_file_ext = (<span class="keyword">isset</span>($config[<span class="string">'log_file_extension'</span>]) &amp;&amp; $config[<span class="string">'log_file_extension'</span>] !== <span class="string">''</span>)</span><br><span class="line">        ? ltrim($config[<span class="string">'log_file_extension'</span>], <span class="string">'.'</span>) : <span class="string">'php'</span>;</span><br><span class="line">    <span class="comment">// 设置日志文件所在目录权限</span></span><br><span class="line">    file_exists(<span class="keyword">$this</span>-&gt;_log_path) <span class="keyword">OR</span> mkdir(<span class="keyword">$this</span>-&gt;_log_path, <span class="number">0755</span>, <span class="keyword">TRUE</span>);</span><br><span class="line">    <span class="comment">// 确定日志文件所在目录是否可读以及是否是个目录</span></span><br><span class="line">    <span class="keyword">if</span> ( ! is_dir(<span class="keyword">$this</span>-&gt;_log_path) <span class="keyword">OR</span> ! is_really_writable(<span class="keyword">$this</span>-&gt;_log_path))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_enabled = <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 确定设置的日志级别</span></span><br><span class="line">    <span class="keyword">if</span> (is_numeric($config[<span class="string">'log_threshold'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_threshold = (int) $config[<span class="string">'log_threshold'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (is_array($config[<span class="string">'log_threshold'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_threshold = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_threshold_array = array_flip($config[<span class="string">'log_threshold'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 确定日志日期格式</span></span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">empty</span>($config[<span class="string">'log_date_format'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_date_fmt = $config[<span class="string">'log_date_format'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 确定创建的日志文件权限</span></span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">empty</span>($config[<span class="string">'log_file_permissions'</span>]) &amp;&amp; is_int($config[<span class="string">'log_file_permissions'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_file_permissions = $config[<span class="string">'log_file_permissions'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="write-log"><a href="#write-log" class="headerlink" title="write_log()"></a>write_log()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 写日志方法</span></span><br><span class="line"><span class="comment">* 该方法以下几种情况下不写：</span></span><br><span class="line"><span class="comment">* ① 目录没有写权限时。$this-&gt;_enabled===FALSE时。</span></span><br><span class="line"><span class="comment">* ② 阀值与Log记录等级不匹配时。</span></span><br><span class="line"><span class="comment">* ③ 文件打开失败时。</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write_log</span><span class="params">($level, $msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 目录没有写权限时，返回false退出。</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_enabled === <span class="keyword">FALSE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $level = strtoupper($level);</span><br><span class="line">    <span class="comment">//写日志的level级别大于阈值设置值，同时level级别也不能匹配阈值数组中设置的值，返回FALSE退出</span></span><br><span class="line">    <span class="keyword">if</span> (( ! <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_levels[$level]) <span class="keyword">OR</span> (<span class="keyword">$this</span>-&gt;_levels[$level] &gt; <span class="keyword">$this</span>-&gt;_threshold))</span><br><span class="line">        &amp;&amp; ! <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_threshold_array[<span class="keyword">$this</span>-&gt;_levels[$level]]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//设置文件全路径及名称</span></span><br><span class="line">    $filepath = <span class="keyword">$this</span>-&gt;_log_path.<span class="string">'log-'</span>.date(<span class="string">'Y-m-d'</span>).<span class="string">'.'</span>.<span class="keyword">$this</span>-&gt;_file_ext;</span><br><span class="line">    $message = <span class="string">''</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//新创建并且后缀为php的文件，系统首先在前面加上</span></span><br><span class="line">    <span class="comment">//"<span class="meta">&lt;?php</span> defined('BASEPATH') OR exit('No direct script access allowed');\n\n"</span></span><br><span class="line">    <span class="keyword">if</span> ( ! file_exists($filepath))</span><br><span class="line">    &#123;</span><br><span class="line">        $newfile = <span class="keyword">TRUE</span>;</span><br><span class="line">        <span class="comment">// Only add protection to php files</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_file_ext === <span class="string">'php'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $message .= <span class="string">"&lt;?php defined('BASEPATH') OR exit('No direct script access allowed'); ?&gt;\n\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//无法打开文件，返回FALSE退出</span></span><br><span class="line">    <span class="keyword">if</span> ( ! $fp = @fopen($filepath, <span class="string">'ab'</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    flock($fp, LOCK_EX);</span><br><span class="line">    <span class="comment">//实例化时间</span></span><br><span class="line">    <span class="comment">// Instantiating DateTime with microseconds appended to initial date is needed for proper support of this format</span></span><br><span class="line">    <span class="keyword">if</span> (strpos(<span class="keyword">$this</span>-&gt;_date_fmt, <span class="string">'u'</span>) !== <span class="keyword">FALSE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        $microtime_full = microtime(<span class="keyword">TRUE</span>);</span><br><span class="line">        $microtime_short = sprintf(<span class="string">"%06d"</span>, ($microtime_full - floor($microtime_full)) * <span class="number">1000000</span>);</span><br><span class="line">        $date = <span class="keyword">new</span> DateTime(date(<span class="string">'Y-m-d H:i:s.'</span>.$microtime_short, $microtime_full));</span><br><span class="line">        $date = $date-&gt;format(<span class="keyword">$this</span>-&gt;_date_fmt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $date = date(<span class="keyword">$this</span>-&gt;_date_fmt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//合成日志内容</span></span><br><span class="line">    $message .= <span class="keyword">$this</span>-&gt;_format_line($level, $date, $msg);</span><br><span class="line">    <span class="comment">// 写入文件</span></span><br><span class="line">    <span class="keyword">for</span> ($written = <span class="number">0</span>, $length = <span class="keyword">self</span>::strlen($message); $written &lt; $length; $written += $result)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (($result = fwrite($fp, <span class="keyword">self</span>::substr($message, $written))) === <span class="keyword">FALSE</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    flock($fp, LOCK_UN);</span><br><span class="line">    fclose($fp);</span><br><span class="line">    <span class="comment">// 更改文件权限</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($newfile) &amp;&amp; $newfile === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        chmod($filepath, <span class="keyword">$this</span>-&gt;_file_permissions);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> is_int($result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="format-line"><a href="#format-line" class="headerlink" title="_format_line()"></a>_format_line()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_format_line</span><span class="params">($level, $date, $message)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $level.<span class="string">' - '</span>.$date.<span class="string">' --&gt; '</span>.$message.<span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="strlen"><a href="#strlen" class="headerlink" title="strlen()"></a>strlen()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">strlen</span><span class="params">($str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">self</span>::$func_overload)</span><br><span class="line">        ? mb_strlen($str, <span class="string">'8bit'</span>)</span><br><span class="line">        : strlen($str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="substr"><a href="#substr" class="headerlink" title="substr()"></a>substr()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">substr</span><span class="params">($str, $start, $length = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>::$func_overload)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// mb_substr($str, $start, null, '8bit') returns an empty</span></span><br><span class="line">        <span class="comment">// string on PHP 5.3</span></span><br><span class="line">        <span class="keyword">isset</span>($length) <span class="keyword">OR</span> $length = ($start &gt;= <span class="number">0</span> ? <span class="keyword">self</span>::strlen($str) - $start : -$start);</span><br><span class="line">        <span class="keyword">return</span> mb_substr($str, $start, $length, <span class="string">'8bit'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">isset</span>($length)</span><br><span class="line">        ? substr($str, $start, $length)</span><br><span class="line">        : substr($str, $start);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjk2NDUxMw==" title="https://blog.csdn.net/Zhihua_W/article/details/52964513">CI框架源码解析十八之日志记录类文件Log.php<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;日志记录类用于记录CI框架信息的一些操作日志(错误日志、调试日志、信息日志等等)。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
      <category term="Codeigniter" scheme="https://pureven.cc/tags/Codeigniter/"/>
    
  </entry>
  
  <entry>
    <title>CodeIgniter异常类文件Exceptions.php</title>
    <link href="https://pureven.cc/2020/02/22/codeigniter-exceptions/"/>
    <id>https://pureven.cc/2020/02/22/codeigniter-exceptions/</id>
    <published>2020-02-22T08:37:52.000Z</published>
    <updated>2020-04-13T00:41:43.199Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>异常类用于异常提示，该类定义了三种类型或级别的异常提示，即错误类型的消息、调试类型的消息和信息类型的消息。</p><a id="more"></a><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> $ob_level; <span class="comment">// 嵌套的输出缓冲处理程序的级别；如果输出缓冲区不起作用，返回零。</span></span><br><span class="line"><span class="keyword">public</span> $levels = <span class="keyword">array</span>(</span><br><span class="line">    E_ERROR                 =&gt;<span class="string">'Error'</span>,   <span class="comment">// 致命错误</span></span><br><span class="line">    E_WARNING               =&gt;<span class="string">'Warning'</span>, <span class="comment">// 非致命运行错误</span></span><br><span class="line">    E_PARSE                 =&gt;<span class="string">'Parsing Error'</span>, <span class="comment">// 编译错误</span></span><br><span class="line">    E_NOTICE                =&gt;<span class="string">'Notice'</span>,        <span class="comment">// notice错误</span></span><br><span class="line">    E_CORE_ERROR            =&gt;<span class="string">'Core Error'</span>,   <span class="comment">// php启动时致命错误</span></span><br><span class="line">    E_CORE_WARNING          =&gt;<span class="string">'Core Warning'</span>, <span class="comment">// php启动时非致命错误</span></span><br><span class="line">    E_COMPILE_ERROR         =&gt;<span class="string">'Compile Error'</span>,  <span class="comment">// php致命编译错误</span></span><br><span class="line">    E_COMPILE_WARNING       =&gt;<span class="string">'Compile Warning'</span>,<span class="comment">// php非致命编译错误</span></span><br><span class="line">    E_USER_ERROR            =&gt;<span class="string">'User Error'</span>,  <span class="comment">// 致命的用户错误</span></span><br><span class="line">    E_USER_WARNING          =&gt;<span class="string">'User Warning'</span>,<span class="comment">// 非致命的用户警告</span></span><br><span class="line">    E_USER_NOTICE           =&gt;<span class="string">'User Notice'</span>, <span class="comment">// 用户生成的通知</span></span><br><span class="line">    E_STRICT                =&gt;<span class="string">'Runtime Notice'</span>   <span class="comment">// Run-time通知，提高代码稳定可靠性</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;ob_level = ob_get_level();<span class="comment">// 输出缓冲机制的嵌套级别</span></span><br><span class="line">    <span class="comment">// <span class="doctag">Note:</span> Do not log messages from this constructor.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ub2ItZ2V0LWxldmVsLnBocA==" title="https://www.php.net/manual/zh/function.ob-get-level.php">ob_get_level<i class="fa fa-external-link"></i></span></p><hr><h4 id="log-exception"><a href="#log-exception" class="headerlink" title="log_exception()"></a>log_exception()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">log_exception</span><span class="params">($severity, $message, $filepath, $line)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $severity = <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;levels[$severity]) ? <span class="keyword">$this</span>-&gt;levels[$severity] : $severity;</span><br><span class="line">    log_message(<span class="string">'error'</span>, <span class="string">'Severity: '</span>.$severity.<span class="string">' --&gt; '</span>.$message.<span class="string">' '</span>.$filepath.<span class="string">' '</span>.$line); <span class="comment">// 记录错误日志</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="show-404"><a href="#show-404" class="headerlink" title="show_404()"></a>show_404()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*show_404()是show_error()中的一种特殊情况，就是请求不存在的情况，响应一个404错误*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_404</span><span class="params">($page = <span class="string">''</span>, $log_error = TRUE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (is_cli())</span><br><span class="line">    &#123;</span><br><span class="line">        $heading = <span class="string">'Not Found'</span>;</span><br><span class="line">        $message = <span class="string">'The controller/method pair you requested was not found.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $heading = <span class="string">'404 Page Not Found'</span>;</span><br><span class="line">        $message = <span class="string">'The page you requested was not found.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// By default we log this, but allow a dev to skip it</span></span><br><span class="line">    <span class="keyword">if</span> ($log_error)</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(<span class="string">'error'</span>, $heading.<span class="string">': '</span>.$page);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;show_error($heading, $message, <span class="string">'error_404'</span>, <span class="number">404</span>); <span class="comment">// 调的show_error()方法</span></span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">4</span>); <span class="comment">// EXIT_UNKNOWN_FILE</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="show-error"><a href="#show-error" class="headerlink" title="show_error()"></a>show_error()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* show_error()是有意识触发的错误，不是代码写错，</span></span><br><span class="line"><span class="comment">* 而是代码不当，或者用户操作不当，比如找不到控制器，指定方法之类的，</span></span><br><span class="line"><span class="comment">* CI就show一个错误出来，当然开发者也可以调用此方法响应一个错误信息，</span></span><br><span class="line"><span class="comment">* 某种程度上类似于catch到一个exception之后的处理，然后根据exception发出不同的提示信息。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_error</span><span class="params">($heading, $message, $template = <span class="string">'error_general'</span>, $status_code = <span class="number">500</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $templates_path = config_item(<span class="string">'error_views_path'</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($templates_path))</span><br><span class="line">    &#123;</span><br><span class="line">        $templates_path = VIEWPATH.<span class="string">'errors'</span>.DIRECTORY_SEPARATOR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//默认是500，内部服务错误。是指由于程序代码写得不恰当而引起的，因此向浏览器回应一个内部错误。</span></span><br><span class="line">    <span class="keyword">if</span> (is_cli())</span><br><span class="line">    &#123;</span><br><span class="line">        $message = <span class="string">"\t"</span>.(is_array($message) ? implode(<span class="string">"\n\t"</span>, $message) : $message);</span><br><span class="line">        $template = <span class="string">'cli'</span>.DIRECTORY_SEPARATOR.$template;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        set_status_header($status_code);</span><br><span class="line">        $message = <span class="string">'&lt;p&gt;'</span>.(is_array($message) ? implode(<span class="string">'&lt;/p&gt;&lt;p&gt;'</span>, $message) : $message).<span class="string">'&lt;/p&gt;'</span>;</span><br><span class="line">        $template = <span class="string">'html'</span>.DIRECTORY_SEPARATOR.$template;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 缓冲机制是有嵌套级别的，</span></span><br><span class="line">    <span class="comment">// 这个if判断是说发生错误的缓冲级别和Exception被加载【刚开始】的缓冲级别相差1以上</span></span><br><span class="line">    <span class="comment">// 看core/Loader.php中的_ci_load() CI在加载view的时候先ob_start(),然后由output处理输出，</span></span><br><span class="line">    <span class="comment">// 因此，如果是在视图文件发生错误，则就会出现缓冲级别相差1的情况，此时先把输出的内容给flush出来，然后再把错误信息输出。</span></span><br><span class="line">    <span class="comment">// 此处的作用与show_php_error()中的相应位置作用一样</span></span><br><span class="line">    <span class="keyword">if</span> (ob_get_level() &gt; <span class="keyword">$this</span>-&gt;ob_level + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ob_end_flush();</span><br><span class="line">    &#125;</span><br><span class="line">    ob_start();</span><br><span class="line">    <span class="comment">//错误信息模板，位于应用目录errors/下。</span></span><br><span class="line">    <span class="keyword">include</span>($templates_path.$template.<span class="string">'.php'</span>);</span><br><span class="line">    $buffer = ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    <span class="comment">//这里是return，因为一般情况下，是使用core/Common.php中，</span></span><br><span class="line">    <span class="comment">//全局函数show_error()间接使用当前Exception::show_error()方法。</span></span><br><span class="line">    <span class="keyword">return</span> $buffer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="show-exception"><a href="#show-exception" class="headerlink" title="show_exception()"></a>show_exception()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_exception</span><span class="params">($exception)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $templates_path = config_item(<span class="string">'error_views_path'</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($templates_path))</span><br><span class="line">    &#123;</span><br><span class="line">        $templates_path = VIEWPATH.<span class="string">'errors'</span>.DIRECTORY_SEPARATOR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $message = $exception-&gt;getMessage();</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($message))</span><br><span class="line">    &#123;</span><br><span class="line">        $message = <span class="string">'(null)'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (is_cli())</span><br><span class="line">    &#123;</span><br><span class="line">        $templates_path .= <span class="string">'cli'</span>.DIRECTORY_SEPARATOR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $templates_path .= <span class="string">'html'</span>.DIRECTORY_SEPARATOR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ob_get_level() &gt; <span class="keyword">$this</span>-&gt;ob_level + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ob_end_flush();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ob_start();</span><br><span class="line">    <span class="keyword">include</span>($templates_path.<span class="string">'error_exception.php'</span>);</span><br><span class="line">    $buffer = ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    <span class="keyword">echo</span> $buffer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="show-php-error"><a href="#show-php-error" class="headerlink" title="show_php_error()"></a>show_php_error()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_php_error</span><span class="params">($severity, $message, $filepath, $line)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $templates_path = config_item(<span class="string">'error_views_path'</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($templates_path))</span><br><span class="line">    &#123;</span><br><span class="line">        $templates_path = VIEWPATH.<span class="string">'errors'</span>.DIRECTORY_SEPARATOR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取得对应错误级别相对的说明。在$this-&gt;levels中定义。</span></span><br><span class="line">    $severity = <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;levels[$severity]) ? <span class="keyword">$this</span>-&gt;levels[$severity] : $severity;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// For safety reasons we don't show the full file path in non-CLI requests</span></span><br><span class="line">    <span class="comment">// 为了安全起见，只显示错误文件最后两段路径信息。</span></span><br><span class="line">    <span class="keyword">if</span> ( ! is_cli())</span><br><span class="line">    &#123;</span><br><span class="line">        $filepath = str_replace(<span class="string">'\\'</span>, <span class="string">'/'</span>, $filepath);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">FALSE</span> !== strpos($filepath, <span class="string">'/'</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            $x = explode(<span class="string">'/'</span>, $filepath);</span><br><span class="line">            $filepath = $x[count($x)<span class="number">-2</span>].<span class="string">'/'</span>.end($x);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $template = <span class="string">'html'</span>.DIRECTORY_SEPARATOR.<span class="string">'error_php'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $template = <span class="string">'cli'</span>.DIRECTORY_SEPARATOR.<span class="string">'error_php'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ob_get_level()是取得当前缓冲机制的嵌套级别。（缓冲是可以一层嵌一层的。）</span></span><br><span class="line">    <span class="comment">// 右边的$this-&gt;ob_level是在__construct()里面同样通过ob_get_level()被赋值的。</span></span><br><span class="line">    <span class="comment">// 也就是说，有可能出现：Exception组件被加载时（也就是应用刚开始运行时）的缓冲级别</span></span><br><span class="line">    <span class="comment">// （其实也就是程序最开始的时候的缓冲级别，那时候是还没有ob_start()过的），</span></span><br><span class="line">    <span class="comment">// 与发生错误的时候的缓冲级别相差1。</span></span><br><span class="line">    <span class="comment">// 在控制器执行$this-&gt;load-&gt;view("xxx");的时候，实质，Loader引入并执行这个视图文件的时候，</span></span><br><span class="line">    <span class="comment">// 是先把缓冲打开，即先ob_start()，所有输出放到缓冲区（详见：core/Loader.php中的_ci_load()）,</span></span><br><span class="line">    <span class="comment">// 然后再由Output处理输出。因此，如果是在视图文件发生错误，则就会出现缓冲级别相差1的情况，</span></span><br><span class="line">    <span class="comment">// 此时先把输出的内容给flush出来，然后再把错误信息输出。</span></span><br><span class="line">    <span class="keyword">if</span> (ob_get_level() &gt; <span class="keyword">$this</span>-&gt;ob_level + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ob_end_flush();</span><br><span class="line">    &#125;</span><br><span class="line">    ob_start();</span><br><span class="line">    <span class="keyword">include</span>($templates_path.$template.<span class="string">'.php'</span>);</span><br><span class="line">    $buffer = ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    <span class="keyword">echo</span> $buffer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjk2Mjc4Ng==" title="https://blog.csdn.net/Zhihua_W/article/details/52962786">CI框架源码解析十七之异常处理类文件Exceptions.php<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;异常类用于异常提示，该类定义了三种类型或级别的异常提示，即错误类型的消息、调试类型的消息和信息类型的消息。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
      <category term="Codeigniter" scheme="https://pureven.cc/tags/Codeigniter/"/>
    
  </entry>
  
  <entry>
    <title>CodeIgniter加载类文件Loader.php</title>
    <link href="https://pureven.cc/2020/02/17/codeigniter-loader/"/>
    <id>https://pureven.cc/2020/02/17/codeigniter-loader/</id>
    <published>2020-02-17T00:43:36.000Z</published>
    <updated>2020-04-13T00:41:43.121Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>加载类在控制器基类中引入并完成初始化，主要负责对package、library、view、driver、helper、model、config等文件的加载。在配置文件中可以设置自动加载，当然也可以在具体业务实现过程中手动加载需要的文件。</p><a id="more"></a><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> $_ci_ob_level; <span class="comment">// 缓冲机制的嵌套级别</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_view_paths =<span class="keyword">array</span>(VIEWPATH=&gt; <span class="keyword">TRUE</span>); <span class="comment">// 待加载视图文件路径</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_library_paths =<span class="keyword">array</span>(APPPATH, BASEPATH); <span class="comment">// 待加载类库文件路径</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_model_paths =<span class="keyword">array</span>(APPPATH);  <span class="comment">// 待加载模型文件路径</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_helper_paths =<span class="keyword">array</span>(APPPATH, BASEPATH); <span class="comment">// 待加载帮助文件路径</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_cached_vars =<span class="keyword">array</span>(); <span class="comment">// 待加载缓存文件路径</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_classes =<span class="keyword">array</span>(); <span class="comment">// 用于保存已加载的类</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_models =<span class="keyword">array</span>(); <span class="comment">// 用于保存已加载的模型</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_helpers =<span class="keyword">array</span>(); <span class="comment">// 用于保存已加载的帮助文件</span></span><br><span class="line"><span class="keyword">protected</span> $_ci_varmap =<span class="keyword">array</span>( <span class="comment">// 类的别名映射，名字太长的映射个短点儿的</span></span><br><span class="line">    <span class="string">'unit_test'</span> =&gt; <span class="string">'unit'</span>,</span><br><span class="line">    <span class="string">'user_agent'</span> =&gt; <span class="string">'agent'</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ob_get_level(): 输出缓冲机制的嵌套级别</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_ob_level = ob_get_level();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// is_loaded(): 返回已加载的类，此处完成交接，此处_ci_classes也用来保管</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_classes =&amp; is_loaded();</span><br><span class="line"></span><br><span class="line">    log_message(<span class="string">'info'</span>, <span class="string">'Loader Class Initialized'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="initialize"><a href="#initialize" class="headerlink" title="initialize()"></a>initialize()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">initialize</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_autoloader();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法在控制器基类中调用，用于初始化加载类，根据配置的自动加载文件进行完成自动加载。</p><hr><h4 id="is-loaded"><a href="#is-loaded" class="headerlink" title="is_loaded()"></a>is_loaded()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">is_loaded</span><span class="params">($class)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 若加载了返回类名或者指定的名称，未加载则返回false</span></span><br><span class="line">    <span class="keyword">return</span> array_search(ucfirst($class), <span class="keyword">$this</span>-&gt;_ci_classes, <span class="keyword">TRUE</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="library"><a href="#library" class="headerlink" title="library()"></a>library()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">library</span><span class="params">($library, $params = NULL, $object_name = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($library))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (is_array($library))</span><br><span class="line">    &#123; <span class="comment">// 支持数组形式同时加载多个类库：$this-&gt;load-&gt;library(['test', 'database']);</span></span><br><span class="line">        <span class="keyword">foreach</span> ($library <span class="keyword">as</span> $key =&gt; $value)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_int($key))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;library($value, $params);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;library($key, $params, $value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($params !== <span class="keyword">NULL</span> &amp;&amp; ! is_array($params))</span><br><span class="line">    &#123;</span><br><span class="line">        $params = <span class="keyword">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_load_library($library, $params, $object_name);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当执行<code>$this-&gt;load-&gt;library(&#39;xxx&#39;);</code>时走的这个方法。</p><hr><h4 id="model"><a href="#model" class="headerlink" title="model()"></a>model()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">model</span><span class="params">($model, $name = <span class="string">''</span>, $db_conn = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($model))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (is_array($model))</span><br><span class="line">    &#123; <span class="comment">// 可以同时加载多个model</span></span><br><span class="line">        <span class="keyword">foreach</span> ($model <span class="keyword">as</span> $key =&gt; $value)</span><br><span class="line">        &#123;</span><br><span class="line">            is_int($key) ? <span class="keyword">$this</span>-&gt;model($value, <span class="string">''</span>, $db_conn) : <span class="keyword">$this</span>-&gt;model($key, $value, $db_conn);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $path = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果加载的model字符串中有子目录</span></span><br><span class="line">    <span class="comment">// 如:$this-&gt;load-&gt;model('user/base_model')表示加载的是user目录下的Base_model.php</span></span><br><span class="line">    <span class="keyword">if</span> (($last_slash = strrpos($model, <span class="string">'/'</span>)) !== <span class="keyword">FALSE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// $last_slash为'/'最后一次出现的位置，$path即去掉文件名剩下的路径信息</span></span><br><span class="line">        $path = substr($model, <span class="number">0</span>, ++$last_slash);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// $model为文件名</span></span><br><span class="line">        $model = substr($model, $last_slash);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有时候model文件名会很长，因此会映射一个简短的名称，也就是这里的$name</span></span><br><span class="line">    <span class="comment">// 比如： $this-&gt;load-&gt;model('hello_world_I_am_comming_model', 'hello_model');</span></span><br><span class="line">    <span class="comment">// 然后执行$this-&gt;hello_model-&gt;xxx()去调用其中的方法就ok了。</span></span><br><span class="line">    <span class="comment">// 如果不指定则使用$model，即'hello_world_I_am_comming_model'。</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($name))</span><br><span class="line">    &#123;</span><br><span class="line">        $name = $model;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (in_array($name, <span class="keyword">$this</span>-&gt;_ci_models, <span class="keyword">TRUE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重复加载会抛出异常</span></span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($CI-&gt;$name))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">'The model name you are loading is the name of a resource that is already being used: '</span>.$name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果要求同时连接数据库则调用$this-&gt;database()加载数据库</span></span><br><span class="line">    <span class="keyword">if</span> ($db_conn !== <span class="keyword">FALSE</span> &amp;&amp; ! class_exists(<span class="string">'CI_DB'</span>, <span class="keyword">FALSE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ($db_conn === <span class="keyword">TRUE</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $db_conn = <span class="string">''</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;database($db_conn, <span class="keyword">FALSE</span>, <span class="keyword">TRUE</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( ! class_exists(<span class="string">'CI_Model'</span>, <span class="keyword">FALSE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// application目录下如果存在Model.php则加载此文件，这个文件代替system目录下的同名文件作为基类，因此类名为CI_Model</span></span><br><span class="line">        $app_path = APPPATH.<span class="string">'core'</span>.DIRECTORY_SEPARATOR;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($app_path.<span class="string">'Model.php'</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">require_once</span>($app_path.<span class="string">'Model.php'</span>);</span><br><span class="line">            <span class="comment">// 如果加载后发现该文件类名不为CI_Model.php则报错</span></span><br><span class="line">            <span class="keyword">if</span> ( ! class_exists(<span class="string">'CI_Model'</span>, <span class="keyword">FALSE</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException($app_path.<span class="string">"Model.php exists, but doesn't declare class CI_Model"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            log_message(<span class="string">'info'</span>, <span class="string">'CI_Model class loaded'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span> ( ! class_exists(<span class="string">'CI_Model'</span>, <span class="keyword">FALSE</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">require_once</span>(BASEPATH.<span class="string">'core'</span>.DIRECTORY_SEPARATOR.<span class="string">'Model.php'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 加载子类</span></span><br><span class="line">        $class = config_item(<span class="string">'subclass_prefix'</span>).<span class="string">'Model'</span>;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($app_path.$class.<span class="string">'.php'</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">require_once</span>($app_path.$class.<span class="string">'.php'</span>);</span><br><span class="line">            <span class="comment">// 子类名与文件名不一致则抛出异常</span></span><br><span class="line">            <span class="keyword">if</span> ( ! class_exists($class, <span class="keyword">FALSE</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException($app_path.$class.<span class="string">".php exists, but doesn't declare class "</span>.$class);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            log_message(<span class="string">'info'</span>, config_item(<span class="string">'subclass_prefix'</span>).<span class="string">'Model class loaded'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $model = ucfirst($model);</span><br><span class="line">    <span class="keyword">if</span> ( ! class_exists($model, <span class="keyword">FALSE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_ci_model_paths <span class="keyword">as</span> $mod_path)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ( ! file_exists($mod_path.<span class="string">'models/'</span>.$path.$model.<span class="string">'.php'</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 注意这里是'models/'.$path.$model.'.php'，子目录用在这。</span></span><br><span class="line">            <span class="keyword">require_once</span>($mod_path.<span class="string">'models/'</span>.$path.$model.<span class="string">'.php'</span>);</span><br><span class="line">            <span class="comment">// 加载了但是类名不存在则抛出异常</span></span><br><span class="line">            <span class="keyword">if</span> ( ! class_exists($model, <span class="keyword">FALSE</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException($mod_path.<span class="string">"models/"</span>.$path.$model.<span class="string">".php exists, but doesn't declare class "</span>.$model);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 加了一遍发现类名不存在则抛出异常</span></span><br><span class="line">        <span class="keyword">if</span> ( ! class_exists($model, <span class="keyword">FALSE</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">'Unable to locate the model you have specified: '</span>.$model);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> ( ! is_subclass_of($model, <span class="string">'CI_Model'</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 如果该类存在但是不是CI_Model的子类则抛出异常</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Class "</span>.$model.<span class="string">" already exists and doesn't extend CI_Model"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 加载完了将$name，也就是映射后的名称放入'_ci_models'</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_models[] = $name;</span><br><span class="line">    $model = <span class="keyword">new</span> $model();</span><br><span class="line">    $CI-&gt;$name = $model; <span class="comment">// 这里完成映射</span></span><br><span class="line">    log_message(<span class="string">'info'</span>, <span class="string">'Model "'</span>.get_class($model).<span class="string">'" initialized'</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="database"><a href="#database" class="headerlink" title="database()"></a>database()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">database</span><span class="params">($params = <span class="string">''</span>, $return = FALSE, $query_builder = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Grab the super object</span></span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 已经加载了就不重复加载了</span></span><br><span class="line">    <span class="keyword">if</span> ($return === <span class="keyword">FALSE</span> &amp;&amp; $query_builder === <span class="keyword">NULL</span> &amp;&amp; <span class="keyword">isset</span>($CI-&gt;db) &amp;&amp; is_object($CI-&gt;db) &amp;&amp; ! <span class="keyword">empty</span>($CI-&gt;db-&gt;conn_id))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/DB.php'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($return === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 这里DB是个方法</span></span><br><span class="line">        <span class="keyword">return</span> DB($params, $query_builder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Initialize the db variable. Needed to prevent</span></span><br><span class="line">    <span class="comment">// reference errors with some configurations</span></span><br><span class="line">    $CI-&gt;db = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Load the DB class</span></span><br><span class="line">    $CI-&gt;db =&amp; DB($params, $query_builder);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="dbutil"><a href="#dbutil" class="headerlink" title="dbutil()"></a>dbutil()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dbutil</span><span class="params">($db = NULL, $return = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( ! is_object($db) <span class="keyword">OR</span> ! ($db <span class="keyword">instanceof</span> CI_DB))</span><br><span class="line">    &#123;</span><br><span class="line">        class_exists(<span class="string">'CI_DB'</span>, <span class="keyword">FALSE</span>) <span class="keyword">OR</span> <span class="keyword">$this</span>-&gt;database();<span class="comment">// 没有参数，这里加载的是数据库工具类</span></span><br><span class="line">        $db =&amp; $CI-&gt;db;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/DB_utility.php'</span>);<span class="comment">// dbdriver为mssql mysql postgre pdo ...</span></span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/drivers/'</span>.$db-&gt;dbdriver.<span class="string">'/'</span>.$db-&gt;dbdriver.<span class="string">'_utility.php'</span>);</span><br><span class="line">    $class = <span class="string">'CI_DB_'</span>.$db-&gt;dbdriver.<span class="string">'_utility'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($return === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> $class($db);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $CI-&gt;dbutil = <span class="keyword">new</span> $class($db);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="dbforge"><a href="#dbforge" class="headerlink" title="dbforge()"></a>dbforge()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dbforge</span><span class="params">($db = NULL, $return = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line">    <span class="keyword">if</span> ( ! is_object($db) <span class="keyword">OR</span> ! ($db <span class="keyword">instanceof</span> CI_DB))</span><br><span class="line">    &#123;</span><br><span class="line">        class_exists(<span class="string">'CI_DB'</span>, <span class="keyword">FALSE</span>) <span class="keyword">OR</span> <span class="keyword">$this</span>-&gt;database();</span><br><span class="line">        $db =&amp; $CI-&gt;db;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/DB_forge.php'</span>);</span><br><span class="line">    <span class="keyword">require_once</span>(BASEPATH.<span class="string">'database/drivers/'</span>.$db-&gt;dbdriver.<span class="string">'/'</span>.$db-&gt;dbdriver.<span class="string">'_forge.php'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">empty</span>($db-&gt;subdriver))</span><br><span class="line">    &#123;</span><br><span class="line">        $driver_path = BASEPATH.<span class="string">'database/drivers/'</span>.$db-&gt;dbdriver.<span class="string">'/subdrivers/'</span>.$db-&gt;dbdriver.<span class="string">'_'</span>.$db-&gt;subdriver.<span class="string">'_forge.php'</span>;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($driver_path))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">require_once</span>($driver_path);</span><br><span class="line">            $class = <span class="string">'CI_DB_'</span>.$db-&gt;dbdriver.<span class="string">'_'</span>.$db-&gt;subdriver.<span class="string">'_forge'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $class = <span class="string">'CI_DB_'</span>.$db-&gt;dbdriver.<span class="string">'_forge'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($return === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> $class($db);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $CI-&gt;dbforge = <span class="keyword">new</span> $class($db);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载数据库锻造类。</p><hr><h4 id="view"><a href="#view" class="headerlink" title="view()"></a>view()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">view</span><span class="params">($view, $vars = array<span class="params">()</span>, $return = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_load(<span class="keyword">array</span>(<span class="string">'_ci_view'</span> =&gt; $view, <span class="string">'_ci_vars'</span> =&gt; <span class="keyword">$this</span>-&gt;_ci_prepare_view_vars($vars), <span class="string">'_ci_return'</span> =&gt; $return));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载视图。</p><hr><h4 id="file"><a href="#file" class="headerlink" title="file()"></a>file()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file</span><span class="params">($path, $return = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_load(<span class="keyword">array</span>(<span class="string">'_ci_path'</span> =&gt; $path, <span class="string">'_ci_return'</span> =&gt; $return));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载文件。</p><hr><h4 id="vars"><a href="#vars" class="headerlink" title="vars()"></a>vars()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vars</span><span class="params">($vars, $val = <span class="string">''</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 确保参数为数组格式</span></span><br><span class="line">    $vars = is_string($vars)</span><br><span class="line">        ? <span class="keyword">array</span>($vars =&gt; $val)</span><br><span class="line">        : <span class="keyword">$this</span>-&gt;_ci_prepare_view_vars($vars);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> ($vars <span class="keyword">as</span> $key =&gt; $val)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_ci_cached_vars[$key] = $val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置变量。</p><hr><h4 id="clear-vars"><a href="#clear-vars" class="headerlink" title="clear_vars()"></a>clear_vars()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">clear_vars</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_cached_vars = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>清空缓存的变量。</p><hr><h4 id="get-var"><a href="#get-var" class="headerlink" title="get_var()"></a>get_var()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_var</span><span class="params">($key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_ci_cached_vars[$key]) ? <span class="keyword">$this</span>-&gt;_ci_cached_vars[$key] : <span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>检查并获取某个变量。</p><hr><h4 id="get-vars"><a href="#get-vars" class="headerlink" title="get_vars()"></a>get_vars()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_vars</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_cached_vars;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取设置的变量。</p><hr><h4 id="helper"><a href="#helper" class="headerlink" title="helper()"></a>helper()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">helper</span><span class="params">($helpers = array<span class="params">()</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    is_array($helpers) <span class="keyword">OR</span> $helpers = <span class="keyword">array</span>($helpers);<span class="comment">// 如果是单个传入这里就要构造成数组</span></span><br><span class="line">    <span class="keyword">foreach</span> ($helpers <span class="keyword">as</span> &amp;$helper)</span><br><span class="line">    &#123;</span><br><span class="line">        $filename = basename($helper);<span class="comment">// 获取文件名</span></span><br><span class="line">        $filepath = ($filename === $helper) ? <span class="string">''</span> : substr($helper, <span class="number">0</span>, strlen($helper) - strlen($filename));<span class="comment">// 文件名如果跟参数一致说明没有路径，不一致需要分割获取</span></span><br><span class="line">        $filename = strtolower(preg_replace(<span class="string">'#(_helper)?(\.php)?$#i'</span>, <span class="string">''</span>, $filename)).<span class="string">'_helper'</span>;<span class="comment">// 加后缀 _helper,比如 array_helper</span></span><br><span class="line">        $helper   = $filepath.$filename;<span class="comment">// 重组</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 已经加载过则判断下一个</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_ci_helpers[$helper]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Is this a helper extension request?</span></span><br><span class="line">        $ext_helper = config_item(<span class="string">'subclass_prefix'</span>).$filename; <span class="comment">// $ext_helper = 'MY_array_helper'</span></span><br><span class="line">        $ext_loaded = <span class="keyword">FALSE</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_ci_helper_paths <span class="keyword">as</span> $path)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (file_exists($path.<span class="string">'helpers/'</span>.$ext_helper.<span class="string">'.php'</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">include_once</span>($path.<span class="string">'helpers/'</span>.$ext_helper.<span class="string">'.php'</span>);</span><br><span class="line">                $ext_loaded = <span class="keyword">TRUE</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// If we have loaded extensions - check if the base one is here</span></span><br><span class="line">        <span class="comment">// 这里的意思是如果MY_array_helper.php存在但是array_helper.php不存在则报错</span></span><br><span class="line">        <span class="keyword">if</span> ($ext_loaded === <span class="keyword">TRUE</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $base_helper = BASEPATH.<span class="string">'helpers/'</span>.$helper.<span class="string">'.php'</span>;</span><br><span class="line">            <span class="keyword">if</span> ( ! file_exists($base_helper))</span><br><span class="line">            &#123;</span><br><span class="line">                show_error(<span class="string">'Unable to load the requested file: helpers/'</span>.$helper.<span class="string">'.php'</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">include_once</span>($base_helper);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_ci_helpers[$helper] = <span class="keyword">TRUE</span>;</span><br><span class="line">            log_message(<span class="string">'info'</span>, <span class="string">'Helper loaded: '</span>.$helper);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// No extensions found ... try loading regular helpers and/or overrides</span></span><br><span class="line">        <span class="comment">// 没找到MY_array_helper.php,则加载array_helper.php</span></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_ci_helper_paths <span class="keyword">as</span> $path)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (file_exists($path.<span class="string">'helpers/'</span>.$helper.<span class="string">'.php'</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">include_once</span>($path.<span class="string">'helpers/'</span>.$helper.<span class="string">'.php'</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">$this</span>-&gt;_ci_helpers[$helper] = <span class="keyword">TRUE</span>;</span><br><span class="line">                log_message(<span class="string">'info'</span>, <span class="string">'Helper loaded: '</span>.$helper);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// unable to load the helper</span></span><br><span class="line">        <span class="comment">// 没加载成功则报错</span></span><br><span class="line">        <span class="keyword">if</span> ( ! <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_ci_helpers[$helper]))</span><br><span class="line">        &#123;</span><br><span class="line">            show_error(<span class="string">'Unable to load the requested file: helpers/'</span>.$helper.<span class="string">'.php'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面用到的php内置函数：</p><ol><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uYmFzZW5hbWUucGhw" title="https://www.php.net/manual/zh/function.basename.php">basename: 返回路径中的文件名部分<i class="fa fa-external-link"></i></span></li></ol><hr><h4 id="helpers"><a href="#helpers" class="headerlink" title="helpers()"></a>helpers()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">helpers</span><span class="params">($helpers = array<span class="params">()</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;helper($helpers);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>作用跟helper方法一致。</p><hr><h4 id="language"><a href="#language" class="headerlink" title="language()"></a>language()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载language文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">language</span><span class="params">($files, $lang = <span class="string">''</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    get_instance()-&gt;lang-&gt;load($files, $lang);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="config"><a href="#config" class="headerlink" title="config()"></a>config()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">config</span><span class="params">($file, $use_sections = FALSE, $fail_gracefully = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 调的是CI_Config类中的load()方法</span></span><br><span class="line">    <span class="keyword">return</span> get_instance()-&gt;config-&gt;load($file, $use_sections, $fail_gracefully);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="driver"><a href="#driver" class="headerlink" title="driver()"></a>driver()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">driver</span><span class="params">($library, $params = NULL, $object_name = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (is_array($library))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span> ($library <span class="keyword">as</span> $key =&gt; $value)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_int($key))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;driver($value, $params);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;driver($key, $params, $value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (<span class="keyword">empty</span>($library))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( ! class_exists(<span class="string">'CI_Driver_Library'</span>, <span class="keyword">FALSE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// We aren't instantiating an object here, just making the base class available</span></span><br><span class="line">        <span class="comment">// 加载/system/libraries/Driver.php，该文件内有俩类: CI_Driver_Library作为缓存类的基类、 CI_Driver作为Nosql(redis、memcached)的基类.</span></span><br><span class="line">        <span class="comment">// 这里没有实例化对象，只是require文件</span></span><br><span class="line">        <span class="keyword">require</span> BASEPATH.<span class="string">'libraries/Driver.php'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// We can save the loader some time since Drivers will *always* be in a subfolder,</span></span><br><span class="line">    <span class="comment">// and typically identically named to the library</span></span><br><span class="line">    <span class="keyword">if</span> ( ! strpos($library, <span class="string">'/'</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// /system/libraries/Cache/Cache.php</span></span><br><span class="line">        $library = ucfirst($library).<span class="string">'/'</span>.$library;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;library($library, $params, $object_name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="add-package-path"><a href="#add-package-path" class="headerlink" title="add_package_path()"></a>add_package_path()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add_package_path</span><span class="params">($path, $view_cascade = TRUE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $path = rtrim($path, <span class="string">'/'</span>).<span class="string">'/'</span>;</span><br><span class="line">    <span class="comment">// $path = 'G:\wamp\www\CodeIgniter_hmvc\application\third_party/MX/'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将$path分别加入到_ci_library_paths/_ci_model_paths/_ci_helper_paths中</span></span><br><span class="line">    <span class="comment">// array_unshift()的作用是开头加入，后面foreach的时候也是先判断这个目录下有没有，因为自定义的文件通常继承core里的类</span></span><br><span class="line">    array_unshift(<span class="keyword">$this</span>-&gt;_ci_library_paths, $path);</span><br><span class="line">    array_unshift(<span class="keyword">$this</span>-&gt;_ci_model_paths, $path);</span><br><span class="line">    array_unshift(<span class="keyword">$this</span>-&gt;_ci_helper_paths, $path);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 两个数组相加：如果键名为字符，且键名相同，数组相加会将最先出现的值作为结果</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_view_paths = <span class="keyword">array</span>($path.<span class="string">'views/'</span> =&gt; $view_cascade) + <span class="keyword">$this</span>-&gt;_ci_view_paths;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add config file path 加载MX_Config, 即(&amp; get_instance())-&gt;config;</span></span><br><span class="line">    $config =&amp; <span class="keyword">$this</span>-&gt;_ci_get_component(<span class="string">'config'</span>);</span><br><span class="line">    $config-&gt;_config_paths[] = $path;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get-package-paths"><a href="#get-package-paths" class="headerlink" title="get_package_paths()"></a>get_package_paths()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_package_paths</span><span class="params">($include_base = FALSE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 返回已加载的package paths</span></span><br><span class="line">    <span class="keyword">return</span> ($include_base === <span class="keyword">TRUE</span>) ? <span class="keyword">$this</span>-&gt;_ci_library_paths : <span class="keyword">$this</span>-&gt;_ci_model_paths;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="remove-package-path"><a href="#remove-package-path" class="headerlink" title="remove_package_path()"></a>remove_package_path()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">remove_package_path</span><span class="params">($path = <span class="string">''</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $config =&amp; <span class="keyword">$this</span>-&gt;_ci_get_component(<span class="string">'config'</span>);<span class="comment">// 配置类组件</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($path === <span class="string">''</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// _ci_(library/model/helper/view)_paths在开头移除元素</span></span><br><span class="line">        <span class="comment">// $config-&gt;_config_paths在末尾移除元素</span></span><br><span class="line">        array_shift(<span class="keyword">$this</span>-&gt;_ci_library_paths);</span><br><span class="line">        array_shift(<span class="keyword">$this</span>-&gt;_ci_model_paths);</span><br><span class="line">        array_shift(<span class="keyword">$this</span>-&gt;_ci_helper_paths);</span><br><span class="line">        array_shift(<span class="keyword">$this</span>-&gt;_ci_view_paths);</span><br><span class="line">        array_pop($config-&gt;_config_paths);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $path = rtrim($path, <span class="string">'/'</span>).<span class="string">'/'</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">array</span>(<span class="string">'_ci_library_paths'</span>, <span class="string">'_ci_model_paths'</span>, <span class="string">'_ci_helper_paths'</span>) <span class="keyword">as</span> $var)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (($key = array_search($path, <span class="keyword">$this</span>-&gt;&#123;$var&#125;)) !== <span class="keyword">FALSE</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;&#123;$var&#125;[$key]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_ci_view_paths[$path.<span class="string">'views/'</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;_ci_view_paths[$path.<span class="string">'views/'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (($key = array_search($path, $config-&gt;_config_paths)) !== <span class="keyword">FALSE</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">unset</span>($config-&gt;_config_paths[$key]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// make sure the application default paths are still in the array</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_library_paths = array_unique(array_merge(<span class="keyword">$this</span>-&gt;_ci_library_paths, <span class="keyword">array</span>(APPPATH, BASEPATH)));</span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_helper_paths = array_unique(array_merge(<span class="keyword">$this</span>-&gt;_ci_helper_paths, <span class="keyword">array</span>(APPPATH, BASEPATH)));</span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_model_paths = array_unique(array_merge(<span class="keyword">$this</span>-&gt;_ci_model_paths, <span class="keyword">array</span>(APPPATH)));</span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_view_paths = array_merge(<span class="keyword">$this</span>-&gt;_ci_view_paths, <span class="keyword">array</span>(APPPATH.<span class="string">'views/'</span> =&gt; <span class="keyword">TRUE</span>));</span><br><span class="line">    $config-&gt;_config_paths = array_unique(array_merge($config-&gt;_config_paths, <span class="keyword">array</span>(APPPATH)));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="ci-load"><a href="#ci-load" class="headerlink" title="_ci_load()"></a>_ci_load()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// view()、file()方法中调用</span></span><br><span class="line"><span class="comment">// view: array('_ci_view' =&gt; $view, '_ci_vars' =&gt; $this-&gt;_ci_prepare_view_vars($vars), '_ci_return' =&gt; $return)</span></span><br><span class="line"><span class="comment">// file: array('_ci_path' =&gt; $path, '_ci_return' =&gt; $return)</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_ci_load</span><span class="params">($_ci_data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Set the default data variables</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">array</span>(<span class="string">'_ci_view'</span>, <span class="string">'_ci_vars'</span>, <span class="string">'_ci_path'</span>, <span class="string">'_ci_return'</span>) <span class="keyword">as</span> $_ci_val)</span><br><span class="line">    &#123;</span><br><span class="line">        $$_ci_val = <span class="keyword">isset</span>($_ci_data[$_ci_val]) ? $_ci_data[$_ci_val] : <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $file_exists = <span class="keyword">FALSE</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set the path to the requested file</span></span><br><span class="line">    <span class="keyword">if</span> (is_string($_ci_path) &amp;&amp; $_ci_path !== <span class="string">''</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        $_ci_x = explode(<span class="string">'/'</span>, $_ci_path);</span><br><span class="line">        $_ci_file = end($_ci_x);<span class="comment">// $_ci_x中最后一个元素是文件名</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $_ci_ext = pathinfo($_ci_view, PATHINFO_EXTENSION);<span class="comment">// 返回文件名，带有扩展名</span></span><br><span class="line">        $_ci_file = ($_ci_ext === <span class="string">''</span>) ? $_ci_view.<span class="string">'.php'</span> : $_ci_view;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_ci_view_paths <span class="keyword">as</span> $_ci_view_file =&gt; $cascade)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (file_exists($_ci_view_file.$_ci_file))</span><br><span class="line">            &#123;</span><br><span class="line">                $_ci_path = $_ci_view_file.$_ci_file;</span><br><span class="line">                $file_exists = <span class="keyword">TRUE</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ( ! $cascade)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( ! $file_exists &amp;&amp; ! file_exists($_ci_path))</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(<span class="string">'Unable to load the requested file: '</span>.$_ci_file);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $_ci_CI =&amp; get_instance();</span><br><span class="line">    <span class="comment">// get_object_vars：返回由对象属性组成的关联数组</span></span><br><span class="line">    <span class="keyword">foreach</span> (get_object_vars($_ci_CI) <span class="keyword">as</span> $_ci_key =&gt; $_ci_var)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( ! <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;$_ci_key))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;$_ci_key =&amp; $_ci_CI-&gt;$_ci_key;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">empty</span>($_ci_vars) <span class="keyword">OR</span> <span class="keyword">$this</span>-&gt;_ci_cached_vars = array_merge(<span class="keyword">$this</span>-&gt;_ci_cached_vars, $_ci_vars);</span><br><span class="line">    extract(<span class="keyword">$this</span>-&gt;_ci_cached_vars);<span class="comment">// 从数组中将变量导入到当前的符号表</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//我们在控制器中调用$this-&gt;load-&gt;view()方法，</span></span><br><span class="line">    <span class="comment">//实质视图并没有马上输出来，而是先将它放到缓冲区。</span></span><br><span class="line">    ob_start();</span><br><span class="line">    <span class="comment">//就是这个地方，下面if中有一句eval(xxxx)以及else中有include;而里面的xxxx正是我们要加载的视图文件，</span></span><br><span class="line">    <span class="comment">//所以这就是为什么在视图文件里，var_dump($this)，会告诉你当前这个$this是Loader组件，因为视图的代码都是相当于嵌入这个地方。</span></span><br><span class="line">    <span class="comment">// 从 PHP 5.4.0 起， <span class="meta">&lt;?</span>= 总是可用的，但是小于php5.4需要替换</span></span><br><span class="line">    <span class="keyword">if</span> ( ! is_php(<span class="string">'5.4'</span>) &amp;&amp; ! ini_get(<span class="string">'short_open_tag'</span>) &amp;&amp; config_item(<span class="string">'rewrite_short_tags'</span>) === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// '<span class="meta">&lt;?</span>='替换为'<span class="meta">&lt;?</span> echo'， 去掉注释，将字符串作为php代码执行</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">eval</span>(<span class="string">'?&gt;'</span>.preg_replace(<span class="string">'/;*\s*\?&gt;/'</span>, <span class="string">'; ?&gt;'</span>, str_replace(<span class="string">'&lt;?='</span>, <span class="string">'&lt;?php echo '</span>, file_get_contents($_ci_path))));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">include</span>($_ci_path); <span class="comment">// include() vs include_once() allows for multiple views with the same name</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 经过上面的代码，我们的视图文件的内容已经放到了缓冲区了。</span></span><br><span class="line">    log_message(<span class="string">'info'</span>, <span class="string">'File loaded: '</span>.$_ci_path);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一般情况下，$_ci_return都为FLASE，即不要求通过$this-&gt;load-&gt;view()返回输出内容，而是直接放到缓冲区静候处理;</span></span><br><span class="line">    <span class="comment">//当然你也可以先拿出数据，在控制器里面处理一下，再输出，例如在控制器中$output=$this-&gt;load-&gt;view("x",$data,TRUE);，当为TRUE的时候，下面的代码就起作用了。</span></span><br><span class="line">    <span class="keyword">if</span> ($_ci_return === <span class="keyword">TRUE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        $buffer = ob_get_contents();</span><br><span class="line">        @ob_end_clean();</span><br><span class="line">        <span class="keyword">return</span> $buffer;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 下面这个很关键，因为有可能当前这个视图文件是被另一个视图文件通过$this-&gt;view()方法引入，</span></span><br><span class="line"><span class="comment">    * 即视图文件嵌入视图文件，从而导致多了一层缓冲。为了保证缓冲内容最后交给Output处理时，</span></span><br><span class="line"><span class="comment">    * 缓冲级别只比Loader组件加载时多1（这个1就是最父层的视图文件引起的）这里必须先flush掉当前层视图引起的这次缓冲，</span></span><br><span class="line"><span class="comment">    * 以保证Output正常工作。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (ob_get_level() &gt; <span class="keyword">$this</span>-&gt;_ci_ob_level + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ob_end_flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* </span></span><br><span class="line"><span class="comment">        * 如果不是多1，则说明当前引入的视图文件就是直接在控制器里面引入的那个，</span></span><br><span class="line"><span class="comment">        * 而不是由某个视图文件再引入的。把缓冲区的内容交给Output组件并清空关闭缓冲区。</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        $_ci_CI-&gt;output-&gt;append_output(ob_get_contents());</span><br><span class="line">        @ob_end_clean();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>相关概念：</p><ol><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvaW5pLmNvcmUucGhwI2luaS5zaG9ydC1vcGVuLXRhZw==" title="https://www.php.net/manual/zh/ini.core.php#ini.short-open-tag">short_open_tag<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ub2Itc3RhcnQucGhw" title="https://www.php.net/manual/zh/function.ob-start.php">ob_start<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uZXh0cmFjdC5waHA=" title="https://www.php.net/manual/zh/function.extract.php">extract<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uZXZhbC5waHA=" title="https://www.php.net/manual/zh/function.eval.php">eval<i class="fa fa-external-link"></i></span></li></ol><hr><h4 id="ci-load-library"><a href="#ci-load-library" class="headerlink" title="_ci_load_library()"></a>_ci_load_library()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_ci_load_library</span><span class="params">($class, $params = NULL, $object_name = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Get the class name, and while we're at it trim any slashes.</span></span><br><span class="line">    <span class="comment">// The directory path can be included as part of the class name,</span></span><br><span class="line">    <span class="comment">// but we don't want a leading slash</span></span><br><span class="line">    <span class="comment">// 若$class字符串中存在.php，去掉。。。</span></span><br><span class="line">    $class = str_replace(<span class="string">'.php'</span>, <span class="string">''</span>, trim($class, <span class="string">'/'</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Was the path included with the class name?</span></span><br><span class="line">    <span class="comment">// We look for a slash to determine this</span></span><br><span class="line">    <span class="comment">// $class收尾去掉/后发现还有/就说明在子目录下了，这时要获取子目录</span></span><br><span class="line">    <span class="keyword">if</span> (($last_slash = strrpos($class, <span class="string">'/'</span>)) !== <span class="keyword">FALSE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Extract the path</span></span><br><span class="line">        $subdir = substr($class, <span class="number">0</span>, ++$last_slash);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Get the filename from the path</span></span><br><span class="line">        $class = substr($class, $last_slash);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $subdir = <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 类名首字符大写，这里再给格式化下</span></span><br><span class="line">    $class = ucfirst($class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Is this a stock library? There are a few special conditions if so ...</span></span><br><span class="line">    <span class="comment">// BASEPATH.'libraries/'.$subdir.$class.'.php' = 'G:\wamp\www\CodeIgniter_hmvc\system\libraries/My_class.php'</span></span><br><span class="line">    <span class="keyword">if</span> (file_exists(BASEPATH.<span class="string">'libraries/'</span>.$subdir.$class.<span class="string">'.php'</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_load_stock_library($class, $subdir, $params, $object_name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Safety: Was the class already loaded by a previous call?</span></span><br><span class="line">    <span class="keyword">if</span> (class_exists($class, <span class="keyword">FALSE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 这里$property是类的别名，可能由于源类名太长另外指定一个名称来表示，如果没有单独指定则由源类名表示 $this-&gt;&#123;$property&#125;-&gt;...</span></span><br><span class="line">        $property = $object_name;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($property))</span><br><span class="line">        &#123;</span><br><span class="line">            $property = strtolower($class);</span><br><span class="line">            <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_ci_varmap[$property]) &amp;&amp; $property = <span class="keyword">$this</span>-&gt;_ci_varmap[$property];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $CI =&amp; get_instance();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($CI-&gt;$property))</span><br><span class="line">        &#123;</span><br><span class="line">            log_message(<span class="string">'debug'</span>, $class.<span class="string">' class already loaded. Second attempt ignored.'</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_init_library($class, <span class="string">''</span>, $params, $object_name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Let's search for the requested library file and load it.</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_ci_library_paths <span class="keyword">as</span> $path)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// BASEPATH has already been checked for // if (file_exists(BASEPATH.'libraries/'.$subdir.$class.'.php'))...</span></span><br><span class="line">        <span class="keyword">if</span> ($path === BASEPATH)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $filepath = $path.<span class="string">'libraries/'</span>.$subdir.$class.<span class="string">'.php'</span>;</span><br><span class="line">        <span class="comment">// Does the file exist? No? Bummer...</span></span><br><span class="line">        <span class="keyword">if</span> ( ! file_exists($filepath))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// $filepath = 'G:\wamp\www\CodeIgniter_hmvc\application\libraries/My_class.php'</span></span><br><span class="line">        <span class="keyword">include_once</span>($filepath);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_init_library($class, <span class="string">''</span>, $params, $object_name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// One last attempt. Maybe the library is in a subdirectory, but it wasn't specified? 最后的努力，当成子目录来尝试加载</span></span><br><span class="line">    <span class="keyword">if</span> ($subdir === <span class="string">''</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// $this-&gt;_ci_load_library('My_class/My_class', null, null); 其实前面就已经返回了，这个值是前面打印出来的。。。</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_load_library($class.<span class="string">'/'</span>.$class, $params, $object_name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If we got this far we were unable to find the requested class.</span></span><br><span class="line">    log_message(<span class="string">'error'</span>, <span class="string">'Unable to load the requested class: '</span>.$class);</span><br><span class="line">    show_error(<span class="string">'Unable to load the requested class: '</span>.$class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="ci-load-stock-library"><a href="#ci-load-stock-library" class="headerlink" title="_ci_load_stock_library()"></a>_ci_load_stock_library()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_ci_load_stock_library</span><span class="params">($library_name, $file_path, $params, $object_name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 比如参数可能是：</span></span><br><span class="line"><span class="comment">     * $library_name = "Xmlrpc"</span></span><br><span class="line"><span class="comment">     * $file_path = ''</span></span><br><span class="line"><span class="comment">     * $params = [ 'xss_clean' =&gt; false, 'debug' =&gt; false]</span></span><br><span class="line"><span class="comment">     * $object_name = NULL</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    $prefix = <span class="string">'CI_'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (class_exists($prefix.$library_name, <span class="keyword">FALSE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 若一定义MY_Xmlrpc类, 则加载此类</span></span><br><span class="line">        <span class="keyword">if</span> (class_exists(config_item(<span class="string">'subclass_prefix'</span>).$library_name, <span class="keyword">FALSE</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            $prefix = config_item(<span class="string">'subclass_prefix'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $property = $object_name;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($property))</span><br><span class="line">        &#123;</span><br><span class="line">            $property = strtolower($library_name);</span><br><span class="line">            <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_ci_varmap[$property]) &amp;&amp; $property = <span class="keyword">$this</span>-&gt;_ci_varmap[$property];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $CI =&amp; get_instance();</span><br><span class="line">        <span class="keyword">if</span> ( ! <span class="keyword">isset</span>($CI-&gt;$property))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_init_library($library_name, $prefix, $params, $object_name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        log_message(<span class="string">'debug'</span>, $library_name.<span class="string">' class already loaded. Second attempt ignored.'</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $paths = <span class="keyword">$this</span>-&gt;_ci_library_paths;</span><br><span class="line">    array_pop($paths); <span class="comment">// BASEPATH</span></span><br><span class="line">    array_pop($paths); <span class="comment">// APPPATH (needs to be the first path checked)</span></span><br><span class="line">    array_unshift($paths, APPPATH);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> ($paths <span class="keyword">as</span> $path)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($path = $path.<span class="string">'libraries/'</span>.$file_path.$library_name.<span class="string">'.php'</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// Override</span></span><br><span class="line">            <span class="keyword">include_once</span>($path);</span><br><span class="line">            <span class="keyword">if</span> (class_exists($prefix.$library_name, <span class="keyword">FALSE</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_init_library($library_name, $prefix, $params, $object_name);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            log_message(<span class="string">'debug'</span>, $path.<span class="string">' exists, but does not declare '</span>.$prefix.$library_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include_once</span>(BASEPATH.<span class="string">'libraries/'</span>.$file_path.$library_name.<span class="string">'.php'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check for extensions</span></span><br><span class="line">    $subclass = config_item(<span class="string">'subclass_prefix'</span>).$library_name;</span><br><span class="line">    <span class="keyword">foreach</span> ($paths <span class="keyword">as</span> $path)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($path = $path.<span class="string">'libraries/'</span>.$file_path.$subclass.<span class="string">'.php'</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">include_once</span>($path);</span><br><span class="line">            <span class="keyword">if</span> (class_exists($subclass, <span class="keyword">FALSE</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                $prefix = config_item(<span class="string">'subclass_prefix'</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            log_message(<span class="string">'debug'</span>, $path.<span class="string">' exists, but does not declare '</span>.$subclass);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_ci_init_library($library_name, $prefix, $params, $object_name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="ci-init-library"><a href="#ci-init-library" class="headerlink" title="_ci_init_library()"></a>_ci_init_library()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_ci_init_library</span><span class="params">($class, $prefix, $config = FALSE, $object_name = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Is there an associated config file for this class? <span class="doctag">Note:</span> these should always be lowercase</span></span><br><span class="line">    <span class="keyword">if</span> ($config === <span class="keyword">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Fetch the config paths containing any package paths</span></span><br><span class="line">        $config_component = <span class="keyword">$this</span>-&gt;_ci_get_component(<span class="string">'config'</span>);<span class="comment">// 返回的是MX_Config</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (is_array($config_component-&gt;_config_paths))</span><br><span class="line">        &#123;</span><br><span class="line">            $found = <span class="keyword">FALSE</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($config_component-&gt;_config_paths <span class="keyword">as</span> $path)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// We test for both uppercase and lowercase, for servers that</span></span><br><span class="line">                <span class="comment">// are case-sensitive with regard to file names. Load global first,</span></span><br><span class="line">                <span class="comment">// override with environment next</span></span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 在config目录下寻找library...</span></span><br><span class="line"><span class="comment">                 * $path.'config/'.strtolower($class).'.php' = 'G:\wamp\www\CodeIgniter_hmvc\application\config/my_class.php';</span></span><br><span class="line"><span class="comment">                 * $path.'config/'.ucfirst(strtolower($class)).'.php' = 'G:\wamp\www\CodeIgniter_hmvc\application\config/My_class.php'</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="keyword">if</span> (file_exists($path.<span class="string">'config/'</span>.strtolower($class).<span class="string">'.php'</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">include</span>($path.<span class="string">'config/'</span>.strtolower($class).<span class="string">'.php'</span>);</span><br><span class="line">                    $found = <span class="keyword">TRUE</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">elseif</span> (file_exists($path.<span class="string">'config/'</span>.ucfirst(strtolower($class)).<span class="string">'.php'</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">include</span>($path.<span class="string">'config/'</span>.ucfirst(strtolower($class)).<span class="string">'.php'</span>);</span><br><span class="line">                    $found = <span class="keyword">TRUE</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (file_exists($path.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/'</span>.strtolower($class).<span class="string">'.php'</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">include</span>($path.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/'</span>.strtolower($class).<span class="string">'.php'</span>);</span><br><span class="line">                    $found = <span class="keyword">TRUE</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">elseif</span> (file_exists($path.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/'</span>.ucfirst(strtolower($class)).<span class="string">'.php'</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">include</span>($path.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/'</span>.ucfirst(strtolower($class)).<span class="string">'.php'</span>);</span><br><span class="line">                    $found = <span class="keyword">TRUE</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Break on the first found configuration, thus package</span></span><br><span class="line">                <span class="comment">// files are not overridden by default paths</span></span><br><span class="line">                <span class="keyword">if</span> ($found === <span class="keyword">TRUE</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $class_name = $prefix.$class;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Is the class name valid?</span></span><br><span class="line">    <span class="keyword">if</span> ( ! class_exists($class_name, <span class="keyword">FALSE</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(<span class="string">'error'</span>, <span class="string">'Non-existent class: '</span>.$class_name);</span><br><span class="line">        show_error(<span class="string">'Non-existent class: '</span>.$class_name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set the variable name we will assign the class to</span></span><br><span class="line">    <span class="comment">// Was a custom class name supplied? If so we'll use it</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($object_name))</span><br><span class="line">    &#123;</span><br><span class="line">        $object_name = strtolower($class);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_ci_varmap[$object_name]))</span><br><span class="line">        &#123;</span><br><span class="line">            $object_name = <span class="keyword">$this</span>-&gt;_ci_varmap[$object_name];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Don't overwrite existing properties</span></span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($CI-&gt;$object_name))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ($CI-&gt;$object_name <span class="keyword">instanceof</span> $class_name)</span><br><span class="line">        &#123;</span><br><span class="line">            log_message(<span class="string">'debug'</span>, $class_name.<span class="string">" has already been instantiated as '"</span>.$object_name.<span class="string">"'. Second attempt aborted."</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        show_error(<span class="string">"Resource '"</span>.$object_name.<span class="string">"' already exists and is not a "</span>.$class_name.<span class="string">" instance."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Save the class name and object name</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_ci_classes[$object_name] = $class;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Instantiate the class 实例化类，这一步很关键，完成最后的加载， $CI-&gt;my_class = new My_class();</span></span><br><span class="line">    $CI-&gt;$object_name = <span class="keyword">isset</span>($config)</span><br><span class="line">        ? <span class="keyword">new</span> $class_name($config)</span><br><span class="line">        : <span class="keyword">new</span> $class_name();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="ci-autoloader"><a href="#ci-autoloader" class="headerlink" title="_ci_autoloader()"></a>_ci_autoloader()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_ci_autoloader</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// include G:\wamp\www\CodeIgniter_hmvc\application\config/autoload.php</span></span><br><span class="line">    <span class="keyword">if</span> (file_exists(APPPATH.<span class="string">'config/autoload.php'</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">include</span>(APPPATH.<span class="string">'config/autoload.php'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// include G:\wamp\www\CodeIgniter_hmvc\application\config/development/autoload.php</span></span><br><span class="line">    <span class="keyword">if</span> (file_exists(APPPATH.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/autoload.php'</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">include</span>(APPPATH.<span class="string">'config/'</span>.ENVIRONMENT.<span class="string">'/autoload.php'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果需要自动加载的文件，提前写入autoload.php,比如My_class.php</span></span><br><span class="line"><span class="comment">     * $autoload = [</span></span><br><span class="line"><span class="comment">     *      'packages' =&gt; [],</span></span><br><span class="line"><span class="comment">     *      'libraries' =&gt; [</span></span><br><span class="line"><span class="comment">     *          0 =&gt; string 'my_class' (length=8)</span></span><br><span class="line"><span class="comment">     *      ],</span></span><br><span class="line"><span class="comment">     *      'drivers' =&gt; [],</span></span><br><span class="line"><span class="comment">     *      'helper' =&gt; [],</span></span><br><span class="line"><span class="comment">     *      'config' =&gt; [],</span></span><br><span class="line"><span class="comment">     *      'language' =&gt; [],</span></span><br><span class="line"><span class="comment">     *      'model' =&gt; [],</span></span><br><span class="line"><span class="comment">     * ]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">isset</span>($autoload))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Autoload packages</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * $autoload['packages'] = [</span></span><br><span class="line"><span class="comment">     *      0 =&gt; string 'G:\wamp\www\CodeIgniter_hmvc\application\third_party/MX' (length=55)</span></span><br><span class="line"><span class="comment">     * ]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($autoload[<span class="string">'packages'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span> ($autoload[<span class="string">'packages'</span>] <span class="keyword">as</span> $package_path)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;add_package_path($package_path);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Load any custom config file 加载autoload.php中配置的config文件，即$autoload['config'] = array('codeigniter');</span></span><br><span class="line">    <span class="keyword">if</span> (count($autoload[<span class="string">'config'</span>]) &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * $autoload['config'] = [</span></span><br><span class="line"><span class="comment">         *      0 =&gt; string 'codeigniter'</span></span><br><span class="line"><span class="comment">         * ]</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">foreach</span> ($autoload[<span class="string">'config'</span>] <span class="keyword">as</span> $val)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// $this-&gt;config('codeigniter');</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;config($val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Autoload helpers and languages</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">array</span>(<span class="string">'helper'</span>, <span class="string">'language'</span>) <span class="keyword">as</span> $type)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($autoload[$type]) &amp;&amp; count($autoload[$type]) &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * $autoload['helper'] = [</span></span><br><span class="line"><span class="comment">             *      0 =&gt; string 'array' (length=5)</span></span><br><span class="line"><span class="comment">             *      1 =&gt; string 'language' (length=8)</span></span><br><span class="line"><span class="comment">             * ]</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;$type($autoload[$type]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Autoload drivers</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($autoload[<span class="string">'drivers'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;driver($autoload[<span class="string">'drivers'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Load libraries</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($autoload[<span class="string">'libraries'</span>]) &amp;&amp; count($autoload[<span class="string">'libraries'</span>]) &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Load the database driver. 此处是指初始化时就加载数据库</span></span><br><span class="line">        <span class="keyword">if</span> (in_array(<span class="string">'database'</span>, $autoload[<span class="string">'libraries'</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 加载DB类，只有加载了才能使用$this-&gt;db-&gt;...</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;database();</span><br><span class="line">            <span class="comment">// 返回不包含'database'的数组</span></span><br><span class="line">            $autoload[<span class="string">'libraries'</span>] = array_diff($autoload[<span class="string">'libraries'</span>], <span class="keyword">array</span>(<span class="string">'database'</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Load all other libraries</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;library($autoload[<span class="string">'libraries'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Autoload models</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($autoload[<span class="string">'model'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;model($autoload[<span class="string">'model'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="ci-prepare-view-vars"><a href="#ci-prepare-view-vars" class="headerlink" title="_ci_prepare_view_vars()"></a>_ci_prepare_view_vars()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_ci_prepare_view_vars</span><span class="params">($vars)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( ! is_array($vars))</span><br><span class="line">    &#123;</span><br><span class="line">        $vars = is_object($vars)</span><br><span class="line">            ? get_object_vars($vars)</span><br><span class="line">            : <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (array_keys($vars) <span class="keyword">as</span> $key)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (strncmp($key, <span class="string">'_ci_'</span>, <span class="number">4</span>) === <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">unset</span>($vars[$key]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $vars;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="ci-get-component"><a href="#ci-get-component" class="headerlink" title="_ci_get_component()"></a>_ci_get_component()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> &amp;<span class="title">_ci_get_component</span><span class="params">($component)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line">    <span class="keyword">return</span> $CI-&gt;$component;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjk1NjY5Mg==" title="https://blog.csdn.net/Zhihua_W/article/details/52956692">CI框架源码解析十六之加载器类文件Loader.php<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;加载类在控制器基类中引入并完成初始化，主要负责对package、library、view、driver、helper、model、config等文件的加载。在配置文件中可以设置自动加载，当然也可以在具体业务实现过程中手动加载需要的文件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
      <category term="Codeigniter" scheme="https://pureven.cc/tags/Codeigniter/"/>
    
  </entry>
  
  <entry>
    <title>CodeIgniter模型类文件Model.php</title>
    <link href="https://pureven.cc/2020/02/16/codeigniter-m/"/>
    <id>https://pureven.cc/2020/02/16/codeigniter-m/</id>
    <published>2020-02-16T09:33:03.000Z</published>
    <updated>2020-04-13T00:41:43.103Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>该类就是MVC中的M。在项目开发过程中定义的模型都要继承这个文件。</p><a id="more"></a><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get"><a href="#get" class="headerlink" title="__get()"></a>__get()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 这里定义了一个魔术方法，当在model类中去加载别的model或library，则需要使用超级控制器中已实例化的相关对象。</span></span><br><span class="line">    <span class="keyword">return</span> get_instance()-&gt;$key;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjk1MzIyNg==" title="https://blog.csdn.net/Zhihua_W/article/details/52953226">CI框架源码解析十五之模型类文件Model.php<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;该类就是MVC中的M。在项目开发过程中定义的模型都要继承这个文件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
      <category term="Codeigniter" scheme="https://pureven.cc/tags/Codeigniter/"/>
    
  </entry>
  
  <entry>
    <title>CodeIgniter控制器类文件Controller.php</title>
    <link href="https://pureven.cc/2020/02/16/codeigniter-c/"/>
    <id>https://pureven.cc/2020/02/16/codeigniter-c/</id>
    <published>2020-02-16T07:45:41.000Z</published>
    <updated>2020-04-13T00:41:43.193Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p> 该类为超级控制器类，是我们通常所说的MVC中的C。在项目开发过程中开发的所有的控制器类都要继承自这个文件。在经过路由分发之后，实际的应用Controller接管用户的所有请求，并负责与用户数据的交互。CI中所有的应用控制器都应该是CI_Controller的子类(除非你扩展了CI的核心，那么你的Controller父类可以是MY_Controller)。</p><a id="more"></a><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 该类为单例模式的类，类的实例不能直接访问，需要通过统一的访问接口进行访问。</span></span><br><span class="line"><span class="comment">// 此处`$instance`用于保存该类的实例，即当前对象`$this`。</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> $instance;</span><br></pre></td></tr></table></figure><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 通过self::$instance实现单例化，静态变量`$instance`表示当前对象。</span></span><br><span class="line">    <span class="keyword">self</span>::$instance =&amp; <span class="keyword">$this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// is_loaded()为Common.php文件中定义的全局方法，用于返回已加载的组件(类的实例)。</span></span><br><span class="line">    <span class="comment">// 这里将所有已加载的组件以$this-&gt;xxx = &amp;load_class('xxx')的形式赋值给当前对象(超级控制器)，然后就可以直接使用$this-&gt;xxx了。</span></span><br><span class="line">    <span class="comment">// 比如：$this-&gt;input-&gt;post(); $this-&gt;security-&gt;xss_clean($data); $this-&gt;benchmark-&gt;mark('controller init start');</span></span><br><span class="line">    <span class="keyword">foreach</span> (is_loaded() <span class="keyword">as</span> $var =&gt; $class)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;$var =&amp; load_class($class);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Loader组件单独给超级控制器，之后就可以使用$this-&gt;load-&gt;model('xxx_model'); $this-&gt;load-&gt;library('xxx');进行加载某个类了。</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;load =&amp; load_class(<span class="string">'Loader'</span>, <span class="string">'core'</span>);</span><br><span class="line">    <span class="comment">// 初始化Loader组件。</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;load-&gt;initialize();</span><br><span class="line">    log_message(<span class="string">'info'</span>, <span class="string">'Controller Class Initialized'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get-instance"><a href="#get-instance" class="headerlink" title="get_instance()"></a>get_instance()</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> &amp;<span class="title">get_instance</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// $instance为私有变量，外界不能直接访问，所以提供此接口用来获取该类(超级控制器)的实例。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>::$instance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjk0ODAzNA==" title="https://blog.csdn.net/Zhihua_W/article/details/52948034">CI框架源码解析十四之控制器类文件Controller.php<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt; 该类为超级控制器类，是我们通常所说的MVC中的C。在项目开发过程中开发的所有的控制器类都要继承自这个文件。在经过路由分发之后，实际的应用Controller接管用户的所有请求，并负责与用户数据的交互。CI中所有的应用控制器都应该是CI_Controller的子类(除非你扩展了CI的核心，那么你的Controller父类可以是MY_Controller)。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
      <category term="Codeigniter" scheme="https://pureven.cc/tags/Codeigniter/"/>
    
  </entry>
  
  <entry>
    <title>CodeIgniter语言类文件Lang.php</title>
    <link href="https://pureven.cc/2020/02/10/codeigniter-lang/"/>
    <id>https://pureven.cc/2020/02/10/codeigniter-lang/</id>
    <published>2020-02-10T11:45:39.000Z</published>
    <updated>2020-04-13T00:41:43.242Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>语言类提供了一些方法用于获取语言文件和不同语言的文本来实现国际化。该类包含两个成员变量<code>language</code>、<code>is_loaded</code>和三个成员方法<code>__construct()</code>、<code>load()</code>、<code>line()</code>。</p><a id="more"></a><hr><h4 id="成员方法"><a href="#成员方法" class="headerlink" title="成员方法"></a>成员方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">public $language = array();// 语言列表</span><br><span class="line">public $is_loaded = array();// 加载的语言文件列表</span><br></pre></td></tr></table></figure><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function __construct()</span><br><span class="line">&#123;</span><br><span class="line">    log_message(&apos;info&apos;, &apos;Language Class Initialized&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="load"><a href="#load" class="headerlink" title="load()"></a>load()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">public function load($langfile, $idiom = &apos;&apos;, $return = FALSE, $add_suffix = TRUE, $alt_path = &apos;&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * 加载语言包</span><br><span class="line">     * $LANG = &amp; load_class(&apos;Lang&apos;, &apos;core&apos;);</span><br><span class="line">     * $LANG-&gt;load(&apos;test&apos;); 英文</span><br><span class="line">     * // $LANG-&gt;load(&apos;test&apos;, &apos;zh_cn&apos;); 中文</span><br><span class="line">     * var_dump($LANG-&gt;line(&apos;test.successful&apos;));</span><br><span class="line">     */</span><br><span class="line">    if (is_array($langfile)) // 支持按组加载，即 $this-&gt;lang-&gt;load([&apos;test&apos;, &apos;welcome&apos;]);</span><br><span class="line">    &#123;</span><br><span class="line">        foreach ($langfile as $value)</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;load($value, $idiom, $return, $add_suffix, $alt_path);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 去除.php，即$this-&gt;lang-&gt;load(&apos;test.php&apos;)跟$this-&gt;lang-&gt;load(&apos;test&apos;)效果一样</span><br><span class="line">    $langfile = str_replace(&apos;.php&apos;, &apos;&apos;, $langfile);</span><br><span class="line"></span><br><span class="line">    if ($add_suffix === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        // preg_replace()的作用是去除_lang字符串，即$this-&gt;lang-&gt;load(&apos;test_lang&apos;)跟$this-&gt;lang-&gt;load(&apos;test&apos;)效果一样</span><br><span class="line">        $langfile = preg_replace(&apos;/_lang$/&apos;, &apos;&apos;, $langfile).&apos;_lang&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 至此$langfile = test_lang.php</span><br><span class="line">    $langfile .= &apos;.php&apos;;</span><br><span class="line"></span><br><span class="line">    if (empty($idiom) OR ! preg_match(&apos;/^[a-z_-]+$/i&apos;, $idiom))</span><br><span class="line">    &#123;</span><br><span class="line">        // 若没有指定$idiom, 则首先使用配置文件中指定的语言类型，如果没有配置则使用english</span><br><span class="line">        $config =&amp; get_config();</span><br><span class="line">        $idiom = empty($config[&apos;language&apos;]) ? &apos;english&apos; : $config[&apos;language&apos;];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 已加载则返回，避免重复加载</span><br><span class="line">    if ($return === FALSE &amp;&amp; isset($this-&gt;is_loaded[$langfile]) &amp;&amp; $this-&gt;is_loaded[$langfile] === $idiom)</span><br><span class="line">    &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Load the base file, so any others found can override it</span><br><span class="line">    $basepath = BASEPATH.&apos;language/&apos;.$idiom.&apos;/&apos;.$langfile;</span><br><span class="line">    //  $basepath = &apos;G:\wamp\www\CodeIgniter_hmvc\system\language/zh_cn/test_lang.php&apos;</span><br><span class="line">    if (($found = file_exists($basepath)) === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        include($basepath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Do we have an alternative path to look in?</span><br><span class="line">    // $alt_path 默认为&apos;&apos;，是个目录，也就是说要加载的语言文件可能在这个目录下</span><br><span class="line">    if ($alt_path !== &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $alt_path .= &apos;language/&apos;.$idiom.&apos;/&apos;.$langfile;</span><br><span class="line">        if (file_exists($alt_path))</span><br><span class="line">        &#123;</span><br><span class="line">            include($alt_path);</span><br><span class="line">            $found = TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        /**</span><br><span class="line">         * var_dump(get_instance()-&gt;load-&gt;get_package_paths(TRUE)) = [</span><br><span class="line">         *      0 =&gt; string &apos;G:\wamp\www\CodeIgniter_hmvc\application\&apos; (length=41)</span><br><span class="line">         *      1 =&gt; string &apos;G:\wamp\www\CodeIgniter_hmvc\system\&apos; (length=36)</span><br><span class="line">         * ]</span><br><span class="line">         */</span><br><span class="line">        foreach (get_instance()-&gt;load-&gt;get_package_paths(TRUE) as $package_path)</span><br><span class="line">        &#123;</span><br><span class="line">            $package_path .= &apos;language/&apos;.$idiom.&apos;/&apos;.$langfile;</span><br><span class="line">            // $package_path = &apos;G:\wamp\www\CodeIgniter_hmvc\application\language/zh_cn/test_lang.php&apos;</span><br><span class="line">            if ($basepath !== $package_path &amp;&amp; file_exists($package_path))</span><br><span class="line">            &#123;</span><br><span class="line">                include($package_path);</span><br><span class="line">                $found = TRUE;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if ($found !== TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(&apos;Unable to load the requested language file: language/&apos;.$idiom.&apos;/&apos;.$langfile);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 语言文件内容：$lang[&apos;test_failed&apos;] = &apos;测试成功&apos;;</span><br><span class="line">    if ( ! isset($lang) OR ! is_array($lang))</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(&apos;error&apos;, &apos;Language file contains no data: language/&apos;.$idiom.&apos;/&apos;.$langfile);</span><br><span class="line"></span><br><span class="line">        if ($return === TRUE)</span><br><span class="line">        &#123;</span><br><span class="line">            return array();</span><br><span class="line">        &#125;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // $return 默认为false， 如果为true直接返回</span><br><span class="line">    if ($return === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        return $lang;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *  var_dump($this-&gt;is_loaded) = [</span><br><span class="line">     *       &apos;test_lang.php&apos; =&gt; string &apos;zh_cn&apos; (length=5)</span><br><span class="line">     * ]</span><br><span class="line">     */</span><br><span class="line">    $this-&gt;is_loaded[$langfile] = $idiom;</span><br><span class="line">    /**</span><br><span class="line">     * var_dump($this-&gt;language) = [</span><br><span class="line">     *        &apos;test.successful&apos; =&gt; string &apos;测试成功&apos; (length=12)</span><br><span class="line">     *        &apos;test_failed&apos; =&gt; string &apos;测试失败&apos; (length=12)</span><br><span class="line">     * ]</span><br><span class="line">     */</span><br><span class="line">    $this-&gt;language = array_merge($this-&gt;language, $lang);</span><br><span class="line"></span><br><span class="line">    log_message(&apos;info&apos;, &apos;Language file loaded: language/&apos;.$idiom.&apos;/&apos;.$langfile);</span><br><span class="line">    return TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载语言文件。</p><hr><h4 id="line"><a href="#line" class="headerlink" title="line()"></a>line()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public function line($line, $log_errors = TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    // $line = string &apos;test.successful&apos; (length=15) 找到返回$value找不到返回false</span><br><span class="line">    $value = isset($this-&gt;language[$line]) ? $this-&gt;language[$line] : FALSE;</span><br><span class="line"></span><br><span class="line">    // Because killer robots like unicorns!</span><br><span class="line">    if ($value === FALSE &amp;&amp; $log_errors === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(&apos;error&apos;, &apos;Could not find the language line &quot;&apos;.$line.&apos;&quot;&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从一个已加载的语言文件中，通过行名获取一行该语言的文本。</p><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjk0NTM1OA==" title="https://blog.csdn.net/Zhihua_W/article/details/52945358">CI框架源码解析十三之语言类文件Lang.php<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;语言类提供了一些方法用于获取语言文件和不同语言的文本来实现国际化。该类包含两个成员变量&lt;code&gt;language&lt;/code&gt;、&lt;code&gt;is_loaded&lt;/code&gt;和三个成员方法&lt;code&gt;__construct()&lt;/code&gt;、&lt;code&gt;load()&lt;/code&gt;、&lt;code&gt;line()&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
      <category term="Codeigniter" scheme="https://pureven.cc/tags/Codeigniter/"/>
    
  </entry>
  
  <entry>
    <title>CodeIgniter输入类文件Input.php</title>
    <link href="https://pureven.cc/2020/02/09/codeigniter-input/"/>
    <id>https://pureven.cc/2020/02/09/codeigniter-input/</id>
    <published>2020-02-09T01:57:53.000Z</published>
    <updated>2020-04-13T00:41:43.335Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>输入类通过对输入数据进行预处理来提高安全性，同时提供了一些辅助方法来获取输入数据。该类包含10个成员变量和22个成员方法。</p><a id="more"></a><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/*当前用户ip地址*/</span><br><span class="line">protected $ip_address = FALSE;</span><br><span class="line"></span><br><span class="line">/*是否允许获取$_GET超级全局变量*/</span><br><span class="line">protected $_allow_get_array = TRUE;</span><br><span class="line"></span><br><span class="line">/*是否标准化换行符*/</span><br><span class="line">protected $_standardize_newlines;</span><br><span class="line"></span><br><span class="line">/*是否开启全局xss过滤*/</span><br><span class="line">protected $_enable_xss = FALSE;</span><br><span class="line"></span><br><span class="line">/*是否开启CSRF过滤*/</span><br><span class="line">protected $_enable_csrf = FALSE;</span><br><span class="line"></span><br><span class="line">/*记录HTTP Request信息*/</span><br><span class="line">protected $headers = array();</span><br><span class="line"></span><br><span class="line">/*原始输入流数据*/</span><br><span class="line">protected $_raw_input_stream;</span><br><span class="line"></span><br><span class="line">/*解析的输入流数据*/</span><br><span class="line">protected $_input_stream;</span><br><span class="line"></span><br><span class="line">/*安全类实例*/</span><br><span class="line">protected $security;</span><br><span class="line"></span><br><span class="line">/*utf8类实例*/</span><br><span class="line">protected $uni;</span><br></pre></td></tr></table></figure><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">public function __construct()</span><br><span class="line">&#123;</span><br><span class="line">    // 表示是否允许用户使用$_GET全局变量，如果设置为不允许将$_GET清空。</span><br><span class="line">    $this-&gt;_allow_get_array = (config_item(&apos;allow_get_array&apos;) !== FALSE);</span><br><span class="line"></span><br><span class="line">    // $config[&apos;global_xss_filtering&apos;]表示是否开启XSS全局防御的标志位，如果设置为允许，则会对用户输入和Cookie的内容中进行XSS过滤。</span><br><span class="line">    $this-&gt;_enable_xss = (config_item(&apos;global_xss_filtering&apos;) === TRUE);</span><br><span class="line"></span><br><span class="line">    // $config[&apos;csrf_protection&apos;]表示是否开启CSRF防御，如果设置为允许，则会在对表单数据进行处理时进行CSRF方法的检查。</span><br><span class="line">    $this-&gt;_enable_csrf = (config_item(&apos;csrf_protection&apos;) === TRUE);</span><br><span class="line"></span><br><span class="line">    // $config[&apos;standardize_newlines&apos;]表示是否标准化换行符，如果设置为允许，则会在对表单数据进行处理时用PHP_EOL代替数据中的换行符。</span><br><span class="line">    $this-&gt;_standardize_newlines = (bool) config_item(&apos;standardize_newlines&apos;);</span><br><span class="line"></span><br><span class="line">    $this-&gt;security =&amp; load_class(&apos;Security&apos;, &apos;core&apos;);</span><br><span class="line"></span><br><span class="line">    // Do we need the UTF-8 class?</span><br><span class="line">    if (UTF8_ENABLED === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;uni =&amp; load_class(&apos;Utf8&apos;, &apos;core&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Sanitize global arrays 清理全局数组，即处理表单数据,$_GET,$_POST,$_COOKIE去掉不合要求的字符</span><br><span class="line">    $this-&gt;_sanitize_globals();</span><br><span class="line"></span><br><span class="line">    // CSRF Protection check</span><br><span class="line">    if ($this-&gt;_enable_csrf === TRUE &amp;&amp; ! is_cli())</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;security-&gt;csrf_verify();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    log_message(&apos;info&apos;, &apos;Input Class Initialized&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="fetch-from-array"><a href="#fetch-from-array" class="headerlink" title="_fetch_from_array()"></a>_fetch_from_array()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">protected function _fetch_from_array(&amp;$array, $index = NULL, $xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    is_bool($xss_clean) OR $xss_clean = $this-&gt;_enable_xss;</span><br><span class="line"></span><br><span class="line">    // $index = NULL 表示获取所有, 比如$this-&gt;input-&gt;get()表示获取所有$_GET参数</span><br><span class="line">    isset($index) OR $index = array_keys($array);</span><br><span class="line"></span><br><span class="line">    // 如果Index是数组则递归调用该方法过滤，比如$this-&gt;input-&gt;get([&apos;a&apos;, &apos;b&apos;])获取的是$_GET[&apos;a&apos;]、$_GET[&apos;b&apos;]</span><br><span class="line">    if (is_array($index))</span><br><span class="line">    &#123;</span><br><span class="line">        $output = array();</span><br><span class="line">        foreach ($index as $key)</span><br><span class="line">        &#123;</span><br><span class="line">            $output[$key] = $this-&gt;_fetch_from_array($array, $key, $xss_clean);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (isset($array[$index]))</span><br><span class="line">    &#123;</span><br><span class="line">        $value = $array[$index];</span><br><span class="line">    &#125;</span><br><span class="line">    elseif (($count = preg_match_all(&apos;/(?:^[^\[]+)|\[[^]]*\]/&apos;, $index, $matches)) &gt; 1) // 索引是否包含数组符号，比如$this-&gt;input-&gt;get([])</span><br><span class="line">    &#123;</span><br><span class="line">        $value = $array;</span><br><span class="line">        for ($i = 0; $i &lt; $count; $i++)</span><br><span class="line">        &#123;</span><br><span class="line">            $key = trim($matches[0][$i], &apos;[]&apos;);</span><br><span class="line">            if ($key === &apos;&apos;) // 如果索引是[]则返回的是个数组，即$array,这里跟参数为null是一样的，只不过这里直接返回不用递归处理了</span><br><span class="line">            &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (isset($value[$key]))</span><br><span class="line">            &#123;</span><br><span class="line">                $value = $value[$key];</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                return NULL;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        return NULL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return ($xss_clean === TRUE)</span><br><span class="line">        ? $this-&gt;security-&gt;xss_clean($value)</span><br><span class="line">        : $value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的功能为从数组中获取某个值并设置是否进行xss过滤。代码中的<code>?:</code>表示非捕获数组，作用可参考<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JheW5haW5nL2FydGljbGUvZGV0YWlscy83OTE0MDAxOA==" title="https://blog.csdn.net/Raynaing/article/details/79140018">https://blog.csdn.net/Raynaing/article/details/79140018<i class="fa fa-external-link"></i></span>。</p><hr><h4 id="get"><a href="#get" class="headerlink" title="get()"></a>get()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function get($index = NULL, $xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_fetch_from_array($_GET, $index, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于获取$_GET值，并可进行xss过滤。</p><hr><h4 id="post"><a href="#post" class="headerlink" title="post()"></a>post()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function post($index = NULL, $xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_fetch_from_array($_POST, $index, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于获取$_POST值，并可进行xss过滤。</p><hr><h4 id="post-get"><a href="#post-get" class="headerlink" title="post_get()"></a>post_get()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public function post_get($index, $xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return isset($_POST[$index])</span><br><span class="line">        ? $this-&gt;post($index, $xss_clean)</span><br><span class="line">        : $this-&gt;get($index, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于$_POST值或$_GET值，从$_POST中获取，如果获取到了直接返回；如果没有获取到再从$_GET中获取。</p><hr><h4 id="get-post"><a href="#get-post" class="headerlink" title="get_post()"></a>get_post()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public function get_post($index, $xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return isset($_GET[$index])</span><br><span class="line">        ? $this-&gt;get($index, $xss_clean)</span><br><span class="line">        : $this-&gt;post($index, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法和 post_get() 方法一样，只是它先查找 GET 数据。</p><hr><h4 id="cookie"><a href="#cookie" class="headerlink" title="cookie()"></a>cookie()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function cookie($index = NULL, $xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_fetch_from_array($_COOKIE, $index, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法和 post() 和 get() 方法一样，只是它用于获取 COOKIE 数据。</p><hr><h4 id="server"><a href="#server" class="headerlink" title="server()"></a>server()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function server($index, $xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_fetch_from_array($_SERVER, $index, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法和 post() 、 get() 和 cookie() 方法一样，只是它用于获取 SERVER 数据。</p><hr><h4 id="input-stream"><a href="#input-stream" class="headerlink" title="input_stream()"></a>input_stream()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public function input_stream($index = NULL, $xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    // Prior to PHP 5.6, the input stream can only be read once,</span><br><span class="line">    // so we&apos;ll need to check if we have already done that first.</span><br><span class="line">    if ( ! is_array($this-&gt;_input_stream))</span><br><span class="line">    &#123;</span><br><span class="line">        // $this-&gt;raw_input_stream will trigger __get().</span><br><span class="line">        parse_str($this-&gt;raw_input_stream, $this-&gt;_input_stream);</span><br><span class="line">        is_array($this-&gt;_input_stream) OR $this-&gt;_input_stream = array();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $this-&gt;_fetch_from_array($this-&gt;_input_stream, $index, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法和 get() 、 post() 和 cookie() 方法一样，只是它用于获取 <span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvd3JhcHBlcnMucGhwLnBocA==" title="https://www.php.net/manual/zh/wrappers.php.php">php://input<i class="fa fa-external-link"></i></span>流数据。</p><hr><h4 id="set-cookie"><a href="#set-cookie" class="headerlink" title="set_cookie()"></a>set_cookie()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">public function set_cookie($name, $value = &apos;&apos;, $expire = &apos;&apos;, $domain = &apos;&apos;, $path = &apos;/&apos;, $prefix = &apos;&apos;, $secure = NULL, $httponly = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    if (is_array($name))</span><br><span class="line">    &#123;</span><br><span class="line">        // always leave &apos;name&apos; in last place, as the loop will break otherwise, due to $$item</span><br><span class="line">        // 这里调用方式类似$this-&gt;input-&gt;set_cookie([ &apos;name&apos; =&gt; &apos;a&apos;, &apos;value&apos; =&gt; &apos;dd&apos;]);</span><br><span class="line">        foreach (array(&apos;value&apos;, &apos;expire&apos;, &apos;domain&apos;, &apos;path&apos;, &apos;prefix&apos;, &apos;secure&apos;, &apos;httponly&apos;, &apos;name&apos;) as $item)</span><br><span class="line">        &#123;</span><br><span class="line">            if (isset($name[$item]))</span><br><span class="line">            &#123;</span><br><span class="line">                $$item = $name[$item];// 这里是将数组中的参数转为从调用方法传入的形式</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //是否配置cookie前缀</span><br><span class="line">    if ($prefix === &apos;&apos; &amp;&amp; config_item(&apos;cookie_prefix&apos;) !== &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $prefix = config_item(&apos;cookie_prefix&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //是否配置cookie有效域名</span><br><span class="line">    if ($domain == &apos;&apos; &amp;&amp; config_item(&apos;cookie_domain&apos;) != &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $domain = config_item(&apos;cookie_domain&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //是否配置cookie的有效路径，默认是当前目录</span><br><span class="line">    if ($path === &apos;/&apos; &amp;&amp; config_item(&apos;cookie_path&apos;) !== &apos;/&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $path = config_item(&apos;cookie_path&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //规定是否通过安全的 HTTPS 连接来传输 cookie。</span><br><span class="line">    $secure = ($secure === NULL &amp;&amp; config_item(&apos;cookie_secure&apos;) !== NULL)</span><br><span class="line">        ? (bool) config_item(&apos;cookie_secure&apos;)</span><br><span class="line">        : (bool) $secure;</span><br><span class="line"></span><br><span class="line">   // 是否设置cookie_httponly</span><br><span class="line">    $httponly = ($httponly === NULL &amp;&amp; config_item(&apos;cookie_httponly&apos;) !== NULL)</span><br><span class="line">        ? (bool) config_item(&apos;cookie_httponly&apos;)</span><br><span class="line">        : (bool) $httponly;</span><br><span class="line"></span><br><span class="line">    //设置cookie的过期时间，默认：默认在会话结束【浏览器关闭】失效</span><br><span class="line">    if ( ! is_numeric($expire))</span><br><span class="line">    &#123;</span><br><span class="line">        $expire = time() - 86500;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $expire = ($expire &gt; 0) ? time() + $expire : 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    setcookie($prefix.$name, $value, $expire, $path, $domain, $secure, $httponly);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uc2V0Y29va2ll" title="https://www.php.net/manual/zh/function.setcookie">设置cookie<i class="fa fa-external-link"></i></span>。</p><hr><h4 id="ip-address"><a href="#ip-address" class="headerlink" title="ip_address()"></a>ip_address()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line">public function ip_address()</span><br><span class="line">&#123;</span><br><span class="line">    if ($this-&gt;ip_address !== FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;ip_address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 当服务器使用了代理时，REMOTER_ADDR获取的就是代理服务器的IP了，</span><br><span class="line">     * 需要从HTTP_X_FORWARDED_FOR、HTTP_CLIENT_IP、HTTP_X_CLIENT_IP、HTTP_X_CLUSTER_CLIENT_IP或其他设定的值中获取。</span><br><span class="line">     * 这里设定的就是代理服务器的IP，逗号分隔。</span><br><span class="line">     */</span><br><span class="line">    $proxy_ips = config_item(&apos;proxy_ips&apos;);</span><br><span class="line">    if ( ! empty($proxy_ips) &amp;&amp; ! is_array($proxy_ips))</span><br><span class="line">    &#123;</span><br><span class="line">        $proxy_ips = explode(&apos;,&apos;, str_replace(&apos; &apos;, &apos;&apos;, $proxy_ips));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * REMOTE_ADDR代表着客户端的IP，但是这个客户端是相对服务器而言的，也就是实际上与服务器相连的机器的IP（建立tcp连接的那个），这个值是不可伪造的，</span><br><span class="line">     * 如果没有代理的话，这个值就是用户实际的IP值，有代理的话，用户的请求会经过代理再到服务器，这个时候REMOTE_ADDR会被设置为代理机器的IP值。</span><br><span class="line">     */</span><br><span class="line">    $this-&gt;ip_address = $this-&gt;server(&apos;REMOTE_ADDR&apos;);</span><br><span class="line"></span><br><span class="line">    if ($proxy_ips)</span><br><span class="line">    &#123;</span><br><span class="line">        /**</span><br><span class="line">         * HTTP_X_FORWARDED_FOR: 是有标准定义,用来识别通过HTTP代理或负载均衡方式连接到Web服务器的客户端最原始的IP地址,</span><br><span class="line">         *      有了代理就获取不了用户的真实IP，由此X-Forwarded-For应运而生，它是一个非正式协议，</span><br><span class="line">         *      在请求转发到代理的时候代理会添加一个X-Forwarded-For头，将连接它的客户端IP（也就是你的上网机器IP）加到这个头信息里，</span><br><span class="line">         *      这样末端的服务器就能获取真正上网的人的IP了</span><br><span class="line">         * HTTP_CLIENT_IP: 头是有的，只是未成标准，不一定服务器都实现了</span><br><span class="line">         * HTTP_X_CLIENT_IP:</span><br><span class="line">         * HTTP_X_CLUSTER_CLIENT_IP:</span><br><span class="line">         */</span><br><span class="line">        foreach (array(&apos;HTTP_X_FORWARDED_FOR&apos;, &apos;HTTP_CLIENT_IP&apos;, &apos;HTTP_X_CLIENT_IP&apos;, &apos;HTTP_X_CLUSTER_CLIENT_IP&apos;) as $header)</span><br><span class="line">        &#123;</span><br><span class="line">            if (($spoof = $this-&gt;server($header)) !== NULL)</span><br><span class="line">            &#123;</span><br><span class="line">                // 有些代理通常会列出客户端通过其与我们联系的IP地址的整个链。 例如 client_ip，proxy_ip1，proxy_ip2等</span><br><span class="line">                // 这里的目的是从列表中取一个可用的ip，ipv4 或 ipv6</span><br><span class="line">                sscanf($spoof, &apos;%[^,]&apos;, $spoof);</span><br><span class="line"></span><br><span class="line">                // 非ipv4/ipv6则返回false</span><br><span class="line">                if ( ! $this-&gt;valid_ip($spoof))</span><br><span class="line">                &#123;</span><br><span class="line">                    $spoof = NULL;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if ($spoof)</span><br><span class="line">        &#123;</span><br><span class="line">            for ($i = 0, $c = count($proxy_ips); $i &lt; $c; $i++)</span><br><span class="line">            &#123;</span><br><span class="line">                // 检查是否有IP地址或子网</span><br><span class="line">                if (strpos($proxy_ips[$i], &apos;/&apos;) === FALSE)</span><br><span class="line">                &#123;</span><br><span class="line">                    // 指定了IP地址（而不是子网） 可以立即进行比较。</span><br><span class="line">                    if ($proxy_ips[$i] === $this-&gt;ip_address)</span><br><span class="line">                    &#123;</span><br><span class="line">                        $this-&gt;ip_address = $spoof;</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // We have a subnet ... now the heavy lifting begins</span><br><span class="line">                // ipv6:    xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx</span><br><span class="line">                // ipv4:    10.120.78.40</span><br><span class="line">                isset($separator) OR $separator = $this-&gt;valid_ip($this-&gt;ip_address, &apos;ipv6&apos;) ? &apos;:&apos; : &apos;.&apos;;</span><br><span class="line"></span><br><span class="line">                // If the proxy entry doesn&apos;t match the IP protocol - skip it</span><br><span class="line">                if (strpos($proxy_ips[$i], $separator) === FALSE)</span><br><span class="line">                &#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // 如果需要，将REMOTE_ADDR IP地址转换为二进制</span><br><span class="line">                // isset()只有在$ip, $sprintf全部设置时才返回true，这里返回的是false，因为$ip $sprintf未被设置</span><br><span class="line">                if ( ! isset($ip, $sprintf))</span><br><span class="line">                &#123;</span><br><span class="line">                    // : 表示IPv6</span><br><span class="line">                    if ($separator === &apos;:&apos;)</span><br><span class="line">                    &#123;</span><br><span class="line">                        // Make sure we&apos;re have the &quot;full&quot; IPv6 format</span><br><span class="line">                        /**</span><br><span class="line">                         *  str_repeat() 重复一个字符串</span><br><span class="line">                         *  substr_count() 计算字符串出现次数</span><br><span class="line">                         *  :: 表示0位压缩，比如FF01::1101表示FF01:0:0:0:0:0:0:1101</span><br><span class="line">                         */</span><br><span class="line">                        $ip = explode(&apos;:&apos;,</span><br><span class="line">                            str_replace(&apos;::&apos;,</span><br><span class="line">                                str_repeat(&apos;:&apos;, 9 - substr_count($this-&gt;ip_address, &apos;:&apos;)),</span><br><span class="line">                                $this-&gt;ip_address</span><br><span class="line">                            )</span><br><span class="line">                        );</span><br><span class="line"></span><br><span class="line">                        for ($j = 0; $j &lt; 8; $j++)</span><br><span class="line">                        &#123;</span><br><span class="line">                            $ip[$j] = intval($ip[$j], 16);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        $sprintf = &apos;%016b%016b%016b%016b%016b%016b%016b%016b&apos;;</span><br><span class="line">                    &#125;</span><br><span class="line">                    else</span><br><span class="line">                    &#123;</span><br><span class="line">                        $ip = explode(&apos;.&apos;, $this-&gt;ip_address);</span><br><span class="line">                        $sprintf = &apos;%08b%08b%08b%08b&apos;;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    // vsprintf(): 返回格式化字符串</span><br><span class="line">                    $ip = vsprintf($sprintf, $ip);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // Split the netmask length off the network address</span><br><span class="line">                // sscanf根据format将$proxy_ips[$i]格式化为$netaddr和$masklen</span><br><span class="line">                sscanf($proxy_ips[$i], &apos;%[^/]/%d&apos;, $netaddr, $masklen);</span><br><span class="line"></span><br><span class="line">                // Again, an IPv6 address is most likely in a compressed form</span><br><span class="line">                if ($separator === &apos;:&apos;)</span><br><span class="line">                &#123;</span><br><span class="line">                    $netaddr = explode(&apos;:&apos;, str_replace(&apos;::&apos;, str_repeat(&apos;:&apos;, 9 - substr_count($netaddr, &apos;:&apos;)), $netaddr));</span><br><span class="line">                    for ($j = 0; $j &lt; 8; $j++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        $netaddr[$j] = intval($netaddr[$j], 16);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    $netaddr = explode(&apos;.&apos;, $netaddr);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // 转换为二进制再比较一次</span><br><span class="line">                if (strncmp($ip, vsprintf($sprintf, $netaddr), $masklen) === 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    $this-&gt;ip_address = $spoof;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 如果 IP 地址无效，则返回 &apos;0.0.0.0&apos;</span><br><span class="line">    if ( ! $this-&gt;valid_ip($this-&gt;ip_address))</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;ip_address = &apos;0.0.0.0&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $this-&gt;ip_address;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="valid-ip"><a href="#valid-ip" class="headerlink" title="valid_ip()"></a>valid_ip()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">public function valid_ip($ip, $which = &apos;&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    switch (strtolower($which))</span><br><span class="line">    &#123;</span><br><span class="line">        case &apos;ipv4&apos;:</span><br><span class="line">            $which = FILTER_FLAG_IPV4;</span><br><span class="line">            break;</span><br><span class="line">        case &apos;ipv6&apos;:</span><br><span class="line">            $which = FILTER_FLAG_IPV6;</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            $which = NULL;</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * filter_var(): 使用特定的过滤器过滤一个变量，详见https://www.php.net/manual/zh/function.filter-var.php</span><br><span class="line">     * $ip: 待过滤的变量。注意：标量的值在过滤前，会被转换成字符串。</span><br><span class="line">     * FILTER_VALIDATE_IP: validate ip,詳見https://www.php.net/manual/zh/filter.filters.validate.php</span><br><span class="line">     * $witch: 一个选项的关联数组，或者按位区分的标示。如果过滤器接受选项，可以通过数组的 &quot;flags&quot; 位去提供这些标示。</span><br><span class="line">     */</span><br><span class="line">    return (bool) filter_var($ip, FILTER_VALIDATE_IP, $which);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="user-agent"><a href="#user-agent" class="headerlink" title="user_agent()"></a>user_agent()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function user_agent($xss_clean = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    // HTTP_USER_AGENT: 获取用户的所有信息， 比如，Mozilla/5.0 平台操作系统（包括版本号） 引擎版本  浏览器（包括版本号）</span><br><span class="line">    return $this-&gt;_fetch_from_array($_SERVER, &apos;HTTP_USER_AGENT&apos;, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="sanitize-globals"><a href="#sanitize-globals" class="headerlink" title="_sanitize_globals()"></a>_sanitize_globals()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">protected function _sanitize_globals()</span><br><span class="line">&#123;</span><br><span class="line">    // 表示是否允许用户使用$_GET全局变量，如果设置为不允许，会在输入类构造函数处理中将$_GET清空。</span><br><span class="line">    if ($this-&gt;_allow_get_array === FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        $_GET = array();</span><br><span class="line">    &#125;</span><br><span class="line">    elseif (is_array($_GET))</span><br><span class="line">    &#123;</span><br><span class="line">        // ?k=aa&amp;v=bb&amp;**(*=$%##</span><br><span class="line">        /**</span><br><span class="line">         * $_GET = [</span><br><span class="line">         *      &apos;k&apos; =&gt; string &apos;aa&apos; (length=2)</span><br><span class="line">         *      &apos;v&apos; =&gt; string &apos;bb&apos; (length=2)</span><br><span class="line">         *      &apos;**(*&apos; =&gt; string &apos;$%&apos; (length=2)</span><br><span class="line">         * ]</span><br><span class="line">         */</span><br><span class="line">        foreach ($_GET as $key =&gt; $val)</span><br><span class="line">        &#123;</span><br><span class="line">            $_GET[$this-&gt;_clean_input_keys($key)] = $this-&gt;_clean_input_data($val);</span><br><span class="line">        &#125;</span><br><span class="line">        /**</span><br><span class="line">         * $_GET = [</span><br><span class="line">         *      &apos;k&apos; =&gt; string &apos;aa&apos;</span><br><span class="line">         *      &apos;v&apos; =&gt; string &apos;bb&apos;</span><br><span class="line">         *      &apos;**(*&apos; =&gt; string &apos;$%&apos;</span><br><span class="line">         *      0 =&gt; string &apos;$%&apos;</span><br><span class="line">         * ]</span><br><span class="line">         */</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Clean $_POST Data</span><br><span class="line">    if (is_array($_POST))</span><br><span class="line">    &#123;</span><br><span class="line">        /**</span><br><span class="line">         * $_POST  = [</span><br><span class="line">         *      &apos;k&apos; =&gt; string &apos;aa&apos;</span><br><span class="line">         *      &apos;v&apos; =&gt; string &apos;bb&apos;</span><br><span class="line">         *      &apos;**(*&apos; =&gt; string &apos;$%##&apos;</span><br><span class="line">         * ]</span><br><span class="line">         */</span><br><span class="line">        foreach ($_POST as $key =&gt; $val)</span><br><span class="line">        &#123;</span><br><span class="line">            $_POST[$this-&gt;_clean_input_keys($key)] = $this-&gt;_clean_input_data($val);</span><br><span class="line">        &#125;</span><br><span class="line">        /**</span><br><span class="line">         *  $POST = [</span><br><span class="line">         *      &apos;k&apos; =&gt; string &apos;aa&apos;</span><br><span class="line">         *      &apos;v&apos; =&gt; string &apos;bb&apos;</span><br><span class="line">         *      &apos;**(*&apos; =&gt; string &apos;$%##&apos;</span><br><span class="line">         *      0 =&gt; string &apos;$%##&apos;</span><br><span class="line">         * ]</span><br><span class="line">         */</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Clean $_COOKIE Data</span><br><span class="line">    if (is_array($_COOKIE))</span><br><span class="line">    &#123;</span><br><span class="line">        // 注意下面unset的不是变量，单引号括起来了。</span><br><span class="line">        unset(</span><br><span class="line">            $_COOKIE[&apos;$Version&apos;],</span><br><span class="line">            $_COOKIE[&apos;$Path&apos;],</span><br><span class="line">            $_COOKIE[&apos;$Domain&apos;]</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        // $_COOKIE 的话不符合的key直接删掉</span><br><span class="line">        foreach ($_COOKIE as $key =&gt; $val)</span><br><span class="line">        &#123;</span><br><span class="line">            if (($cookie_key = $this-&gt;_clean_input_keys($key)) !== FALSE)</span><br><span class="line">            &#123;</span><br><span class="line">                                        // 将换行符标准化为PHP_EOL</span><br><span class="line">                $_COOKIE[$cookie_key] = $this-&gt;_clean_input_data($val);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                unset($_COOKIE[$key]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Sanitize PHP_SELF</span><br><span class="line">    // strip_tags(): 去除 HTML 和 PHP 标记</span><br><span class="line">    $_SERVER[&apos;PHP_SELF&apos;] = strip_tags($_SERVER[&apos;PHP_SELF&apos;]);</span><br><span class="line"></span><br><span class="line">    log_message(&apos;debug&apos;, &apos;Global POST, GET and COOKIE data sanitized&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于过滤全局变量，如果未启用查询字符串，则取消设置$ _GET数据、清除POST，COOKIE和SERVER数据、将换行符标准化为PHP_EOL。</p><hr><h4 id="clean-input-data"><a href="#clean-input-data" class="headerlink" title="_clean_input_data()"></a>_clean_input_data()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">protected function _clean_input_data($str)</span><br><span class="line">&#123;</span><br><span class="line">    // 如果$str是个数组，则对数组的键和值进行过滤</span><br><span class="line">    if (is_array($str))</span><br><span class="line">    &#123;</span><br><span class="line">        $new_array = array();</span><br><span class="line">        foreach (array_keys($str) as $key)</span><br><span class="line">        &#123;</span><br><span class="line">            $new_array[$this-&gt;_clean_input_keys($key)] = $this-&gt;_clean_input_data($str[$key]);</span><br><span class="line">        &#125;</span><br><span class="line">        return $new_array;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /* 5.4.0開始 魔术引号功能从PHP中移除！小于5.4的版本如果magic_quotes_gpc的配置选项开启则反引用一个引用字符串 */</span><br><span class="line">    if ( ! is_php(&apos;5.4&apos;) &amp;&amp; get_magic_quotes_gpc())</span><br><span class="line">    &#123;</span><br><span class="line">        // stripslashes(): 返回一个去除转义反斜线后的字符串（\&apos; 转换为 &apos; 等等）。</span><br><span class="line">        // 双反斜线（\\）被转换为单个反斜线（\）。</span><br><span class="line">        $str = stripslashes($str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Clean UTF-8 if supported</span><br><span class="line">    if (UTF8_ENABLED === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">               // 确保字符串仅包含有效的UTF-8字符</span><br><span class="line">        $str = $this-&gt;uni-&gt;clean_string($str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 删除不可见字符</span><br><span class="line">    $str = remove_invisible_characters($str, FALSE);</span><br><span class="line"></span><br><span class="line">    // Standardize newlines if needed 默认不进行替换，参考$config[&apos;standardize_newlines&apos;]</span><br><span class="line">    if ($this-&gt;_standardize_newlines === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        return preg_replace(&apos;/(?:\r\n|[\r\n])/&apos;, PHP_EOL, $str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于过滤输入的值。</p><hr><h4 id="clean-input-keys"><a href="#clean-input-keys" class="headerlink" title="_clean_input_keys()"></a>_clean_input_keys()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">protected function _clean_input_keys($str, $fatal = TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    //如果$str中有不允许的字符串则根据$fatal取值返回false活着直接报503，exit</span><br><span class="line">    if ( ! preg_match(&apos;/^[a-z0-9:_\/|-]+$/i&apos;, $str))</span><br><span class="line">    &#123;</span><br><span class="line">        if ($fatal === TRUE)</span><br><span class="line">        &#123;</span><br><span class="line">            return FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            set_status_header(503);</span><br><span class="line">            echo &apos;Disallowed Key Characters.&apos;;</span><br><span class="line">            exit(7); // EXIT_USER_INPUT</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Clean UTF-8 if supported</span><br><span class="line">    if (UTF8_ENABLED === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;uni-&gt;clean_string($str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤键值。</p><hr><h4 id="request-headers"><a href="#request-headers" class="headerlink" title="request_headers()"></a>request_headers()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">/* 获取http 请求头信息 */</span><br><span class="line">public function request_headers($xss_clean = FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    // If header is already defined, return it immediately</span><br><span class="line">    if ( ! empty($this-&gt;headers))</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;_fetch_from_array($this-&gt;headers, NULL, $xss_clean);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // In Apache, you can simply call apache_request_headers()</span><br><span class="line">    if (function_exists(&apos;apache_request_headers&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        // 获取全部http头信息： https://www.php.net/manual/zh/function.apache-request-headers.php</span><br><span class="line">        $this-&gt;headers = apache_request_headers();</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        isset($_SERVER[&apos;CONTENT_TYPE&apos;]) &amp;&amp; $this-&gt;headers[&apos;Content-Type&apos;] = $_SERVER[&apos;CONTENT_TYPE&apos;];</span><br><span class="line"></span><br><span class="line">        foreach ($_SERVER as $key =&gt; $val)</span><br><span class="line">        &#123;</span><br><span class="line">            // HTTP_ACCEPT_CHARSET</span><br><span class="line">            if (sscanf($key, &apos;HTTP_%s&apos;, $header) === 1)</span><br><span class="line">            &#123;</span><br><span class="line">                // take SOME_HEADER and turn it into Some-Header</span><br><span class="line">                $header = str_replace(&apos;_&apos;, &apos; &apos;, strtolower($header));// accept charset</span><br><span class="line">                $header = str_replace(&apos; &apos;, &apos;-&apos;, ucwords($header));   // Accept-Charset</span><br><span class="line"></span><br><span class="line">                $this-&gt;headers[$header] = $_SERVER[$key];            // $this-&gt;headers[&apos;Accept-Charset&apos;] = $_SERVER[&apos;HTTP_ACCEPT_CHARSET&apos;];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $this-&gt;_fetch_from_array($this-&gt;headers, NULL, $xss_clean);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get-request-header"><a href="#get-request-header" class="headerlink" title="get_request_header()"></a>get_request_header()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">public function get_request_header($index, $xss_clean = FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    static $headers;</span><br><span class="line"></span><br><span class="line">    // 如果未定义$headers则定义并赋值头信息</span><br><span class="line">    if ( ! isset($headers))</span><br><span class="line">    &#123;</span><br><span class="line">        empty($this-&gt;headers) &amp;&amp; $this-&gt;request_headers();</span><br><span class="line">        foreach ($this-&gt;headers as $key =&gt; $value)</span><br><span class="line">        &#123;</span><br><span class="line">            // $headers[&apos;accept-charset&apos;]</span><br><span class="line">            $headers[strtolower($key)] = $value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $index = strtolower($index);</span><br><span class="line"></span><br><span class="line">    // 没有则返回NULL</span><br><span class="line">    if ( ! isset($headers[$index]))</span><br><span class="line">    &#123;</span><br><span class="line">        return NULL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 如果存在则返回对应的值，当然根据需求进行xss滤波</span><br><span class="line">    return ($xss_clean === TRUE)</span><br><span class="line">        ? $this-&gt;security-&gt;xss_clean($headers[$index])</span><br><span class="line">        : $headers[$index];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="is-ajax-request"><a href="#is-ajax-request" class="headerlink" title="is_ajax_request()"></a>is_ajax_request()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function is_ajax_request()</span><br><span class="line">&#123;</span><br><span class="line">    return ( ! empty($_SERVER[&apos;HTTP_X_REQUESTED_WITH&apos;]) &amp;&amp; strtolower($_SERVER[&apos;HTTP_X_REQUESTED_WITH&apos;]) === &apos;xmlhttprequest&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>判断是否为ajax请求，通过<code>$_SERVER[&#39;HTTP_X_REQUESTED_WITH&#39;])</code>来判断。</p><hr><h4 id="is-cli-request"><a href="#is-cli-request" class="headerlink" title="is_cli_request()"></a>is_cli_request()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function is_cli_request()</span><br><span class="line">&#123;</span><br><span class="line">    return is_cli();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>判断是否为CLI【命令行执行方式】请求。</p><hr><h4 id="method"><a href="#method" class="headerlink" title="method()"></a>method()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public function method($upper = FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    return ($upper)</span><br><span class="line">        ? strtoupper($this-&gt;server(&apos;REQUEST_METHOD&apos;))</span><br><span class="line">        : strtolower($this-&gt;server(&apos;REQUEST_METHOD&apos;));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get-1"><a href="#get-1" class="headerlink" title="__get()"></a>__get()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public function __get($name)</span><br><span class="line">&#123;</span><br><span class="line">    if ($name === &apos;raw_input_stream&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        isset($this-&gt;_raw_input_stream) OR $this-&gt;_raw_input_stream = file_get_contents(&apos;php://input&apos;);</span><br><span class="line">        return $this-&gt;_raw_input_stream;</span><br><span class="line">    &#125;</span><br><span class="line">    elseif ($name === &apos;ip_address&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;ip_address;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用来获取受保护属性  ip_address | _raw_input_stream。</p><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjk0MzAwNw==" title="https://blog.csdn.net/Zhihua_W/article/details/52943007">CI框架源码解析十二之输入类文件Input.php<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;输入类通过对输入数据进行预处理来提高安全性，同时提供了一些辅助方法来获取输入数据。该类包含10个成员变量和22个成员方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
      <category term="Codeigniter" scheme="https://pureven.cc/tags/Codeigniter/"/>
    
  </entry>
  
  <entry>
    <title>CodeIgniter安全类文件Security.php</title>
    <link href="https://pureven.cc/2020/02/07/codeigniter-security/"/>
    <id>https://pureven.cc/2020/02/07/codeigniter-security/</id>
    <published>2020-02-07T03:40:00.000Z</published>
    <updated>2020-04-13T00:41:43.087Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>安全类包含了一些方法，用于安全的处理输入数据，有助于创建一个安全的应用。CI框架安全类提供了跨站请求伪造<strong>CSRF攻击</strong>和<strong>XSS跨站脚本攻击</strong>策略，只需要在配置文件开启即可。该类包含9个成员变量和22个成员方法。</p><a id="more"></a><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">public $filename_bad_chars =array(</span><br><span class="line">    &apos;../&apos;, &apos;&lt;!--&apos;, &apos;--&gt;&apos;, &apos;&lt;&apos;, &apos;&gt;&apos;,</span><br><span class="line">    &quot;&apos;&quot;, &apos;&quot;&apos;, &apos;&amp;&apos;, &apos;$&apos;, &apos;#&apos;,</span><br><span class="line">    &apos;&#123;&apos;, &apos;&#125;&apos;, &apos;[&apos;, &apos;]&apos;, &apos;=&apos;,</span><br><span class="line">    &apos;;&apos;, &apos;?&apos;, &apos;%20&apos;, &apos;%22&apos;,</span><br><span class="line">    &apos;%3c&apos;,// &lt;</span><br><span class="line">    &apos;%253c&apos;,// &lt;</span><br><span class="line">    &apos;%3e&apos;,// &gt;</span><br><span class="line">    &apos;%0e&apos;,// &gt;</span><br><span class="line">    &apos;%28&apos;,// (</span><br><span class="line">    &apos;%29&apos;,// )</span><br><span class="line">    &apos;%2528&apos;,// (</span><br><span class="line">    &apos;%26&apos;,// &amp;</span><br><span class="line">    &apos;%24&apos;,// $</span><br><span class="line">    &apos;%3f&apos;,// ?</span><br><span class="line">    &apos;%3b&apos;,// ;</span><br><span class="line">    &apos;%3d&apos;// =</span><br><span class="line">);</span><br><span class="line">public $charset = &apos;UTF-8&apos;;</span><br><span class="line">protected $_xss_hash;</span><br><span class="line">protected $_csrf_hash;</span><br><span class="line">protected $_csrf_expire =7200;</span><br><span class="line">protected $_csrf_token_name =&apos;ci_csrf_token&apos;;</span><br><span class="line">protected $_csrf_cookie_name =&apos;ci_csrf_token&apos;;</span><br><span class="line">protected $_never_allowed_str =array(</span><br><span class="line">    &apos;document.cookie&apos; =&gt; &apos;[removed]&apos;,</span><br><span class="line">    &apos;(document).cookie&apos; =&gt; &apos;[removed]&apos;,</span><br><span class="line">    &apos;document.write&apos;  =&gt; &apos;[removed]&apos;,</span><br><span class="line">    &apos;(document).write&apos;  =&gt; &apos;[removed]&apos;,</span><br><span class="line">    &apos;.parentNode&apos;     =&gt; &apos;[removed]&apos;,</span><br><span class="line">    &apos;.innerHTML&apos;      =&gt; &apos;[removed]&apos;,</span><br><span class="line">    &apos;-moz-binding&apos;    =&gt; &apos;[removed]&apos;,</span><br><span class="line">    &apos;&lt;!--&apos;            =&gt; &apos;&amp;lt;!--&apos;,</span><br><span class="line">    &apos;--&gt;&apos;             =&gt; &apos;--&amp;gt;&apos;,</span><br><span class="line">    &apos;&lt;![CDATA[&apos;       =&gt; &apos;&amp;lt;![CDATA[&apos;,</span><br><span class="line">    &apos;&lt;comment&gt;&apos;  =&gt; &apos;&amp;lt;comment&amp;gt;&apos;,</span><br><span class="line">    &apos;&lt;%&apos;              =&gt; &apos;&amp;lt;&amp;#37;&apos;</span><br><span class="line">);</span><br><span class="line">protected $_never_allowed_regex = array(</span><br><span class="line">    &apos;javascript\s*:&apos;,</span><br><span class="line">    &apos;(\(?document\)?|\(?window\)?(\.document)?)\.(location|on\w*)&apos;,</span><br><span class="line">    &apos;expression\s*(\(|&amp;\#40;)&apos;, // CSS and IE</span><br><span class="line">    &apos;vbscript\s*:&apos;, // IE, surprise!</span><br><span class="line">    &apos;wscript\s*:&apos;, // IE</span><br><span class="line">    &apos;jscript\s*:&apos;, // IE</span><br><span class="line">    &apos;vbs\s*:&apos;, // IE</span><br><span class="line">    &apos;Redirect\s+30\d&apos;,</span><br><span class="line">    &quot;([\&quot;&apos;])?data\s*:[^\\1]*?base64[^\\1]*?,[^\\1]*?\\1?&quot;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">public function __construct()</span><br><span class="line">&#123;</span><br><span class="line">    if (config_item(&apos;csrf_protection&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        foreach (array(&apos;csrf_expire&apos;, &apos;csrf_token_name&apos;, &apos;csrf_cookie_name&apos;) as $key)</span><br><span class="line">        &#123;</span><br><span class="line">            if (NULL !== ($val = config_item($key)))</span><br><span class="line">            &#123;</span><br><span class="line">                $this-&gt;&#123;&apos;_&apos;.$key&#125; = $val;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if ($cookie_prefix = config_item(&apos;cookie_prefix&apos;))</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;_csrf_cookie_name = $cookie_prefix.$this-&gt;_csrf_cookie_name;</span><br><span class="line">        &#125;</span><br><span class="line">        $this-&gt;_csrf_set_hash();</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;charset = strtoupper(config_item(&apos;charset&apos;));</span><br><span class="line">    log_message(&apos;info&apos;, &apos;Security Class Initialized&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="csrf-verify"><a href="#csrf-verify" class="headerlink" title="csrf_verify()"></a>csrf_verify()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">public function csrf_verify()</span><br><span class="line">&#123;</span><br><span class="line">    if (strtoupper($_SERVER[&apos;REQUEST_METHOD&apos;]) !== &apos;POST&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;csrf_set_cookie();</span><br><span class="line">    &#125;</span><br><span class="line">    if ($exclude_uris = config_item(&apos;csrf_exclude_uris&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        $uri = load_class(&apos;URI&apos;, &apos;core&apos;);</span><br><span class="line">        foreach ($exclude_uris as $excluded)</span><br><span class="line">        &#123;</span><br><span class="line">            if (preg_match(&apos;#^&apos;.$excluded.&apos;$#i&apos;.(UTF8_ENABLED ? &apos;u&apos; : &apos;&apos;), $uri-&gt;uri_string()))</span><br><span class="line">            &#123;</span><br><span class="line">                return $this;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $valid = isset($_POST[$this-&gt;_csrf_token_name], $_COOKIE[$this-&gt;_csrf_cookie_name])</span><br><span class="line">        &amp;&amp; hash_equals($_POST[$this-&gt;_csrf_token_name], $_COOKIE[$this-&gt;_csrf_cookie_name]);</span><br><span class="line">    unset($_POST[$this-&gt;_csrf_token_name]);</span><br><span class="line">    if (config_item(&apos;csrf_regenerate&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        unset($_COOKIE[$this-&gt;_csrf_cookie_name]);</span><br><span class="line">        $this-&gt;_csrf_hash = NULL;</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;_csrf_set_hash();</span><br><span class="line">    $this-&gt;csrf_set_cookie();</span><br><span class="line">    if ($valid !== TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;csrf_show_error();</span><br><span class="line">    &#125;</span><br><span class="line">    log_message(&apos;info&apos;, &apos;CSRF token verified&apos;);</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="csrf-set-cookie"><a href="#csrf-set-cookie" class="headerlink" title="csrf_set_cookie()"></a>csrf_set_cookie()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">public function csrf_set_cookie()</span><br><span class="line">&#123;</span><br><span class="line">    $expire = time() + $this-&gt;_csrf_expire;</span><br><span class="line">    $secure_cookie = (bool) config_item(&apos;cookie_secure&apos;);</span><br><span class="line"></span><br><span class="line">    if ($secure_cookie &amp;&amp; ! is_https())</span><br><span class="line">    &#123;</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    setcookie(</span><br><span class="line">        $this-&gt;_csrf_cookie_name,</span><br><span class="line">        $this-&gt;_csrf_hash,</span><br><span class="line">        $expire,</span><br><span class="line">        config_item(&apos;cookie_path&apos;),</span><br><span class="line">        config_item(&apos;cookie_domain&apos;),</span><br><span class="line">        $secure_cookie,</span><br><span class="line">        config_item(&apos;cookie_httponly&apos;)</span><br><span class="line">    );</span><br><span class="line">    log_message(&apos;info&apos;, &apos;CSRF cookie sent&apos;);</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="csrf-show-error"><a href="#csrf-show-error" class="headerlink" title="csrf_show_error()"></a>csrf_show_error()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function csrf_show_error()</span><br><span class="line">&#123;</span><br><span class="line">    show_error(&apos;The action you have requested is not allowed.&apos;, 403);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get-csrf-hash"><a href="#get-csrf-hash" class="headerlink" title="get_csrf_hash()"></a>get_csrf_hash()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function get_csrf_hash()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_csrf_hash;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get-csrf-token-name"><a href="#get-csrf-token-name" class="headerlink" title="get_csrf_token_name()"></a>get_csrf_token_name()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function get_csrf_token_name()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_csrf_token_name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="xss-clean"><a href="#xss-clean" class="headerlink" title="xss_clean()"></a>xss_clean()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">public function xss_clean($str, $is_image = FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    if (is_array($str))</span><br><span class="line">    &#123;</span><br><span class="line">        foreach ($str as $key =&gt; &amp;$value)</span><br><span class="line">        &#123;</span><br><span class="line">            $str[$key] = $this-&gt;xss_clean($value);</span><br><span class="line">        &#125;</span><br><span class="line">        return $str;</span><br><span class="line">    &#125;</span><br><span class="line">    $str = remove_invisible_characters($str);</span><br><span class="line">    if (stripos($str, &apos;%&apos;) !== false)</span><br><span class="line">    &#123;</span><br><span class="line">        do</span><br><span class="line">        &#123;</span><br><span class="line">            $oldstr = $str;</span><br><span class="line">            $str = rawurldecode($str);</span><br><span class="line">            $str = preg_replace_callback(&apos;#%(?:\s*[0-9a-f])&#123;2,&#125;#i&apos;, array($this, &apos;_urldecodespaces&apos;), $str);</span><br><span class="line">        &#125;</span><br><span class="line">        while ($oldstr !== $str);</span><br><span class="line">        unset($oldstr);</span><br><span class="line">    &#125;</span><br><span class="line">    $str = preg_replace_callback(&quot;/[^a-z0-9&gt;]+[a-z0-9]+=([\&apos;\&quot;]).*?\\1/si&quot;, array($this, &apos;_convert_attribute&apos;), $str);</span><br><span class="line">    $str = preg_replace_callback(&apos;/&lt;\w+.*/si&apos;, array($this, &apos;_decode_entity&apos;), $str);</span><br><span class="line">    $str = remove_invisible_characters($str);</span><br><span class="line">    $str = str_replace(&quot;\t&quot;, &apos; &apos;, $str);</span><br><span class="line">    $converted_string = $str;</span><br><span class="line">    $str = $this-&gt;_do_never_allowed($str);</span><br><span class="line">    if ($is_image === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $str = preg_replace(&apos;/&lt;\?(php)/i&apos;, &apos;&amp;lt;?\\1&apos;, $str);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $str = str_replace(array(&apos;&lt;?&apos;, &apos;?&apos;.&apos;&gt;&apos;), array(&apos;&amp;lt;?&apos;, &apos;?&amp;gt;&apos;), $str);</span><br><span class="line">    &#125;</span><br><span class="line">    $words = array(</span><br><span class="line">        &apos;javascript&apos;, &apos;expression&apos;, &apos;vbscript&apos;, &apos;jscript&apos;, &apos;wscript&apos;,</span><br><span class="line">        &apos;vbs&apos;, &apos;script&apos;, &apos;base64&apos;, &apos;applet&apos;, &apos;alert&apos;, &apos;document&apos;,</span><br><span class="line">        &apos;write&apos;, &apos;cookie&apos;, &apos;window&apos;, &apos;confirm&apos;, &apos;prompt&apos;, &apos;eval&apos;</span><br><span class="line">    );</span><br><span class="line">    foreach ($words as $word)</span><br><span class="line">    &#123;</span><br><span class="line">        $word = implode(&apos;\s*&apos;, str_split($word)).&apos;\s*&apos;;</span><br><span class="line">        $str = preg_replace_callback(&apos;#(&apos;.substr($word, 0, -3).&apos;)(\W)#is&apos;, array($this, &apos;_compact_exploded_words&apos;), $str);</span><br><span class="line">    &#125;</span><br><span class="line">    do</span><br><span class="line">    &#123;</span><br><span class="line">        $original = $str;</span><br><span class="line">        if (preg_match(&apos;/&lt;a/i&apos;, $str))</span><br><span class="line">        &#123;</span><br><span class="line">            $str = preg_replace_callback(&apos;#&lt;a(?:rea)?[^a-z0-9&gt;]+([^&gt;]*?)(?:&gt;|$)#si&apos;, array($this, &apos;_js_link_removal&apos;), $str);</span><br><span class="line">        &#125;</span><br><span class="line">        if (preg_match(&apos;/&lt;img/i&apos;, $str))</span><br><span class="line">        &#123;</span><br><span class="line">            $str = preg_replace_callback(&apos;#&lt;img[^a-z0-9]+([^&gt;]*?)(?:\s?/?&gt;|$)#si&apos;, array($this, &apos;_js_img_removal&apos;), $str);</span><br><span class="line">        &#125;</span><br><span class="line">        if (preg_match(&apos;/script|xss/i&apos;, $str))</span><br><span class="line">        &#123;</span><br><span class="line">            $str = preg_replace(&apos;#&lt;/*(?:script|xss).*?&gt;#si&apos;, &apos;[removed]&apos;, $str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    while ($original !== $str);</span><br><span class="line">    unset($original);</span><br><span class="line">    $pattern = &apos;#&apos;</span><br><span class="line">        .&apos;&lt;((?&lt;slash&gt;/*\s*)((?&lt;tagName&gt;[a-z0-9]+)(?=[^a-z0-9]|$)|.+)&apos; // tag start and name, followed by a non-tag character</span><br><span class="line">        .&apos;[^\s\042\047a-z0-9&gt;/=]*&apos; // a valid attribute character immediately after the tag would count as a separator</span><br><span class="line">        // optional attributes</span><br><span class="line">        .&apos;(?&lt;attributes&gt;(?:[\s\042\047/=]*&apos; // non-attribute characters, excluding &gt; (tag close) for obvious reasons</span><br><span class="line">        .&apos;[^\s\042\047&gt;/=]+&apos; // attribute characters</span><br><span class="line">        // optional attribute-value</span><br><span class="line">            .&apos;(?:\s*=&apos; // attribute-value separator</span><br><span class="line">                .&apos;(?:[^\s\042\047=&gt;&lt;`]+|\s*\042[^\042]*\042|\s*\047[^\047]*\047|\s*(?U:[^\s\042\047=&gt;&lt;`]*))&apos; // single, double or non-quoted value</span><br><span class="line">            .&apos;)?&apos; // end optional attribute-value group</span><br><span class="line">        .&apos;)*)&apos; // end optional attributes group</span><br><span class="line">        .&apos;[^&gt;]*)(?&lt;closeTag&gt;\&gt;)?#isS&apos;;</span><br><span class="line">    do</span><br><span class="line">    &#123;</span><br><span class="line">        $old_str = $str;</span><br><span class="line">        $str = preg_replace_callback($pattern, array($this, &apos;_sanitize_naughty_html&apos;), $str);</span><br><span class="line">    &#125;</span><br><span class="line">    while ($old_str !== $str);</span><br><span class="line">    unset($old_str);</span><br><span class="line">    $str = preg_replace(</span><br><span class="line">        &apos;#(alert|prompt|confirm|cmd|passthru|eval|exec|expression|system|fopen|fsockopen|file|file_get_contents|readfile|unlink)(\s*)\((.*?)\)#si&apos;,</span><br><span class="line">        &apos;\\1\\2&amp;#40;\\3&amp;#41;&apos;,</span><br><span class="line">        $str</span><br><span class="line">    );</span><br><span class="line">    $str = preg_replace(</span><br><span class="line">        &apos;#(alert|prompt|confirm|cmd|passthru|eval|exec|expression|system|fopen|fsockopen|file|file_get_contents|readfile|unlink)(\s*)`(.*?)`#si&apos;,</span><br><span class="line">        &apos;\\1\\2&amp;#96;\\3&amp;#96;&apos;,</span><br><span class="line">        $str</span><br><span class="line">    );</span><br><span class="line">    $str = $this-&gt;_do_never_allowed($str);</span><br><span class="line">    if ($is_image === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        return ($str === $converted_string);</span><br><span class="line">    &#125;</span><br><span class="line">    return $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="xss-hash"><a href="#xss-hash" class="headerlink" title="xss_hash()"></a>xss_hash()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public function xss_hash()</span><br><span class="line">&#123;</span><br><span class="line">    if ($this-&gt;_xss_hash === NULL)</span><br><span class="line">    &#123;</span><br><span class="line">        $rand = $this-&gt;get_random_bytes(16);</span><br><span class="line">        $this-&gt;_xss_hash = ($rand === FALSE)</span><br><span class="line">            ? md5(uniqid(mt_rand(), TRUE))</span><br><span class="line">            : bin2hex($rand);</span><br><span class="line">    &#125;</span><br><span class="line">    return $this-&gt;_xss_hash;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="get-random-bytes"><a href="#get-random-bytes" class="headerlink" title="get_random_bytes()"></a>get_random_bytes()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">public function get_random_bytes($length)</span><br><span class="line">&#123;</span><br><span class="line">    if (empty($length) OR ! ctype_digit((string) $length))</span><br><span class="line">    &#123;</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    if (function_exists(&apos;random_bytes&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        try</span><br><span class="line">        &#123;</span><br><span class="line">            return random_bytes((int) $length);</span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception $e)</span><br><span class="line">        &#123;</span><br><span class="line">            log_message(&apos;error&apos;, $e-&gt;getMessage());</span><br><span class="line">            return FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if (defined(&apos;MCRYPT_DEV_URANDOM&apos;) &amp;&amp; ($output = mcrypt_create_iv($length, MCRYPT_DEV_URANDOM)) !== FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        return $output;</span><br><span class="line">    &#125;</span><br><span class="line">    if (is_readable(&apos;/dev/urandom&apos;) &amp;&amp; ($fp = fopen(&apos;/dev/urandom&apos;, &apos;rb&apos;)) !== FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        is_php(&apos;5.4&apos;) &amp;&amp; stream_set_chunk_size($fp, $length);</span><br><span class="line">        $output = fread($fp, $length);</span><br><span class="line">        fclose($fp);</span><br><span class="line">        if ($output !== FALSE)</span><br><span class="line">        &#123;</span><br><span class="line">            return $output;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if (function_exists(&apos;openssl_random_pseudo_bytes&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        return openssl_random_pseudo_bytes($length);</span><br><span class="line">    &#125;</span><br><span class="line">    return FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="entity-decode"><a href="#entity-decode" class="headerlink" title="entity_decode()"></a>entity_decode()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">public function entity_decode($str, $charset = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    if (strpos($str, &apos;&amp;&apos;) === FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        return $str;</span><br><span class="line">    &#125;</span><br><span class="line">    static $_entities;</span><br><span class="line">    isset($charset) OR $charset = $this-&gt;charset;</span><br><span class="line">    $flag = is_php(&apos;5.4&apos;)</span><br><span class="line">        ? ENT_COMPAT | ENT_HTML5</span><br><span class="line">        : ENT_COMPAT;</span><br><span class="line">    if ( ! isset($_entities))</span><br><span class="line">    &#123;</span><br><span class="line">        $_entities = array_map(&apos;strtolower&apos;, get_html_translation_table(HTML_ENTITIES, $flag, $charset));</span><br><span class="line">        if ($flag === ENT_COMPAT)</span><br><span class="line">        &#123;</span><br><span class="line">            $_entities[&apos;:&apos;] = &apos;&amp;colon;&apos;;</span><br><span class="line">            $_entities[&apos;(&apos;] = &apos;&amp;lpar;&apos;;</span><br><span class="line">            $_entities[&apos;)&apos;] = &apos;&amp;rpar;&apos;;</span><br><span class="line">            $_entities[&quot;\n&quot;] = &apos;&amp;NewLine;&apos;;</span><br><span class="line">            $_entities[&quot;\t&quot;] = &apos;&amp;Tab;&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    do</span><br><span class="line">    &#123;</span><br><span class="line">        $str_compare = $str;</span><br><span class="line">        if (preg_match_all(&apos;/&amp;[a-z]&#123;2,&#125;(?![a-z;])/i&apos;, $str, $matches))</span><br><span class="line">        &#123;</span><br><span class="line">            $replace = array();</span><br><span class="line">            $matches = array_unique(array_map(&apos;strtolower&apos;, $matches[0]));</span><br><span class="line">            foreach ($matches as &amp;$match)</span><br><span class="line">            &#123;</span><br><span class="line">                if (($char = array_search($match.&apos;;&apos;, $_entities, TRUE)) !== FALSE)</span><br><span class="line">                &#123;</span><br><span class="line">                    $replace[$match] = $char;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $str = str_replace(array_keys($replace), array_values($replace), $str);</span><br><span class="line">        &#125;</span><br><span class="line">        $str = html_entity_decode(</span><br><span class="line">            preg_replace(&apos;/(&amp;#(?:x0*[0-9a-f]&#123;2,5&#125;(?![0-9a-f;])|(?:0*\d&#123;2,4&#125;(?![0-9;]))))/iS&apos;, &apos;$1;&apos;, $str),</span><br><span class="line">            $flag,</span><br><span class="line">            $charset</span><br><span class="line">        );</span><br><span class="line">        if ($flag === ENT_COMPAT)</span><br><span class="line">        &#123;</span><br><span class="line">            $str = str_replace(array_values($_entities), array_keys($_entities), $str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    while ($str_compare !== $str);</span><br><span class="line">    return $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="sanitize-filename"><a href="#sanitize-filename" class="headerlink" title="sanitize_filename()"></a>sanitize_filename()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public function sanitize_filename($str, $relative_path = FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    $bad = $this-&gt;filename_bad_chars;</span><br><span class="line">    if ( ! $relative_path)</span><br><span class="line">    &#123;</span><br><span class="line">        $bad[] = &apos;./&apos;;</span><br><span class="line">        $bad[] = &apos;/&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    $str = remove_invisible_characters($str, FALSE);</span><br><span class="line">    do</span><br><span class="line">    &#123;</span><br><span class="line">        $old = $str;</span><br><span class="line">        $str = str_replace($bad, &apos;&apos;, $str);</span><br><span class="line">    &#125;</span><br><span class="line">    while ($old !== $str);</span><br><span class="line">    return stripslashes($str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="strip-image-tags"><a href="#strip-image-tags" class="headerlink" title="strip_image_tags()"></a>strip_image_tags()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public function strip_image_tags($str)</span><br><span class="line">&#123;</span><br><span class="line">    return preg_replace(</span><br><span class="line">        array(</span><br><span class="line">            &apos;#&lt;img[\s/]+.*?src\s*=\s*([&quot;\&apos;])([^\\1]+?)\\1.*?\&gt;#i&apos;,</span><br><span class="line">            &apos;#&lt;img[\s/]+.*?src\s*=\s*?(([^\s&quot;\&apos;=&lt;&gt;`]+)).*?\&gt;#i&apos;</span><br><span class="line">        ),</span><br><span class="line">        &apos;\\2&apos;,</span><br><span class="line">        $str</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="urldecodespaces"><a href="#urldecodespaces" class="headerlink" title="_urldecodespaces()"></a>_urldecodespaces()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">protected function _urldecodespaces($matches)</span><br><span class="line">&#123;</span><br><span class="line">    $input    = $matches[0];</span><br><span class="line">    $nospaces = preg_replace(&apos;#\s+#&apos;, &apos;&apos;, $input);</span><br><span class="line">    return ($nospaces === $input)</span><br><span class="line">        ? $input</span><br><span class="line">        : rawurldecode($nospaces);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="compact-exploded-words"><a href="#compact-exploded-words" class="headerlink" title="_compact_exploded_words()"></a>_compact_exploded_words()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">protected function _compact_exploded_words($matches)</span><br><span class="line">&#123;</span><br><span class="line">    return preg_replace(&apos;/\s+/s&apos;, &apos;&apos;, $matches[1]).$matches[2];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="sanitize-naughty-html"><a href="#sanitize-naughty-html" class="headerlink" title="_sanitize_naughty_html()"></a>_sanitize_naughty_html()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">protected function _sanitize_naughty_html($matches)</span><br><span class="line">&#123;</span><br><span class="line">    static $naughty_tags    = array(</span><br><span class="line">        &apos;alert&apos;, &apos;area&apos;, &apos;prompt&apos;, &apos;confirm&apos;, &apos;applet&apos;, &apos;audio&apos;, &apos;basefont&apos;, &apos;base&apos;, &apos;behavior&apos;, &apos;bgsound&apos;,</span><br><span class="line">        &apos;blink&apos;, &apos;body&apos;, &apos;embed&apos;, &apos;expression&apos;, &apos;form&apos;, &apos;frameset&apos;, &apos;frame&apos;, &apos;head&apos;, &apos;html&apos;, &apos;ilayer&apos;,</span><br><span class="line">        &apos;iframe&apos;, &apos;input&apos;, &apos;button&apos;, &apos;select&apos;, &apos;isindex&apos;, &apos;layer&apos;, &apos;link&apos;, &apos;meta&apos;, &apos;keygen&apos;, &apos;object&apos;,</span><br><span class="line">        &apos;plaintext&apos;, &apos;style&apos;, &apos;script&apos;, &apos;textarea&apos;, &apos;title&apos;, &apos;math&apos;, &apos;video&apos;, &apos;svg&apos;, &apos;xml&apos;, &apos;xss&apos;</span><br><span class="line">    );</span><br><span class="line">    static $evil_attributes = array(</span><br><span class="line">        &apos;on\w+&apos;, &apos;style&apos;, &apos;xmlns&apos;, &apos;formaction&apos;, &apos;form&apos;, &apos;xlink:href&apos;, &apos;FSCommand&apos;, &apos;seekSegmentTime&apos;</span><br><span class="line">    );</span><br><span class="line">    if (empty($matches[&apos;closeTag&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        return &apos;&amp;lt;&apos;.$matches[1];</span><br><span class="line">    &#125;</span><br><span class="line">    elseif (in_array(strtolower($matches[&apos;tagName&apos;]), $naughty_tags, TRUE))</span><br><span class="line">    &#123;</span><br><span class="line">        return &apos;&amp;lt;&apos;.$matches[1].&apos;&amp;gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    elseif (isset($matches[&apos;attributes&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        $attributes = array();</span><br><span class="line">        $attributes_pattern = &apos;#&apos;</span><br><span class="line">            .&apos;(?&lt;name&gt;[^\s\042\047&gt;/=]+)&apos; // attribute characters</span><br><span class="line">            // optional attribute-value</span><br><span class="line">            .&apos;(?:\s*=(?&lt;value&gt;[^\s\042\047=&gt;&lt;`]+|\s*\042[^\042]*\042|\s*\047[^\047]*\047|\s*(?U:[^\s\042\047=&gt;&lt;`]*)))&apos; // attribute-value separator</span><br><span class="line">            .&apos;#i&apos;;</span><br><span class="line">        $is_evil_pattern = &apos;#^(&apos;.implode(&apos;|&apos;, $evil_attributes).&apos;)$#i&apos;;</span><br><span class="line">        do</span><br><span class="line">        &#123;</span><br><span class="line">            $matches[&apos;attributes&apos;] = preg_replace(&apos;#^[^a-z]+#i&apos;, &apos;&apos;, $matches[&apos;attributes&apos;]);</span><br><span class="line">            if ( ! preg_match($attributes_pattern, $matches[&apos;attributes&apos;], $attribute, PREG_OFFSET_CAPTURE))</span><br><span class="line">            &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            if (</span><br><span class="line">                preg_match($is_evil_pattern, $attribute[&apos;name&apos;][0])</span><br><span class="line">                OR (trim($attribute[&apos;value&apos;][0]) === &apos;&apos;)</span><br><span class="line">            )</span><br><span class="line">            &#123;</span><br><span class="line">                $attributes[] = &apos;xss=removed&apos;;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                $attributes[] = $attribute[0][0];</span><br><span class="line">            &#125;</span><br><span class="line">            $matches[&apos;attributes&apos;] = substr($matches[&apos;attributes&apos;], $attribute[0][1] + strlen($attribute[0][0]));</span><br><span class="line">        &#125;</span><br><span class="line">        while ($matches[&apos;attributes&apos;] !== &apos;&apos;);</span><br><span class="line">        $attributes = empty($attributes)</span><br><span class="line">            ? &apos;&apos;</span><br><span class="line">            : &apos; &apos;.implode(&apos; &apos;, $attributes);</span><br><span class="line">        return &apos;&lt;&apos;.$matches[&apos;slash&apos;].$matches[&apos;tagName&apos;].$attributes.&apos;&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    return $matches[0];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="js-link-removal"><a href="#js-link-removal" class="headerlink" title="_js_link_removal()"></a>_js_link_removal()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">protected function _js_link_removal($match)</span><br><span class="line">&#123;</span><br><span class="line">    return str_replace(</span><br><span class="line">        $match[1],</span><br><span class="line">        preg_replace(</span><br><span class="line">            &apos;#href=.*?(?:(?:alert|prompt|confirm)(?:\(|&amp;\#40;|`|&amp;\#96;)|javascript:|livescript:|mocha:|charset=|window\.|\(?document\)?\.|\.cookie|&lt;script|&lt;xss|d\s*a\s*t\s*a\s*:)#si&apos;,</span><br><span class="line">            &apos;&apos;,</span><br><span class="line">            $this-&gt;_filter_attributes($match[1])</span><br><span class="line">        ),</span><br><span class="line">        $match[0]</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="js-img-removal"><a href="#js-img-removal" class="headerlink" title="_js_img_removal()"></a>_js_img_removal()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">protected function _js_img_removal($match)</span><br><span class="line">&#123;</span><br><span class="line">    return str_replace(</span><br><span class="line">        $match[1],</span><br><span class="line">        preg_replace(</span><br><span class="line">            &apos;#src=.*?(?:(?:alert|prompt|confirm|eval)(?:\(|&amp;\#40;|`|&amp;\#96;)|javascript:|livescript:|mocha:|charset=|window\.|\(?document\)?\.|\.cookie|&lt;script|&lt;xss|base64\s*,)#si&apos;,</span><br><span class="line">            &apos;&apos;,</span><br><span class="line">            $this-&gt;_filter_attributes($match[1])</span><br><span class="line">        ),</span><br><span class="line">        $match[0]</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="convert-attribute"><a href="#convert-attribute" class="headerlink" title="_convert_attribute()"></a>_convert_attribute()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">protected function _convert_attribute($match)</span><br><span class="line">&#123;</span><br><span class="line">    return str_replace(array(&apos;&gt;&apos;, &apos;&lt;&apos;, &apos;\\&apos;), array(&apos;&amp;gt;&apos;, &apos;&amp;lt;&apos;, &apos;\\\\&apos;), $match[0]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="filter-attributes"><a href="#filter-attributes" class="headerlink" title="_filter_attributes()"></a>_filter_attributes()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">protected function _filter_attributes($str)</span><br><span class="line">&#123;</span><br><span class="line">    $out = &apos;&apos;;</span><br><span class="line">    if (preg_match_all(&apos;#\s*[a-z\-]+\s*=\s*(\042|\047)([^\\1]*?)\\1#is&apos;, $str, $matches))</span><br><span class="line">    &#123;</span><br><span class="line">        foreach ($matches[0] as $match)</span><br><span class="line">        &#123;</span><br><span class="line">            $out .= preg_replace(&apos;#/\*.*?\*/#s&apos;, &apos;&apos;, $match);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $out;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="decode-entity"><a href="#decode-entity" class="headerlink" title="_decode_entity()"></a>_decode_entity()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">protected function _decode_entity($match)</span><br><span class="line">&#123;</span><br><span class="line">    $match = preg_replace(&apos;|\&amp;([a-z\_0-9\-]+)\=([a-z\_0-9\-/]+)|i&apos;, $this-&gt;xss_hash().&apos;\\1=\\2&apos;, $match[0]);</span><br><span class="line">    return str_replace(</span><br><span class="line">        $this-&gt;xss_hash(),</span><br><span class="line">        &apos;&amp;&apos;,</span><br><span class="line">        $this-&gt;entity_decode($match, $this-&gt;charset)</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="do-never-allowed"><a href="#do-never-allowed" class="headerlink" title="_do_never_allowed()"></a>_do_never_allowed()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">protected function _do_never_allowed($str)</span><br><span class="line">&#123;</span><br><span class="line">    $str = str_replace(array_keys($this-&gt;_never_allowed_str), $this-&gt;_never_allowed_str, $str);</span><br><span class="line">    foreach ($this-&gt;_never_allowed_regex as $regex)</span><br><span class="line">    &#123;</span><br><span class="line">        $str = preg_replace(&apos;#&apos;.$regex.&apos;#is&apos;, &apos;[removed]&apos;, $str);</span><br><span class="line">    &#125;</span><br><span class="line">    return $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="csrf-set-hash"><a href="#csrf-set-hash" class="headerlink" title="_csrf_set_hash()"></a>_csrf_set_hash()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">protected function _csrf_set_hash()</span><br><span class="line">&#123;</span><br><span class="line">    if ($this-&gt;_csrf_hash === NULL)</span><br><span class="line">    &#123;</span><br><span class="line">        if (isset($_COOKIE[$this-&gt;_csrf_cookie_name]) &amp;&amp; is_string($_COOKIE[$this-&gt;_csrf_cookie_name])</span><br><span class="line">            &amp;&amp; preg_match(&apos;#^[0-9a-f]&#123;32&#125;$#iS&apos;, $_COOKIE[$this-&gt;_csrf_cookie_name]) === 1)</span><br><span class="line">        &#123;</span><br><span class="line">            return $this-&gt;_csrf_hash = $_COOKIE[$this-&gt;_csrf_cookie_name];</span><br><span class="line">        &#125;</span><br><span class="line">        $rand = $this-&gt;get_random_bytes(16);</span><br><span class="line">        $this-&gt;_csrf_hash = ($rand === FALSE)</span><br><span class="line">            ? md5(uniqid(mt_rand(), TRUE))</span><br><span class="line">            : bin2hex($rand);</span><br><span class="line">    &#125;</span><br><span class="line">    return $this-&gt;_csrf_hash;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81MjkzNjQwMg==" title="https://blog.csdn.net/Zhihua_W/article/details/52936402">CI框架源码解析十一之安全类文件Security.php<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;安全类包含了一些方法，用于安全的处理输入数据，有助于创建一个安全的应用。CI框架安全类提供了跨站请求伪造&lt;strong&gt;CSRF攻击&lt;/strong&gt;和&lt;strong&gt;XSS跨站脚本攻击&lt;/strong&gt;策略，只需要在配置文件开启即可。该类包含9个成员变量和22个成员方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
      <category term="Codeigniter" scheme="https://pureven.cc/tags/Codeigniter/"/>
    
  </entry>
  
  <entry>
    <title>CodeIgniter输出类Output.php</title>
    <link href="https://pureven.cc/2020/02/04/codeigniter-output/"/>
    <id>https://pureven.cc/2020/02/04/codeigniter-output/</id>
    <published>2020-02-04T04:01:29.000Z</published>
    <updated>2020-04-13T00:41:43.284Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>该类主要功能负责向浏览器输出最终结果，其中包括从缓存加载内容输出，根据控制器方法产生的内容输出，还包括写缓存、设置头信息、加载CI内部分析器。该类有11个成员变量和18个成员方法。下面逐个分析。</p><a id="more"></a><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public $final_output;</span><br><span class="line">public $cache_expiration = 0;</span><br><span class="line">public $headers = array();</span><br><span class="line">public $mimes =array();</span><br><span class="line">protected $mime_type = &apos;text/html&apos;;</span><br><span class="line">public $enable_profiler = FALSE;</span><br><span class="line">protected $_zlib_oc = FALSE;</span><br><span class="line">protected $_compress_output = FALSE;</span><br><span class="line">protected $_profiler_sections =array();</span><br><span class="line">public $parse_exec_vars = TRUE;</span><br><span class="line">protected static $func_overload;</span><br></pre></td></tr></table></figure><p>$final_output表示最终输出结果字符串。<br>$cache_expiration表示缓存有效时间。<br>$headers用于存放头信息。<br>$mimes用于存放从配置文件中读取的mime列表。<br>$mime_type表示当前页面的mime类型。<br>$enable_profiler表示性能分析器开关。<br>$_zlib_oc表示Gzip压缩开关。<br>$_compress_output表示CI压缩开关。<br>$_profiler_sections表示分析器模块。<br>$parse_exec_vars表示分析器解析变量开关，比如解析<code>{elapsed_time}</code>、<code>{memory_usage}</code>等。<br>$func_overload表示启用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvbWJzdHJpbmcub3ZlcmxvYWQucGhw" title="https://www.php.net/manual/zh/mbstring.overload.php">函数重载功能<i class="fa fa-external-link"></i></span>开关。</p><hr><h4 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public function __construct()</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;_zlib_oc = (bool) ini_get(&apos;zlib.output_compression&apos;);</span><br><span class="line">    $this-&gt;_compress_output = (</span><br><span class="line">        $this-&gt;_zlib_oc === FALSE</span><br><span class="line">        &amp;&amp; config_item(&apos;compress_output&apos;) === TRUE</span><br><span class="line">        &amp;&amp; extension_loaded(&apos;zlib&apos;)</span><br><span class="line">    );</span><br><span class="line">    isset(self::$func_overload) OR self::$func_overload = (extension_loaded(&apos;mbstring&apos;) &amp;&amp; ini_get(&apos;mbstring.func_overload&apos;));</span><br><span class="line">    $this-&gt;mimes =&amp; get_mimes();</span><br><span class="line">    log_message(&apos;info&apos;, &apos;Output Class Initialized&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在构造函数中，CI通过ini_get(‘zlib.output_compression’)获取当前php环境是否开启了GZIP压缩。如果PHP环境没有开启，那么判断配置文件中的压缩设置(compress_output=TRUE)，是不是要求框架压缩输出，如果要求的话，只要当前PHP是加载了zlib扩展的，那么就把$_compress_output标记设为TRUE。通常情况下，我们在使用过程中会开启WEB服务器的压缩功能，而关闭程序本身压缩功能。</p><hr><h4 id="get-output"><a href="#get-output" class="headerlink" title="get_output()"></a>get_output()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function get_output()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;final_output;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于获取最终输出信息。</p><hr><h4 id="set-output"><a href="#set-output" class="headerlink" title="set_output()"></a>set_output()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function set_output($output)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;final_output = $output;</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置$this-&gt;final_output允许你手工设置最终的输出字符串</p><hr><h4 id="append-output"><a href="#append-output" class="headerlink" title="append_output()"></a>append_output()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function append_output($output)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;final_output .= $output;</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于向输出字符串附加数据。</p><hr><h4 id="set-header"><a href="#set-header" class="headerlink" title="set_header()"></a>set_header()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public function set_header($header, $replace = TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    if ($this-&gt;_zlib_oc &amp;&amp; strncasecmp($header, &apos;content-length&apos;, 14) === 0)</span><br><span class="line">    &#123;</span><br><span class="line">        return $this;</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;headers[] = array($header, $replace);</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置头信息，如果php开启了zlib.output_compression压缩，就跳过content-length头的设置这样做的理由是当压缩开启后，实际输出字节数比正常少，误设content-length头后，会使得客户端一直等待服务器发送足够字节的文本，造成无法正常响应。</p><hr><h4 id="set-content-type"><a href="#set-content-type" class="headerlink" title="set_content_type()"></a>set_content_type()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">public function set_content_type($mime_type, $charset = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    if (strpos($mime_type, &apos;/&apos;) === FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        $extension = ltrim($mime_type, &apos;.&apos;);</span><br><span class="line">        if (isset($this-&gt;mimes[$extension]))</span><br><span class="line">        &#123;</span><br><span class="line">            $mime_type =&amp; $this-&gt;mimes[$extension];</span><br><span class="line">            if (is_array($mime_type))</span><br><span class="line">            &#123;</span><br><span class="line">                $mime_type = current($mime_type);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;mime_type = $mime_type;</span><br><span class="line">    if (empty($charset))</span><br><span class="line">    &#123;</span><br><span class="line">        $charset = config_item(&apos;charset&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    $header = &apos;Content-Type: &apos;.$mime_type</span><br><span class="line">        .(empty($charset) ? &apos;&apos; : &apos;; charset=&apos;.$charset);</span><br><span class="line"></span><br><span class="line">    $this-&gt;headers[] = array($header, TRUE);</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置页面的 MIME 类型，可以很方便的提供 JSON 数据、JPEG、XML 等等格式,通过$charset设置文档的字符集。$mime_type是要设置MIME信息的文件扩展名，系统从$mimes数组中找出对应扩展名中的MIME信息。</p><hr><h4 id="get-content-type"><a href="#get-content-type" class="headerlink" title="get_content_type()"></a>get_content_type()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public function get_content_type()</span><br><span class="line">&#123;</span><br><span class="line">    for ($i = 0, $c = count($this-&gt;headers); $i &lt; $c; $i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if (sscanf($this-&gt;headers[$i][0], &apos;Content-Type: %[^;]&apos;, $content_type) === 1)</span><br><span class="line">        &#123;</span><br><span class="line">            return $content_type;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return &apos;text/html&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法获取当前正在使用的 HTTP 头 Content-Type ，不包含字符集部分。从一堆header信息中匹配Content-Type信息，找到了就返回其中的MIME值，没找到，就返回默认的text/html。</p><hr><h4 id="get-header"><a href="#get-header" class="headerlink" title="get_header()"></a>get_header()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public function get_header($header)</span><br><span class="line">&#123;</span><br><span class="line">    $headers = array_merge(</span><br><span class="line">        array_map(&apos;array_shift&apos;, $this-&gt;headers),</span><br><span class="line">        headers_list()</span><br><span class="line">    );</span><br><span class="line">    if (empty($headers) OR empty($header))</span><br><span class="line">    &#123;</span><br><span class="line">        return NULL;</span><br><span class="line">    &#125;</span><br><span class="line">    for ($c = count($headers) - 1; $c &gt; -1; $c--)</span><br><span class="line">    &#123;</span><br><span class="line">        if (strncasecmp($header, $headers[$c], $l = self::strlen($header)) === 0)</span><br><span class="line">        &#123;</span><br><span class="line">            return trim(self::substr($headers[$c], $l+1));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return NULL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法返回请求的 HTTP 头，如果 HTTP 头还没设置，返回 NULL。</p><hr><h4 id="set-status-header"><a href="#set-status-header" class="headerlink" title="set_status_header()"></a>set_status_header()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function set_status_header($code = 200, $text = &apos;&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    set_status_header($code, $text);</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法设置头信息状态。</p><hr><h4 id="enable-profiler"><a href="#enable-profiler" class="headerlink" title="enable_profiler()"></a>enable_profiler()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function enable_profiler($val = TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;enable_profiler = is_bool($val) ? $val : TRUE;</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置禁用或开启分析器。</p><hr><h4 id="set-profiler-sections"><a href="#set-profiler-sections" class="headerlink" title="set_profiler_sections()"></a>set_profiler_sections()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public function set_profiler_sections($sections)</span><br><span class="line">&#123;</span><br><span class="line">    if (isset($sections[&apos;query_toggle_count&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_profiler_sections[&apos;query_toggle_count&apos;] = (int) $sections[&apos;query_toggle_count&apos;];</span><br><span class="line">        unset($sections[&apos;query_toggle_count&apos;]);</span><br><span class="line">    &#125;</span><br><span class="line">    foreach ($sections as $section =&gt; $enable)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_profiler_sections[$section] = ($enable !== FALSE);</span><br><span class="line">    &#125;</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置分析器的内容，该类允许你启用或禁用程序分析器，它可以在你的页面底部显示，基准测试的结果或其他一些数据帮助你调试和优化程序。</p><hr><h4 id="cache"><a href="#cache" class="headerlink" title="cache()"></a>cache()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function cache($time)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;cache_expiration = is_numeric($time) ? $time : 0;</span><br><span class="line">    return $this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置缓存时长，开启文件缓存。</p><hr><h4 id="display"><a href="#display" class="headerlink" title="_display()"></a>_display()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">public function _display($output = &apos;&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    $BM =&amp; load_class(&apos;Benchmark&apos;, &apos;core&apos;);</span><br><span class="line">    $CFG =&amp; load_class(&apos;Config&apos;, &apos;core&apos;);</span><br><span class="line">    if (class_exists(&apos;CI_Controller&apos;, FALSE))</span><br><span class="line">    &#123;</span><br><span class="line">        $CI =&amp; get_instance();</span><br><span class="line">    &#125;</span><br><span class="line">    if ($output === &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $output =&amp; $this-&gt;final_output;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($this-&gt;cache_expiration &gt; 0 &amp;&amp; isset($CI) &amp;&amp; ! method_exists($CI, &apos;_output&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_write_cache($output);</span><br><span class="line">    &#125;</span><br><span class="line">    $elapsed = $BM-&gt;elapsed_time(&apos;total_execution_time_start&apos;, &apos;total_execution_time_end&apos;);</span><br><span class="line">    if ($this-&gt;parse_exec_vars === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $memory= round(memory_get_usage() / 1024 / 1024, 2).&apos;MB&apos;;</span><br><span class="line">        $output = str_replace(array(&apos;&#123;elapsed_time&#125;&apos;, &apos;&#123;memory_usage&#125;&apos;), array($elapsed, $memory), $output);</span><br><span class="line">    &#125;</span><br><span class="line">    if (isset($CI) // This means that we&apos;re not serving a cache file, if we were, it would already be compressed</span><br><span class="line">        &amp;&amp; $this-&gt;_compress_output === TRUE</span><br><span class="line">        &amp;&amp; isset($_SERVER[&apos;HTTP_ACCEPT_ENCODING&apos;]) &amp;&amp; strpos($_SERVER[&apos;HTTP_ACCEPT_ENCODING&apos;], &apos;gzip&apos;) !== FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        ob_start(&apos;ob_gzhandler&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    if (count($this-&gt;headers) &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        foreach ($this-&gt;headers as $header)</span><br><span class="line">        &#123;</span><br><span class="line">            @header($header[0], $header[1]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if ( ! isset($CI))</span><br><span class="line">    &#123;</span><br><span class="line">        if ($this-&gt;_compress_output === TRUE)</span><br><span class="line">        &#123;</span><br><span class="line">            if (isset($_SERVER[&apos;HTTP_ACCEPT_ENCODING&apos;]) &amp;&amp; strpos($_SERVER[&apos;HTTP_ACCEPT_ENCODING&apos;], &apos;gzip&apos;) !== FALSE)</span><br><span class="line">            &#123;</span><br><span class="line">                header(&apos;Content-Encoding: gzip&apos;);</span><br><span class="line">                header(&apos;Content-Length: &apos;.self::strlen($output));</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                $output = gzinflate(self::substr($output, 10, -8));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        echo $output;</span><br><span class="line">        log_message(&apos;info&apos;, &apos;Final output sent to browser&apos;);</span><br><span class="line">        log_message(&apos;debug&apos;, &apos;Total execution time: &apos;.$elapsed);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($this-&gt;enable_profiler === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $CI-&gt;load-&gt;library(&apos;profiler&apos;);</span><br><span class="line">        if ( ! empty($this-&gt;_profiler_sections))</span><br><span class="line">        &#123;</span><br><span class="line">            $CI-&gt;profiler-&gt;set_sections($this-&gt;_profiler_sections);</span><br><span class="line">        &#125;</span><br><span class="line">        $output = preg_replace(&apos;|&lt;/body&gt;.*?&lt;/html&gt;|is&apos;, &apos;&apos;, $output, -1, $count).$CI-&gt;profiler-&gt;run();</span><br><span class="line">        if ($count &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            $output .= &apos;&lt;/body&gt;&lt;/html&gt;&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if (method_exists($CI, &apos;_output&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        $CI-&gt;_output($output);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        echo $output; // Send it to the browser!</span><br><span class="line">    &#125;</span><br><span class="line">    log_message(&apos;info&apos;, &apos;Final output sent to browser&apos;);</span><br><span class="line">    log_message(&apos;debug&apos;, &apos;Total execution time: &apos;.$elapsed);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的功能主要是将最终结果输出到浏览器。功能实现：</p><ol><li>获取$BM、$CFG，注意这里使用的是load_class()而不直接用$CI =&amp; get_instance()，因为有时候本方法是被缓存机制调用的，这时候$CI超级对象还无法使用。</li><li>当然如果可能的话，获取超级对象$CI。</li><li>获取需要最终输出的字符串$output。当$CI对象存在时证明我们不是在从缓存输出数据，这时如果Controller没有自定义_output方法就需要写缓存(调<code>_write_cache方法</code>)。</li><li>如果分析器解析变量是开着的则替换系统的总体运行时间和内存消耗。</li><li>如果满足条件（$CI对象存在、支持压缩输出、本地服务器支持<code>gzip</code>编码）则打开输出缓冲。当输出缓冲激活后，脚本将不会输出内容（除http标头外），相反需要输出的内容被存储在内部缓冲区中。<code>ob_gzhandler()</code>目的是用在ob_start()中作回调函数，以方便将gz编码的数据发送到支持压缩页面的浏览器。在ob_gzhandler()真正发送压缩过的数据之前，该 函数会确定（判定）浏览器可以接受哪种类型内容编码（”gzip”,”deflate”,或者根本什么都不支持），然后 返回相应的输出。 所有可以发送正确头信息表明他自己可以接受压缩的网页的浏览器，都可以支持。</li><li>如果存放头信息的数组<code>headers</code>不为空则设置头信息。</li><li>如果没有超级控制器，可以证明当前是在处理一个缓存的输出。输出缓存内容并结束本函数。</li><li>如果开启了分析器模块，会生成一些报告到页面尾部用于辅助我们调试。这里使用Profile显示所有基准点的时间消耗，同时还会显示出提交的数据和数据库查询的信息。</li></ol><hr><h4 id="write-cache"><a href="#write-cache" class="headerlink" title="_write_cache()"></a>_write_cache()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">public function _write_cache($output)</span><br><span class="line">&#123;</span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line">    $path = $CI-&gt;config-&gt;item(&apos;cache_path&apos;);</span><br><span class="line">    $cache_path = ($path === &apos;&apos;) ? APPPATH.&apos;cache/&apos; : $path;</span><br><span class="line">    if ( ! is_dir($cache_path) OR ! is_really_writable($cache_path))</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(&apos;error&apos;, &apos;Unable to write cache file: &apos;.$cache_path);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    $uri = $CI-&gt;config-&gt;item(&apos;base_url&apos;)</span><br><span class="line">        .$CI-&gt;config-&gt;item(&apos;index_page&apos;)</span><br><span class="line">        .$CI-&gt;uri-&gt;uri_string();</span><br><span class="line"></span><br><span class="line">    if (($cache_query_string = $CI-&gt;config-&gt;item(&apos;cache_query_string&apos;)) &amp;&amp; ! empty($_SERVER[&apos;QUERY_STRING&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        if (is_array($cache_query_string))</span><br><span class="line">        &#123;</span><br><span class="line">            $uri .= &apos;?&apos;.http_build_query(array_intersect_key($_GET, array_flip($cache_query_string)));</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $uri .= &apos;?&apos;.$_SERVER[&apos;QUERY_STRING&apos;];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $cache_path .= md5($uri);</span><br><span class="line">    if ( ! $fp = @fopen($cache_path, &apos;w+b&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(&apos;error&apos;, &apos;Unable to write cache file: &apos;.$cache_path);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if ( ! flock($fp, LOCK_EX))</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(&apos;error&apos;, &apos;Unable to secure a file lock for file at: &apos;.$cache_path);</span><br><span class="line">        fclose($fp);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($this-&gt;_compress_output === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $output = gzencode($output);</span><br><span class="line"></span><br><span class="line">        if ($this-&gt;get_header(&apos;content-type&apos;) === NULL)</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;set_content_type($this-&gt;mime_type);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $expire = time() + ($this-&gt;cache_expiration * 60);</span><br><span class="line">    $cache_info = serialize(array(</span><br><span class="line">        &apos;expire&apos;=&gt; $expire,</span><br><span class="line">        &apos;headers&apos;=&gt; $this-&gt;headers</span><br><span class="line">    ));</span><br><span class="line">    $output = $cache_info.&apos;ENDCI---&gt;&apos;.$output;</span><br><span class="line">    for ($written = 0, $length = self::strlen($output); $written &lt; $length; $written += $result)</span><br><span class="line">    &#123;</span><br><span class="line">        if (($result = fwrite($fp, self::substr($output, $written))) === FALSE)</span><br><span class="line">        &#123;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    flock($fp, LOCK_UN);</span><br><span class="line">    fclose($fp);</span><br><span class="line">    if ( ! is_int($result))</span><br><span class="line">    &#123;</span><br><span class="line">        @unlink($cache_path);</span><br><span class="line">        log_message(&apos;error&apos;, &apos;Unable to write the complete cache content at: &apos;.$cache_path);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    chmod($cache_path, 0640);</span><br><span class="line">    log_message(&apos;debug&apos;, &apos;Cache file written: &apos;.$cache_path);</span><br><span class="line">    $this-&gt;set_cache_header($_SERVER[&apos;REQUEST_TIME&apos;], $expire);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法主要用于将缓存信息写入缓存文件。功能实现：</p><ol><li>获取缓存路径$cache_path并判断如果不是目录或不可写则返回。</li><li>构造$uri，并对$uri进行md5加密，然后放到$cache_path后面作为缓存文件的完整路径。</li><li>判断缓存文件完整路径$cache_path是否可写，不可写或无法上锁则返回。</li><li>根据支持条件将输出内容进行压缩，这里用到了<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uZ3plbmNvZGUucGhw" title="https://www.php.net/manual/zh/function.gzencode.php">gzencode<i class="fa fa-external-link"></i></span>，设置内容类型mime_type头信息。</li><li>将$cache_info<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uc2VyaWFsaXplLnBocA==" title="https://www.php.net/manual/zh/function.serialize.php">序列化<i class="fa fa-external-link"></i></span>，构造成<code>$cache_info.&#39;ENDCI---&gt;&#39;.$output</code>的格式写入到缓存文件中，写入时将文件上锁，写入失败则删除该文件。</li><li>设置缓存文件权限<code>0640</code>， 发送HTTP缓存控制头到浏览器以匹配文件缓存设置。</li></ol><hr><h4 id="display-cache"><a href="#display-cache" class="headerlink" title="_display_cache()"></a>_display_cache()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">public function _display_cache(&amp;$CFG, &amp;$URI)</span><br><span class="line">&#123;</span><br><span class="line">    $cache_path = ($CFG-&gt;item(&apos;cache_path&apos;) === &apos;&apos;) ? APPPATH.&apos;cache/&apos; : $CFG-&gt;item(&apos;cache_path&apos;);</span><br><span class="line">    $uri = $CFG-&gt;item(&apos;base_url&apos;).$CFG-&gt;item(&apos;index_page&apos;).$URI-&gt;uri_string;</span><br><span class="line">    if (($cache_query_string = $CFG-&gt;item(&apos;cache_query_string&apos;)) &amp;&amp; ! empty($_SERVER[&apos;QUERY_STRING&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        if (is_array($cache_query_string))</span><br><span class="line">        &#123;</span><br><span class="line">            $uri .= &apos;?&apos;.http_build_query(array_intersect_key($_GET, array_flip($cache_query_string)));</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $uri .= &apos;?&apos;.$_SERVER[&apos;QUERY_STRING&apos;];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $filepath = $cache_path.md5($uri);</span><br><span class="line">    if ( ! file_exists($filepath) OR ! $fp = @fopen($filepath, &apos;rb&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    flock($fp, LOCK_SH);</span><br><span class="line">    $cache = (filesize($filepath) &gt; 0) ? fread($fp, filesize($filepath)) : &apos;&apos;;</span><br><span class="line">    flock($fp, LOCK_UN);</span><br><span class="line">    fclose($fp);</span><br><span class="line">    if ( ! preg_match(&apos;/^(.*)ENDCI---&gt;/&apos;, $cache, $match))</span><br><span class="line">    &#123;</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    $cache_info = unserialize($match[1]);</span><br><span class="line">    $expire = $cache_info[&apos;expire&apos;];</span><br><span class="line">    $last_modified = filemtime($filepath);</span><br><span class="line">    if ($_SERVER[&apos;REQUEST_TIME&apos;] &gt;= $expire &amp;&amp; is_really_writable($cache_path))</span><br><span class="line">    &#123;</span><br><span class="line">        @unlink($filepath);</span><br><span class="line">        log_message(&apos;debug&apos;, &apos;Cache file has expired. File deleted.&apos;);</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;set_cache_header($last_modified, $expire);</span><br><span class="line">    foreach ($cache_info[&apos;headers&apos;] as $header)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;set_header($header[0], $header[1]);</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;_display(self::substr($cache, self::strlen($match[0])));</span><br><span class="line">    log_message(&apos;debug&apos;, &apos;Cache file is current. Sending it to browser.&apos;);</span><br><span class="line">    return TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法在CodeIgniter.php里面有调用，用来负责缓存的输出，如果在CodeIgniter.php中调用此方法有输出，则本次请求的运行将直接结束，直接以缓存输出作为响应。功能实现：</p><ol><li>获取保存缓存的路径<code>$cache_path</code>，如<code>G:\wamp\www\CodeIgniter_hmvc\application\cache/449a65bd3d6bad1ee34104f01d27cc26</code>。</li><li>构造<code>$uri</code>并进行md5加密，附加在<code>$cache_path</code>后面作为缓存文件的完整路径<code>$filepath</code>。</li><li>如果<code>$filepath</code>不存在或读取失败则返回false。否则读取缓存信息到<code>$cache</code>，读取期间<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uZmxvY2sucGhw" title="https://www.php.net/manual/zh/function.flock.php">flock<i class="fa fa-external-link"></i></span>上锁。</li><li>这个地方可参考_write_cache()方法中构造缓存的部分：<code>$output = $cache_info.&#39;ENDCI---&gt;&#39;.$output;</code>。 <font color="#891717">下面这个ENDCI—&gt;字样，只是因为CI的缓存文件里面的内容是规定以cache_info[‘expire’, ‘headers’]＋ENDCI—&gt;开头而已。</font>如果不符合此结构，可视为非CI的缓存文件，或者文件已损坏，获取缓存内容失败，返回FALSE。$match[0]是除页面内容之外的附加信息:<code>a:2:{s:6:&quot;expire&quot;;i:1566534312;s:7:&quot;headers&quot;;a:0:{}}ENDCI---&gt;</code>，$match[1]是附加信息中和时间有关的信息:<code>a:2:{s:6:&quot;expire&quot;;i:1566534312;s:7:&quot;headers&quot;;a:0:{}}</code>缓存文件开头: <code>a:2:{s:6:&quot;expire&quot;;i:1566534312;s:7:&quot;headers&quot;;a:0:{}}ENDCI---&gt;&lt;!DOCTYPE html&gt;</code>。</li><li>获取$cache_info，这里用到了<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24udW5zZXJpYWxpemUucGhw" title="https://www.php.net/manual/zh/function.unserialize.php">unserialize<i class="fa fa-external-link"></i></span>。可以通过<span class="exturl" data-url="aHR0cHM6Ly93d3cudzNjc2Nob29sLmNuL3Rvb2xzL2luZGV4P25hbWU9dW5zZXJpYWxpemU=" title="https://www.w3cschool.cn/tools/index?name=unserialize">php在线反序列化工具<i class="fa fa-external-link"></i></span>在线反序列化试下，然后拿到<code>$expire</code>。</li><li>使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uZmlsZW10aW1lLnBocA==" title="https://www.php.net/manual/zh/function.filemtime.php">filemtime<i class="fa fa-external-link"></i></span>取得文件修改时间<code>$last_modified</code>。判断缓存是否过期，如果过期并且可写则删除，然后返回false。</li><li>设置缓存头信息，调用<code>_display()</code>方法输出缓冲信息。</li></ol><hr><h4 id="delete-cache"><a href="#delete-cache" class="headerlink" title="delete_cache()"></a>delete_cache()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">public function delete_cache($uri = &apos;&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    $CI =&amp; get_instance();</span><br><span class="line">    $cache_path = $CI-&gt;config-&gt;item(&apos;cache_path&apos;);</span><br><span class="line">    if ($cache_path === &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $cache_path = APPPATH.&apos;cache/&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    if ( ! is_dir($cache_path))</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(&apos;error&apos;, &apos;Unable to find cache path: &apos;.$cache_path);</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    if (empty($uri))</span><br><span class="line">    &#123;</span><br><span class="line">        $uri = $CI-&gt;uri-&gt;uri_string();</span><br><span class="line">        if (($cache_query_string = $CI-&gt;config-&gt;item(&apos;cache_query_string&apos;)) &amp;&amp; ! empty($_SERVER[&apos;QUERY_STRING&apos;]))</span><br><span class="line">        &#123;</span><br><span class="line">            if (is_array($cache_query_string))</span><br><span class="line">            &#123;</span><br><span class="line">                $uri .= &apos;?&apos;.http_build_query(array_intersect_key($_GET, array_flip($cache_query_string)));</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                $uri .= &apos;?&apos;.$_SERVER[&apos;QUERY_STRING&apos;];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $cache_path .= md5($CI-&gt;config-&gt;item(&apos;base_url&apos;).$CI-&gt;config-&gt;item(&apos;index_page&apos;).ltrim($uri, &apos;/&apos;));</span><br><span class="line">    if ( ! @unlink($cache_path))</span><br><span class="line">    &#123;</span><br><span class="line">        log_message(&apos;error&apos;, &apos;Unable to delete cache file for &apos;.$uri);</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    return TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法提供删除缓存的功能，前提是已经有缓存了，否则会报错。功能实现：</p><ol><li>从配置文件中读取缓存路径，为空则默认为<code>APPPATH . cache/</code>。</li><li>检查缓存目录是否存在，不存在则报错退出。</li><li>构造缓存文件，然后删除。这里有三个php函数<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uYXJyYXktaW50ZXJzZWN0LWtleS5waHA=" title="https://www.php.net/manual/zh/function.array-intersect-key.php">array_intersect_key<i class="fa fa-external-link"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uYXJyYXktZmxpcC5waHA=" title="https://www.php.net/manual/zh/function.array-flip.php">array_flip<i class="fa fa-external-link"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uaHR0cC1idWlsZC1xdWVyeS5waHA=" title="https://www.php.net/manual/zh/function.http-build-query.php">http_build_query<i class="fa fa-external-link"></i></span>。</li></ol><hr><h4 id="set-cache-header"><a href="#set-cache-header" class="headerlink" title="set_cache_header()"></a>set_cache_header()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public function set_cache_header($last_modified, $expiration)</span><br><span class="line">&#123;</span><br><span class="line">    $max_age = $expiration - $_SERVER[&apos;REQUEST_TIME&apos;];</span><br><span class="line">    if (isset($_SERVER[&apos;HTTP_IF_MODIFIED_SINCE&apos;]) &amp;&amp; $last_modified &lt;= strtotime($_SERVER[&apos;HTTP_IF_MODIFIED_SINCE&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;set_status_header(304);</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">    header(&apos;Pragma: public&apos;);</span><br><span class="line">    header(&apos;Cache-Control: max-age=&apos;.$max_age.&apos;, public&apos;);</span><br><span class="line">    header(&apos;Expires: &apos;.gmdate(&apos;D, d M Y H:i:s&apos;, $expiration).&apos; GMT&apos;);</span><br><span class="line">    header(&apos;Last-modified: &apos;.gmdate(&apos;D, d M Y H:i:s&apos;, $last_modified).&apos; GMT&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置缓存头信息。功能实现：</p><ol><li><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRUUC9IZWFkZXJzL0lmLU1vZGlmaWVkLVNpbmNl" title="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/If-Modified-Since">HTTP_IF_MODIFIED_SINCE<i class="fa fa-external-link"></i></span>表示浏览器缓存页面的最后修改时间，如果设置了HTTP_IF_MODIFIED_SINCE头，且文件最后修改时间没有超过HTTP_IF_MODIFIED_SINCE时间，则直接发304状态码给客户端，让客户端调用本地缓存。</li><li>如果文件修改时间超过了HTTP_IF_MODIFIED_SINCE时间，就重新发送头信息，告诉客户端缓存该次请求的结果到本地。下面是<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRUUC9IZWFkZXJzL1ByYWdtYQ==" title="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Pragma">Pragma<i class="fa fa-external-link"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRUUC9IZWFkZXJzL1ByYWdtYQ==" title="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Pragma">Cache-Control<i class="fa fa-external-link"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRUUC9IZWFkZXJzL0V4cGlyZXM=" title="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Expires">Expires<i class="fa fa-external-link"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRUUC9IZWFkZXJzL0xhc3QtTW9kaWZpZWQ=" title="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Last-Modified">Last-modified<i class="fa fa-external-link"></i></span>的相关说明。</li></ol><hr><h4 id="strlen"><a href="#strlen" class="headerlink" title="strlen()"></a>strlen()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">protected static function strlen($str)</span><br><span class="line">&#123;</span><br><span class="line">    return (self::$func_overload)</span><br><span class="line">        ? mb_strlen($str, &apos;8bit&apos;)</span><br><span class="line">        : strlen($str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于多字节安全处理，功能是获取字符串长度。如果启用了函数重载功能，则返回utf-8编码的字符串长度，详见<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ubWItc3RybGVuLnBocA==" title="https://www.php.net/manual/zh/function.mb-strlen.php">mb_strlen<i class="fa fa-external-link"></i></span>。举个例子，<code>$str=&#39;武汉加油&#39;;</code>，如果使用<code>strlen</code>计算时$str长度为4 x 3 = 12，如果使用的是<code>mb_strlen($str, &#39;8bit&#39;)</code>则长度为4，因为这里会将中文字符当作1来计算而不是3。关于更多多字符的信息可参考[阮先生]的文章<span class="exturl" data-url="aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMDcvMTAvYXNjaWlfdW5pY29kZV9hbmRfdXRmLTguaHRtbA==" title="http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html">字符编码笔记：ASCII，Unicode 和 UTF-8<i class="fa fa-external-link"></i></span>。</p><hr><h4 id="substr"><a href="#substr" class="headerlink" title="substr()"></a>substr()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">protected static function substr($str, $start, $length = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    if (self::$func_overload)</span><br><span class="line">    &#123;</span><br><span class="line">        // mb_substr($str, $start, null, &apos;8bit&apos;) returns an empty</span><br><span class="line">        // string on PHP 5.3</span><br><span class="line">        isset($length) OR $length = ($start &gt;= 0 ? self::strlen($str) - $start : -$start);</span><br><span class="line">        return mb_substr($str, $start, $length, &apos;8bit&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return isset($length)</span><br><span class="line">        ? substr($str, $start, $length)</span><br><span class="line">        : substr($str, $start);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于多字节安全处理，功能是截取字符串，如果开启函数重载功能，则需要先reset长度，然后使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ubWItc3Vic3RyLnBocA==" title="https://www.php.net/manual/zh/function.mb-substr.php">mb_substr<i class="fa fa-external-link"></i></span>；否则使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uc3Vic3RyLnBocA==" title="https://www.php.net/manual/zh/function.substr.php">substr<i class="fa fa-external-link"></i></span>。</p><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81MjkzMTU4MQ==" title="https://blog.csdn.net/Zhihua_W/article/details/52931581">CI框架源码解析十之输出类文件Output.php<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;该类主要功能负责向浏览器输出最终结果，其中包括从缓存加载内容输出，根据控制器方法产生的内容输出，还包括写缓存、设置头信息、加载CI内部分析器。该类有11个成员变量和18个成员方法。下面逐个分析。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
      <category term="Codeigniter" scheme="https://pureven.cc/tags/Codeigniter/"/>
    
  </entry>
  
  <entry>
    <title>CodeIgniter路由类文件Router.php</title>
    <link href="https://pureven.cc/2020/01/20/codeigniter-router/"/>
    <id>https://pureven.cc/2020/01/20/codeigniter-router/</id>
    <published>2020-01-20T06:42:28.000Z</published>
    <updated>2020-04-13T00:41:43.342Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p><a href="https://pureven.cc/2020/01/14/codeigniter-uri/">上文</a>对URI类进行了原码分析，URI类实现了将URL分段保存到<code>segments</code>数组中。下面对Router类代码进行剖析来看看CodeIgniter是如何利用<code>segments</code>将URI映射到对应控制器、方法的。</p><a id="more"></a><hr><h4 id="路由配置文件routes-php"><a href="#路由配置文件routes-php" class="headerlink" title="路由配置文件routes.php"></a>路由配置文件routes.php</h4><p>从<span class="exturl" data-url="aHR0cHM6Ly9jb2RlaWduaXRlci5vcmcuY24vdXNlcl9ndWlkZS9nZW5lcmFsL3JvdXRpbmcuaHRtbA==" title="https://codeigniter.org.cn/user_guide/general/routing.html">官网<i class="fa fa-external-link"></i></span>可知URI路由的特性有:</p><ol><li><p>自定义路由，即在routes.php文件中使用通配符和正则表达式进行设置，如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$route[&apos;product/(:num)&apos;] = &apos;catalog/product_lookup_by_id/$1&apos;;</span><br><span class="line">$route[&apos;login/(.+)&apos;] = &apos;auth/login/$1&apos;;</span><br></pre></td></tr></table></figure></li><li><p>使用回调函数来处理逆向引用，如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$route[&apos;products/([a-zA-Z]+)/edit/(\d+)&apos;] = function ($product_type, $id)</span><br><span class="line">&#123;</span><br><span class="line">    return &apos;catalog/product_edit/&apos; . strtolower($product_type) . &apos;/&apos; . $id;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>在路由中使用 HTTP 动词。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$route[&apos;products/(:num)&apos;][&apos;DELETE&apos;] = &apos;product/delete/$1&apos;;</span><br></pre></td></tr></table></figure></li><li><p>定义默认路由。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$route[&apos;default_controller&apos;] = &apos;welcome&apos;;</span><br></pre></td></tr></table></figure><p>通过Router类可以实现对这些路由定义方式的解析。</p></li></ol><hr><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public $config;</span><br><span class="line">public $routes =array();</span><br><span class="line">public $class =&apos;&apos;;</span><br><span class="line">public $method =&apos;index&apos;;</span><br><span class="line">public $directory;</span><br><span class="line">public $default_controller;</span><br><span class="line">public $translate_uri_dashes = FALSE;</span><br><span class="line">public $enable_query_strings = FALSE;</span><br></pre></td></tr></table></figure><p>$config表示加载的配置类对象。<br>$routes表示配置的路由数组。<br>$class表示请求的控制器类。<br>$method表示请求的方法。<br>$directory表示<code>index.php</code>中设置的子目录。<br>$default_controller表示默认控制器类。<br>$translate_uri_dashes为true则表示将连字符<code>-</code>转换为下划线<code>_</code>。也是通过路由配置文件进行设置。<br>$enable_query_strings表示是否支持字符串查询。</p><hr><h4 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public function __construct($routing = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;config =&amp; load_class(&apos;Config&apos;, &apos;core&apos;);</span><br><span class="line">    $this-&gt;uri =&amp; load_class(&apos;URI&apos;, &apos;core&apos;);</span><br><span class="line">    $this-&gt;enable_query_strings = ( ! is_cli() &amp;&amp; $this-&gt;config-&gt;item(&apos;enable_query_strings&apos;) === TRUE);</span><br><span class="line">    is_array($routing) &amp;&amp; isset($routing[&apos;directory&apos;]) &amp;&amp; $this-&gt;set_directory($routing[&apos;directory&apos;]);</span><br><span class="line">    $this-&gt;_set_routing();</span><br><span class="line">    if (is_array($routing))</span><br><span class="line">    &#123;</span><br><span class="line">        empty($routing[&apos;controller&apos;]) OR $this-&gt;set_class($routing[&apos;controller&apos;]);</span><br><span class="line">        empty($routing[&apos;function&apos;])   OR $this-&gt;set_method($routing[&apos;function&apos;]);</span><br><span class="line">    &#125;</span><br><span class="line">    log_message(&apos;info&apos;, &apos;Router Class Initialized&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法是Router类功能实现的统一入口，完成该类初始化。功能实现：</p><ol><li>加载Config、URI类，获取查询字符串开关。</li><li>如果存在<code>$routing[&#39;directory&#39;]</code>则使用该值设置子目录。<font color="#891717">该值在index.php文件中定义，包括directory、controller、method优先级高于uri中的directory、controller、method。</font></li><li>调用<code>_set_routing</code>方法完成路由配置读取及解析。</li></ol><hr><h4 id="set-routing"><a href="#set-routing" class="headerlink" title="_set_routing()"></a>_set_routing()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">protected function _set_routing()</span><br><span class="line">&#123;</span><br><span class="line">    if (file_exists(APPPATH.&apos;config/routes.php&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        include(APPPATH.&apos;config/routes.php&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    if (file_exists(APPPATH.&apos;config/&apos;.ENVIRONMENT.&apos;/routes.php&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        include(APPPATH.&apos;config/&apos;.ENVIRONMENT.&apos;/routes.php&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    if (isset($route) &amp;&amp; is_array($route))</span><br><span class="line">    &#123;</span><br><span class="line">        isset($route[&apos;default_controller&apos;]) &amp;&amp; $this-&gt;default_controller = $route[&apos;default_controller&apos;];</span><br><span class="line">        isset($route[&apos;translate_uri_dashes&apos;]) &amp;&amp; $this-&gt;translate_uri_dashes = $route[&apos;translate_uri_dashes&apos;];</span><br><span class="line">        unset($route[&apos;default_controller&apos;], $route[&apos;translate_uri_dashes&apos;]);</span><br><span class="line">        $this-&gt;routes = $route;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($this-&gt;enable_query_strings)</span><br><span class="line">    &#123;</span><br><span class="line">        if ( ! isset($this-&gt;directory))</span><br><span class="line">        &#123;</span><br><span class="line">            $_d = $this-&gt;config-&gt;item(&apos;directory_trigger&apos;);</span><br><span class="line">            $_d = isset($_GET[$_d]) ? trim($_GET[$_d], &quot; \t\n\r\0\x0B/&quot;) : &apos;&apos;;</span><br><span class="line">            if ($_d !== &apos;&apos;)</span><br><span class="line">            &#123;</span><br><span class="line">                $this-&gt;uri-&gt;filter_uri($_d);</span><br><span class="line">                $this-&gt;set_directory($_d);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $_c = trim($this-&gt;config-&gt;item(&apos;controller_trigger&apos;));</span><br><span class="line">        if ( ! empty($_GET[$_c]))</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;uri-&gt;filter_uri($_GET[$_c]);</span><br><span class="line">            $this-&gt;set_class($_GET[$_c]);</span><br><span class="line">            $_f = trim($this-&gt;config-&gt;item(&apos;function_trigger&apos;));</span><br><span class="line">            if ( ! empty($_GET[$_f]))</span><br><span class="line">            &#123;</span><br><span class="line">                $this-&gt;uri-&gt;filter_uri($_GET[$_f]);</span><br><span class="line">                $this-&gt;set_method($_GET[$_f]);</span><br><span class="line">            &#125;</span><br><span class="line">            $this-&gt;uri-&gt;rsegments = array(</span><br><span class="line">                1 =&gt; $this-&gt;class,</span><br><span class="line">                2 =&gt; $this-&gt;method</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;_set_default_controller();</span><br><span class="line">        &#125;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($this-&gt;uri-&gt;uri_string !== &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_parse_routes();</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_set_default_controller();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的功能是读取路由配置文件，确定uri及调用解析路由`_parse_routes方法。功能实现：</p><ol><li>加载路由配置文件，将路由配置数组中的默认控制器和连接线转换下划线开关赋值给该类成员变量后删除。</li><li>如果启用查询字符串则依次对路径、控制器、方法进行获取、特殊字符过滤并赋值给改类成员变量。<font color="#891717">这里路径设置的前提是没有在index.php文件中设置，否则会被覆盖。</font></li><li>如果uri字符串不为空则进行路由解析，否则调用设置默认控制器方法。</li></ol><hr><h4 id="set-request"><a href="#set-request" class="headerlink" title="_set_request()"></a>_set_request()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">protected function _set_request($segments = array())</span><br><span class="line">&#123;</span><br><span class="line">    $segments = $this-&gt;_validate_request($segments);</span><br><span class="line">    if (empty($segments))</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_set_default_controller();</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($this-&gt;translate_uri_dashes === TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $segments[0] = str_replace(&apos;-&apos;, &apos;_&apos;, $segments[0]);</span><br><span class="line">        if (isset($segments[1]))</span><br><span class="line">        &#123;</span><br><span class="line">            $segments[1] = str_replace(&apos;-&apos;, &apos;_&apos;, $segments[1]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;set_class($segments[0]);</span><br><span class="line">    if (isset($segments[1]))</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;set_method($segments[1]);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $segments[1] = &apos;index&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    array_unshift($segments, NULL);</span><br><span class="line">    unset($segments[0]);</span><br><span class="line">    $this-&gt;uri-&gt;rsegments = $segments;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的参数由<code>_parse_routes</code>传入，是经过处理后的包含请求控制器及请求方法的数组，该方法的作用是验证请求路由并确定<code>rsegments</code>。功能实现:</p><ol><li>调用<code>_validate_request</code>方法将控制器连字符<code>-</code>转为下划线<code>_</code>，并附加子目录。</li><li>如果参数为空则设置默认路由。</li><li>将情况控制器和方法中存在的连字符<code>-</code>转为下划线<code>_</code>。</li><li>设置控制器，如果存在请求方法则设置方法，不存在则默认<code>index</code>。</li><li><code>array_unshift($segments,NULL)</code>和<code>unset($segments[0])</code>的作用是保证$segments数组有用下标是从1开始。</li><li>最后将处理后的<code>$segments</code>赋值给<code>URI</code>类的<code>rsegments</code>成员变量。</li></ol><hr><h4 id="set-default-controller"><a href="#set-default-controller" class="headerlink" title="_set_default_controller()"></a>_set_default_controller()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">protected function _set_default_controller()</span><br><span class="line">&#123;</span><br><span class="line">    if (empty($this-&gt;default_controller))</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(&apos;Unable to determine what should be displayed. A default route has not been specified in the routing file.&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    if (sscanf($this-&gt;default_controller, &apos;%[^/]/%s&apos;, $class, $method) !== 2)</span><br><span class="line">    &#123;</span><br><span class="line">        $method = &apos;index&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    if ( ! file_exists(APPPATH.&apos;controllers/&apos;.$this-&gt;directory.ucfirst($class).&apos;.php&apos;))</span><br><span class="line">    &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;set_class($class);</span><br><span class="line">    $this-&gt;set_method($method);</span><br><span class="line">    $this-&gt;uri-&gt;rsegments = array(</span><br><span class="line">        1 =&gt; $class,</span><br><span class="line">        2 =&gt; $method</span><br><span class="line">    );</span><br><span class="line">    log_message(&apos;debug&apos;, &apos;No URI present. Default controller set.&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置默认控制器，以下几种情况下调用：</p><ol><li>URI开启了查询字符串功能但是没有指定控制器。</li><li>没有指定uri或uri段为空。<br>功能实现：</li><li>如果发现默认控制器为空则直接报错退出，因为调用此方法就说明请求的uri为空或不存在必须走默认控制器给出响应。</li><li>如果没有指定默认方法则统一为<code>index</code>。</li><li>如果指定了默认控制器但是控制器类文件不存在则直接返回。</li><li>调用成员方法设置<strong>类</strong>、<strong>方法</strong>并赋值<code>rsegments</code>。</li></ol><hr><h4 id="validate-request"><a href="#validate-request" class="headerlink" title="_validate_request()"></a>_validate_request()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">protected function _validate_request($segments)</span><br><span class="line">&#123;</span><br><span class="line">    $c = count($segments);</span><br><span class="line">    $directory_override = isset($this-&gt;directory);</span><br><span class="line">    while ($c-- &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        $test = $this-&gt;directory</span><br><span class="line">            .ucfirst($this-&gt;translate_uri_dashes === TRUE ? str_replace(&apos;-&apos;, &apos;_&apos;, $segments[0]) : $segments[0]);</span><br><span class="line">        if ( ! file_exists(APPPATH.&apos;controllers/&apos;.$test.&apos;.php&apos;)</span><br><span class="line">            &amp;&amp; $directory_override === FALSE</span><br><span class="line">            &amp;&amp; is_dir(APPPATH.&apos;controllers/&apos;.$this-&gt;directory.$segments[0])</span><br><span class="line">        )</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;set_directory(array_shift($segments), TRUE);</span><br><span class="line">            continue;</span><br><span class="line">        &#125;</span><br><span class="line">        return $segments;</span><br><span class="line">    &#125;</span><br><span class="line">    return $segments;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于验证<code>$segments</code>段，功能实现:</p><ol><li>获取<code>segments</code>段的个数，如果index.php文件中设置了<code>$routing[&#39;directory&#39;]</code>则使用该值作为子目录。</li><li>如果<code>translate_uri_dashes</code>值为true则将控制器类的连字符<code>-</code>转换为下划线<code>_</code>。</li><li>如果直接在controllers这个目录下找到与第一段相应的控制器名，那就说明找到了控制器，确定路由，返回。</li><li>如果第一段是目录，则设置子目录，CI是允许控制器放在自定义的目录下的。</li></ol><hr><h4 id="parse-routes"><a href="#parse-routes" class="headerlink" title="_parse_routes()"></a>_parse_routes()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">protected function _parse_routes()</span><br><span class="line">&#123;</span><br><span class="line">    $uri = implode(&apos;/&apos;, $this-&gt;uri-&gt;segments);</span><br><span class="line">    $http_verb = isset($_SERVER[&apos;REQUEST_METHOD&apos;]) ? strtolower($_SERVER[&apos;REQUEST_METHOD&apos;]) : &apos;cli&apos;;</span><br><span class="line">    foreach ($this-&gt;routes as $key =&gt; $val)</span><br><span class="line">    &#123;</span><br><span class="line">        if (is_array($val))</span><br><span class="line">        &#123;</span><br><span class="line">            $val = array_change_key_case($val, CASE_LOWER);</span><br><span class="line">            if (isset($val[$http_verb]))</span><br><span class="line">            &#123;</span><br><span class="line">                $val = $val[$http_verb];</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $key = str_replace(array(&apos;:any&apos;, &apos;:num&apos;), array(&apos;[^/]+&apos;, &apos;[0-9]+&apos;), $key);</span><br><span class="line">        if (preg_match(&apos;#^&apos;.$key.&apos;$#&apos;, $uri, $matches))</span><br><span class="line">        &#123;</span><br><span class="line">            if ( ! is_string($val) &amp;&amp; is_callable($val))</span><br><span class="line">            &#123;</span><br><span class="line">                array_shift($matches);</span><br><span class="line">                $val = call_user_func_array($val, $matches);</span><br><span class="line">            &#125;</span><br><span class="line">            elseif (strpos($val, &apos;$&apos;) !== FALSE &amp;&amp; strpos($key, &apos;(&apos;) !== FALSE)</span><br><span class="line">            &#123;</span><br><span class="line">                $val = preg_replace(&apos;#^&apos;.$key.&apos;$#&apos;, $val, $uri);</span><br><span class="line">            &#125;</span><br><span class="line">            $this-&gt;_set_request(explode(&apos;/&apos;, $val));</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;_set_request(array_values($this-&gt;uri-&gt;segments));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于解析路由，功能实现：</p><ol><li>获取uri，即<code>implode(&#39;/&#39;, $this-&gt;uri-&gt;segments)</code>。</li><li>获取请求动词，即<code>$_SERVER[&#39;REQUEST_METHOD&#39;]</code>，为空表示通过cli方式请求的。</li><li>解析$routes数组，如果请求uri对应的是个数组，使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uYXJyYXktY2hhbmdlLWtleS1jYXNlLnBocA==" title="https://www.php.net/manual/zh/function.array-change-key-case.php">array_change_key_case<i class="fa fa-external-link"></i></span>将key转为小写然后匹配请求动词。</li><li>将通配符转为正则表达式，也就是说<code>路由数组中的通配符最终也是通过正则表达式的形式类解析路由的</code>。</li><li>匹配uri，如果$val是回调函数则直接调用(<code>这里解释了路由可以是回调函数</code>)；如果是key中有通配符则进行正则匹配(例如<code>$route[&#39;api/v1/(:any)/(:num)/(:any)&#39;]=&quot;api_v1/$1/$3/$2&quot;</code>)。</li><li>设置路由，通过<code>_set_request</code>方法和<code>$val</code>设置<code>rsegments</code>;若没有匹配到则直接解析<code>uri-&gt;segments</code>来设置<code>rsegments</code>。</li></ol><hr><h4 id="set-class"><a href="#set-class" class="headerlink" title="set_class()"></a>set_class()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function set_class($class)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;class = str_replace(array(&apos;/&apos;, &apos;.&apos;), &apos;&apos;, $class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置请求控制器类。</p><hr><h4 id="fetch-class"><a href="#fetch-class" class="headerlink" title="fetch_class()"></a>fetch_class()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function fetch_class()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;class;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于获取请求控制器类。</p><hr><h4 id="set-method"><a href="#set-method" class="headerlink" title="set_method()"></a>set_method()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function set_method($method)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;method = $method;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置请求方法。</p><hr><h4 id="fetch-method"><a href="#fetch-method" class="headerlink" title="fetch_method()"></a>fetch_method()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function fetch_method()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;method;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于获取请求的方法。</p><hr><h4 id="set-directory"><a href="#set-directory" class="headerlink" title="set_directory()"></a>set_directory()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public function set_directory($dir, $append = FALSE)</span><br><span class="line">&#123;</span><br><span class="line">    if ($append !== TRUE OR empty($this-&gt;directory))</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;directory = str_replace(&apos;.&apos;, &apos;&apos;, trim($dir, &apos;/&apos;)).&apos;/&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;directory .= str_replace(&apos;.&apos;, &apos;&apos;, trim($dir, &apos;/&apos;)).&apos;/&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于设置子目录。如果<code>directory</code>为空或<code>$append</code>为false，则直接赋值给<code>directory</code>；否则附加到<code>directory</code>后面。</p><hr><h4 id="fetch-directory"><a href="#fetch-directory" class="headerlink" title="fetch_directory()"></a>fetch_directory()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function fetch_directory()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;directory;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用于获取子目录。</p><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81MjkxODY2NA==" title="https://blog.csdn.net/Zhihua_W/article/details/52918664">CI框架源码解析九之路由类文件Router.php<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://pureven.cc/2020/01/14/codeigniter-uri/&quot;&gt;上文&lt;/a&gt;对URI类进行了原码分析，URI类实现了将URL分段保存到&lt;code&gt;segments&lt;/code&gt;数组中。下面对Router类代码进行剖析来看看CodeIgniter是如何利用&lt;code&gt;segments&lt;/code&gt;将URI映射到对应控制器、方法的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
      <category term="Codeigniter" scheme="https://pureven.cc/tags/Codeigniter/"/>
    
  </entry>
  
  <entry>
    <title>CodeIgniter解析类文件URI.php</title>
    <link href="https://pureven.cc/2020/01/14/codeigniter-uri/"/>
    <id>https://pureven.cc/2020/01/14/codeigniter-uri/</id>
    <published>2020-01-14T13:51:34.000Z</published>
    <updated>2020-04-13T00:41:43.301Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>URI类主要处理地址字符串，将<strong>uri</strong>分解成对应的片段并存到<strong>segments</strong>数组中。启用查询字符串则将<strong>查询字符串</strong>分解后存到<strong>$_GET</strong>数组中。<strong>Router路由类</strong>在之后的解析路由动作中，也主要依靠URI类的segments属性数组来获取当前上下文的请求URI信息。<font color="#891717">在CI框架中如果启用查询字符串，URI类将不做任何处理，Router类也只会匹配目录、控制器、方法。CI框架体系中的方法参数都是从URI片段中取的,并按<strong>顺序</strong>传递给方法参数。不支持将参数中的变量通过方法参数名传给方法，只能用$_GET获取。</font><br>该类包含5个属性及22个方法，下面分别剖析。</p><a id="more"></a><hr><h4 id="类属性"><a href="#类属性" class="headerlink" title="类属性"></a>类属性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public $keyval = array();</span><br><span class="line">public $uri_string = &apos;&apos;;</span><br><span class="line">public $segments = array();</span><br><span class="line">public $rsegments = array();</span><br><span class="line">protected $_permitted_uri_chars;</span><br></pre></td></tr></table></figure><ul><li><code>$keyval</code>用于存放<code>segments</code>和<code>rsegments</code>转换后的关联数组。</li><li><code>$uri_string</code>用于存放uri。</li><li><code>$segments</code>用于将uri解析后以数组形式存放。</li><li><code>$rsegments</code>在URI类中定义，在Router类中赋值，用于存放class和method。</li><li><code>$_permitted_uri_chars</code>表示URI中接受的字符，在config.php中定义:<code>$config[&#39;permitted_uri_chars&#39;] = &#39;a-z 0-9~%.:_\-&#39;;</code>，为空表示允许所有字符！</li></ul><hr><h4 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">public function __construct()</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;config =&amp; load_class(&apos;Config&apos;, &apos;core&apos;);</span><br><span class="line">    if (is_cli() OR $this-&gt;config-&gt;item(&apos;enable_query_strings&apos;) !== TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_permitted_uri_chars = $this-&gt;config-&gt;item(&apos;permitted_uri_chars&apos;);</span><br><span class="line">        if (is_cli())</span><br><span class="line">        &#123;</span><br><span class="line">            $uri = $this-&gt;_parse_argv();</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $protocol = $this-&gt;config-&gt;item(&apos;uri_protocol&apos;);</span><br><span class="line">            empty($protocol) &amp;&amp; $protocol = &apos;REQUEST_URI&apos;;</span><br><span class="line">            switch ($protocol)</span><br><span class="line">            &#123;</span><br><span class="line">                case &apos;AUTO&apos;: // For BC purposes only</span><br><span class="line">                case &apos;REQUEST_URI&apos;:</span><br><span class="line">                    $uri = $this-&gt;_parse_request_uri();</span><br><span class="line">                    break;</span><br><span class="line">                case &apos;QUERY_STRING&apos;:</span><br><span class="line">                    $uri = $this-&gt;_parse_query_string();</span><br><span class="line">                    break;</span><br><span class="line">                case &apos;PATH_INFO&apos;:</span><br><span class="line">                default:</span><br><span class="line">                    $uri = isset($_SERVER[$protocol])</span><br><span class="line">                        ? $_SERVER[$protocol]</span><br><span class="line">                        : $this-&gt;_parse_request_uri();</span><br><span class="line">                    break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $this-&gt;_set_uri_string($uri);</span><br><span class="line">    &#125;</span><br><span class="line">    log_message(&apos;info&apos;, &apos;URI Class Initialized&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法注要是作用在运行在cli模式或未启用字符串查询的条件下。</p><ol><li>从配置文件中获取url允许的字符，即<code>$config[&#39;permitted_uri_chars&#39;]</code>，该属性在<code>filter_uri()</code>方法中用来过滤uri。</li><li>如果是cli模式下则使用<code>_parse_argv()</code>方法解析命令行参数并整合为uri字符串。</li><li>如果uri_protocol是<code>AUTO</code>、<code>REQUEST_URI</code>使用<code>_parse_query_string()</code>方法解析uri，如果是<code>QUERY_STRING</code>使用<code>_parse_query_string()</code>方法解析uri，<code>PATH_INFO</code>以及其他配置则先判断<code>$_SERVER</code>的值是否设置，若设置了则用该值作为uri否则跟<code>AUTO</code>处理一致。</li><li>调用<code>_set_uri_string()</code>方法将$uri赋值给<code>$uri_string</code>变量并解析填充到<code>segments</code>数组中去。</li></ol><h5 id="关于uri-protocol"><a href="#关于uri-protocol" class="headerlink" title="关于uri_protocol"></a>关于uri_protocol</h5><p><code>$config[&#39;uri_protocol&#39;]</code>配置不但决定以哪个函数处理URI，同时决定了从哪个全局变量里获取当前上下文的uri地址。uri_protocol可选项有 <code>AUTO</code>、<code>PATH_INFO</code>、<code>QUERY_STRING</code>、<code>REQUEST_URI</code>、<code>ORIG_PATH_INFO</code>，对应关系是：</p><ol><li><code>&#39;REQUEST_URI&#39;</code>使用 <code>$_SERVER[&#39;REQUEST_URI&#39;]</code>。</li><li><code>&#39;QUERY_STRING&#39;</code>使用 <code>$_SERVER[&#39;QUERY_STRING&#39;]</code>。</li><li><code>&#39;PATH_INFO&#39;</code>使用 <code>$_SERVER[&#39;PATH_INFO&#39;]</code>。</li></ol><p>【注意】: <strong>如果配置为PATH_INFO，则uri需要进行url_decode解码。</strong><br>那么这三个变量有什么区别呢？</p><ol><li><code>$_SERVER[&#39;REQUEST_URI&#39;]</code>获取的是<strong>获取的是url地址中主机头后面所有的字符</strong>。</li><li><code>$_SERVER[&#39;QUERY_STRING&#39;]</code>获取的是<strong>获取的url地址中”?”后面的部分</strong>。</li><li><code>$_SERVER[&#39;PATH_INFO&#39;]</code>获取的是<strong>获取的是url地址中脚本文件($_SERVER[‘SCRIPT_NAME’])之后”?”之前的字符内容</strong>。</li></ol><p><strong>举例说明:</strong>  <code>http://pc.local/index.php/product/pc/summary?a=1</code><br><b><font color="#891717">QUERY_STRING:</font></b> <code>a=1</code><br><b><font color="#891717">REQUEST_URI:</font></b> <code>/index.php/product/pc/summary?a=1</code><br><b><font color="#891717">PATH_INFO:</font></b>  <code>/product/pc/summary</code></p><p>uri_protocol的值决定了<strong>CI路由</strong>和<strong>参数</strong>的获取方式，CI会通过这些值来判断解析到哪一个控制器，所以需要确保服务器配置了正确的值。大部分情况下设置AUTO即可，AUTO会依次检测<code>REQUEST_URI</code>、<code>PATH_INFO</code>、<code>QUERY_STRING</code>、<code>$_GET</code>的值，直到读到内容。</p><hr><h4 id="set-uri-string"><a href="#set-uri-string" class="headerlink" title="_set_uri_string()"></a>_set_uri_string()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">protected function _set_uri_string($str)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;uri_string = trim(remove_invisible_characters($str, FALSE), &apos;/&apos;);</span><br><span class="line">    if ($this-&gt;uri_string !== &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        if (($suffix = (string) $this-&gt;config-&gt;item(&apos;url_suffix&apos;)) !== &apos;&apos;)</span><br><span class="line">        &#123;</span><br><span class="line">            $slen = strlen($suffix);</span><br><span class="line">            if (substr($this-&gt;uri_string, -$slen) === $suffix)</span><br><span class="line">            &#123;</span><br><span class="line">                $this-&gt;uri_string = substr($this-&gt;uri_string, 0, -$slen);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $this-&gt;segments[0] = NULL;</span><br><span class="line">        foreach (explode(&apos;/&apos;, trim($this-&gt;uri_string, &apos;/&apos;)) as $val)</span><br><span class="line">        &#123;</span><br><span class="line">            $val = trim($val);</span><br><span class="line">            $this-&gt;filter_uri($val);</span><br><span class="line">            if ($val !== &apos;&apos;)</span><br><span class="line">            &#123;</span><br><span class="line">                $this-&gt;segments[] = $val;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        unset($this-&gt;segments[0]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法给功能是将$uri赋值给<code>$uri_string</code>变量并解析填充到<code>segments</code>数组中去，功能实现:</p><ol><li>若设置了后缀则移除uri后缀。</li><li>解析uri，用’/‘分段，经<code>filter_uri()</code>检查是否包含无效字符，最后填充到$this-&gt;segments数组中去。</li></ol><hr><h4 id="parse-request-uri"><a href="#parse-request-uri" class="headerlink" title="_parse_request_uri()"></a>_parse_request_uri()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">protected function _parse_request_uri()</span><br><span class="line">&#123;</span><br><span class="line">    if ( ! isset($_SERVER[&apos;REQUEST_URI&apos;], $_SERVER[&apos;SCRIPT_NAME&apos;]))</span><br><span class="line">    &#123;</span><br><span class="line">        return &apos;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    $uri = parse_url(&apos;http://dummy&apos;.$_SERVER[&apos;REQUEST_URI&apos;]);</span><br><span class="line">    $query = isset($uri[&apos;query&apos;]) ? $uri[&apos;query&apos;] : &apos;&apos;;</span><br><span class="line">    $uri = isset($uri[&apos;path&apos;]) ? $uri[&apos;path&apos;] : &apos;&apos;;</span><br><span class="line">    if (isset($_SERVER[&apos;SCRIPT_NAME&apos;][0]))</span><br><span class="line">    &#123;</span><br><span class="line">        if (strpos($uri, $_SERVER[&apos;SCRIPT_NAME&apos;]) === 0)</span><br><span class="line">        &#123;</span><br><span class="line">            $uri = (string) substr($uri, strlen($_SERVER[&apos;SCRIPT_NAME&apos;]));</span><br><span class="line">        &#125;</span><br><span class="line">        elseif (strpos($uri, dirname($_SERVER[&apos;SCRIPT_NAME&apos;])) === 0)</span><br><span class="line">        &#123;</span><br><span class="line">            $uri = (string) substr($uri, strlen(dirname($_SERVER[&apos;SCRIPT_NAME&apos;])));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if (trim($uri, &apos;/&apos;) === &apos;&apos; &amp;&amp; strncmp($query, &apos;/&apos;, 1) === 0)</span><br><span class="line">    &#123;</span><br><span class="line">        $query = explode(&apos;?&apos;, $query, 2);</span><br><span class="line">        $uri = $query[0];</span><br><span class="line">        $_SERVER[&apos;QUERY_STRING&apos;] = isset($query[1]) ? $query[1] : &apos;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $_SERVER[&apos;QUERY_STRING&apos;] = $query;</span><br><span class="line">    &#125;</span><br><span class="line">    parse_str($_SERVER[&apos;QUERY_STRING&apos;], $_GET);</span><br><span class="line">    if ($uri === &apos;/&apos; OR $uri === &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        return &apos;/&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    return $this-&gt;_remove_relative_directory($uri);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用来解析<code>$_SERVER[&#39;REQUEST_URI&#39;]</code>并返回uri，功能实现：</p><ol><li>如果没用设置全局变量<code>$_SERVER[&#39;REQUEST_URI&#39;]</code>, <code>$_SERVER[&#39;SCRIPT_NAME&#39;]</code>则不做任何处理，直接返回。</li><li>使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ucGFyc2UtdXJsLnBocA==" title="https://www.php.net/manual/zh/function.parse-url.php">parse_url<i class="fa fa-external-link"></i></span>解析URL(<code>&#39;http://dummy&#39;.$_SERVER[&#39;REQUEST_URI&#39;]</code>)之后得到一个关联数组，这里直接将数组赋值给变量$uri了。</li><li>将数组中的<code>query</code>和<code>path</code>部分分别赋值给变量<code>$query</code>和<code>$uri</code>，即表示从<code>$_SERVER[&#39;REQUEST_URI&#39;]</code>取值，解析成<code>$uri</code>和<code>$query</code>两个字符串，分别存储请求的路径和get请求参数。举个栗子: path =&gt; <code>/pear/index.php</code> query =&gt; <code>googleguy=gooley</code>。</li><li>去掉uri包含的<code>$_SERVER[&#39;SCRIPT_NAME&#39;]</code>，举个栗子: 比如uri是<code>/pear/index.php/news/view/crm</code>，经过处理后就变成<code>/news/view/crm</code>了</li><li>对于请求服务器的具体URI包含在查询字符串这种情况，例如$uri以<code>?/</code>开头的 ，实际上if条件换种写法就是if(strncmp($uri, ‘?/‘, 2) === 0))，类似：<code>http://www.example.twm/index.php?/welcome/index</code>。其他情况直接<code>$_SERVER[&#39;QUERY_STRING&#39;] = $query;</code> 如下面这种请求uri：<code>http://www.example.twm/mall/lists?page=7</code>。</li><li>使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24ucGFyc2Utc3Ry" title="https://www.php.net/manual/zh/function.parse-str">parse_str()<i class="fa fa-external-link"></i></span>将查询字符串按键名存入<code>_GET</code>数组。</li><li>调用<code>_remove_relative_directory()</code>方法作安全处理，移除$uri中的<code>../</code>相对路径字符和反斜杠<code>////</code>。</li></ol><hr><h4 id="parse-query-string"><a href="#parse-query-string" class="headerlink" title="_parse_query_string()"></a>_parse_query_string()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">protected function _parse_query_string()</span><br><span class="line">&#123;</span><br><span class="line">    $uri = isset($_SERVER[&apos;QUERY_STRING&apos;]) ? $_SERVER[&apos;QUERY_STRING&apos;] : @getenv(&apos;QUERY_STRING&apos;);</span><br><span class="line">    if (trim($uri, &apos;/&apos;) === &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        return &apos;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    elseif (strncmp($uri, &apos;/&apos;, 1) === 0)</span><br><span class="line">    &#123;</span><br><span class="line">        $uri = explode(&apos;?&apos;, $uri, 2);</span><br><span class="line">        $_SERVER[&apos;QUERY_STRING&apos;] = isset($uri[1]) ? $uri[1] : &apos;&apos;;</span><br><span class="line">        $uri = $uri[0];</span><br><span class="line">    &#125;</span><br><span class="line">    parse_str($_SERVER[&apos;QUERY_STRING&apos;], $_GET);</span><br><span class="line">    return $this-&gt;_remove_relative_directory($uri);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用来解析类似<code>http://www.nc.com/index.php?/news/list/fruit?page=2</code>这样的地址，解析过程如下:</p><ol><li>从<code>$_SERVER[&#39;QUERY_STRING&#39;]</code>中取值<code>/news/list/fruit?page=2</code>。</li><li>$uri赋值<code>/news/list/fruit</code>，<code>page=2</code>赋值<code>$_GET</code>。</li><li>去除$uri中的<code>../</code>相对路径字符和反斜杠<code>////</code>。</li></ol><hr><h4 id="parse-argv"><a href="#parse-argv" class="headerlink" title="_parse_argv()"></a>_parse_argv()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">protected function _parse_argv()</span><br><span class="line">&#123;</span><br><span class="line">    $args = array_slice($_SERVER[&apos;argv&apos;], 1);</span><br><span class="line">    return $args ? implode(&apos;/&apos;, $args) : &apos;&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法将CLI默认下传递给脚本的参数数组整合为字符串uri并将其返回。<br><font color="#891717">注意: <span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvcmVzZXJ2ZWQudmFyaWFibGVzLmFyZ3YucGhw" title="https://www.php.net/manual/zh/reserved.variables.argv.php">$_SERVER[‘argv’]<i class="fa fa-external-link"></i></span>第一个参数为脚本文件名，因此从第二个参数开始表示url传参。</font></p><hr><h4 id="remove-relative-directory"><a href="#remove-relative-directory" class="headerlink" title="_remove_relative_directory()"></a>_remove_relative_directory()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">protected function _remove_relative_directory($uri)</span><br><span class="line">&#123;</span><br><span class="line">    $uris = array();</span><br><span class="line">    $tok = strtok($uri, &apos;/&apos;);</span><br><span class="line">    while ($tok !== FALSE)</span><br><span class="line">    &#123;</span><br><span class="line">        if (( ! empty($tok) OR $tok === &apos;0&apos;) &amp;&amp; $tok !== &apos;..&apos;)</span><br><span class="line">        &#123;</span><br><span class="line">            $uris[] = $tok;</span><br><span class="line">        &#125;</span><br><span class="line">        $tok = strtok(&apos;/&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    return implode(&apos;/&apos;, $uris);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法主要作用是移除$uri中的<code>../</code>相对路径字符和反斜杠<code>////</code>。功能实现:</p><ol><li>首先使用<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwLm5ldC9tYW51YWwvemgvZnVuY3Rpb24uc3RydG9r" title="https://www.php.net/manual/zh/function.strtok">strtok<i class="fa fa-external-link"></i></span>标记$uri中的反斜杠<code>/</code>。</li><li>然后对每个字符串进行判断，过滤<code>..</code>和<code>//</code>。</li><li>将过滤后留下的字符串进行整合。</li></ol><hr><h4 id="filter-uri"><a href="#filter-uri" class="headerlink" title="filter_uri()"></a>filter_uri()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public function filter_uri(&amp;$str)</span><br><span class="line">&#123;</span><br><span class="line">    if ( ! empty($str) &amp;&amp; ! empty($this-&gt;_permitted_uri_chars) &amp;&amp; ! preg_match(&apos;/^[&apos;.$this-&gt;_permitted_uri_chars.&apos;]+$/i&apos;.(UTF8_ENABLED ? &apos;u&apos; : &apos;&apos;), $str))</span><br><span class="line">    &#123;</span><br><span class="line">        show_error(&apos;The URI you submitted has disallowed characters.&apos;, 400);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法用来判断uri中是否包含允许字符范围之外的字符，若存在保错退出。</p><hr><h4 id="segment"><a href="#segment" class="headerlink" title="segment()"></a>segment()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function segment($n, $no_result = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return isset($this-&gt;segments[$n]) ? $this-&gt;segments[$n] : $no_result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的功能是从<code>segments</code>数组中取出指定的段，没有则返回null。在Pagination和DB_cache类中有使用。</p><hr><h4 id="rsegment"><a href="#rsegment" class="headerlink" title="rsegment()"></a>rsegment()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function rsegment($n, $no_result = NULL)</span><br><span class="line">&#123;</span><br><span class="line">    return isset($this-&gt;rsegments[$n]) ? $this-&gt;rsegments[$n] : $no_result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的功能从<code>rsements</code>数组中取出指定的值，若不存在则返回null。</p><hr><h4 id="uri-to-assoc"><a href="#uri-to-assoc" class="headerlink" title="uri_to_assoc()"></a>uri_to_assoc()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function uri_to_assoc($n = 3, $default = array())</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_uri_to_assoc($n, $default, &apos;segment&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法将成员变量<code>segments</code>整合为关联数组并返回该数组。</p><hr><h4 id="ruri-to-assoc"><a href="#ruri-to-assoc" class="headerlink" title="ruri_to_assoc()"></a>ruri_to_assoc()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function ruri_to_assoc($n = 3, $default = array())</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_uri_to_assoc($n, $default, &apos;rsegment&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法将成员变量<code>rsegments</code>整合为关联数组并返回该数组。</p><hr><h4 id="uri-to-assoc-1"><a href="#uri-to-assoc-1" class="headerlink" title="_uri_to_assoc()"></a>_uri_to_assoc()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">protected function _uri_to_assoc($n = 3, $default = array(), $which = &apos;segment&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    if ( ! is_numeric($n))</span><br><span class="line">    &#123;</span><br><span class="line">        return $default;</span><br><span class="line">    &#125;</span><br><span class="line">    if (isset($this-&gt;keyval[$which], $this-&gt;keyval[$which][$n]))</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;keyval[$which][$n];</span><br><span class="line">    &#125;</span><br><span class="line">    $total_segments = &quot;total_&#123;$which&#125;s&quot;;</span><br><span class="line">    $segment_array = &quot;&#123;$which&#125;_array&quot;;</span><br><span class="line">    if ($this-&gt;$total_segments() &lt; $n)</span><br><span class="line">    &#123;</span><br><span class="line">        return (count($default) === 0)</span><br><span class="line">            ? array()</span><br><span class="line">            : array_fill_keys($default, NULL);</span><br><span class="line">    &#125;</span><br><span class="line">    $segments = array_slice($this-&gt;$segment_array(), ($n - 1));</span><br><span class="line">    $i = 0;</span><br><span class="line">    $lastval = &apos;&apos;;</span><br><span class="line">    $retval = array();</span><br><span class="line">    foreach ($segments as $seg)</span><br><span class="line">    &#123;</span><br><span class="line">        if ($i % 2)</span><br><span class="line">        &#123;</span><br><span class="line">            $retval[$lastval] = $seg;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $retval[$seg] = NULL;</span><br><span class="line">            $lastval = $seg;</span><br><span class="line">        &#125;</span><br><span class="line">        $i++;</span><br><span class="line">    &#125;</span><br><span class="line">    if (count($default) &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        foreach ($default as $val)</span><br><span class="line">        &#123;</span><br><span class="line">            if ( ! array_key_exists($val, $retval))</span><br><span class="line">            &#123;</span><br><span class="line">                $retval[$val] = NULL;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    isset($this-&gt;keyval[$which]) OR $this-&gt;keyval[$which] = array();</span><br><span class="line">    $this-&gt;keyval[$which][$n] = $retval;</span><br><span class="line">    return $retval;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的作用是根据指定索引将<code>segments</code>或<code>rsegments</code>进行分割并将剩余的uri段整合为关联数组，然后返回。参数<code>$which</code>可传<code>segment</code>或<code>rsegment</code>，分别对应成员变量<code>segments</code>和<code>rsegments</code>。下面以<code>segment</code>为例进行功能剖析:</p><ol><li><code>$n</code>默认值为3，因为前两个参数一般为<code>class</code>和<code>method</code>。<code>$default</code>数组表示设置默认的键名，这样即使uri中缺少某个键名，也能保证返回的数组中包含该索引。</li><li>如果已经设置过，即成员变量<code>keyval</code>中已存在指定索引的键名则直接返回。</li><li>获取<code>segments</code>数组及数组个数，当数组个数小于指定索引则将<code>$default</code>的键置<code>null</code>，这也很容易理解，因为<code>segments</code>数组中没用这个键值对。</li><li>根据指定索引截取<code>segments</code>数组，对于之后的数组进行键值方式整合: 奇数为键、偶数为值，<code>$default</code>若不为空且整合之后不存则该键则将该键对应值置为null。</li><li>以指定索引为键、整合后的数组为值存入成员变量<code>keyval</code>中，即<code>$this-&gt;keyval[$which][$n] = $retval;</code>并返回整合后的数组。</li></ol><hr><h4 id="assoc-to-uri"><a href="#assoc-to-uri" class="headerlink" title="assoc_to_uri()"></a>assoc_to_uri()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public function assoc_to_uri($array)</span><br><span class="line">&#123;</span><br><span class="line">    $temp = array();</span><br><span class="line">    foreach ((array) $array as $key =&gt; $val)</span><br><span class="line">    &#123;</span><br><span class="line">        $temp[] = $key;</span><br><span class="line">        $temp[] = $val;</span><br><span class="line">    &#125;</span><br><span class="line">    return implode(&apos;/&apos;, $temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的作用是根据给定的关联数组生成一个对应的URI字符串。</p><hr><h4 id="slash-segment"><a href="#slash-segment" class="headerlink" title="slash_segment()"></a>slash_segment()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function slash_segment($n, $where = &apos;trailing&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_slash_segment($n, $where, &apos;segment&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法从<code>segment</code>数组中取出指定的值，并根据<code>$where</code>在值前后加<code>/</code>。</p><hr><h4 id="slash-rsegment"><a href="#slash-rsegment" class="headerlink" title="slash_rsegment()"></a>slash_rsegment()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function slash_rsegment($n, $where = &apos;trailing&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;_slash_segment($n, $where, &apos;rsegment&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法从<code>rsegment</code>数组中取出指定的值，并根据<code>$where</code>在值前后加<code>/</code>。</p><hr><h4 id="slash-segment-1"><a href="#slash-segment-1" class="headerlink" title="_slash_segment()"></a>_slash_segment()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">protected function _slash_segment($n, $where = &apos;trailing&apos;, $which = &apos;segment&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    $leading = $trailing = &apos;/&apos;;</span><br><span class="line">    if ($where === &apos;trailing&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $leading= &apos;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    elseif ($where === &apos;leading&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $trailing= &apos;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    return $leading.$this-&gt;$which($n).$trailing;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法去根据<code>$which</code>来获取指定的值，其中<code>$which</code>可能为<code>segment</code>或<code>rsegment</code>。若<code>$where</code>为<code>trailing</code>时则在后面加<code>/</code>，若为<code>leading</code>则在前面加<code>/</code>，若为其他值则两边都加<code>/</code>。</p><hr><h4 id="segment-array"><a href="#segment-array" class="headerlink" title="segment_array()"></a>segment_array()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function segment_array()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;segments;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法返回<code>segments</code>数组。</p><hr><h4 id="rsegment-array"><a href="#rsegment-array" class="headerlink" title="rsegment_array()"></a>rsegment_array()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function rsegment_array()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;rsegments;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法返回<code>rsegments</code>数组。</p><hr><h4 id="total-segments"><a href="#total-segments" class="headerlink" title="total_segments()"></a>total_segments()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function total_segments()</span><br><span class="line">&#123;</span><br><span class="line">    return count($this-&gt;segments);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法返回<code>segments</code>数组中段的个数。</p><hr><h4 id="total-rsegments"><a href="#total-rsegments" class="headerlink" title="total_rsegments()"></a>total_rsegments()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function total_rsegments()</span><br><span class="line">&#123;</span><br><span class="line">    return count($this-&gt;rsegments);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法返回<code>rsegments</code>数组中元素的个数。</p><hr><h4 id="uri-string"><a href="#uri-string" class="headerlink" title="uri_string()"></a>uri_string()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function uri_string()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;uri_string;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法返回<code>uri_string</code>成员变量的值。</p><hr><h4 id="ruri-string"><a href="#ruri-string" class="headerlink" title="ruri_string()"></a>ruri_string()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function ruri_string()</span><br><span class="line">&#123;</span><br><span class="line">    return ltrim(load_class(&apos;Router&apos;, &apos;core&apos;)-&gt;directory, &apos;/&apos;).implode(&apos;/&apos;, $this-&gt;rsegments);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法返回经过路由处理后的uri，如果设置了覆盖目录则加上此目录，没用则返回类似<code>class/method</code>的uri。</p><hr><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1poaWh1YV9XL2FydGljbGUvZGV0YWlscy81Mjg3MjQwNw==" title="https://blog.csdn.net/Zhihua_W/article/details/52872407">CI框架源码解析八之地址解析类文件URI.php<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9pdG9waWMub3JnL2NvZGVpZ25pdGVyLWNvbmZpZy5odG1s" title="https://itopic.org/codeigniter-config.html">CodeIgniter配置详解<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5qZWVweGllLm5ldC9hcnRpY2xlLzU0Nzc0NS5odG1s" title="http://www.jeepxie.net/article/547745.html">CodeIgniter框架原码笔记(5)–识别多种URI风格：地址解析类URI.php<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;URI类主要处理地址字符串，将&lt;strong&gt;uri&lt;/strong&gt;分解成对应的片段并存到&lt;strong&gt;segments&lt;/strong&gt;数组中。启用查询字符串则将&lt;strong&gt;查询字符串&lt;/strong&gt;分解后存到&lt;strong&gt;$_GET&lt;/strong&gt;数组中。&lt;strong&gt;Router路由类&lt;/strong&gt;在之后的解析路由动作中，也主要依靠URI类的segments属性数组来获取当前上下文的请求URI信息。&lt;font color=&quot;#891717&quot;&gt;在CI框架中如果启用查询字符串，URI类将不做任何处理，Router类也只会匹配目录、控制器、方法。CI框架体系中的方法参数都是从URI片段中取的,并按&lt;strong&gt;顺序&lt;/strong&gt;传递给方法参数。不支持将参数中的变量通过方法参数名传给方法，只能用$_GET获取。&lt;/font&gt;&lt;br&gt;该类包含5个属性及22个方法，下面分别剖析。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发者手册" scheme="https://pureven.cc/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="PHP" scheme="https://pureven.cc/tags/PHP/"/>
    
      <category term="Codeigniter" scheme="https://pureven.cc/tags/Codeigniter/"/>
    
  </entry>
  
</feed>
